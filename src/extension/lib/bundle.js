! function (e) {
  var t = {};

  function a(n) {
    if (t[n]) return t[n].exports;
    var i = t[n] = {
      i: n,
      l: !1,
      exports: {}
    };
    return e[n].call(i.exports, i, i.exports, a), i.l = !0, i.exports
  }
  a.m = e, a.c = t, a.d = function (e, t, n) {
    a.o(e, t) || Object.defineProperty(e, t, {
      enumerable: !0,
      get: n
    })
  }, a.r = function (e) {
    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
      value: "Module"
    }), Object.defineProperty(e, "__esModule", {
      value: !0
    })
  }, a.t = function (e, t) {
    if (1 & t && (e = a(e)), 8 & t) return e;
    if (4 & t && "object" == typeof e && e && e.__esModule) return e;
    var n = Object.create(null);
    if (a.r(n), Object.defineProperty(n, "default", {
        enumerable: !0,
        value: e
      }), 2 & t && "string" != typeof e)
      for (var i in e) a.d(n, i, function (t) {
        return e[t]
      }.bind(null, i));
    return n
  }, a.n = function (e) {
    var t = e && e.__esModule ? function () {
      return e.default
    } : function () {
      return e
    };
    return a.d(t, "a", t), t
  }, a.o = function (e, t) {
    return Object.prototype.hasOwnProperty.call(e, t)
  }, a.p = "", a(a.s = 5)
}([function (e, t) {
  var a;
  a = function () {
    return this
  }();
  try {
    a = a || new Function("return this")()
  } catch (e) {
    "object" == typeof window && (a = window)
  }
  e.exports = a
}, function (e, t, a) {
  "use strict";
  (function (e) {
    a.d(t, "a", (function () {
      return n
    }));
    class n {
      constructor() {
        const e = this;
        this.leagueId = 1, this.rankingScore = 0, this.myRankingData = {}, this.resultRankingData = {}, udCtrl.load_rankmatch_list(null, (function () {
          e.rankmatchInfo = udCtrl.ud.rankmatchInfo[e.leagueId], e.seasonList = Object.keys(udCtrl.ud.rankmatchInfo), e.seasonList.sort((e, t) => parseInt(e, 10) < parseInt(t, 10) ? 1 : -1), 0 === udCtrl.playRomCount() ? e.uiInitialize() : udCtrl.login((function () {
            e.uiInitialize()
          }))
        }))
      }
      uiInitialize() {
        const e = this;
        let t = "";
        for (let e = 0; e < this.seasonList.length; e++) t += '<option value="' + this.seasonList[e] + '">' + udCtrl.ud.rankmatchInfo[this.seasonList[e]].single.name + " " + util.joinDate(udCtrl.ud.rankmatchInfo[this.seasonList[e]].single.start, udCtrl.ud.rankmatchInfo[this.seasonList[e]].single.end) + "</option>";
        $("#seasonSelector").html(t), $("#seasonSelector").val(this.seasonList[0]), $("#seasonSelector").change((function () {
          e.selectSeason = $(this).val(), e.rankingStart = 0, e.seasonSelection($(this).val())
        }));
        var a = util.isIOS();
        $("#dialogBase > #dialogBack").addClass(util.langCodeStr()), a ? $("#dialogBase > #dialogBack").addClass("ios") : $("#dialogBase > #dialogBack").addClass("android"), $("#dialogBase > .dialog").addClass(util.langCodeStr()), a ? $("#dialogBase > .dialog").addClass("ios") : $("#dialogBase > .dialog").addClass("android"), udCtrl.playRomCount() > 0 && ($("#backLinkMyRankMatchDetail .footerPrevButton .footerText .label").html(langCtrl.common.footerBackLinkLabel.backLinkMyRankMatchDetail), $("#backLinkMyRankMatchDetail").click((function (e) {
          util.locationMove("./myresult_rankmatch.html")
        })), $("#backLinkMyRankMatchDetail").removeClass("disableDisplay")), $("#backLinkTop .footerText .label").html(langCtrl.common.footerBackLinkLabel.backLinkTop), $("#backLinkTop").click((function (e) {
          util.locationMove("./top.html")
        }));
        var n = 0;
        for (var i in this.seasonList) this.seasonList[i] == udCtrl.ud.share.selectedDetailSeason && (n = i, $("#seasonSelector").val(this.seasonList[i]));
        e.selectSeason = this.seasonList[n], e.setResultRankingData(), this.seasonSelection(this.seasonList[n]), this.refreshClassList = {}
      }
      seasonSelection(t) {
        const a = this;
        $("#competion-ranking").addClass("disableDisplay");
        for (let e in this.refreshClassList) $(e).removeClass(this.refreshClassList[e]);
        this.refreshClassList = {}, $("#trainerRankingBody").html("");
        const n = udCtrl.ud.rankmatchInfo[t];
        this.selectSeason = t, $("#seasonTitle").html(udCtrl.ud.rankmatchInfo[a.selectSeason].single.name), $("#seasonPeriod").html(util.joinDate(n.single.start, n.single.end)), $("#singleRankingButton>.text").html(langCtrl.common.rule[0]), $("#doubleRankingButton>.text").html(langCtrl.common.rule[1]), $("#singleRankingButton").on("click touchstart", (function (e) {
          if (e.preventDefault(), e.stopImmediatePropagation(), $("#singleRankingButton").removeClass("tabDisable"), $("#singleRankingButton>.iconContainer>.icon").removeClass(mdCtrl.md.numClass.single.icon_w), $("#singleRankingButton>.iconContainer>.icon").addClass(mdCtrl.md.numClass.single.icon), $("#doubleRankingButton").addClass("tabDisable"), $("#doubleRankingButton>.iconContainer>.icon").removeClass(mdCtrl.md.numClass.double.icon), $("#doubleRankingButton>.iconContainer>.icon").addClass(mdCtrl.md.numClass.double.icon_w), 1 === udCtrl.ud.rankmatchInfo[a.selectSeason].single.rst) $("#joinedNum").html(langCtrl.common.nowAggr);
          else {
            let e = udCtrl.ud.rankmatchInfo[a.selectSeason].single.cnt;
            $("#joinedNum").html(util.numberFormat(e))
          }
          a.selectRule = "single", $("#competion-ranking").removeClass("disableDisplay"), a.rankingContainerView(), a.activateMyRankingButton(udCtrl.ud.rankmatchInfo[a.selectSeason].single.cId, udCtrl.ud.rankmatchInfo[a.selectSeason].single.rst)
        })), $("#doubleRankingButton").on("click touchstart", (function (e) {
          if (e.preventDefault(), e.stopImmediatePropagation(), $("#singleRankingButton").addClass("tabDisable"), $("#singleRankingButton>.iconContainer>.icon").removeClass(mdCtrl.md.numClass.single.icon), $("#singleRankingButton>.iconContainer>.icon").addClass(mdCtrl.md.numClass.single.icon_w), $("#doubleRankingButton").removeClass("tabDisable"), $("#doubleRankingButton>.iconContainer>.icon").removeClass(mdCtrl.md.numClass.double.icon_w), $("#doubleRankingButton>.iconContainer>.icon").addClass(mdCtrl.md.numClass.double.icon), 1 === udCtrl.ud.rankmatchInfo[a.selectSeason].double.rst) $("#joinedNum").html(langCtrl.common.nowAggr);
          else {
            let e = udCtrl.ud.rankmatchInfo[a.selectSeason].double.cnt;
            $("#joinedNum").html(util.numberFormat(e))
          }
          a.selectRule = "double", $("#competion-ranking").removeClass("disableDisplay"), a.rankingContainerView(), a.activateMyRankingButton(udCtrl.ud.rankmatchInfo[a.selectSeason].double.cId, udCtrl.ud.rankmatchInfo[a.selectSeason].double.rst)
        })), $("#regulationPage").click((function (e) {
          util.locationMoveRegulation(n[a.selectRule].reg, util.langCode())
        })), $("#regulationPokemonPage").click((function (e) {
          util.locationMoveUsePokemonList(n[a.selectRule].reg, util.langCode())
        })), e((function () {
          void 0 !== a.selectRule ? "single" === a.selectRule ? $("#singleRankingButton").click() : $("#doubleRankingButton").click() : $("#singleRankingButton").click()
        }))
      }
      rankingContainerView() {
        const e = this;
        $("#trainerTab").click((function (t) {
          $("#myranking").removeClass("disableDisplay"), t.preventDefault(), t.stopImmediatePropagation();
          const a = udCtrl.ud.rankmatchInfo[e.selectSeason][e.selectRule];
          if ($("#trainerTab").removeClass("disable"), $("#pokemonTab").addClass("disable"), $("#trainerRankingHeader").removeClass("disableDisplay"), $("#trainerRankingBody").removeClass("disableDisplay"), $("#pokemonRankingBody").addClass("disableDisplay"), e.selectRanking = "trainer", 0 == a.ts1 || 9999999999 == a.ts1) $("#competion-ranking").addClass("disableDisplay");
          else {
            const t = "/" + a.cId + "/" + a.rst + "/" + a.ts1 + "/traner-" + util.rankingFileIdx(1);
            util.rankingRequest(t, (function (t) {
              e.setMyRanking(t, a.cId, a.rst), e.trainerRankingView(t)
            }))
          }
        })), $("#myranking-click").click((function (t) {
          if (t.preventDefault(), t.stopImmediatePropagation(), 0 === udCtrl.playRomCount()) return;
          const a = udCtrl.ud.rankmatchInfo[e.selectSeason][e.selectRule];
          let n = 0;
          if (0 === a.rst) {
            if (!1 === e.myRankingData.hasOwnProperty(a.cId)) return;
            if (e.myRankingData[a.cId] <= 0 && e.resultRankingData.hasOwnProperty(a.cId) && 0 !== e.resultRankingData[a.cId]) {
              var i = langCtrl.common.rankBattleRankingNoteDialog.note1;
              return i += langCtrl.common.rankBattleRankingNoteDialog.note2, i += langCtrl.common.rankBattleRankingNoteDialog.note3, void nDialog.open({
                title: langCtrl.common.rankBattleRankingNoteDialog.title,
                msg: i,
                okCallback: function () {
                  nDialog.close()
                }
              })
            }
            n = e.myRankingData[a.cId]
          } else n = e.resultRankingData[a.cId];
          if (0 === n) return;
          let o = 10 * parseInt(n / 10, 10);
          o <= 0 && (o = 1), e.rankingStart = o - 1;
          const l = "/" + a.cId + "/" + a.rst + "/" + a.ts1 + "/traner-" + util.rankingFileIdx(e.rankingStart);
          util.rankingRequest(l, (function (t) {
            e.trainerRankingView(t, e.rankingStart)
          }))
        })), $("#pokemonTab").click((function (t) {
          t.preventDefault(), t.stopImmediatePropagation(), $("#myranking").addClass("disableDisplay");
          const a = udCtrl.ud.rankmatchInfo[e.selectSeason][e.selectRule];
          if ($("#pokemonTab").removeClass("disable"), $("#trainerTab").addClass("disable"), $("#pokemonRankingBody").removeClass("disableDisplay"), $("#trainerRankingHeader").addClass("disableDisplay"), $("#trainerRankingBody").addClass("disableDisplay"), e.selectRanking = "pokemon", 0 == a.ts2 || 9999999999 == a.ts2) $("#competion-ranking").addClass("disableDisplay");
          else {
            const t = "/" + a.cId + "/" + a.rst + "/" + a.ts2 + "/pokemon";
            util.rankingRequest(t, (function (t) {
              e.pokemonRankingView(t)
            }))
          }
        })), $("#trainerTab").click(), $("#prevButton").on("click touchstart", (function (t) {
          t.preventDefault(), t.stopImmediatePropagation();
          const a = udCtrl.ud.rankmatchInfo[e.selectSeason][e.selectRule];
          if ("trainer" == e.selectRanking)
            if (0 == a.ts1 || 9999999999 == a.ts1) e.pokemonRankingView([]), e.trainerRankingView([]);
            else {
              const t = "/" + a.cId + "/" + a.rst + "/" + a.ts1 + "/traner-" + util.rankingFileIdx(e.rankingStart - 10 + 1);
              util.rankingRequest(t, (function (t) {
                e.trainerRankingView(t, e.rankingStart - 10)
              }))
            }
          else if (0 == a.ts2 || 9999999999 == a.ts2) e.pokemonRankingView([]), e.trainerRankingView([]);
          else {
            const t = "/" + a.cId + "/" + a.rst + "/" + a.ts2 + "/pokemon";
            util.rankingRequest(t, (function (t) {
              e.pokemonRankingView(t, e.rankingStart - 10)
            }))
          }
          return !1
        })), $("#nextButton").on("click touchstart", (function (t) {
          t.preventDefault(), t.stopImmediatePropagation();
          const a = udCtrl.ud.rankmatchInfo[e.selectSeason][e.selectRule];
          if ("trainer" == e.selectRanking)
            if (0 == a.ts1 || 9999999999 == a.ts1) e.pokemonRankingView([]), e.trainerRankingView([]);
            else {
              const t = "/" + a.cId + "/" + a.rst + "/" + a.ts1 + "/traner-" + util.rankingFileIdx(e.rankingStart + 10 + 1);
              util.rankingRequest(t, (function (t) {
                e.trainerRankingView(t, e.rankingStart + 10)
              }))
            }
          else if (0 == a.ts2 || 9999999999 == a.ts2) e.pokemonRankingView([]), e.trainerRankingView([]);
          else {
            const t = "/" + a.cId + "/" + a.rst + "/" + a.ts2 + "/pokemon";
            util.rankingRequest(t, (function (t) {
              e.pokemonRankingView(t, e.rankingStart + 10)
            }))
          }
          return !1
        }))
      }
      trainerRankingView(e, t) {
        0 === e.length ? $("#rankingContainerFooter").hide() : $("#rankingContainerFooter").show(), t = (t = void 0 === t ? 0 : t) < 0 ? 0 : t, this.rankingStart = t;
        let a = util.rankingFileIdx(this.rankingStart);
        $("#prevButton").removeClass("disableDisplay"), $("#nextButton").removeClass("disableDisplay"), 0 == t && $("#prevButton").addClass("disableDisplay"), e.length * a - t < 10 && $("#nextButton").addClass("disableDisplay");
        let n = 0,
          i = "";
        for (let a = parseInt(t % 1e3); a < e.length; a++) {
          switch (i += '<div class="rankingRow1">', i += '<div class="leftContainer">', e[a].rank) {
          case 1:
            i += '<div class="icon icon-oukan1"></div>';
            break;
          case 2:
            i += '<div class="icon icon-oukan2"></div>';
            break;
          case 3:
            i += '<div class="icon icon-oukan3"></div>';
            break;
          default:
            i += '<div class="icon"></div>'
          }
          i += '<div class="rank">', i += '<div class="rankText">' + e[a].rank + "</div>", i += "</div>";
          let t = e[a].rating_value.toString();
          t.length > 4 && (t = t.slice(0, 4)), i += '<div class="point">' + t + '<span class="pointLabel"></span></div>', i += "</div>", i += '<div class="rightContainer">', i += '<div class="userContainer">', i += '<div class="userIconContainer">', i += '<div class="icon"><img src="./img/icons/trainer/' + e[a].icon + '" onError="this.onerror=null;this.src=\'./img/icons/icon_prof_icon02.png\';"></div>', i += "</div>", i += '<div class="userNameContainer1">', i += '<div class="userName"></div>', i += "</div>", i += '<div class="userNameContainer2">', i += '<div class="userName">' + ("" == e[a].name ? langCtrl.common.noname : util.htmlEacape(e[a].name)) + "</div>", i += "</div>";
          let o = e[a].lng,
            l = "";
          if (void 0 !== o && 0 !== parseInt(o) && (l = mdCtrl.md.langStrL[util.langCode()][o]), i += '<div class="ranking-user-lang">' + l + "</div>", i += "</div>", i += "</div>", i += "</div>", n >= 9) break;
          n++
        }
        $("#trainerRankingBody").html(i), langCtrl.commonInit()
      }
      pokemonRankingView(e, t) {
        const a = this;
        0 === e.length ? $("#rankingContainerFooter").hide() : $("#rankingContainerFooter").show(), t = (t = void 0 === t ? 0 : t) < 0 ? 0 : t, this.rankingStart = t, $("#prevButton").removeClass("disableDisplay"), $("#nextButton").removeClass("disableDisplay"), 0 == t && $("#prevButton").addClass("disableDisplay"), e.length - t <= 10 && $("#nextButton").addClass("disableDisplay");
        let n = 0,
          i = "";
        for (let a = t; a < e.length; a++) {
          switch (i += '<div id="prank-' + a + '" class="rankingRow2">', i += '<div class="leftContainer">', a + 1) {
          case 1:
            i += '<div class="icon icon-oukan1"></div>';
            break;
          case 2:
            i += '<div class="icon icon-oukan2"></div>';
            break;
          case 3:
            i += '<div class="icon icon-oukan3"></div>';
            break;
          default:
            i += '<div class="icon"></div>'
          }
          let t = e[a].id,
            o = e[a].form;
          if (i += '<div class="rank">', i += '<div class="rankText">' + (a + 1) + "</div>", i += "</div>", i += "</div>", i += '<div class="rightContainer">', i += '<div class="pokemonContainer">', i += '<div class="infoContainer">', i += '<div class="pokemonName">' + langCtrl.dex.poke[e[a].id - 1] + "</div>", i += '<div class="blineDividor"></div>', i += '<div class="type1Continer typeColor' + mdCtrl.md.pokeType[t][o][0] + '">', i += '<div class="typeName">' + langCtrl.dex.pokeType[mdCtrl.md.pokeType[t][o][0]] + "</div>", i += "</div>", 2 == mdCtrl.md.pokeType[t][o].length && (i += '<div class="type2Continer typeColor' + mdCtrl.md.pokeType[t][o][1] + '">', i += '<div class="typeName">' + langCtrl.dex.pokeType[mdCtrl.md.pokeType[t][o][1]] + "</div>", i += "</div>"), i += "</div>", i += '<div class="pokemonIconContainer">', i += '<div class="icon"><img src="./img/poke/cap' + ("000" + e[a].id).slice(-4) + "_f" + ("0" + e[a].form).slice(-2) + '_s0.png" width="120" height="120" onError="this.onerror=null;this.src=\'./img/icons/ball_g.png\';"></div>', i += "</div>", i += "</div>", i += "</div>", i += "</div>", n >= 9) break;
          n++
        }
        $("#pokemonRankingBody").html(i);
        for (let e = t; e < t + 10; e++) $("#prank-" + e).click((function (t) {
          t.preventDefault(), t.stopImmediatePropagation(), udCtrl.ud.share.pDetailPmRankMatch = {
            cId: udCtrl.ud.rankmatchInfo[a.selectSeason][a.selectRule].cId,
            rst: udCtrl.ud.rankmatchInfo[a.selectSeason][a.selectRule].rst,
            ts2: udCtrl.ud.rankmatchInfo[a.selectSeason][a.selectRule].ts2,
            idx: e
          }, udCtrl.save(), util.locationMove("./rankmatch_pokemonranking_detail.html")
        }));
        langCtrl.commonInit()
      }
      setMyRanking(e, t, a) {
        const n = this;
        if (!(a > 0) && !(n.myRankingData.hasOwnProperty(t) && n.myRankingData[t] > 0) && (n.myRankingData[t] = 0, $("#myranking").addClass("disable-myrank-button"), udCtrl.playRomCount() > 0)) {
          let a = udCtrl.ud.share.selectRom,
            o = udCtrl.ud.myInfo.playInfo[a].iconImg;
          for (var i in e)
            if (-1 !== e[i].icon.indexOf(o)) {
              n.myRankingData[t] = e[i].rank;
              break
            }
        }
      }
      setResultRankingData() {
        if (0 === udCtrl.playRomCount()) return;
        const e = this;
        for (var t in udCtrl.ud.rankmatchInfo[e.selectSeason]) {
          let a = udCtrl.ud.rankmatchInfo[e.selectSeason][t].cId;
          e.resultRankingData.hasOwnProperty(a) || (e.resultRankingData[a] = 0)
        }
        let a = null;
        if (!1 === udCtrl.ud.share.hasOwnProperty("selectRom")) return;
        if (a = udCtrl.ud.share.selectRom, !1 === udCtrl.ud.myInfo.playInfo[a].hasOwnProperty("rankmatch")) return;
        if (!1 === udCtrl.ud.myInfo.playInfo[a].rankmatch.hasOwnProperty(e.selectSeason)) return;
        if (!1 === udCtrl.ud.myInfo.playInfo[a].rankmatch[e.selectSeason].hasOwnProperty("single")) return;
        let n = udCtrl.ud.myInfo.playInfo[a].rankmatch[e.selectSeason].single;
        e.resultRankingData[n.competition_id] = n.ranking.rank;
        let i = udCtrl.ud.myInfo.playInfo[a].rankmatch[e.selectSeason].double;
        e.resultRankingData[i.competition_id] = i.ranking.rank
      }
      activateMyRankingButton(e, t) {
        if (0 === udCtrl.playRomCount()) return;
        const a = this;
        0 === t ? a.myRankingData[e] > 0 ? $("#myranking").removeClass("disable-myrank-button") : $("#myranking").addClass("disable-myrank-button") : a.resultRankingData[e] > 0 ? $("#myranking").removeClass("disable-myrank-button") : $("#myranking").addClass("disable-myrank-button")
      }
    }
  }).call(this, a(2).setImmediate)
}, function (e, t, a) {
  (function (e) {
    var n = void 0 !== e && e || "undefined" != typeof self && self || window,
      i = Function.prototype.apply;

    function o(e, t) {
      this._id = e, this._clearFn = t
    }
    t.setTimeout = function () {
      return new o(i.call(setTimeout, n, arguments), clearTimeout)
    }, t.setInterval = function () {
      return new o(i.call(setInterval, n, arguments), clearInterval)
    }, t.clearTimeout = t.clearInterval = function (e) {
      e && e.close()
    }, o.prototype.unref = o.prototype.ref = function () {}, o.prototype.close = function () {
      this._clearFn.call(n, this._id)
    }, t.enroll = function (e, t) {
      clearTimeout(e._idleTimeoutId), e._idleTimeout = t
    }, t.unenroll = function (e) {
      clearTimeout(e._idleTimeoutId), e._idleTimeout = -1
    }, t._unrefActive = t.active = function (e) {
      clearTimeout(e._idleTimeoutId);
      var t = e._idleTimeout;
      t >= 0 && (e._idleTimeoutId = setTimeout((function () {
        e._onTimeout && e._onTimeout()
      }), t))
    }, a(3), t.setImmediate = "undefined" != typeof self && self.setImmediate || void 0 !== e && e.setImmediate || this && this.setImmediate, t.clearImmediate = "undefined" != typeof self && self.clearImmediate || void 0 !== e && e.clearImmediate || this && this.clearImmediate
  }).call(this, a(0))
}, function (e, t, a) {
  (function (e, t) {
    ! function (e, a) {
      "use strict";
      if (!e.setImmediate) {
        var n, i, o, l, r, s = 1,
          c = {},
          d = !1,
          u = e.document,
          m = Object.getPrototypeOf && Object.getPrototypeOf(e);
        m = m && m.setTimeout ? m : e, "[object process]" === {}.toString.call(e.process) ? n = function (e) {
          t.nextTick((function () {
            p(e)
          }))
        } : ! function () {
          if (e.postMessage && !e.importScripts) {
            var t = !0,
              a = e.onmessage;
            return e.onmessage = function () {
              t = !1
            }, e.postMessage("", "*"), e.onmessage = a, t
          }
        }() ? e.MessageChannel ? ((o = new MessageChannel).port1.onmessage = function (e) {
          p(e.data)
        }, n = function (e) {
          o.port2.postMessage(e)
        }) : u && "onreadystatechange" in u.createElement("script") ? (i = u.documentElement, n = function (e) {
          var t = u.createElement("script");
          t.onreadystatechange = function () {
            p(e), t.onreadystatechange = null, i.removeChild(t), t = null
          }, i.appendChild(t)
        }) : n = function (e) {
          setTimeout(p, 0, e)
        } : (l = "setImmediate$" + Math.random() + "$", r = function (t) {
          t.source === e && "string" == typeof t.data && 0 === t.data.indexOf(l) && p(+t.data.slice(l.length))
        }, e.addEventListener ? e.addEventListener("message", r, !1) : e.attachEvent("onmessage", r), n = function (t) {
          e.postMessage(l + t, "*")
        }), m.setImmediate = function (e) {
          "function" != typeof e && (e = new Function("" + e));
          for (var t = new Array(arguments.length - 1), a = 0; a < t.length; a++) t[a] = arguments[a + 1];
          var i = {
            callback: e,
            args: t
          };
          return c[s] = i, n(s), s++
        }, m.clearImmediate = g
      }

      function g(e) {
        delete c[e]
      }

      function p(e) {
        if (d) setTimeout(p, 0, e);
        else {
          var t = c[e];
          if (t) {
            d = !0;
            try {
              ! function (e) {
                var t = e.callback,
                  a = e.args;
                switch (a.length) {
                case 0:
                  t();
                  break;
                case 1:
                  t(a[0]);
                  break;
                case 2:
                  t(a[0], a[1]);
                  break;
                case 3:
                  t(a[0], a[1], a[2]);
                  break;
                default:
                  t.apply(void 0, a)
                }
              }(t)
            } finally {
              g(e), d = !1
            }
          }
        }
      }
    }("undefined" == typeof self ? void 0 === e ? this : e : self)
  }).call(this, a(0), a(4))
}, function (e, t) {
  var a, n, i = e.exports = {};

  function o() {
    throw new Error("setTimeout has not been defined")
  }

  function l() {
    throw new Error("clearTimeout has not been defined")
  }

  function r(e) {
    if (a === setTimeout) return setTimeout(e, 0);
    if ((a === o || !a) && setTimeout) return a = setTimeout, setTimeout(e, 0);
    try {
      return a(e, 0)
    } catch (t) {
      try {
        return a.call(null, e, 0)
      } catch (t) {
        return a.call(this, e, 0)
      }
    }
  }! function () {
    try {
      a = "function" == typeof setTimeout ? setTimeout : o
    } catch (e) {
      a = o
    }
    try {
      n = "function" == typeof clearTimeout ? clearTimeout : l
    } catch (e) {
      n = l
    }
  }();
  var s, c = [],
    d = !1,
    u = -1;

  function m() {
    d && s && (d = !1, s.length ? c = s.concat(c) : u = -1, c.length && g())
  }

  function g() {
    if (!d) {
      var e = r(m);
      d = !0;
      for (var t = c.length; t;) {
        for (s = c, c = []; ++u < t;) s && s[u].run();
        u = -1, t = c.length
      }
      s = null, d = !1,
        function (e) {
          if (n === clearTimeout) return clearTimeout(e);
          if ((n === l || !n) && clearTimeout) return n = clearTimeout, clearTimeout(e);
          try {
            n(e)
          } catch (t) {
            try {
              return n.call(null, e)
            } catch (t) {
              return n.call(this, e)
            }
          }
        }(e)
    }
  }

  function p(e, t) {
    this.fun = e, this.array = t
  }

  function b() {}
  i.nextTick = function (e) {
    var t = new Array(arguments.length - 1);
    if (arguments.length > 1)
      for (var a = 1; a < arguments.length; a++) t[a - 1] = arguments[a];
    c.push(new p(e, t)), 1 !== c.length || d || r(g)
  }, p.prototype.run = function () {
    this.fun.apply(null, this.array)
  }, i.title = "browser", i.browser = !0, i.env = {}, i.argv = [], i.version = "", i.versions = {}, i.on = b, i.addListener = b, i.once = b, i.off = b, i.removeListener = b, i.removeAllListeners = b, i.emit = b, i.prependListener = b, i.prependOnceListener = b, i.listeners = function (e) {
    return []
  }, i.binding = function (e) {
    throw new Error("process.binding is not supported")
  }, i.cwd = function () {
    return "/"
  }, i.chdir = function (e) {
    throw new Error("process.chdir is not supported")
  }, i.umask = function () {
    return 0
  }
}, function (t, a, n) {
  "use strict";
  n.r(a);
  var i = class {
    constructor() {
      this.pages = {
        t_common: {
          "#regulation": "繝ｬ繧ｮ繝･繝ｬ繝ｼ繧ｷ繝ｧ繝ｳ",
          "#available_poke": "菴ｿ逕ｨ縺ｧ縺阪ｋ繝昴こ繝｢繝ｳ",
          "#trainer-tab-text": "繝医Ξ繝ｼ繝翫�繝ｩ繝ｳ繧ｭ繝ｳ繧ｰ",
          "#pokemon-tab-text": "繝昴こ繝｢繝ｳ繝ｩ繝ｳ繧ｭ繝ｳ繧ｰ",
          "#open": "髢句ぎ荳ｭ",
          "#end": "邨ゆｺ�",
          gathering: "髮�ｨ井ｸｭ",
          not_join: "譛ｪ蜿ょ刈",
          not_join_battle: "縺薙�繝舌ヨ繝ｫ縺ｫ縺ｯ蜿ょ刈縺励※縺�∪縺帙ｓ",
          not_join_tournament: "縺薙�螟ｧ莨壹↓縺ｯ蜿ょ刈縺励※縺�∪縺帙ｓ",
          not_join_friendcompe: "縺ｾ縺�荳蠎ｦ繧ゆｻｲ髢灘､ｧ莨壹↓<br>蜿ょ刈縺励◆縺薙→縺後≠繧翫∪縺帙ｓ",
          win: "WIN",
          lose: "LOSE",
          draw: "DRAW",
          rental: "繝ｬ繝ｳ繧ｿ繝ｫ繝√�繝�",
          rank_num: "%d菴�",
          win_num: "%d蜍�",
          lose_num: "%d謨�",
          draw_num: "%d蛻�",
          ok: "�ｯ�ｫ",
          rulename1: "蛻ｶ髯舌↑縺�",
          rulename2: "繝弱�繝槭Ν繝ｫ繝ｼ繝ｫ",
          rulename3: "繝輔Λ繝�ヨ繝ｫ繝ｼ繝ｫ",
          rulename4: "蛻ｶ髯舌↑縺�",
          rulename5: "繝弱�繝槭Ν繝ｫ繝ｼ繝ｫ",
          rulename6: "繝輔Λ繝�ヨ繝ｫ繝ｼ繝ｫ",
          rulename7: "蛻ｶ髯舌↑縺�",
          rulename8: "繝弱�繝槭Ν繝ｫ繝ｼ繝ｫ",
          rulename9: "繝輔Λ繝�ヨ繝ｫ繝ｼ繝ｫ",
          rulename10: "繧ｪ繝輔ぅ繧ｷ繝｣繝ｫ繝ｫ繝ｼ繝ｫ��",
          rulename11: "繧ｪ繝輔ぅ繧ｷ繝｣繝ｫ繝ｫ繝ｼ繝ｫ��",
          rulename12: "繧ｪ繝輔ぅ繧ｷ繝｣繝ｫ繝ｫ繝ｼ繝ｫ��",
          rulename13: "繧ｪ繝輔ぅ繧ｷ繝｣繝ｫ繝ｫ繝ｼ繝ｫ��",
          rulename14: "繧ｪ繝輔ぅ繧ｷ繝｣繝ｫ繝ｫ繝ｼ繝ｫ��",
          outrange: "蝨丞､�"
        },
        t_rankmatchPageTexts: {
          "#title-text": "繝ｩ繝ｳ繧ｯ繝舌ヨ繝ｫ"
        },
        t_my_rankmatchPageTexts: {
          "#title-text": "繝ｩ繝ｳ繧ｯ繝舌ヨ繝ｫ謌千ｸｾ隧ｳ邏ｰ",
          "#rate_label": "繝ｬ繝ｼ繝�"
        },
        t_pokemonrankingPageTexts: {
          "#title-text": "繝昴こ繝｢繝ｳ隧ｳ邏ｰ",
          no: "No.",
          ".battle-team-tab-text": "隧ｳ邏ｰ",
          ".when-win-tab-text": "蛟偵＠縺滓凾",
          ".when-lose-tab-text": "蛟偵＆繧後◆譎�",
          "kind-tab-battle-team": "荳邱偵↓繝舌ヨ繝ｫ繝√�繝�縺ｫ蜈･繧後ｉ繧後※縺�ｋ繝昴こ繝｢繝ｳTOP10",
          "kind-tab-battle-win": "縺薙�繝昴こ繝｢繝ｳ縺悟偵＠縺溘�繧ｱ繝｢繝ｳTOP10",
          "kind-tab-battle-lose": "縺薙�繝昴こ繝｢繝ｳ繧貞偵＠縺溘�繧ｱ繝｢繝ｳTOP10",
          "kind-tab-battle-waza": "繧上＊",
          "kind-tab-battle-waza-win": "縺薙�繝昴こ繝｢繝ｳ縺悟偵＠縺溘ｏ縺傍OP10",
          "kind-tab-battle-waza-lose": "縺薙�繝昴こ繝｢繝ｳ繧貞偵＠縺溘ｏ縺傍OP10",
          "kind-tab-battle-tokusei": "縺ｨ縺上○縺�  ",
          "kind-tab-battle-item": "縺ｩ縺�＄    ",
          "kind-tab-battle-seikaku": "縺帙＞縺九￥   ",
          "kind-tab-battle-terastal": "繝�Λ繧ｹ繧ｿ繧､繝�",
          atk: "縺薙≧縺偵″",
          def: "縺ｼ縺�℃繧�",
          agi: "縺吶�繧�＆",
          spatk: "縺ｨ縺上％縺�",
          spdef: "縺ｨ縺上⊂縺�",
          hyphen: "��"
        },
        t_internetcompetitionPageTexts: {
          "#title-text": "蜈ｬ蠑丞､ｧ莨�"
        },
        t_internetcompetition_detailPageTexts: {
          "#title-text": "蜈ｬ蠑丞､ｧ莨夊ｩｳ邏ｰ"
        },
        t_my_internetcompetition_detailPageTexts: {
          "#title-text": "蜈ｬ蠑丞､ｧ莨夊ｩｳ邏ｰ",
          "#rate_label": "繝ｬ繝ｼ繝�",
          mydata_dialog_title: "諠��ｱ繧帝∈謚�",
          mydata_dialog_text: "繝励Ξ繧､繝､繝ｼ縺ｮ諠��ｱ繧定ｦ九ｋ",
          mydata_dialog_btn1: "鬆�ｽ�",
          mydata_dialog_btn2: "繝舌ヨ繝ｫ繝√�繝�"
        },
        t_friendcompetitionPageTexts: {
          "#title-text": "莉ｲ髢灘､ｧ莨�"
        },
        t_my_friendcompetitionPageTexts: {
          "#title-text": "莉ｲ髢灘､ｧ莨�",
          ".organizer-label-text": "荳ｻ蛯ｬ閠�",
          ".result-label-text": "謌千ｸｾ",
          ".battleteam-label-text": "繝舌ヨ繝ｫ繝√�繝�"
        },
        t_friendcompetition_detailPageTexts: {
          "#title-text": "莉ｲ髢灘､ｧ莨夊ｩｳ邏ｰ"
        },
        t_my_friendcompetition_detailPageTexts: {
          "#title-text": "莉ｲ髢灘､ｧ莨夊ｩｳ邏ｰ"
        },
        t_battle_teamPageTexts: {
          internetcompe: "蜈ｬ蠑丞､ｧ莨壹ヰ繝医Ν繝√�繝�",
          friendcompe: "莉ｲ髢灘､ｧ莨壹ヰ繝医Ν繝√�繝�"
        },
        t_mydataselectPageTexts: {
          title_text_rankmatch: "閾ｪ蛻��謌ｦ邵ｾ",
          title_text_internetcompe: "蜈ｬ蠑丞､ｧ莨夊ｩｳ邏ｰ",
          title_text_friendcompe: "莉ｲ髢灘､ｧ莨�",
          "#dataselect-text": "謌ｦ邵ｾ繧定ｦ九◆縺�そ繝ｼ繝悶ョ繝ｼ繧ｿ繧帝∈繧薙〒縺上□縺輔＞"
        },
        t_tournament_detailPageTexts: {
          "#title-text": "繝医�繝翫Γ繝ｳ繝亥､ｧ莨夊ｩｳ邏ｰ",
          single_elimination: "繧ｷ繝ｳ繧ｰ繝ｫ繧ｨ繝ｪ繝溘ロ繝ｼ繧ｷ繝ｧ繝ｳ",
          double_elimination: "繝繝悶Ν繧ｨ繝ｪ繝溘ロ繝ｼ繧ｷ繝ｧ繝ｳ",
          bestX: "Best %d",
          Xround: "%d蝗樊姶",
          semi_final: "貅匁ｱｺ蜍�",
          final: "豎ｺ蜍晄姶",
          round_winners: "WINNERS %d蝗樊姶",
          final_winners: "WINNERS %d蝗樊姶 ��FINAL��",
          round_losers: "LOSERS %d蝗樊姶",
          final_losers: "LOSERS %d蝗樊姶 ��FINAL��",
          grandfinal: "豎ｺ蜍晄姶��GRAND FINAL��",
          coming_soon: "Coming Soon!"
        },
        topPageTexts: {
          "#top-title-text": "TOP",
          "#top-mypage-text": "閾ｪ蛻��謌ｦ邵ｾ",
          "#top-rankmatch-text": "繝ｩ繝ｳ繧ｯ繝舌ヨ繝ｫ",
          "#top--internetcompe-text": "繧､繝ｳ繧ｿ繝ｼ繝阪ャ繝亥､ｧ莨�",
          "#top-regulation-text": "驟堺ｿ｡繝ｬ繧ｮ繝･繝ｬ繝ｼ繧ｷ繝ｧ繝ｳ"
        },
        myresult_topPageTexts: {
          "#title-text": "閾ｪ蛻��謌ｦ邵ｾ",
          "#rankmatch-text": "繝ｩ繝ｳ繧ｯ繝舌ヨ繝ｫ",
          "#internetcompe-text": "繧､繝ｳ繧ｿ繝ｼ繝阪ャ繝亥､ｧ莨�",
          "#friendcompe-text": "莉ｲ髢灘､ｧ莨�"
        },
        myresult_romselectPageTexts: {
          "#title-text": "閾ｪ蛻��謌ｦ邵ｾ",
          "#rankmatch-text": "繧ｲ繝ｼ繝�繧ｽ繝輔ヨ縺ｮ驕ｸ謚�"
        },
        myresult_rankmatchPageTexts: {
          "#title-text": "繝ｩ繝ｳ繧ｯ繝舌ヨ繝ｫ謌千ｸｾ隧ｳ邏ｰ",
          "#subtitle1-text": "繧ｷ繝ｼ繧ｺ繝ｳ諠��ｱ",
          "#sub1_label3": "縺薙�繧ｷ繝ｼ繧ｺ繝ｳ縺ｮ隧ｳ邏ｰ繧定ｦ九ｋ",
          "#subtitle2-text": "繧ｷ繝ｼ繧ｺ繝ｳ謌千ｸｾ",
          "#sub2_label1": "繧ｷ繝ｳ繧ｰ繝ｫ",
          "#sub2_label2": "繝繝悶Ν",
          "#subtitle3-text": "譛霑代�蟇ｾ謌ｦ螻･豁ｴ",
          "#sub3_label1": "繧ｷ繝ｳ繧ｰ繝ｫ",
          "#sub3_label2": "繝繝悶Ν"
        },
        my_internetcompetition_listPageTexts: {
          "#title-text": "繧､繝ｳ繧ｿ繝ｼ繝阪ャ繝亥､ｧ莨壻ｸ隕ｧ",
          "#subtitle1-text": "蜿ょ刈螟ｧ莨壻ｸ隕ｧ"
        },
        my_internetcompetition_detailPageTexts: {
          "#title-text": "繧､繝ｳ繧ｿ繝ｼ繝阪ャ繝亥､ｧ莨壽�邵ｾ隧ｳ邏ｰ",
          "#subtitle1-text": "螟ｧ莨壽ュ蝣ｱ",
          "#sub1_label1": "菴ｿ逕ｨ繧ｲ繝ｼ繝�繧ｽ繝輔ヨ",
          "#sub1_label2": "蟇ｾ謌ｦ繝ｫ繝ｼ繝ｫ",
          "#sub1_label3": "蜿ょ刈閠�焚",
          "#sub1_label5": "縺薙�螟ｧ莨壹�隧ｳ邏ｰ繧定ｦ九ｋ",
          "#sub1_label6": "螟ｧ莨壽�邵ｾ",
          "#subtitle2-text": "蟇ｾ謌ｦ螻･豁ｴ",
          "#sub2_label1": "繧ｷ繝ｳ繧ｰ繝ｫ",
          "#sub2_label2": "繝繝悶Ν",
          "#subtitle3-text": "譛霑代�蟇ｾ謌ｦ螻･豁ｴ",
          "#sub3_label1": "繧ｷ繝ｳ繧ｰ繝ｫ",
          "#sub3_label2": "繝繝悶Ν"
        },
        friendcompetition_listPageTexts: {
          "#title-text": "莉ｲ髢灘､ｧ莨壻ｸ隕ｧ",
          "#subtitle1-text": "蜿ょ刈螟ｧ莨壻ｸ隕ｧ",
          ".organizer-label-text": "荳ｻ蛯ｬ繝医Ξ繝ｼ繝翫�蜷�",
          ".joinednum-label-text": "蜿ょ刈閠�焚",
          ".more-button-text": "繧ゅ▲縺ｨ隕九ｋ"
        },
        my_friendcompetition_detailPageTexts: {
          "#title-text": "莉ｲ髢灘､ｧ莨壽�邵ｾ隧ｳ邏ｰ",
          "#subtitle1-text": "螟ｧ莨壽ュ蝣ｱ",
          "#sub_label1": "螟ｧ莨壽ｦりｦ�",
          "#sub_label2": "荳ｻ蛯ｬ繝医Ξ繝ｼ繝翫�蜷�",
          "#sub_label3": "菴ｿ逕ｨ繧ｲ繝ｼ繝�繧ｽ繝輔ヨ",
          "#sub_label4": "蟇ｾ謌ｦ繝ｫ繝ｼ繝ｫ",
          "#sub_label5": "蜿ょ刈閠�焚",
          "#sub_label7": "縺薙�螟ｧ莨壹�隧ｳ邏ｰ繧定ｦ九ｋ",
          "#sub_label8": "螟ｧ莨壽�邵ｾ",
          "#subtitle2-text": "蟇ｾ謌ｦ螻･豁ｴ"
        },
        friendcompetition_detailPageTexts: {
          "#title-text": "莉ｲ髢灘､ｧ莨夊ｩｳ邏ｰ",
          "#subtitle1-text": "螟ｧ莨壽ュ蝣ｱ",
          "#sub_label1": "螟ｧ莨壽ｦりｦ�",
          "#sub_label2": "荳ｻ蛯ｬ繝医Ξ繝ｼ繝翫�蜷�",
          "#sub_label3": "菴ｿ逕ｨ繧ｲ繝ｼ繝�繧ｽ繝輔ヨ",
          "#sub_label4": "蟇ｾ謌ｦ繝ｫ繝ｼ繝ｫ",
          "#sub_label5": "蜿ょ刈閠�焚",
          "#sub1_label13": "閾ｪ蛻��鬆�ｽ阪ｒ隕九ｋ",
          "#sub1_label9": "繝医Ξ繝ｼ繝翫�繝ｩ繝ｳ繧ｭ繝ｳ繧ｰ",
          "#sub1_label10": "繝昴こ繝｢繝ｳ繝ｩ繝ｳ繧ｭ繝ｳ繧ｰ",
          "#regulationLink": "驥崎ｦ∽ｺ矩��/繝ｬ繧ｮ繝･繝ｬ繝ｼ繧ｷ繝ｧ繝ｳ",
          "#eligiblePokemonLink": "菴ｿ逕ｨ縺ｧ縺阪ｋ繝昴こ繝｢繝ｳ"
        },
        rankmatch_detailPageTexts: {
          "#title-text": "繝ｩ繝ｳ繧ｯ繝舌ヨ繝ｫ",
          "#subtitle1-text": "繧ｷ繝ｼ繧ｺ繝ｳ諠��ｱ",
          "#sub_label2": "蜿ょ刈閠�焚",
          "#sub_label3": "驥崎ｦ∽ｺ矩��/繝ｬ繧ｮ繝･繝ｬ繝ｼ繧ｷ繝ｧ繝ｳ",
          "#sub_label4": "菴ｿ逕ｨ縺ｧ縺阪ｋ繝昴こ繝｢繝ｳ",
          "#sub_label5": "繝昴こ繝｢繝ｳ繧帝∈縺ｶ",
          "#sub_label6": "邨槭ｊ霎ｼ縺ｿ",
          "#sub_label7": "閾ｪ蛻��鬆�ｽ阪ｒ隕九ｋ",
          "#subtitle2-text": "蟇ｾ謌ｦ螻･豁ｴ",
          ".trainer-tab-text": "繝医Ξ繝ｼ繝翫�繝ｩ繝ｳ繧ｭ繝ｳ繧ｰ",
          ".pokemon-tab-text": "繝昴こ繝｢繝ｳ繝ｩ繝ｳ繧ｭ繝ｳ繧ｰ"
        },
        internetcompetition_listPageTexts: {
          "#title-text": "繧､繝ｳ繧ｿ繝ｼ繝阪ャ繝亥､ｧ莨�",
          "#sub_label1": "驕主悉縺ｮ繧､繝ｳ繧ｿ繝ｼ繝阪ャ繝亥､ｧ莨壻ｸ隕ｧ縺ｸ",
          "#sub_label2": "縺薙ｌ縺ｾ縺ｧ縺ｫ髢句ぎ縺輔ｌ縺溷､ｧ莨�",
          ".more-button-text": "繧ゅ▲縺ｨ隕九ｋ"
        },
        internetcompetition_detailPageTexts: {
          "#title-text": "繧､繝ｳ繧ｿ繝ｼ繝阪ャ繝亥､ｧ莨夊ｩｳ邏ｰ",
          "#subtitle1-text": "螟ｧ莨壽ュ蝣ｱ",
          "#sub1_label1": "菴ｿ逕ｨ繧ｲ繝ｼ繝�繧ｽ繝輔ヨ",
          "#sub1_label2": "驥崎ｦ∽ｺ矩��/繝ｬ繧ｮ繝･繝ｬ繝ｼ繧ｷ繝ｧ繝ｳ",
          "#sub1_label3": "菴ｿ逕ｨ縺ｧ縺阪ｋ繝昴こ繝｢繝ｳ",
          "#sub1_label4": "螟ｧ莨壽ｦりｦ�",
          "#sub1_label5": "蜿ょ刈閠�焚",
          "#sub1_label6": "菴ｿ逕ｨ繧ｲ繝ｼ繝�繧ｽ繝輔ヨ",
          "#sub1_label7": "蟇ｾ謌ｦ繝ｫ繝ｼ繝ｫ",
          "#sub1_label8": "髢句ぎ譛滄俣",
          "#sub1_label9": "繝医Ξ繝ｼ繝翫�繝ｩ繝ｳ繧ｭ繝ｳ繧ｰ",
          "#sub1_label10": "繝昴こ繝｢繝ｳ繝ｩ繝ｳ繧ｭ繝ｳ繧ｰ",
          "#sub1_label11": "繝昴こ繝｢繝ｳ繧帝∈縺ｶ",
          "#sub1_label12": "邨槭ｊ霎ｼ縺ｿ",
          "#sub1_label13": "閾ｪ蛻��鬆�ｽ阪ｒ隕九ｋ"
        },
        battle_teamPageTexts: {
          "#title-text": "繝舌ヨ繝ｫ繝√�繝�縺ｮ繝昴こ繝｢繝ｳ"
        },
        regulation_listPageTexts: {
          "#title-text": "驟堺ｿ｡繝ｬ繧ｮ繝･繝ｬ繝ｼ繧ｷ繝ｧ繝ｳ"
        },
        regulation_pokelistPageTexts: {
          "#title-text": "菴ｿ逕ｨ縺ｧ縺阪ｋ繝昴こ繝｢繝ｳ"
        },
        event_calendar: {
          "#title-text": "繧､繝吶Φ繝医き繝ｬ繝ｳ繝繝ｼ",
          "#option-country": "陦ｨ遉ｺ縺励※縺�ｋ蝨ｰ蝓�",
          "#sunday": "譌･",
          "#monday": "譛�",
          "#tuesday": "轣ｫ",
          "#wednesday": "豌ｴ",
          "#thursday": "譛ｨ",
          "#friday": "驥�",
          "#saturday": "蝨�"
        },
        rankmatch_pokemonranking_detailPageTexts: {
          "#title-text": "繝ｩ繝ｳ繧ｯ繝舌ヨ繝ｫ",
          "#subtitle1-text": "繝昴こ繝｢繝ｳ隧ｳ邏ｰ",
          ".battle-team-tab-text": "隧ｳ邏ｰ",
          ".when-win-tab-text": "蛟偵＠縺滓凾",
          ".when-lose-tab-text": "蛟偵＆繧後◆譎�",
          "kind-tab-battle-team": "荳邱偵↓繝舌ヨ繝ｫ繝√�繝�縺ｫ蜈･繧後ｉ繧後※縺�ｋ繝昴こ繝｢繝ｳTOP10",
          "kind-tab-battle-win": "縺薙�繝昴こ繝｢繝ｳ縺悟偵＠縺溘�繧ｱ繝｢繝ｳTOP10",
          "kind-tab-battle-lose": "縺薙�繝昴こ繝｢繝ｳ繧貞偵＠縺溘�繧ｱ繝｢繝ｳTOP10",
          "kind-tab-battle-waza": "繧上＊",
          "kind-tab-battle-waza-win": "縺薙�繝昴こ繝｢繝ｳ縺悟偵＠縺溘ｏ縺傍OP10",
          "kind-tab-battle-waza-lose": "縺薙�繝昴こ繝｢繝ｳ繧貞偵＠縺溘ｏ縺傍OP10",
          "kind-tab-battle-tokusei": "縺ｨ縺上○縺�",
          "kind-tab-battle-item": "縺ｩ縺�＄",
          "kind-tab-battle-seikaku": "縺帙＞縺九￥"
        },
        internetcompetition_pokemonranking_detail: {
          "#title-text": "繧､繝ｳ繧ｿ繝ｼ繝阪ャ繝亥､ｧ莨�",
          "#subtitle1-text": "繝昴こ繝｢繝ｳ隧ｳ邏ｰ",
          ".battle-team-tab-text": "隧ｳ邏ｰ",
          ".when-win-tab-text": "蛟偵＠縺滓凾",
          ".when-lose-tab-text": "蛟偵＆繧後◆譎�",
          "kind-tab-battle-team": "荳邱偵↓繝舌ヨ繝ｫ繝√�繝�縺ｫ蜈･繧後ｉ繧後※縺�ｋ繝昴こ繝｢繝ｳTOP10",
          "kind-tab-battle-win": "縺薙�繝昴こ繝｢繝ｳ縺悟偵＠縺溘�繧ｱ繝｢繝ｳTOP10",
          "kind-tab-battle-lose": "縺薙�繝昴こ繝｢繝ｳ繧貞偵＠縺溘�繧ｱ繝｢繝ｳTOP10",
          "kind-tab-battle-waza": "繧上＊",
          "kind-tab-battle-waza-win": "縺薙�繝昴こ繝｢繝ｳ縺悟偵＠縺溘ｏ縺傍OP10",
          "kind-tab-battle-waza-lose": "縺薙�繝昴こ繝｢繝ｳ繧貞偵＠縺溘ｏ縺傍OP10",
          "kind-tab-battle-tokusei": "縺ｨ縺上○縺�",
          "kind-tab-battle-item": "縺ｩ縺�＄",
          "kind-tab-battle-seikaku": "縺帙＞縺九￥"
        },
        friendcompetition_pokemonranking_detail: {
          "#title-text": "莉ｲ髢灘､ｧ莨�",
          "#subtitle1-text": "繝昴こ繝｢繝ｳ隧ｳ邏ｰ",
          ".battle-team-tab-text": "隧ｳ邏ｰ",
          ".when-win-tab-text": "蛟偵＠縺滓凾",
          ".when-lose-tab-text": "蛟偵＆繧後◆譎�",
          "kind-tab-battle-team": "荳邱偵↓繝舌ヨ繝ｫ繝√�繝�縺ｫ蜈･繧後ｉ繧後※縺�ｋ繝昴こ繝｢繝ｳTOP10",
          "kind-tab-battle-win": "縺薙�繝昴こ繝｢繝ｳ縺悟偵＠縺溘�繧ｱ繝｢繝ｳTOP10",
          "kind-tab-battle-lose": "縺薙�繝昴こ繝｢繝ｳ繧貞偵＠縺溘�繧ｱ繝｢繝ｳTOP10",
          "kind-tab-battle-waza": "繧上＊",
          "kind-tab-battle-waza-win": "縺薙�繝昴こ繝｢繝ｳ縺悟偵＠縺溘ｏ縺傍OP10",
          "kind-tab-battle-waza-lose": "縺薙�繝昴こ繝｢繝ｳ繧貞偵＠縺溘ｏ縺傍OP10",
          "kind-tab-battle-tokusei": "縺ｨ縺上○縺�",
          "kind-tab-battle-item": "縺ｩ縺�＄",
          "kind-tab-battle-seikaku": "縺帙＞縺九￥"
        },
        tournament_listPageTexts: {
          "#title-text": "繝医�繝翫Γ繝ｳ繝亥､ｧ莨壻ｸ隕ｧ",
          "#subtitle1-text": "螟ｧ莨壻ｸ隕ｧ",
          ".entry-period-text": "繧ｨ繝ｳ繝医Μ繝ｼ",
          ".checkin-period-text": "繝√ぉ繝�け繧､繝ｳ",
          ".open-period-text": "髢句ぎ",
          ".stat-prepar-text": "貅門ｙ荳ｭ",
          ".stat-reception-text": "蜿嶺ｻ倅ｸｭ",
          ".stat-open-text": "髢句ぎ荳ｭ",
          ".stat-end-text": "邨ゆｺ�",
          "#backLinkTop": "TOP"
        },
        tournament_detailPageTexts: {
          "#title-text": "繝医�繝翫Γ繝ｳ繝亥､ｧ莨夊ｩｳ邏ｰ",
          "#subtitle1-text": "螟ｧ莨壽ュ蝣ｱ",
          "#sub_label1": "驥崎ｦ∽ｺ矩�� / 繝ｬ繧ｮ繝･繝ｬ繝ｼ繧ｷ繝ｧ繝ｳ",
          "#sub_label2": "菴ｿ逕ｨ縺ｧ縺阪ｋ繝昴こ繝｢繝ｳ",
          "#sub_label3": "蟇ｾ謌ｦ繧ｫ繝ｼ繝�",
          "#sub_label4": "蟇ｾ謌ｦ繝代せ繝ｯ繝ｼ繝�",
          "#sub_label5": "繝ｪ繧ｻ繝�ヨ",
          "#sub_label6": "螟ｧ莨壽ュ蝣ｱ",
          "#sub_label7": "螟ｧ莨夐幕蟋倶ｺ亥ｮ�",
          "#sub_label8": "菴ｿ逕ｨ繧ｲ繝ｼ繝�繧ｽ繝輔ヨ",
          "#sub_label9": "繝医�繝翫Γ繝ｳ繝域婿蠑�",
          "#sub_label10": "蜃ｺ蝣ｴ譫�縺ｮ荳企剞",
          "#sub_label11": "謚ｽ驕ｸ譁ｹ豕�",
          "#sub_label12": "螟ｧ莨夂ｵゆｺ�ｺ亥ｮ壽凾蛻ｻ",
          "#sub_label13": "蜿ょ刈閠�",
          "#sub_label14": "蟇ｾ謌ｦ繧ｫ繝ｼ繝�",
          "#sub_label15": "繝医�繝翫Γ繝ｳ繝郁｡ｨ",
          "#sub_label16": "荳ｻ蛯ｬ閠�°繧峨�縺顔衍繧峨○",
          "#sub_label17": "螟ｧ莨夊ｩｳ邏ｰ",
          "#backTournamentList": "螟ｧ莨壻ｸ隕ｧ",
          "#msub_label1": "繧ｨ繝ｳ繝医Μ繝ｼ謨ｰ",
          "#msub_label2": "繧ｨ繝ｳ繝医Μ繝ｼ譛滄俣",
          "#msub_label3": "螟ｧ莨壹↓繧ｨ繝ｳ繝医Μ繝ｼ",
          "#msub_label4": "繝医�繝翫Γ繝ｳ繝医〒菴ｿ逕ｨ縺吶ｋ繝√�繝�繧剃ｺ句燕逋ｻ骭ｲ縺ｧ縺阪∪縺吶�",
          "#msub_label5": "- 繝√ぉ繝�け繧､繝ｳ縺ｾ縺ｧ縺ｮ髢薙∽ｽ募ｺｦ縺ｧ繧ょ､画峩縺悟庄閭ｽ縺ｧ縺吶�",
          "#msub_label6": "- 繝√ぉ繝�け繧､繝ｳ譎ゅ↓繧ゅメ繝ｼ繝�逋ｻ骭ｲ縺悟庄閭ｽ縺ｧ縺吶�",
          "#msub_label7": "- 繝√ぉ繝�け繧､繝ｳ蠕後�繝√�繝�螟画峩縺ｯ縺ｧ縺阪∪縺帙ｓ縲�",
          "#msub_label8": "逋ｻ骭ｲ縺吶ｋ繝ｬ繝ｳ繧ｿ繝ｫ繝√�繝�",
          "#msub_label9": "繝√�繝�繧定ｪｭ縺ｿ霎ｼ繧",
          "#msub_label10": "繝√�繝�逋ｻ骭ｲ",
          "#msub_label11": "繝√ぉ繝�け繧､繝ｳ譛滄俣",
          "#msub_label12": "繝√ぉ繝�け繧､繝ｳ邱�蛻�凾髢�",
          "#msub_label13": "繝医�繝翫Γ繝ｳ繝医〒菴ｿ逕ｨ縺吶ｋ繝√�繝�繧堤匳骭ｲ縺励※縺上□縺輔＞縲�",
          "#msub_label14": "- 繝√ぉ繝�け繧､繝ｳ蠕後�繝√�繝�螟画峩縺ｯ縺ｧ縺阪∪縺帙ｓ縲�",
          "#msub_label15": "- Switch縺ｮ縲後Ν繝ｼ繝ｫ縺ｮ繝繧ｦ繝ｳ繝ｭ繝ｼ繝峨阪ｈ繧翫∝ｿ�★繝ｫ繝ｼ繝ｫ繧剃ｺ句燕縺ｫ繝繧ｦ繝ｳ繝ｭ繝ｼ繝峨＠縺ｦ縺上□縺輔＞縲�",
          "#msub_label16": "逋ｻ骭ｲ縺吶ｋ繝ｬ繝ｳ繧ｿ繝ｫ繝√�繝�",
          "#msub_label17": "窶ｻ 逋ｻ骭ｲ縺励◆繝ｬ繝ｳ繧ｿ繝ｫ繝√�繝�縺ｨ螟ｧ莨壹〒菴ｿ逕ｨ縺吶ｋ繝舌ヨ繝ｫ繝√�繝�縺檎焚縺ｪ繧九→縲∝､ｱ譬ｼ縺ｨ縺ｪ繧句�ｴ蜷医′縺ゅｊ縺ｾ縺吶�",
          "#msub_label18": "窶ｻ Switch縺ｮ縲後Ν繝ｼ繝ｫ縺ｮ繝繧ｦ繝ｳ繝ｭ繝ｼ繝峨阪ｈ繧翫∝ｿ�★繝ｫ繝ｼ繝ｫ繧剃ｺ句燕縺ｫ繝繧ｦ繝ｳ繝ｭ繝ｼ繝峨＠縺ｦ縺上□縺輔＞縲�",
          "#msub_label19": "繝√�繝�繧定ｪｭ縺ｿ霎ｼ繧",
          "#msub_label20": "繝√ぉ繝�け繧､繝ｳ",
          "#msub_label21": "蟇ｾ謌ｦ髢句ｧ句庄閭ｽ譎る俣",
          "#msub_label22": "窶ｻ 邨先棡縺ｫ謚苓ｭｰ縺吶ｋ蝣ｴ蜷医�縲∫ｵ先棡逕ｻ髱｢縺ｮ逕ｻ蜒上′蠢�ｦ√↓縺ｪ繧九�縺ｧ縲∝ｿ�★謦ｮ蠖ｱ縺励※縺翫″縺ｾ縺励ｇ縺�",
          "#msub_label23": "窶ｻ Switch縺ｮ縲後Ν繝ｼ繝ｫ縺ｮ繝繧ｦ繝ｳ繝ｭ繝ｼ繝峨阪ｈ繧翫∝ｿ�★繝ｫ繝ｼ繝ｫ繧剃ｺ句燕縺ｫ繝繧ｦ繝ｳ繝ｭ繝ｼ繝峨＠縺ｦ縺上□縺輔＞縲�",
          "#msub_label24": "蟇ｾ謌ｦ髢句ｧ�",
          "#msub_label25": "蟇ｾ謌ｦ繧ｫ繝ｼ繝�",
          "#msub_label26": "蟇ｾ謌ｦ繝代せ繝ｯ繝ｼ繝�",
          "#bs_updateDate": "譖ｴ譁ｰ譎ょ綾 : ",
          "#msub_label27": "蜍晏茜蝣ｱ蜻翫〒縺阪ｋ譎る俣",
          "#msub_label28": "窶ｻ 蜍晏茜蝣ｱ蜻翫�蜷�ｯｾ謌ｦ縺ｧ陦後▲縺ｦ荳九＆縺��",
          "#msub_label29": "窶ｻ 2譛ｬ蜈亥叙縺ｧ蜍昴■騾ｲ縺ｿ縺ｨ縺ｪ繧翫∪縺吶�",
          "#msub_label30": "窶ｻ 邨先棡縺ｫ謚苓ｭｰ縺吶ｋ蝣ｴ蜷医�縲∫ｵ先棡逕ｻ髱｢縺ｮ逕ｻ蜒上′蠢�ｦ√↓縺ｪ繧九�縺ｧ縲∝ｿ�★謦ｮ蠖ｱ縺励※縺翫″縺ｾ縺励ｇ縺��",
          "#msub_label31": "窶ｻ Switch縺ｮ縲後Ν繝ｼ繝ｫ縺ｮ繝繧ｦ繝ｳ繝ｭ繝ｼ繝峨阪ｈ繧翫∝ｿ�★繝ｫ繝ｼ繝ｫ繧剃ｺ句燕縺ｫ繝繧ｦ繝ｳ繝ｭ繝ｼ繝峨＠縺ｦ縺上□縺輔＞縲�",
          "#msub_label32": "蟇ｾ謌ｦ繧ｫ繝ｼ繝�",
          "#msub_label33": "蟇ｾ謌ｦ繝代せ繝ｯ繝ｼ繝�",
          "#msub_label34": "繝ｪ繧ｻ繝�ヨ",
          "#bi_updateDate": "譖ｴ譁ｰ譎ょ綾 : ",
          "#msub_label35": "蟇ｾ謌ｦ縺ｮ邨先棡繧貞�蜉帙＠縺ｦ縺上□縺輔＞縲�",
          "#msub_label36": "- 蜍晏茜蝣ｱ蜻翫�蜷�ｯｾ謌ｦ縺ｧ陦後▲縺ｦ荳九＆縺�",
          "#msub_label37": "- 2譛ｬ蜈亥叙縺ｧ蜍昴■騾ｲ縺ｿ縺ｨ縺ｪ繧翫∪縺�",
          ".versus": "VS",
          "#msub_label38": "蜈･蜉帛庄閭ｽ譎る俣",
          "#msub_label39": "窶ｻ 蟇ｾ謌ｦ縺ｮ蜍晁��縺ｿ蝣ｱ蜻翫＠縺ｦ縺上□縺輔＞",
          "#msub_label40": "蜍晏茜蝣ｱ蜻�",
          "#msub_label41": "蟇ｾ謌ｦ逶ｸ謇九�蜈･蜉帙ｒ蠕�▲縺ｦ縺�∪縺吶�",
          "#msub_label42": "蜈･蜉帛庄閭ｽ譎る俣",
          "#msub_label43": "窶ｻ 髢馴＆縺医※蜍晏茜蝣ｱ蜻翫＠縺溷�ｴ蜷医�縺ｿ蜿悶ｊ荳九￡縺ｦ縺上□縺輔＞",
          "#msub_label44": "蜍晏茜蝣ｱ蜻翫�蜿悶ｊ荳九￡",
          "#msub_label45": "蟇ｾ謌ｦ逶ｸ謇九′蜍晏茜蝣ｱ蜻翫ｒ縺励∪縺励◆縲�",
          "#msub_label46": "縺薙�隧ｦ蜷育ｵ先棡縺ｯ豁｣縺励＞縺ｧ縺吶°��",
          "#msub_label47": "蜈･蜉帛庄閭ｽ譎る俣",
          "#msub_label48": "謇ｿ隱�",
          "#msub_label49": "謚苓ｭｰ",
          "#msub_label50": "蟇ｾ謌ｦ逶ｸ謇九′縺ゅ↑縺溘�蜍晏茜蝣ｱ蜻翫↓隰帷ｾｩ縺励∪縺励◆縲ゅ％繧後↓蟇ｾ縺励※逡ｰ隴ｰ縺ｮ縺ゅｋ蝣ｴ蜷医�莉･荳九ｈ繧頑蒲隴ｰ繧帝∽ｿ｡縺励※縺上□縺輔＞縲�",
          "#msub_label51": "蜈･蜉帛庄閭ｽ譎る俣",
          "#msub_label52": "逕ｻ蜒上い繝��繝ｭ繝ｼ繝�",
          "#msub_label53": "逕ｻ蜒城∈謚�",
          "#protest1imgUploadText": "逕ｻ蜒上ｒ驕ｸ謚槭＠縺ｦ縺上□縺輔＞",
          "#msub_label55": "謚苓ｭｰ繧帝∽ｿ｡",
          "#msub_label56": "蜈･蜉帛庄閭ｽ譎る俣",
          "#msub_label57": "逕ｻ蜒上い繝��繝ｭ繝ｼ繝�",
          "#msub_label58": "逕ｻ蜒城∈謚�",
          "#protest2imgUploadText": "逕ｻ蜒上ｒ驕ｸ謚槭＠縺ｦ縺上□縺輔＞",
          "#msub_label60": "謚苓ｭｰ繧帝∽ｿ｡",
          "#msub_label61": "謚苓ｭｰ縺ｮ蜿悶ｊ荳九￡",
          ".ruleHeaderText": "繝ｫ繝ｼ繝ｫ",
          ".opBattleTeamText": "逶ｸ謇九�繝舌ヨ繝ｫ繝√�繝�"
        }
      }, this.common = {
        ui_texts: {
          ".winIconText": "WIN",
          ".loseIconText": "LOSE",
          ".drawIconText": "DRAW",
          ".joinedNumLabel": "莠ｺ",
          ".periodContainer>.label": "髢句ぎ譛滄俣",
          competionRule: "蟇ｾ謌ｦ繝ｫ繝ｼ繝ｫ",
          ".rateLabelContainer>.label": "繝ｬ繝ｼ繝�",
          ".prevButton>.labelContainer>.label": "蜑阪�10莉ｶ",
          ".nextButton>.labelContainer>.label": "谺｡縺ｮ10莉ｶ",
          ".rank-beginner-text": "繝薙ぐ繝翫�邏�",
          ".rank-monster-text": "繝｢繝ｳ繧ｹ繧ｿ繝ｼ繝懊�繝ｫ邏�",
          ".rank-super-text": "繧ｹ繝ｼ繝代�繝懊�繝ｫ邏�",
          ".rank-hyper-text": "繝上う繝代�繝懊�繝ｫ邏�",
          ".rank-master-text": "繝槭せ繧ｿ繝ｼ繝懊�繝ｫ邏�",
          ".rental-label-text": "繝ｬ繝ｳ繧ｿ繝ｫ繝√�繝�",
          ".buttle-team-button-text": "繝舌ヨ繝ｫ繝√�繝�陦ｨ遉ｺ"
        },
        unit: {
          rank: "%d菴�",
          win: "%d蜍�",
          lose: "%d謨�",
          draw: "%d蛻�",
          "season-result": "%d菴� %d蜍� %d謨� %d蛻�",
          "season-result2": "%d蜍� %d謨� %d蛻�",
          "online-result": "%d蜍� %d謨� %d蛻�",
          "friend-result": "%d菴� %d蜍� %d謨� %d蛻�",
          tournament_statTime: "縺ゅ→ %d譌･",
          tournament_statTime2: "縺ゅ→ %d譎る俣",
          tournament_statTime3: "縺ゅ→ %d蛻�",
          tournament_entrylimit: "%d 莠ｺ",
          tournament_entrynum: "%d/%d 莠ｺ",
          tournament_checkinperiod: "螟ｧ莨夐幕蟋句燕縺ｮ%d蛻�",
          tournament_checkinperiod2: "螟ｧ莨夐幕蟋句燕縺ｮ%d蛻�燕縺九ｉ髢句ｧ�"
        },
        roms: {
          Sw: "繝昴こ繝�ヨ繝｢繝ｳ繧ｹ繧ｿ繝ｼ 繧ｽ繝ｼ繝�",
          Sh: "繝昴こ繝�ヨ繝｢繝ｳ繧ｹ繧ｿ繝ｼ 繧ｷ繝ｼ繝ｫ繝�"
        },
        rule: {
          0: "繧ｷ繝ｳ繧ｰ繝ｫ",
          1: "繝繝悶Ν"
        },
        nojoin: "譛ｪ蜿ょ刈",
        nowAggr: "髮�ｨ井ｸｭ",
        country: {
          100: "繧｢繝輔Μ繧ｫ",
          600: "蛹励い繝｡繝ｪ繧ｫ",
          601: "繧ｫ繝翫ム",
          602: "繧｢繝｡繝ｪ繧ｫ蜷郁｡�嵜蛹鈴Κ",
          603: "繧｢繝｡繝ｪ繧ｫ蜷郁｡�嵜譚ｱ驛ｨ",
          604: "繧｢繝｡繝ｪ繧ｫ蜷郁｡�嵜隘ｿ驛ｨ",
          605: "繧｢繝｡繝ｪ繧ｫ蜷郁｡�嵜蜊鈴Κ",
          699: "縺昴�莉�",
          700: "繝ｩ繝�Φ繧｢繝｡繝ｪ繧ｫ",
          701: "繝√Μ",
          702: "繝｡繧ｭ繧ｷ繧ｳ",
          703: "繝悶Λ繧ｸ繝ｫ",
          704: "繧｢繝ｫ繧ｼ繝ｳ繝√Φ",
          705: "繝懊Μ繝薙い",
          706: "繧ｳ繝ｭ繝ｳ繝薙い",
          707: "繝代Λ繧ｰ繧｢繧､",
          708: "繝壹Ν繝ｼ",
          709: "繧ｨ繧ｯ繧｢繝峨Ν",
          799: "縺昴�莉�",
          800: "繧ｪ繧ｻ繧｢繝九い",
          801: "繧ｪ繝ｼ繧ｹ繝医Λ繝ｪ繧｢",
          802: "繝九Η繝ｼ繧ｸ繝ｼ繝ｩ繝ｳ繝�",
          899: "縺昴�莉�",
          300: "繧｢繧ｸ繧｢螟ｪ蟷ｳ豢�",
          302: "荳ｭ蝗ｽ",
          303: "鬥呎ｸｯ",
          304: "譌･譛ｬ",
          305: "髻灘嵜",
          306: "繝槭Ξ繝ｼ繧ｷ繧｢",
          307: "繝輔ぅ繝ｪ繝斐Φ",
          308: "繧ｷ繝ｳ繧ｬ繝昴�繝ｫ",
          309: "蜿ｰ貉ｾ",
          310: "繧ｿ繧､",
          399: "縺昴�莉�",
          400: "繝ｨ繝ｼ繝ｭ繝�ヱ",
          401: "繧ｪ繝ｼ繧ｹ繝医Μ繧｢",
          402: "繝吶Ν繧ｮ繝ｼ",
          403: "繝輔Λ繝ｳ繧ｹ",
          404: "繝峨う繝�",
          405: "繧｢繧､繝ｫ繝ｩ繝ｳ繝�",
          406: "繧､繧ｿ繝ｪ繧｢",
          407: "繧ｪ繝ｩ繝ｳ繝",
          408: "繝昴Ν繝医ぎ繝ｫ",
          409: "繧ｹ繝壹う繝ｳ",
          410: "繧ｹ繧､繧ｹ",
          411: "闍ｱ蝗ｽ",
          412: "繝�Φ繝槭�繧ｯ",
          413: "繝輔ぅ繝ｳ繝ｩ繝ｳ繝�",
          414: "繝弱Ν繧ｦ繧ｧ繝ｼ",
          415: "繧ｹ繧ｦ繧ｧ繝ｼ繝�Φ",
          416: "繝昴�繝ｩ繝ｳ繝�",
          499: "縺昴�莉�",
          500: "荳ｭ譚ｱ"
        },
        footerBackLinkLabel: {
          backLinkTop: "TOP",
          backLinkInternetComp: "繧､繝ｳ繧ｿ繝ｼ繝阪ャ繝亥､ｧ莨�",
          backMyResult: "閾ｪ蛻��謌ｦ邵ｾ",
          backMyInternetComp: "蜿ょ刈螟ｧ莨壻ｸ隕ｧ",
          backLinkMyInternetCompDetail: "繧､繝ｳ繧ｿ繝ｼ繝阪ャ繝亥､ｧ莨壽�邵ｾ隧ｳ邏ｰ",
          backLinkMyRankMatchDetail: "繝ｩ繝ｳ繧ｯ繝舌ヨ繝ｫ謌千ｸｾ隧ｳ邏ｰ",
          backLinkMyFriendCompDetail: "莉ｲ髢灘､ｧ莨壽�邵ｾ隧ｳ邏ｰ",
          backLinkFriendCompList: "莉ｲ髢灘､ｧ莨壻ｸ隕ｧ",
          backLinkRankBattle: "繝ｩ繝ｳ繧ｯ繝舌ヨ繝ｫ",
          backLinkFriendComp: "莉ｲ髢灘､ｧ莨�"
        },
        tournamentStatText: {
          prepar: "螟ｧ莨壽ｺ門ｙ荳ｭ",
          prepar2: "蟇ｾ謌ｦ繧ｫ繝ｼ繝我ｽ懈�荳ｭ",
          entry: "繧ｨ繝ｳ繝医Μ繝ｼ蜿嶺ｻ倅ｸｭ",
          entry2: "繧ｨ繝ｳ繝医Μ繝ｼ貂医∩<br>繝√ぉ繝�け繧､繝ｳ髢句ｧ九∪縺ｧ",
          entry3: "謖�ｮ壹Θ繝ｼ繧ｶ繧ｨ繝ｳ繝医Μ繝ｼ",
          checkin: "繝√ぉ繝�け繧､繝ｳ蜿嶺ｻ倅ｸｭ",
          checkin2: "繝√ぉ繝�け繧､繝ｳ蜿嶺ｻ倅ｸｭ<br>繝√ぉ繝�け繧､繝ｳ邨ゆｺ�∪縺ｧ",
          checkin3: "繝√ぉ繝�け繧､繝ｳ貂医∩<br>螟ｧ莨夐幕蟋九∪縺ｧ",
          open: "螟ｧ莨夐幕蛯ｬ荳ｭ",
          end: "螟ｧ莨夂ｵゆｺ�",
          protestFinish: "謚苓ｭｰ蜀�ｮｹ繧貞ｯｩ隴ｰ荳ｭ縺ｧ縺�",
          roundFinish: "繝ｩ繧ｦ繝ｳ繝臥ｵゆｺ�",
          roundFinish1: "%s邨ゆｺ�",
          result1: "%s謨鈴",
          result2: "貅門━蜍�",
          result3: "蜆ｪ蜍�"
        },
        tournamentStatBtn: {
          prepar: "貅門ｙ荳ｭ",
          entry: "螟ｧ莨壹↓繧ｨ繝ｳ繝医Μ繝ｼ",
          registerTeam: "繝√�繝�莠句燕逋ｻ骭ｲ",
          checkin: "螟ｧ莨壹↓繝√ぉ繝�け繧､繝ｳ",
          battlePrepar: "蟇ｾ謌ｦ貅門ｙ",
          battleInfo: "蟇ｾ謌ｦ諠��ｱ",
          winReport: "蜍晄風蝣ｱ蜻�",
          withdrawWin: "蜍晄風蝣ｱ蜻雁叙繧贋ｸ九￡",
          resultApproval: "蜍晄風謇ｿ隱�",
          inpuProtestt: "謚苓ｭｰ蜈･蜉�"
        },
        roundText: {
          round: "%d蝗樊姶",
          round_battle: "%s / %d譛ｬ逶ｮ",
          round_battle2: "%d譛ｬ逶ｮ",
          round_battle3: "%s - 髮�ｨ井ｸｭ",
          battle_count: "%s / %d蜍� %d謨�",
          semi_final: "貅匁ｱｺ蜍�",
          final: "豎ｺ蜍晄姶"
        },
        tournamentBattlePreparText: {
          preparation: "貅門ｙ荳ｭ",
          ready: "貅門ｙ螳御ｺ�"
        },
        modalControlText: {
          protestTAPlaceholder: "謚苓ｭｰ蜀�ｮｹ繧貞�蜉帙＠縺ｦ縺上□縺輔＞"
        },
        soft: ["", "", "", "", "", "", "", "", "", "", "繝昴こ繝�ヨ繝｢繝ｳ繧ｹ繧ｿ繝ｼ Let's Go! 繝斐き繝√Η繧ｦ繝ｻLet窶冱 Go繧､繝ｼ繝悶う", "繝昴こ繝�ヨ繝｢繝ｳ繧ｹ繧ｿ繝ｼ 繧ｽ繝ｼ繝峨�繧ｷ繝ｼ繝ｫ繝�"],
        battleType: ["繧ｷ繝ｳ繧ｰ繝ｫ繧ｨ繝ｪ繝溘ロ繝ｼ繧ｷ繝ｧ繝ｳ"],
        lotteryType: ["繝√ぉ繝�け繧､繝ｳ蜈育捩鬆�"],
        dialogMsg: {
          ok: "縺ｨ縺倥ｋ",
          cnnection_failed_2000_t: "繧ｻ繝�す繝ｧ繝ｳ蛻�妙",
          cnnection_failed_2000_m: "繧ｻ繝�す繝ｧ繝ｳ縺悟�譁ｭ縺輔ｌ縺ｾ縺励◆縲ゅヰ繝医Ν繝��繧ｿ繧ｦ繧｣繝ｳ繝峨え繧帝幕縺咲峩縺励※荳九＆縺��",
          cnnection_failed_10000_t: "繝��繧ｿ縺悟ｭ伜惠縺励↑縺�",
          cnnection_failed_10000_m: "繝��繧ｿ縺悟炎髯､縺輔ｌ縺溷庄閭ｽ諤ｧ縺後≠繧翫∪縺吶ゅえ繧｣繝ｳ繝峨え繧帝幕縺咲峩縺励※縲∝､ｧ莨壹ｒ驕ｸ謚槭＠逶ｴ縺励※荳九＆縺��",
          cnnection_failed_10001_t: "繝√�繝�ID縺悟ｭ伜惠縺励↑縺�",
          cnnection_failed_10001_m: "繝√�繝�ID縺碁俣驕輔▲縺ｦ縺�ｋ蜿ｯ閭ｽ諤ｧ縺後≠繧翫∪縺吶ゅ＃遒ｺ隱阪�荳翫∝�蠎ｦ蜈･蜉帙ｒ縺企｡倥＞縺�◆縺励∪縺吶�",
          cnnection_failed_10999_t: "蜷梧凾譖ｴ譁ｰ",
          cnnection_failed_10999_m: "蟇ｾ謌ｦ逶ｸ謇九→蜷梧凾縺ｫ謫堺ｽ懊′陦後ｏ繧後◆轤ｺ縲∵桃菴懊′螟ｱ謨励＠縺ｾ縺励◆縲�",
          cnnection_failed_11000_t: "繧ｨ繝ｳ繝医Μ繝ｼ貂�",
          cnnection_failed_11000_m: "譌｢縺ｫ繧ｨ繝ｳ繝医Μ繝ｼ縺輔ｌ縺ｦ縺�∪縺吶�",
          cnnection_failed_11001_t: "繧ｨ繝ｳ繝医Μ繝ｼ莠ｺ謨ｰ荳企剞",
          cnnection_failed_11001_m: "繧ｨ繝ｳ繝医Μ繝ｼ莠ｺ謨ｰ荳企剞縺ｮ轤ｺ縲√お繝ｳ繝医Μ繝ｼ縺ｧ縺阪∪縺帙ｓ縺ｧ縺励◆縲�",
          cnnection_failed_11002_t: "繧ｨ繝ｳ繝医Μ繝ｼ邨ゆｺ�",
          cnnection_failed_11002_m: "繧ｨ繝ｳ繝医Μ繝ｼ蜿ｯ閭ｽ譛滄俣縺ｯ邨ゆｺ�＠縺ｾ縺励◆縲�",
          cnnection_failed_11003_t: "繧ｨ繝ｳ繝医Μ繝ｼ荳榊庄",
          cnnection_failed_11003_m: "縺薙�螟ｧ莨壹↓縺ｯ繧ｨ繝ｳ繝医Μ繝ｼ蜃ｺ譚･縺ｾ縺帙ｓ縲�",
          cnnection_failed_11101_t: "繝√ぉ繝�け繧､繝ｳ莠ｺ謨ｰ荳企剞",
          cnnection_failed_11101_m: "繝√ぉ繝�け繧､繝ｳ莠ｺ謨ｰ荳企剞縺ｮ轤ｺ縲√メ繧ｧ繝�け繧､繝ｳ縺ｧ縺阪∪縺帙ｓ縺ｧ縺励◆縲�",
          cnnection_failed_11102_t: "繧ｨ繝ｳ繝医Μ繝ｼ繧ｨ繝ｩ繝ｼ",
          cnnection_failed_11102_m: "繧ｨ繝ｳ繝医Μ繝ｼ縺檎｢ｺ隱阪〒縺阪∪縺帙ｓ縲�",
          cnnection_failed_11103_t: "繝√ぉ繝�け繧､繝ｳ邨ゆｺ�",
          cnnection_failed_11103_m: "繝√ぉ繝�け繧､繝ｳ蜿ｯ閭ｽ譛滄俣縺ｯ邨ゆｺ�＠縺ｾ縺励◆縲�",
          cnnection_failed_11104_t: "繝√�繝�譛ｪ逋ｻ骭ｲ",
          cnnection_failed_11104_m: "繝√�繝�縺檎匳骭ｲ縺ｧ縺阪↑縺九▲縺溽ぜ縲√メ繧ｧ繝�け繧､繝ｳ螟ｱ謨励＠縺ｾ縺励◆縲ゅメ繝ｼ繝�ID繧偵＃遒ｺ隱阪�荳翫∝�蠎ｦ蜈･蜉帙ｒ縺企｡倥＞縺�◆縺励∪縺吶�",
          cnnection_failed_11105_t: "繝√ぉ繝�け繧､繝ｳ貂�",
          cnnection_failed_11105_m: "譌｢縺ｫ繝√ぉ繝�け繧､繝ｳ縺励※縺�∪縺吶�",
          cnnection_failed_11300_t: "繝代せ繝ｯ繝ｼ繝峨Μ繧ｻ繝�ヨ螟ｱ謨�",
          cnnection_failed_11300_m: "蟇ｾ謌ｦ逶ｸ謇九↓繧医▲縺ｦ譌｢縺ｫ繝ｪ繧ｻ繝�ヨ縺輔ｌ縺ｦ縺�∪縺吶�",
          cnnection_failed_t: "騾壻ｿ｡螟ｱ謨�",
          cnnection_failed_m: "騾壻ｿ｡縺ｫ螟ｱ謨励＠縺ｾ縺励◆縲�<br>騾壻ｿ｡迺ｰ蠅��濶ｯ縺��ｴ謇縺ｧ謫堺ｽ懊＠縺ｦ荳九＆縺��<br>繧ｦ繧｣繝ｳ繝峨え繧帝幕縺咲峩縺吩ｺ九〒隗｣豸医☆繧句�ｴ蜷医′縺ゅｊ縺ｾ縺吶�",
          entry_success_t: "繧ｨ繝ｳ繝医Μ繝ｼ螳御ｺ�",
          entry_success_m: "繧ｨ繝ｳ繝医Μ繝ｼ縺悟ｮ御ｺ�＠縺ｾ縺励◆縲�<br>谺｡縺ｯ繝舌ヨ繝ｫ繝√�繝�縺ｮ莠句燕逋ｻ骭ｲ繧定｡後↑縺｣縺ｦ荳九＆縺��",
          rteam_success_t: "繝√�繝�逋ｻ骭ｲ螳御ｺ�",
          rteam_success_m: "繝√�繝�逋ｻ骭ｲ縺悟ｮ御ｺ�＠縺ｾ縺励◆縲�<br>繝√ぉ繝�け繧､繝ｳ縺ｮ髢句ｧ九ｒ縺雁ｾ�■荳九＆縺��",
          checkin_success_t: "繝√ぉ繝�け繧､繝ｳ螳御ｺ�",
          checkin_success_m: "繝√ぉ繝�け繧､繝ｳ縺悟ｮ御ｺ�＠縺ｾ縺励◆縲�<br>螟ｧ莨壹�髢句ｧ九ｒ縺雁ｾ�■荳九＆縺��",
          bstart_success_t: "蟇ｾ謌ｦ貅門ｙ螳御ｺ�",
          bstart_success_m: "蜿梧婿縺ｮ蟇ｾ謌ｦ貅門ｙ縺悟ｮ御ｺ�＠縺ｾ縺励◆縲�",
          bstart_success2_t: "蟇ｾ謌ｦ貅門ｙ螳御ｺ�",
          bstart_success2_m: "蜿梧婿縺ｮ蟇ｾ謌ｦ貅門ｙ縺悟ｮ御ｺ�＠縺ｾ縺励◆縲�",
          bstart_success3_t: "蟇ｾ謌ｦ髢句ｧ�",
          bstart_success3_m: "Switch縺九ｉYY騾壻ｿ｡縺ｧ蟇ｾ謌ｦ繧定｡後▲縺ｦ荳九＆縺��<br>窶ｻ 蜍晏茜蝣ｱ蜻翫�蜷�ｯｾ謌ｦ縺ｧ陦後▲縺ｦ荳九＆縺��<br>窶ｻ 2譛ｬ蜈亥叙縺ｧ蜍昴■騾ｲ縺ｿ縺ｨ縺ｪ繧翫∪縺吶�<br>窶ｻ 邨先棡縺ｫ謚苓ｭｰ縺吶ｋ蝣ｴ蜷医�縲∫ｵ先棡逕ｻ髱｢縺ｮ逕ｻ蜒上′蠢�ｦ√↓縺ｪ繧九�縺ｧ縲∝ｿ�★謦ｮ蠖ｱ縺励※縺翫″縺ｾ縺励ｇ縺��<br>窶ｻ Switch縺ｮ縲後Ν繝ｼ繝ｫ縺ｮ繝繧ｦ繝ｳ繝ｭ繝ｼ繝峨阪ｈ繧翫∝ｿ�★繝ｫ繝ｼ繝ｫ繧剃ｺ句燕縺ｫ繝繧ｦ繝ｳ繝ｭ繝ｼ繝峨＠縺ｦ縺上□縺輔＞縲�",
          binfo_view_t: "蜍晏茜蝣ｱ蜻願ｧ｣遖�",
          binfo_view_m: "蜍晏茜縺ｮ蝣ｱ蜻翫′縺ｧ縺阪ｋ譎ょ綾縺ｫ縺ｪ繧翫∪縺励◆縲�<br>1謌ｦ豈弱↓蜍晏茜縺ｮ蝣ｱ蜻翫ｒ陦後▲縺ｦ荳九＆縺��",
          bstart_success_t: "蟇ｾ謌ｦ貅門ｙ螳御ｺ�",
          bstart_success_m: "蜿梧婿縺ｮ蟇ｾ謌ｦ貅門ｙ縺悟ｮ御ｺ�＠縺ｾ縺励◆縲�",
          opvict_report_t: "蜍晏茜蝣ｱ蜻�",
          opvict_report_m: "蟇ｾ謌ｦ逶ｸ謇九′蜍晏茜蝣ｱ蜻翫＠縺ｾ縺励◆縲よ価隱咲判髱｢縺ｸ遘ｻ蜍輔＠縺ｾ縺吶�",
          opvict_withdraw_t: "蜍晏茜蝣ｱ蜻雁叙繧贋ｸ九￡",
          opvict_withdraw_m: "蟇ｾ謌ｦ逶ｸ謇九′蜍晏茜蝣ｱ蜻翫ｒ蜿悶ｊ荳九￡縺ｾ縺励◆縲ょ享蛻ｩ蝣ｱ蜻顔判髱｢縺ｸ遘ｻ蜍輔＠縺ｾ縺吶�",
          opvict_approval_t: "蜍晄風謇ｿ隱�",
          opvict_approval_m: "蟇ｾ謌ｦ逶ｸ謇九′縺ゅ↑縺溘�蜍晏茜蝣ｱ蜻翫ｒ謇ｿ隱阪＠縺ｾ縺励◆縲�<br>谺｡縺ｮ蟇ｾ謌ｦ繧定｡後▲縺ｦ荳九＆縺��<br>谺｡縺ｮ蟇ｾ謌ｦ縺ｮ蜍晏茜蝣ｱ蜻顔判髱｢縺ｸ遘ｻ蜍輔＠縺ｾ縺吶�",
          opvict_approval_finishround_t: "蜍晄風謇ｿ隱�",
          opvict_approval_finishround_m: "蟇ｾ謌ｦ逶ｸ謇九′縺ゅ↑縺溘�蜍晏茜蝣ｱ蜻翫ｒ謇ｿ隱阪＠縺ｾ縺励◆縲�<br>譛ｬ繝ｩ繧ｦ繝ｳ繝峨�蟇ｾ謌ｦ縺檎ｵゆｺ�＠縺ｾ縺励◆縲�",
          vict_approval_t: "蜍晄風遒ｺ螳�",
          vict_approval_m: "蜍晄風縺檎｢ｺ螳壹＠縺ｾ縺励◆縲�<br>谺｡縺ｮ蟇ｾ謌ｦ繧定｡後▲縺ｦ荳九＆縺��<br>谺｡縺ｮ蟇ｾ謌ｦ縺ｮ蜍晏茜蝣ｱ蜻顔判髱｢縺ｸ遘ｻ蜍輔＠縺ｾ縺吶�",
          vict_protest_t: "蟇ｾ謌ｦ逶ｸ謇九′謚苓ｭｰ",
          vict_protest_m: "蟇ｾ謌ｦ逶ｸ謇九′縺ゅ↑縺溘�蜍晏茜蝣ｱ蜻翫↓蟇ｾ縺励※逡ｰ隴ｰ繧堤筏縺礼ｫ九※縺ｾ縺励◆縲�<br>縺薙ｌ縺ｫ荳肴恪縺後≠繧句�ｴ蜷医↓縺ｯ縲∵峩縺ｫ縺ゅ↑縺溘′逡ｰ隴ｰ繧堤筏縺礼ｫ九※繧倶ｺ九′縺ｧ縺阪∪縺吶�<br>謚苓ｭｰ逕ｻ髱｢縺ｸ遘ｻ蜍輔＠縺ｾ縺吶�",
          protest_textempty_t: "謚苓ｭｰ蜀�ｮｹ縺檎｢ｺ隱阪〒縺阪∪縺帙ｓ",
          protest_textempty_m: "謚苓ｭｰ蜀�ｮｹ縺檎｢ｺ隱阪〒縺阪∪縺帙ｓ縲�<br>謚苓ｭｰ蜀�ｮｹ繧貞�蜉帙�荳翫√ｂ縺�ｸ蠎ｦ騾∽ｿ｡縺励※荳九＆縺��",
          vict_decide_t: "蜍晄風豎ｺ螳�",
          vict_decide_m: "荳ｻ蛯ｬ閠�′蜍晄風繧呈ｱｺ螳壹＠縺ｾ縺励◆縲�<br>谺｡縺ｮ蟇ｾ謌ｦ繧定｡後▲縺ｦ荳九＆縺��",
          confirm_round_t: "繝ｩ繧ｦ繝ｳ繝臥ｵ先棡遒ｺ螳�",
          confirm_round_m: "荳ｻ蛯ｬ閠�′繝ｩ繧ｦ繝ｳ繝臥ｵ先棡繧呈ｱｺ螳壹＠縺ｾ縺励◆縲�",
          protest_t: "謚苓ｭｰ騾∽ｿ｡螳御ｺ�",
          protest_m: "謚苓ｭｰ縺ｮ騾∽ｿ｡縺悟ｮ御ｺ�＠縺ｾ縺励◆縲�<br>邨先棡縺ｯ荳ｻ蛯ｬ閠��蟇ｩ隴ｰ繧偵♀蠕�■縺上□縺輔＞縲�",
          protest_img_t: "逕ｻ蜒城∽ｿ｡螳御ｺ�",
          protest_img_m: "謚苓ｭｰ逕ｨ逕ｻ蜒上�騾∽ｿ｡縺悟ｮ御ｺ�＠縺ｾ縺励◆縲�<br>謚苓ｭｰ譁�ｒ險倩ｼ峨�荳翫∽ｸ矩Κ繝懊ち繝ｳ繧医ｊ謚苓ｭｰ繧帝∽ｿ｡縺励※荳九＆縺��",
          protest_img_failed_t: "逕ｻ蜒城∽ｿ｡螟ｱ謨�",
          protest_img_failed_m: "謚苓ｭｰ逕ｨ逕ｻ蜒上�騾∽ｿ｡縺悟､ｱ謨励＠縺ｾ縺励◆縲�<br>騾壻ｿ｡迺ｰ蠅��濶ｯ縺��ｴ謇縺ｧ謫堺ｽ懊＠縺ｦ荳九＆縺��<br>繧ｦ繧｣繝ｳ繝峨え繧帝幕縺咲峩縺吩ｺ九〒隗｣豸医☆繧句�ｴ蜷医′縺ゅｊ縺ｾ縺吶�",
          confirm_round_t: "繝ｩ繧ｦ繝ｳ繝臥ｵ先棡遒ｺ螳�",
          confirm_round_m: "繝ｩ繧ｦ繝ｳ繝峨�邨先棡縺檎｢ｺ螳壹＠縺ｾ縺励◆縲ょ享閠��谺｡縺ｮ繝ｩ繧ｦ繝ｳ繝峨∈騾ｲ繧√∪縺吶�",
          loadteam_empty_t: "繝√�繝�諠��ｱ蜿門ｾ�",
          loadteam_empty_m: "繝√�繝�ID縺悟�蜉帙＆繧後※縺�∪縺帙ｓ縲�",
          update_pass_t: "繝代せ繝ｯ繝ｼ繝画峩譁ｰ",
          update_pass_m: "蟇ｾ謌ｦ繝代せ繝ｯ繝ｼ繝峨′譖ｴ譁ｰ縺輔ｌ縺ｾ縺励◆縲�",
          update_pass_op_t: "繝代せ繝ｯ繝ｼ繝画峩譁ｰ",
          update_pass_op_m: "蟇ｾ謌ｦ逶ｸ謇九′蟇ｾ謌ｦ繝代せ繝ｯ繝ｼ繝峨ｒ譖ｴ譁ｰ縺励∪縺励◆縲�",
          update_information_t: "荳ｻ蛯ｬ閠�°繧峨�縺顔衍繧峨○譖ｴ譁ｰ",
          update_information_m: "荳ｻ蛯ｬ閠�°繧峨�縺顔衍繧峨○縺梧峩譁ｰ縺輔ｌ縺ｾ縺励◆縲�"
        },
        battleCardText: {
          nextBattleTime: "蟇ｾ謌ｦ髢句ｧ区凾蛻ｻ : ",
          passUpdateDate: "譖ｴ譁ｰ譎ょ綾 : "
        },
        rankBattleRankingNoteDialog: {
          title: "閾ｪ蛻��鬆�ｽ阪ｒ陦ｨ遉ｺ縺ｧ縺阪∪縺帙ｓ縺ｧ縺励◆",
          note1: "髢句ぎ荳ｭ縺ｮ繝ｩ繝ｳ繧ｭ繝ｳ繧ｰ縺ｯ縲�1000菴阪∪縺ｧ縺ｮ陦ｨ遉ｺ縺ｫ縺ｪ繧翫∪縺吶�<br />",
          note2: "繝ｩ繝ｳ繧ｭ繝ｳ繧ｰ縺ｮ譖ｴ譁ｰ縺ｯ髮�ｨ育憾豕√↓繧医ｊ驕�ｌ繧九％縺ｨ縺後≠繧翫�<br />螳滄圀縺ｮ鬆�ｽ阪→逡ｰ縺ｪ繧句�ｴ蜷医′縺ゅｊ縺ｾ縺吶�<br />",
          note3: "縺励�繧峨￥譎る俣繧偵♀縺�※縺九ｉ縲∝�蠎ｦ縺皮｢ｺ隱阪￥縺�縺輔＞縲�"
        }
      }, this.dex = {
        poke: ["繝輔す繧ｮ繝繝�", "繝輔す繧ｮ繧ｽ繧ｦ", "繝輔す繧ｮ繝舌リ", "繝偵ヨ繧ｫ繧ｲ", "繝ｪ繧ｶ繝ｼ繝�", "繝ｪ繧ｶ繝ｼ繝峨Φ", "繧ｼ繝九ぎ繝｡", "繧ｫ繝｡繝ｼ繝ｫ", "繧ｫ繝｡繝�け繧ｹ", "繧ｭ繝｣繧ｿ繝斐�", "繝医Λ繝ｳ繧ｻ繝ｫ", "繝舌ち繝輔Μ繝ｼ", "繝薙�繝峨Ν", "繧ｳ繧ｯ繝ｼ繝ｳ", "繧ｹ繝斐い繝ｼ", "繝昴ャ繝�", "繝斐ず繝ｧ繝ｳ", "繝斐ず繝ｧ繝�ヨ", "繧ｳ繝ｩ繝�ち", "繝ｩ繝�ち", "繧ｪ繝九せ繧ｺ繝｡", "繧ｪ繝九ラ繝ｪ繝ｫ", "繧｢繝ｼ繝�", "繧｢繝ｼ繝懊ャ繧ｯ", "繝斐き繝√Η繧ｦ", "繝ｩ繧､繝√Η繧ｦ", "繧ｵ繝ｳ繝�", "繧ｵ繝ｳ繝峨ヱ繝ｳ", "繝九ラ繝ｩ繝ｳ笙", "繝九ラ繝ｪ繝ｼ繝�", "繝九ラ繧ｯ繧､繝ｳ", "繝九ラ繝ｩ繝ｳ笙�", "繝九ラ繝ｪ繝ｼ繝�", "繝九ラ繧ｭ繝ｳ繧ｰ", "繝斐ャ繝�", "繝斐け繧ｷ繝ｼ", "繝ｭ繧ｳ繝ｳ", "繧ｭ繝･繧ｦ繧ｳ繝ｳ", "繝励Μ繝ｳ", "繝励け繝ｪ繝ｳ", "繧ｺ繝舌ャ繝�", "繧ｴ繝ｫ繝舌ャ繝�", "繝翫だ繝弱け繧ｵ", "繧ｯ繧ｵ繧､繝上リ", "繝ｩ繝輔Ξ繧ｷ繧｢", "繝代Λ繧ｹ", "繝代Λ繧ｻ繧ｯ繝�", "繧ｳ繝ｳ繝代Φ", "繝｢繝ｫ繝輔か繝ｳ", "繝�ぅ繧ｰ繝", "繝繧ｰ繝医Μ繧ｪ", "繝九Ε繝ｼ繧ｹ", "繝壹Ν繧ｷ繧｢繝ｳ", "繧ｳ繝繝�け", "繧ｴ繝ｫ繝繝�け", "繝槭Φ繧ｭ繝ｼ", "繧ｪ繧ｳ繝ｪ繧ｶ繝ｫ", "繧ｬ繝ｼ繝�ぅ", "繧ｦ繧､繝ｳ繝�ぅ", "繝九Ι繝ｭ繝｢", "繝九Ι繝ｭ繧ｾ", "繝九Ι繝ｭ繝懊Φ", "繧ｱ繝ｼ繧ｷ繧｣", "繝ｦ繝ｳ繧ｲ繝ｩ繝ｼ", "繝輔�繝�ぅ繝ｳ", "繝ｯ繝ｳ繝ｪ繧ｭ繝ｼ", "繧ｴ繝ｼ繝ｪ繧ｭ繝ｼ", "繧ｫ繧､繝ｪ繧ｭ繝ｼ", "繝槭ム繝��繝�", "繧ｦ繝�ラ繝ｳ", "繧ｦ繝��繝�ヨ", "繝｡繝弱け繝ｩ繧ｲ", "繝峨け繧ｯ繝ｩ繧ｲ", "繧､繧ｷ繝�ヶ繝�", "繧ｴ繝ｭ繝ｼ繝ｳ", "繧ｴ繝ｭ繝ｼ繝九Ε", "繝昴ル繝ｼ繧ｿ", "繧ｮ繝｣繝ｭ繝��", "繝､繝峨Φ", "繝､繝峨Λ繝ｳ", "繧ｳ繧､繝ｫ", "繝ｬ繧｢繧ｳ繧､繝ｫ", "繧ｫ繝｢繝阪ぐ", "繝峨�繝峨�", "繝峨�繝峨Μ繧ｪ", "繝代え繝ｯ繧ｦ", "繧ｸ繝･繧ｴ繝ｳ", "繝吶ヨ繝吶ち繝ｼ", "繝吶ヨ繝吶ヨ繝ｳ", "繧ｷ繧ｧ繝ｫ繝繝ｼ", "繝代Ν繧ｷ繧ｧ繝ｳ", "繧ｴ繝ｼ繧ｹ", "繧ｴ繝ｼ繧ｹ繝�", "繧ｲ繝ｳ繧ｬ繝ｼ", "繧､繝ｯ繝ｼ繧ｯ", "繧ｹ繝ｪ繝ｼ繝�", "繧ｹ繝ｪ繝ｼ繝代�", "繧ｯ繝ｩ繝�", "繧ｭ繝ｳ繧ｰ繝ｩ繝ｼ", "繝薙Μ繝ｪ繝繝�", "繝槭Ν繝槭う繝ｳ", "繧ｿ繝槭ち繝�", "繝翫ャ繧ｷ繝ｼ", "繧ｫ繝ｩ繧ｫ繝ｩ", "繧ｬ繝ｩ繧ｬ繝ｩ", "繧ｵ繝ｯ繝�繝ｩ繝ｼ", "繧ｨ繝薙Ρ繝ｩ繝ｼ", "繝吶Ο繝ｪ繝ｳ繧ｬ", "繝峨ぎ繝ｼ繧ｹ", "繝槭ち繝峨ぎ繧ｹ", "繧ｵ繧､繝帙�繝ｳ", "繧ｵ繧､繝峨Φ", "繝ｩ繝�く繝ｼ", "繝｢繝ｳ繧ｸ繝｣繝ｩ", "繧ｬ繝ｫ繝ｼ繝ｩ", "繧ｿ繝�ヤ繝ｼ", "繧ｷ繝ｼ繝峨Λ", "繝医し繧ｭ繝ｳ繝�", "繧｢繧ｺ繝槭が繧ｦ", "繝偵ヨ繝��繝ｳ", "繧ｹ繧ｿ繝ｼ繝溘�", "繝舌Μ繝､繝ｼ繝�", "繧ｹ繝医Λ繧､繧ｯ", "繝ｫ繝ｼ繧ｸ繝･繝ｩ", "繧ｨ繝ｬ繝悶�", "繝悶�繝舌�", "繧ｫ繧､繝ｭ繧ｹ", "繧ｱ繝ｳ繧ｿ繝ｭ繧ｹ", "繧ｳ繧､繧ｭ繝ｳ繧ｰ", "繧ｮ繝｣繝ｩ繝峨せ", "繝ｩ繝励Λ繧ｹ", "繝｡繧ｿ繝｢繝ｳ", "繧､繝ｼ繝悶う", "繧ｷ繝｣繝ｯ繝ｼ繧ｺ", "繧ｵ繝ｳ繝繝ｼ繧ｹ", "繝悶�繧ｹ繧ｿ繝ｼ", "繝昴Μ繧ｴ繝ｳ", "繧ｪ繝�繝翫う繝�", "繧ｪ繝�繧ｹ繧ｿ繝ｼ", "繧ｫ繝悶ヨ", "繧ｫ繝悶ヨ繝励せ", "繝励ユ繝ｩ", "繧ｫ繝薙ざ繝ｳ", "繝輔Μ繝ｼ繧ｶ繝ｼ", "繧ｵ繝ｳ繝繝ｼ", "繝輔ぃ繧､繝､繝ｼ", "繝溘ル繝ｪ繝･繧ｦ", "繝上け繝ｪ繝･繝ｼ", "繧ｫ繧､繝ｪ繝･繝ｼ", "繝溘Η繧ｦ繝��", "繝溘Η繧ｦ", "繝√さ繝ｪ繝ｼ繧ｿ", "繝吶う繝ｪ繝ｼ繝�", "繝｡繧ｬ繝九え繝�", "繝偵ヮ繧｢繝ｩ繧ｷ", "繝槭げ繝槭Λ繧ｷ", "繝舌け繝輔�繝ｳ", "繝ｯ繝九ヮ繧ｳ", "繧｢繝ｪ繧ｲ繧､繝�", "繧ｪ繝ｼ繝繧､繝ｫ", "繧ｪ繧ｿ繝�", "繧ｪ繧ｪ繧ｿ繝�", "繝帙�繝帙�", "繝ｨ繝ｫ繝弱ぜ繧ｯ", "繝ｬ繝�ぅ繝�", "繝ｬ繝�ぅ繧｢繝ｳ", "繧､繝医�繝ｫ", "繧｢繝ｪ繧｢繝峨せ", "繧ｯ繝ｭ繝舌ャ繝�", "繝√Ι繝ｳ繝√�", "繝ｩ繝ｳ繧ｿ繝ｼ繝ｳ", "繝斐メ繝･繝ｼ", "繝斐ぅ", "繝励�繝ｪ繝ｳ", "繝医ご繝斐�", "繝医ご繝√ャ繧ｯ", "繝阪う繝�ぅ", "繝阪う繝�ぅ繧ｪ", "繝｡繝ｪ繝ｼ繝�", "繝｢繧ｳ繧ｳ", "繝�Φ繝ｪ繝･繧ｦ", "繧ｭ繝ｬ繧､繝上リ", "繝槭Μ繝ｫ", "繝槭Μ繝ｫ繝ｪ", "繧ｦ繧ｽ繝�く繝ｼ", "繝九Ι繝ｭ繝医ヮ", "繝上ロ繝�さ", "繝昴�繝�さ", "繝ｯ繧ｿ繝�さ", "繧ｨ繧､繝代Β", "繝偵�繝翫ャ繝�", "繧ｭ繝槭Ρ繝ｪ", "繝､繝ｳ繝､繝ｳ繝�", "繧ｦ繝代�", "繝後が繝ｼ", "繧ｨ繝ｼ繝輔ぅ", "繝悶Λ繝�く繝ｼ", "繝､繝溘き繝ｩ繧ｹ", "繝､繝峨く繝ｳ繧ｰ", "繝�繧ｦ繝�", "繧｢繝ｳ繝弱�繝ｳ", "繧ｽ繝ｼ繝翫Φ繧ｹ", "繧ｭ繝ｪ繝ｳ繝ｪ繧ｭ", "繧ｯ繝後ぐ繝繝�", "繝輔か繝ｬ繝医せ", "繝弱さ繝�メ", "繧ｰ繝ｩ繧､繧ｬ繝ｼ", "繝上ぎ繝阪�繝ｫ", "繝悶Ν繝ｼ", "繧ｰ繝ｩ繝ｳ繝悶Ν", "繝上Μ繝ｼ繧ｻ繝ｳ", "繝上ャ繧ｵ繝�", "繝��繝��", "繝倥Λ繧ｯ繝ｭ繧ｹ", "繝九Η繝ｼ繝ｩ", "繝偵Γ繧ｰ繝�", "繝ｪ繝ｳ繧ｰ繝�", "繝槭げ繝槭ャ繧ｰ", "繝槭げ繧ｫ繝ｫ繧ｴ", "繧ｦ繝ｪ繝�繝ｼ", "繧､繝弱Β繝ｼ", "繧ｵ繝九�繧ｴ", "繝�ャ繝昴え繧ｪ", "繧ｪ繧ｯ繧ｿ繝ｳ", "繝�Μ繝舌�繝�", "繝槭Φ繧ｿ繧､繝ｳ", "繧ｨ繧｢繝ｼ繝�繝�", "繝�Ν繝薙Ν", "繝倥Ν繧ｬ繝ｼ", "繧ｭ繝ｳ繧ｰ繝峨Λ", "繧ｴ繝槭だ繧ｦ", "繝峨Φ繝輔ぃ繝ｳ", "繝昴Μ繧ｴ繝ｳ��", "繧ｪ繝峨す繧ｷ", "繝峨�繝悶Ν", "繝舌Ν繧ｭ繝ｼ", "繧ｫ繝昴お繝ｩ繝ｼ", "繝�繝√Η繝ｼ繝ｫ", "繧ｨ繝ｬ繧ｭ繝�ラ", "繝悶ン繧｣", "繝溘Ν繧ｿ繝ｳ繧ｯ", "繝上ヴ繝翫せ", "繝ｩ繧､繧ｳ繧ｦ", "繧ｨ繝ｳ繝�う", "繧ｹ繧､繧ｯ繝ｳ", "繝ｨ繝ｼ繧ｮ繝ｩ繧ｹ", "繧ｵ繝翫ぐ繝ｩ繧ｹ", "繝舌Φ繧ｮ繝ｩ繧ｹ", "繝ｫ繧ｮ繧｢", "繝帙え繧ｪ繧ｦ", "繧ｻ繝ｬ繝薙ぅ", "繧ｭ繝｢繝ｪ", "繧ｸ繝･繝励ヨ繝ｫ", "繧ｸ繝･繧ｫ繧､繝ｳ", "繧｢繝√Ε繝｢", "繝ｯ繧ｫ繧ｷ繝｣繝｢", "繝舌す繝｣繝ｼ繝｢", "繝溘ぜ繧ｴ繝ｭ繧ｦ", "繝後�繧ｯ繝ｭ繝ｼ", "繝ｩ繧ｰ繝ｩ繝ｼ繧ｸ", "繝昴メ繧ｨ繝�", "繧ｰ繝ｩ繧ｨ繝�", "繧ｸ繧ｰ繧ｶ繧ｰ繝�", "繝槭ャ繧ｹ繧ｰ繝�", "繧ｱ繝�繝�た", "繧ｫ繝ｩ繧ｵ繝ｪ繧ｹ", "繧｢繧ｲ繝上Φ繝�", "繝槭Θ繝ｫ繝�", "繝峨け繧ｱ繧､繝ｫ", "繝上せ繝懊�", "繝上せ繝悶Ξ繝ｭ", "繝ｫ繝ｳ繝代ャ繝�", "繧ｿ繝阪�繝ｼ", "繧ｳ繝弱ワ繝�", "繝繝ｼ繝�Φ繧ｰ", "繧ｹ繝舌Γ", "繧ｪ繧ｪ繧ｹ繝舌Γ", "繧ｭ繝｣繝｢繝｡", "繝壹Μ繝�ヱ繝ｼ", "繝ｩ繝ｫ繝医せ", "繧ｭ繝ｫ繝ｪ繧｢", "繧ｵ繝ｼ繝翫う繝�", "繧｢繝｡繧ｿ繝�", "繧｢繝｡繝｢繝ｼ繧ｹ", "繧ｭ繝弱さ繧ｳ", "繧ｭ繝弱ぎ繝�し", "繝翫�繧ｱ繝ｭ", "繝､繝ｫ繧ｭ繝｢繝�", "繧ｱ繝�く繝ｳ繧ｰ", "繝�メ繝九Φ", "繝�ャ繧ｫ繝九Φ", "繝後こ繝九Φ", "繧ｴ繝九Ι繝九Ι", "繝峨ざ繝ｼ繝�", "繝舌け繧ｪ繝ｳ繧ｰ", "繝槭け繝弱す繧ｿ", "繝上Μ繝�Ζ繝�", "繝ｫ繝ｪ繝ｪ", "繝弱ぜ繝代せ", "繧ｨ繝阪さ", "繧ｨ繝阪さ繝ｭ繝ｭ", "繝､繝溘Λ繝�", "繧ｯ繝√�繝�", "繧ｳ繧ｳ繝峨Λ", "繧ｳ繝峨Λ", "繝懊せ繧ｴ繝峨Λ", "繧｢繧ｵ繝翫Φ", "繝√Ε繝ｼ繝ｬ繝�", "繝ｩ繧ｯ繝ｩ繧､", "繝ｩ繧､繝懊Ν繝�", "繝励Λ繧ｹ繝ｫ", "繝槭う繝翫Φ", "繝舌Ν繝薙�繝�", "繧､繝ｫ繝溘�繧ｼ", "繝ｭ繧ｼ繝ｪ繧｢", "繧ｴ繧ｯ繝ｪ繝ｳ", "繝槭Ν繝弱�繝�", "繧ｭ繝舌ル繧｢", "繧ｵ繝｡繝上ム繝ｼ", "繝帙お繝ｫ繧ｳ", "繝帙お繝ｫ繧ｪ繝ｼ", "繝峨Φ繝｡繝ｫ", "繝舌け繝ｼ繝", "繧ｳ繝ｼ繧ｿ繧ｹ", "繝舌ロ繝悶�", "繝悶�繝斐ャ繧ｰ", "繝代ャ繝√�繝ｫ", "繝翫ャ繧ｯ繝ｩ繝ｼ", "繝薙ヶ繝ｩ繝ｼ繝�", "繝輔Λ繧､繧ｴ繝ｳ", "繧ｵ繝懊ロ繧｢", "繝弱け繧ｿ繧ｹ", "繝√Ν繝�ヨ", "繝√Ν繧ｿ繝ｪ繧ｹ", "繧ｶ繝ｳ繧ｰ繝ｼ繧ｹ", "繝上ヶ繝阪�繧ｯ", "繝ｫ繝翫ヨ繝ｼ繝ｳ", "繧ｽ繝ｫ繝ｭ繝�け", "繝峨ず繝ｧ繝�メ", "繝翫�繧ｺ繝ｳ", "繝倥う繧ｬ繝�", "繧ｷ繧ｶ繝ｪ繧ｬ繝ｼ", "繝､繧ｸ繝ｭ繝ｳ", "繝阪Φ繝峨�繝ｫ", "繝ｪ繝ｪ繝ｼ繝ｩ", "繝ｦ繝ｬ繧､繝峨Ν", "繧｢繝弱�繧ｹ", "繧｢繝ｼ繝槭Ν繝�", "繝偵Φ繝舌せ", "繝溘Ο繧ｫ繝ｭ繧ｹ", "繝昴Ρ繝ｫ繝ｳ", "繧ｫ繧ｯ繝ｬ繧ｪ繝ｳ", "繧ｫ繧ｲ繝懊え繧ｺ", "繧ｸ繝･繝壹ャ繧ｿ", "繝ｨ繝槭Ρ繝ｫ", "繧ｵ繝槭Κ繝ｼ繝ｫ", "繝医Ο繝斐え繧ｹ", "繝√Μ繝ｼ繝ｳ", "繧｢繝悶た繝ｫ", "繧ｽ繝ｼ繝翫ヮ", "繝ｦ繧ｭ繝ｯ繝ｩ繧ｷ", "繧ｪ繝九ざ繝ｼ繝ｪ", "繧ｿ繝槭じ繝ｩ繧ｷ", "繝医ラ繧ｰ繝ｩ繝ｼ", "繝医ラ繧ｼ繝ｫ繧ｬ", "繝代�繝ｫ繝ｫ", "繝上Φ繝��繝ｫ", "繧ｵ繧ｯ繝ｩ繝薙せ", "繧ｸ繝ｼ繝ｩ繝ｳ繧ｹ", "繝ｩ繝悶き繧ｹ", "繧ｿ繝��繧､", "繧ｳ繝｢繝ｫ繝ｼ", "繝懊�繝槭Φ繝", "繝繝ｳ繝舌Ν", "繝｡繧ｿ繝ｳ繧ｰ", "繝｡繧ｿ繧ｰ繝ｭ繧ｹ", "繝ｬ繧ｸ繝ｭ繝�け", "繝ｬ繧ｸ繧｢繧､繧ｹ", "繝ｬ繧ｸ繧ｹ繝√Ν", "繝ｩ繝�ぅ繧｢繧ｹ", "繝ｩ繝�ぅ繧ｪ繧ｹ", "繧ｫ繧､繧ｪ繝ｼ繧ｬ", "繧ｰ繝ｩ繝ｼ繝峨Φ", "繝ｬ繝�け繧ｦ繧ｶ", "繧ｸ繝ｩ繝ｼ繝�", "繝�が繧ｭ繧ｷ繧ｹ", "繝翫お繝医Ν", "繝上Ζ繧ｷ繧ｬ繝｡", "繝峨ム繧､繝医せ", "繝偵さ繧ｶ繝ｫ", "繝｢繧ｦ繧ｫ繧ｶ繝ｫ", "繧ｴ繧ｦ繧ｫ繧ｶ繝ｫ", "繝昴ャ繝√Ε繝�", "繝昴ャ繧ｿ繧､繧ｷ", "繧ｨ繝ｳ繝壹Ν繝�", "繝�繝�け繝ｫ", "繝�繧ｯ繝舌�繝�", "繝�繧ｯ繝帙�繧ｯ", "繝薙ャ繝�", "繝薙�繝繝ｫ", "繧ｳ繝ｭ繝懊�繧ｷ", "繧ｳ繝ｭ繝医ャ繧ｯ", "繧ｳ繝ｪ繝ｳ繧ｯ", "繝ｫ繧ｯ繧ｷ繧ｪ", "繝ｬ繝ｳ繝医Λ繝ｼ", "繧ｹ繝懊Α繝ｼ", "繝ｭ繧ｺ繝ｬ繧､繝�", "繧ｺ繧ｬ繧､繝峨せ", "繝ｩ繝�繝代Ν繝�", "繧ｿ繝�ヨ繝励せ", "繝医Μ繝��繧ｹ", "繝溘ヮ繝�繝�メ", "繝溘ヮ繝槭ム繝�", "繧ｬ繝ｼ繝｡繧､繝ｫ", "繝溘ヤ繝上ル繝ｼ", "繝薙�繧ｯ繧､繝ｳ", "繝代メ繝ｪ繧ｹ", "繝悶う繧ｼ繝ｫ", "繝輔Ο繝ｼ繧ｼ繝ｫ", "繝√ぉ繝ｪ繝ｳ繝�", "繝√ぉ繝ｪ繝�", "繧ｫ繝ｩ繝翫け繧ｷ", "繝医Μ繝医ラ繝ｳ", "繧ｨ繝��繝ｼ繧ｹ", "繝輔Ρ繝ｳ繝�", "繝輔Ρ繝ｩ繧､繝�", "繝溘Α繝ｭ繝ｫ", "繝溘Α繝ｭ繝��", "繝�繧ｦ繝槭�繧ｸ", "繝峨Φ繧ｫ繝ｩ繧ｹ", "繝九Ε繝ｫ繝槭�", "繝悶ル繝｣繝�ヨ", "繝ｪ繝ｼ繧ｷ繝｣繝ｳ", "繧ｹ繧ｫ繝ｳ繝励�", "繧ｹ繧ｫ繧ｿ繝ｳ繧ｯ", "繝峨�繝溘Λ繝ｼ", "繝峨�繧ｿ繧ｯ繝ｳ", "繧ｦ繧ｽ繝上メ", "繝槭ロ繝�", "繝斐Φ繝励け", "繝壹Λ繝��", "繝溘き繝ｫ繧ｲ", "繝輔き繝槭Ν", "繧ｬ繝舌う繝�", "繧ｬ繝悶Μ繧｢繧ｹ", "繧ｴ繝ｳ繝�", "繝ｪ繧ｪ繝ｫ", "繝ｫ繧ｫ繝ｪ繧ｪ", "繝偵�繝昴ち繧ｹ", "繧ｫ繝舌Ν繝峨Φ", "繧ｹ繧ｳ繝ｫ繝�", "繝峨Λ繝斐が繝ｳ", "繧ｰ繝ｬ繝�げ繝ｫ", "繝峨け繝ｭ繝�げ", "繝槭せ繧ｭ繝�ヱ", "繧ｱ繧､繧ｳ繧ｦ繧ｪ", "繝阪が繝ｩ繝ｳ繝�", "繧ｿ繝槭Φ繧ｿ", "繝ｦ繧ｭ繧ｫ繝悶Μ", "繝ｦ繧ｭ繝弱が繝ｼ", "繝槭ル繝･繝ｼ繝ｩ", "繧ｸ繝舌さ繧､繝ｫ", "繝吶Ο繝吶Ν繝�", "繝峨し繧､繝峨Φ", "繝｢繧ｸ繝｣繝ｳ繝�", "繧ｨ繝ｬ繧ｭ繝悶Ν", "繝悶�繝舌�繝ｳ", "繝医ご繧ｭ繝�せ", "繝｡繧ｬ繝､繝ｳ繝�", "繝ｪ繝ｼ繝輔ぅ繧｢", "繧ｰ繝ｬ繧､繧ｷ繧｢", "繧ｰ繝ｩ繧､繧ｪ繝ｳ", "繝槭Φ繝�繝ｼ", "繝昴Μ繧ｴ繝ｳ�ｺ", "繧ｨ繝ｫ繝ｬ繧､繝�", "繝繧､繝弱�繧ｺ", "繝ｨ繝弱Ρ繝ｼ繝ｫ", "繝ｦ繧ｭ繝｡繝弱さ", "繝ｭ繝医Β", "繝ｦ繧ｯ繧ｷ繝ｼ", "繧ｨ繝�繝ｪ繝�ヨ", "繧｢繧ｰ繝弱Β", "繝�ぅ繧｢繝ｫ繧ｬ", "繝代Ν繧ｭ繧｢", "繝偵�繝峨Λ繝ｳ", "繝ｬ繧ｸ繧ｮ繧ｬ繧ｹ", "繧ｮ繝ｩ繝�ぅ繝�", "繧ｯ繝ｬ繧ｻ繝ｪ繧｢", "繝輔ぅ繧ｪ繝�", "繝槭リ繝輔ぅ", "繝繝ｼ繧ｯ繝ｩ繧､", "繧ｷ繧ｧ繧､繝�", "繧｢繝ｫ繧ｻ繧ｦ繧ｹ", "繝薙け繝�ぅ繝�", "繝�ち繝ｼ繧ｸ繝｣", "繧ｸ繝｣繝弱ン繝ｼ", "繧ｸ繝｣繝ｭ繝ｼ繝", "繝昴き繝�", "繝√Ε繧ｪ繝悶�", "繧ｨ繝ｳ繝悶が繝ｼ", "繝溘ず繝･繝槭Ν", "繝輔ち繝√�繝ｫ", "繝繧､繧ｱ繝ｳ繧ｭ", "繝溘ロ繧ｺ繝�", "繝溘Ν繝帙ャ繧ｰ", "繝ｨ繝ｼ繝�Μ繝ｼ", "繝上�繝�Μ繧｢", "繝�繝ｼ繝ｩ繝ｳ繝�", "繝√Ι繝ｭ繝阪さ", "繝ｬ繝代Ν繝繧ｹ", "繝､繝翫ャ繝�", "繝､繝翫ャ繧ｭ繝ｼ", "繝舌が繝��", "繝舌が繝�く繝ｼ", "繝偵Ζ繝��", "繝偵Ζ繝�く繝ｼ", "繝�繝ｳ繝�", "繝�繧ｷ繝｣繝ｼ繝�", "繝槭Γ繝代ヨ", "繝上ヨ繝ｼ繝懊�", "繧ｱ繝ｳ繝帙Ο繧ｦ", "繧ｷ繝槭�", "繧ｼ繝悶Λ繧､繧ｫ", "繝繝ｳ繧ｴ繝ｭ", "繧ｬ繝ｳ繝医Ν", "繧ｮ繧ｬ繧､繧｢繧ｹ", "繧ｳ繝ｭ繝｢繝ｪ", "繧ｳ繧ｳ繝ｭ繝｢繝ｪ", "繝｢繧ｰ繝ｪ繝･繝ｼ", "繝峨Μ繝･繧ｦ繧ｺ", "繧ｿ繝悶Φ繝�", "繝峨ャ繧ｳ繝ｩ繝ｼ", "繝峨ユ繝�さ繝�", "繝ｭ繝ｼ繝悶す繝ｳ", "繧ｪ繧ｿ繝槭Ο", "繧ｬ繝槭ぎ繝ｫ", "繧ｬ繝槭ご繝ｭ繧ｲ", "繝翫ご繧ｭ", "繝繧ｲ繧ｭ", "繧ｯ繝ｫ繝溘Ν", "繧ｯ繝ｫ繝槭Θ", "繝上ワ繧ｳ繝｢繝ｪ", "繝輔す繝�", "繝帙う繝ｼ繧ｬ", "繝壹Φ繝峨Λ繝ｼ", "繝｢繝ｳ繝｡繝ｳ", "繧ｨ繝ｫ繝輔�繝ｳ", "繝√Η繝ｪ繝�", "繝峨Ξ繝�ぅ繧｢", "繝舌せ繝ｩ繧ｪ", "繝｡繧ｰ繝ｭ繧ｳ", "繝ｯ繝ｫ繝薙Ν", "繝ｯ繝ｫ繝薙い繝ｫ", "繝繝ｫ繝槭ャ繧ｫ", "繝偵ヲ繝繝ｫ繝�", "繝槭Λ繧ｫ繝�メ", "繧､繧ｷ繧ｺ繝槭う", "繧､繝ｯ繝代Ξ繧ｹ", "繧ｺ繝ｫ繝�げ", "繧ｺ繝ｫ繧ｺ繧ｭ繝ｳ", "繧ｷ繝ｳ繝懊Λ繝ｼ", "繝�せ繝槭せ", "繝�せ繧ｫ繝ｼ繝ｳ", "繝励Ο繝医�繧ｬ", "繧｢繝舌ざ繝ｼ繝ｩ", "繧｢繝ｼ繧ｱ繝ｳ", "繧｢繝ｼ繧ｱ繧ｪ繧ｹ", "繝､繝悶け繝ｭ繝ｳ", "繝繧ｹ繝医ム繧ｹ", "繧ｾ繝ｭ繧｢", "繧ｾ繝ｭ繧｢繝ｼ繧ｯ", "繝√Λ繝ｼ繝溘ぅ", "繝√Λ繝√�繝�", "繧ｴ繝√Β", "繧ｴ繝√Α繝ｫ", "繧ｴ繝√Ν繧ｼ繝ｫ", "繝ｦ繝九Λ繝ｳ", "繝繝悶Λ繝ｳ", "繝ｩ繝ｳ繧ｯ繝ｫ繧ｹ", "繧ｳ繧｢繝ｫ繝偵�", "繧ｹ繝ｯ繝ｳ繝�", "繝舌ル繝励ャ繝�", "繝舌ル繝ｪ繝�メ", "繝舌う繝舌ル繝ｩ", "繧ｷ繧ｭ繧ｸ繧ｫ", "繝｡繝悶く繧ｸ繧ｫ", "繧ｨ繝｢繝ｳ繧ｬ", "繧ｫ繝悶Ν繝｢", "繧ｷ繝･繝舌Ν繧ｴ", "繧ｿ繝槭ご繧ｿ繧ｱ", "繝｢繝ｭ繝舌Ξ繝ｫ", "繝励Ν繝ｪ繝ｫ", "繝悶Ν繝ｳ繧ｲ繝ｫ", "繝槭�繝ｳ繝懊え", "繝舌メ繝･繝ｫ", "繝�Φ繝√Η繝ｩ", "繝�ャ繧ｷ繝ｼ繝�", "繝翫ャ繝医Ξ繧､", "繧ｮ繧｢繝ｫ", "繧ｮ繧ｮ繧｢繝ｫ", "繧ｮ繧ｮ繧ｮ繧｢繝ｫ", "繧ｷ繝薙す繝ｩ繧ｹ", "繧ｷ繝薙ン繝ｼ繝ｫ", "繧ｷ繝薙Ν繝峨Φ", "繝ｪ繧ｰ繝ｬ繝ｼ", "繧ｪ繝ｼ繝吶Β", "繝偵ヨ繝｢繧ｷ", "繝ｩ繝ｳ繝励Λ繝ｼ", "繧ｷ繝｣繝ｳ繝�Λ", "繧ｭ繝舌ざ", "繧ｪ繝弱Φ繝�", "繧ｪ繝弱ヮ繧ｯ繧ｹ", "繧ｯ繝槭す繝･繝ｳ", "繝�Φ繝吶い繝ｼ", "繝輔Μ繝ｼ繧ｸ繧ｪ", "繝√Ι繝懊�繧ｭ", "繧｢繧ｮ繝ｫ繝繝ｼ", "繝槭ャ繧ｮ繝ｧ", "繧ｳ繧ｸ繝ｧ繝輔�", "繧ｳ繧ｸ繝ｧ繝ｳ繝�", "繧ｯ繝ｪ繝�繧ｬ繝ｳ", "繧ｴ繝薙ャ繝�", "繧ｴ繝ｫ繝ｼ繧ｰ", "繧ｳ繝槭ち繝�", "繧ｭ繝ｪ繧ｭ繧ｶ繝ｳ", "繝舌ャ繝輔Ο繝ｳ", "繝ｯ繧ｷ繝懊Φ", "繧ｦ繧ｩ繝ｼ繧ｰ繝ｫ", "繝舌Ν繝√Ε繧､", "繝舌Ν繧ｸ繝ｼ繝�", "繧ｯ繧､繧ｿ繝ｩ繝ｳ", "繧｢繧､繧｢繝ｳ繝�", "繝｢繝弱ぜ", "繧ｸ繝倥ャ繝�", "繧ｵ繧ｶ繝ｳ繝峨Λ", "繝｡繝ｩ繝ｫ繝�", "繧ｦ繝ｫ繧ｬ繝｢繧ｹ", "繧ｳ繝舌Ν繧ｪ繝ｳ", "繝�Λ繧ｭ繧ｪ繝ｳ", "繝薙Μ繧ｸ繧ｪ繝ｳ", "繝医Ν繝阪Ο繧ｹ", "繝懊Ν繝医Ο繧ｹ", "繝ｬ繧ｷ繝ｩ繝�", "繧ｼ繧ｯ繝ｭ繝�", "繝ｩ繝ｳ繝峨Ο繧ｹ", "繧ｭ繝･繝ｬ繝�", "繧ｱ繝ｫ繝�ぅ繧ｪ", "繝｡繝ｭ繧ｨ繝�ち", "繧ｲ繝弱そ繧ｯ繝�", "繝上Μ繝槭Ο繝ｳ", "繝上Μ繝懊�繧ｰ", "繝悶Μ繧ｬ繝ｭ繝ｳ", "繝輔か繝�さ", "繝��繝ｫ繝翫�", "繝槭ヵ繧ｩ繧ｯ繧ｷ繝ｼ", "繧ｱ繝ｭ繝槭ヤ", "繧ｲ繧ｳ繧ｬ繧ｷ繝ｩ", "繧ｲ繝�さ繧ｦ繧ｬ", "繝帙Ν繝薙�", "繝帙Ν繝ｼ繝�", "繝､繝､繧ｳ繝�", "繝偵ヮ繝､繧ｳ繝�", "繝輔ぃ繧､繧｢繝ｭ繝ｼ", "繧ｳ繝輔く繝�繧ｷ", "繧ｳ繝輔�繝ｩ繧､", "繝薙ン繝ｨ繝ｳ", "繧ｷ繧ｷ繧ｳ", "繧ｫ繧ｨ繝ｳ繧ｸ繧ｷ", "繝輔Λ繝吶�", "繝輔Λ繧ｨ繝�ユ", "繝輔Λ繝ｼ繧ｸ繧ｧ繧ｹ", "繝｡繧ｧ繝ｼ繧ｯ繝ｫ", "繧ｴ繝ｼ繧ｴ繝ｼ繝�", "繝､繝ｳ繝√Ε繝�", "繧ｴ繝ｭ繝ｳ繝", "繝医Μ繝溘い繝ｳ", "繝九Ε繧ｹ繝代�", "繝九Ε繧ｪ繝九け繧ｹ", "繝偵ヨ繝�く", "繝九ム繝ｳ繧ｮ繝ｫ", "繧ｮ繝ｫ繧ｬ繝ｫ繝�", "繧ｷ繝･繧ｷ繝･繝�", "繝輔Ξ繝輔Ρ繝ｳ", "繝壹Ο繝�ヱ繝�", "繝壹Ο繝ｪ繝ｼ繝�", "繝槭�繧､繝ｼ繧ｫ", "繧ｫ繝ｩ繝槭ロ繝ｭ", "繧ｫ繝｡繝�ユ", "繧ｬ繝｡繝弱ョ繧ｹ", "繧ｯ繧ｺ繝｢繝ｼ", "繝峨Λ繝溘ラ繝ｭ", "繧ｦ繝�ャ繝昴え", "繝悶Ο繧ｹ繧ｿ繝ｼ", "繧ｨ繝ｪ繧ｭ繝�Ν", "繧ｨ繝ｬ繧ｶ繝ｼ繝�", "繝√ざ繝ｩ繧ｹ", "繧ｬ繝√ざ繝ｩ繧ｹ", "繧｢繝槭Ν繧ｹ", "繧｢繝槭Ν繝ｫ繧ｬ", "繝九Φ繝輔ぅ繧｢", "繝ｫ繝√Ε繝悶Ν", "繝�ョ繝ｳ繝�", "繝｡繝ｬ繧ｷ繝ｼ", "繝後Γ繝ｩ", "繝後Γ繧､繝ｫ", "繝後Γ繝ｫ繧ｴ繝ｳ", "繧ｯ繝ｬ繝�ヵ繧｣", "繝懊け繝ｬ繝ｼ", "繧ｪ繝ｼ繝ｭ繝�ヨ", "繝舌こ繝�メ繝｣", "繝代Φ繝励ず繝ｳ", "繧ｫ繝√さ繝ｼ繝ｫ", "繧ｯ繝ｬ繝吶�繧ｹ", "繧ｪ繝ｳ繝舌ャ繝�", "繧ｪ繝ｳ繝舌�繝ｳ", "繧ｼ繝ｫ繝阪い繧ｹ", "繧､繝吶Ν繧ｿ繝ｫ", "繧ｸ繧ｬ繝ｫ繝�", "繝�ぅ繧｢繝ｳ繧ｷ繝ｼ", "繝輔�繝�", "繝懊Ν繧ｱ繝九が繝ｳ", "繝｢繧ｯ繝ｭ繝ｼ", "繝輔け繧ｹ繝ｭ繝ｼ", "繧ｸ繝･繝翫う繝代�", "繝九Ε繝薙�", "繝九Ε繝偵�繝�", "繧ｬ繧ｪ繧ｬ繧ｨ繝ｳ", "繧｢繧ｷ繝槭Μ", "繧ｪ繧ｷ繝｣繝槭Μ", "繧｢繧ｷ繝ｬ繝ｼ繝�", "繝�ヤ繧ｱ繝ｩ", "繧ｱ繝ｩ繝ｩ繝�ヱ", "繝峨ョ繧ｫ繝舌す", "繝､繝ｳ繧ｰ繝ｼ繧ｹ", "繝�き繧ｰ繝ｼ繧ｹ", "繧｢繧ｴ繧ｸ繝�繧ｷ", "繝�Φ繝ゅΒ繧ｷ", "繧ｯ繝ｯ繧ｬ繝弱Φ", "繝槭こ繝ｳ繧ｫ繝�", "繧ｱ繧ｱ繝ｳ繧ｫ繝�", "繧ｪ繝峨Μ繝峨Μ", "繧｢繝悶Μ繝ｼ", "繧｢繝悶Μ繝懊Φ", "繧､繝ｯ繝ｳ繧ｳ", "繝ｫ繧ｬ繝ｫ繧ｬ繝ｳ", "繝ｨ繝ｯ繧ｷ", "繝偵ラ繧､繝�", "繝峨ヲ繝峨う繝�", "繝峨Ο繝舌Φ繧ｳ", "繝舌Φ繝舌ラ繝ｭ", "繧ｷ繧ｺ繧ｯ繝｢", "繧ｪ繝九す繧ｺ繧ｯ繝｢", "繧ｫ繝ｪ繧ｭ繝ｪ", "繝ｩ繝ｩ繝ｳ繝�せ", "繝阪�繧ｷ繝･", "繝槭す繧ｧ繝ｼ繝�", "繝､繝医え繝｢繝ｪ", "繧ｨ繝ｳ繝九Η繝ｼ繝�", "繝後う繧ｳ繧ｰ繝�", "繧ｭ繝�Ν繧ｰ繝�", "繧｢繝槭き繧ｸ", "繧｢繝槭�繧､繧ｳ", "繧｢繝槭�繧ｸ繝ｧ", "繧ｭ繝･繝ｯ繝ｯ繝ｼ", "繝､繝ｬ繝ｦ繝ｼ繧ｿ繝ｳ", "繝翫ご繝�こ繧ｵ繝ｫ", "繧ｳ繧ｽ繧ｯ繝�繧ｷ", "繧ｰ繧ｽ繧ｯ繝�繧ｷ繝｣", "繧ｹ繝翫ヰ繧｡", "繧ｷ繝ｭ繝�せ繝�", "繝翫�繧ｳ繝悶す", "繧ｿ繧､繝暦ｼ壹レ繝ｫ", "繧ｷ繝ｫ繝ｴ繧｡繝�ぅ", "繝｡繝�ヮ", "繝阪ャ繧ｳ繧｢繝ｩ", "繝舌け繧ｬ繝｡繧ｹ", "繝医ご繝��繝ｫ", "繝溘Α繝�く繝･", "繝上ぐ繧ｮ繧ｷ繝ｪ", "繧ｸ繧ｸ繝ｼ繝ｭ繝ｳ", "繝繝繝ｪ繝ｳ", "繧ｸ繝｣繝ｩ繧ｳ", "繧ｸ繝｣繝ｩ繝ｳ繧ｴ", "繧ｸ繝｣繝ｩ繝ｩ繝ｳ繧ｬ", "繧ｫ繝励�繧ｳ繧ｱ繧ｳ", "繧ｫ繝励�繝�ユ繝�", "繧ｫ繝励�繝悶Ν繝ｫ", "繧ｫ繝励�繝ｬ繝偵Ξ", "繧ｳ繧ｹ繝｢繝�げ", "繧ｳ繧ｹ繝｢繧ｦ繝�", "繧ｽ繝ｫ繧ｬ繝ｬ繧ｪ", "繝ｫ繝翫い繝ｼ繝ｩ", "繧ｦ繝�Ο繧､繝�", "繝槭ャ繧ｷ繝悶�繝ｳ", "繝輔ぉ繝ｭ繝ｼ繝√ぉ", "繝�Φ繧ｸ繝･繝｢繧ｯ", "繝�ャ繧ｫ繧ｰ繝､", "繧ｫ繝溘ヤ繝ｫ繧ｮ", "繧｢繧ｯ繧ｸ繧ｭ繝ｳ繧ｰ", "繝阪け繝ｭ繧ｺ繝�", "繝槭ぐ繧｢繝�", "繝槭�繧ｷ繝｣繝峨�", "繝吶�繝弱Β", "繧｢繝ｼ繧ｴ繝ｨ繝ｳ", "繝�Φ繝�ヤ繝ｳ繝�", "繧ｺ繧ｬ繝峨�繝ｳ", "繧ｼ繝ｩ繧ｪ繝ｩ", "繝｡繝ｫ繧ｿ繝ｳ", "繝｡繝ｫ繝｡繧ｿ繝ｫ", "繧ｵ繝ｫ繝弱Μ", "繝舌メ繝ｳ繧ｭ繝ｼ", "繧ｴ繝ｪ繝ｩ繝ｳ繝繝ｼ", "繝偵ヰ繝九�", "繝ｩ繝薙ヵ繝�ヨ", "繧ｨ繝ｼ繧ｹ繝舌�繝ｳ", "繝｡繝�た繝ｳ", "繧ｸ繝｡繝ｬ繧ｪ繝ｳ", "繧､繝ｳ繝�Ξ繧ｪ繝ｳ", "繝帙す繧ｬ繝ｪ繧ｹ", "繝ｨ繧ｯ繝舌Μ繧ｹ", "繧ｳ繧ｳ繧ｬ繝ｩ", "繧｢繧ｪ繧ｬ繝ｩ繧ｹ", "繧｢繝ｼ繝槭�繧ｬ繧｢", "繧ｵ繝�メ繝�繧ｷ", "繝ｬ繝峨�繝�繧ｷ", "繧､繧ｪ繝ｫ繝�", "繧ｯ繧ｹ繝�", "繝輔か繧ｯ繧ｹ繝ｩ繧､", "繝偵Γ繝ｳ繧ｫ", "繝ｯ繧ｿ繧ｷ繝ｩ繧ｬ", "繧ｦ繝ｼ繝ｫ繝ｼ", "繝舌う繧ｦ繝ｼ繝ｫ繝ｼ", "繧ｫ繝�繧ｫ繝｡", "繧ｫ繧ｸ繝ｪ繧ｬ繝｡", "繝ｯ繝ｳ繝代メ", "繝代Ν繧ｹ繝ｯ繝ｳ", "繧ｿ繝ｳ繝峨Φ", "繝医Ο繝�ざ繝ｳ", "繧ｻ繧ｭ繧ｿ繝ｳ繧ｶ繝ｳ", "繧ｫ繧ｸ繝�メ繝･", "繧｢繝��繝ｪ繝･繝ｼ", "繧ｿ繝ｫ繝��繝ｫ", "繧ｹ繝翫�繝�", "繧ｵ繝繧､繧ｸ繝｣", "繧ｦ繝�え", "繧ｵ繧ｷ繧ｫ繝槭せ", "繧ｫ繝槭せ繧ｸ繝ｧ繝ｼ", "繧ｨ繝ｬ繧ｺ繝ｳ", "繧ｹ繝医Μ繝ｳ繝繝ｼ", "繝､繧ｯ繝�", "繝槭Ν繝､繧ｯ繝�", "繧ｿ繧ｿ繝�さ", "繧ｪ繝医せ繝代せ", "繝､繝舌メ繝｣", "繝昴ャ繝医ョ繧ｹ", "繝溘ヶ繝ｪ繝�", "繝�ヶ繝ｪ繝�", "繝悶Μ繝�繧ｪ繝ｳ", "繝吶Ο繝舌�", "繧ｮ繝｢繝ｼ", "繧ｪ繝ｼ繝ｭ繝ｳ繧ｲ", "繧ｿ繝√ヵ繧ｵ繧ｰ繝�", "繝九Ε繧､繧ｭ繝ｳ繧ｰ", "繧ｵ繝九ざ繝ｼ繝ｳ", "繝阪ぐ繧ｬ繝翫う繝�", "繝舌Μ繧ｳ繧ｪ繝ｫ", "繝�せ繝舌�繝ｳ", "繝槭�繝溘Ν", "繝槭�繧､繝��", "繧ｿ繧､繝ｬ繝ｼ繝�", "繝舌メ繝ｳ繧ｦ繝�", "繝ｦ繧ｭ繝上Α", "繝｢繧ｹ繝弱え", "繧､繧ｷ繝倥Φ繧ｸ繝ｳ", "繧ｳ繧ｪ繝ｪ繝��", "繧､繧ｨ繝�し繝ｳ", "繝｢繝ｫ繝壹さ", "繧ｾ繧ｦ繝峨え", "繝繧､繧ｪ繧ｦ繝峨え", "繝代ャ繝√Λ繧ｴ繝ｳ", "繝代ャ繝√Ν繝峨Φ", "繧ｦ繧ｪ繝弱Λ繧ｴ繝ｳ", "繧ｦ繧ｪ繝√Ν繝峨Φ", "繧ｸ繝･繝ｩ繝ｫ繝峨Φ", "繝峨Λ繝｡繧ｷ繝､", "繝峨Ο繝ｳ繝�", "繝峨Λ繝代Ν繝�", "繧ｶ繧ｷ繧｢繝ｳ", "繧ｶ繝槭ぞ繝ｳ繧ｿ", "繝�繧ｲ繝ｳ繝繧､繝�", "繝繧ｯ繝�", "繧ｦ繝ｼ繝ｩ繧ｪ繧ｹ", "繧ｶ繝ｫ繝ｼ繝�", "繝ｬ繧ｸ繧ｨ繝ｬ繧ｭ", "繝ｬ繧ｸ繝峨Λ繧ｴ", "繝悶Μ繧ｶ繝昴せ", "繝ｬ繧､繧ｹ繝昴せ", "繝舌ラ繝ｬ繝�け繧ｹ", "繧｢繝､繧ｷ繧ｷ", "繝舌し繧ｮ繝ｪ", "繧ｬ繝√げ繝�", "繧､繝繧､繝医え", "繧ｪ繧ｪ繝九Η繝ｼ繝ｩ", "繝上Μ繝ｼ繝槭Φ", "繝ｩ繝悶ヨ繝ｭ繧ｹ", "繝九Ε繧ｪ繝�", "繝九Ε繝ｭ繝ｼ繝�", "繝槭せ繧ｫ繝ｼ繝九Ε", "繝帙ご繝ｼ繧ｿ", "繧｢繝√ご繝ｼ繧ｿ", "繝ｩ繧ｦ繝峨�繝ｼ繝ｳ", "繧ｯ繝ｯ繝�せ", "繧ｦ繧ｧ繝ｫ繧ｫ繝｢", "繧ｦ繧ｧ繝ｼ繝九ヰ繝ｫ", "繧ｰ繝ｫ繝医Φ", "繝代ヵ繝･繝ｼ繝医Φ", "繧ｿ繝槭Φ繝√Η繝ｩ", "繝ｯ繝翫う繝繝ｼ", "繝槭Γ繝舌ャ繧ｿ", "繧ｨ繧ｯ繧ｹ繝ｬ繝�げ", "繝代Δ", "繝代Δ繝�ヨ", "繝代�繝｢繝�ヨ", "繝ｯ繝�き繝阪ぜ繝�", "繧､繝�き繝阪ぜ繝�", "繝代ヴ繝｢繝�メ", "繝舌え繝�ヤ繧ｧ繝ｫ", "繝溘ル繝ｼ繝�", "繧ｪ繝ｪ繝ｼ繝九Ι", "繧ｪ繝ｪ繝ｼ繝ｴ繧｡", "繧､繧ｭ繝ｪ繝ｳ繧ｳ", "繧ｳ繧ｸ繧ｪ", "繧ｸ繧ｪ繝�Β", "繧ｭ繝ｧ繧ｸ繧ｪ繝ｼ繝ｳ", "繧ｫ繝ｫ繝懊え", "繧ｰ繝ｬ繝ｳ繧｢繝ｫ繝�", "繧ｽ繧ｦ繝悶Ξ繧､繧ｺ", "繧ｺ繝斐き", "繝上Λ繝舌Μ繝ｼ", "繧ｫ繧､繝�Φ", "繧ｿ繧､繧ｫ繧､繝�Φ", "繧ｪ繝ｩ繝√ヵ", "繝槭ヵ繧｣繝�ぅ繝�", "繧ｷ繝ｫ繧ｷ繝･繝ｫ繝ｼ", "繧ｿ繧ｮ繝ｳ繧ｰ繝ｫ", "繧｢繝弱け繧ｵ", "繧｢繝弱�繝ｩ繧ｰ繧ｵ", "繝弱ヮ繧ｯ繝ｩ繧ｲ", "繝ｪ繧ｯ繧ｯ繝ｩ繧ｲ", "繧ｬ繧ｱ繧ｬ繝�", "繧ｫ繝励し繧､繧ｸ", "繧ｹ繧ｳ繝ｴ繧｣繝ｩ繝ｳ", "繧ｷ繧ｬ繝ｭ繧ｳ", "繝吶Λ繧ｫ繧ｹ", "繝偵Λ繝偵リ", "繧ｯ繧ｨ繧ｹ繝代ヨ繝ｩ", "繧ｫ繝後メ繝｣繝ｳ", "繝翫き繝後メ繝｣繝ｳ", "繝�き繝後メ繝｣繝ｳ", "繧ｦ繝溘ョ繧｣繧ｰ繝", "繧ｦ繝溘ヨ繝ｪ繧ｪ", "繧ｪ繝医す繝峨Μ", "繝翫Α繧､繝ｫ繧ｫ", "繧､繝ｫ繧ｫ繝槭Φ", "繝悶Ο繝ｭ繝ｳ", "繝悶Ο繝ｭ繝ｭ繝ｼ繝�", "繝｢繝医ヨ繧ｫ繧ｲ", "繝溘Α繧ｺ繧ｺ", "繧ｭ繝ｩ繝ｼ繝｡", "繧ｭ繝ｩ繝輔Ο繝ｫ", "繝懊メ", "繝上き繝峨ャ繧ｰ", "繧ｫ繝ｩ繝溘Φ繧ｴ", "繧｢繝ｫ繧ｯ繧ｸ繝ｩ", "繝上Ν繧ｯ繧ｸ繝ｩ", "繝溘ぎ繝ｫ繝ｼ繧ｵ", "繝倥う繝ｩ繝�す繝｣", "繧ｷ繝｣繝ｪ繧ｿ繝�", "繧ｳ繝弱Κ繧ｶ繝ｫ", "繝峨が繝ｼ", "繝ｪ繧ｭ繧ｭ繝ｪ繝ｳ", "繝弱さ繧ｳ繝�メ", "繝峨ラ繧ｲ繧ｶ繝ｳ", "繧､繝繧､繝翫く繝�", "繧ｵ繧ｱ繝悶す繝��", "繧｢繝ｩ繝悶Ν繧ｿ繧ｱ", "繝上ヰ繧ｿ繧ｯ繧ｫ繝�", "繝√Υ繝上え繝上ロ", "繧ｹ繝翫ヮ繧ｱ繧ｬ繝ｯ", "繝�ヤ繝弱Ρ繝繝�", "繝�ヤ繝弱ヤ繝�Α", "繝�ヤ繝弱き繧､繝�", "繝�ヤ繝弱さ繧ｦ繝�", "繝�ヤ繝弱ラ繧ｯ繧ｬ", "繝�ヤ繝弱う繝舌Λ", "繧ｻ繝薙お", "繧ｻ繧ｴ繝ｼ繝ｫ", "繧ｻ繧ｰ繝ｬ繧､繝�", "繧ｳ繝ｬ繧ｯ繝ｬ繝ｼ", "繧ｵ繝ｼ繝輔ざ繝ｼ", "繝√が繝ｳ繧ｸ繧ｧ繝ｳ", "繝代が繧ｸ繧｢繝ｳ", "繝�ぅ繝ｳ繝ｫ繝ｼ", "繧､繝ｼ繝ｦ繧､", "繝医ラ繝ｭ繧ｯ繝�く", "繝�ヤ繝弱ヶ繧ｸ繝ｳ", "繧ｳ繝ｩ繧､繝峨Φ", "繝溘Λ繧､繝峨Φ", "繧ｦ繝阪Ν繝溘リ繝｢", "繝�ヤ繝弱う繧ｵ繝�", "繧ｫ繝溘ャ繝√Η", "繝√Ε繝�せ", "繝､繝舌た繝√Ε", "繧､繧､繝阪う繝�", "繝槭す繝槭す繝ｩ", "繧ｭ繝√く繧ｮ繧ｹ", "繧ｪ繝ｼ繧ｬ繝昴Φ"],
        pokeType: ["繝弱�繝槭Ν", "縺九￥縺ｨ縺�", "縺ｲ縺薙≧", "縺ｩ縺�", "縺倥ａ繧�", "縺�ｏ", "繧縺�", "繧ｴ繝ｼ繧ｹ繝�", "縺ｯ縺後�", "縺ｻ縺ｮ縺�", "縺ｿ縺�", "縺上＆", "縺ｧ繧薙″", "繧ｨ繧ｹ繝代�", "縺薙♀繧�", "繝峨Λ繧ｴ繝ｳ", "縺ゅ￥", "繝輔ぉ繧｢繝ｪ繝ｼ"],
        waza: {
          1: "縺ｯ縺溘￥",
          2: "縺九ｉ縺ｦ繝√Ι繝��",
          3: "縺翫≧縺ｵ縺上ン繝ｳ繧ｿ",
          4: "繧後ｓ縺槭￥繝代Φ繝�",
          5: "繝｡繧ｬ繝医Φ繝代Φ繝�",
          6: "繝阪さ縺ｫ縺薙�繧�",
          7: "縺ｻ縺ｮ縺翫�繝代Φ繝�",
          8: "繧後＞縺ｨ縺�ヱ繝ｳ繝�",
          9: "縺九∩縺ｪ繧翫ヱ繝ｳ繝�",
          10: "縺ｲ縺｣縺九￥",
          11: "縺ｯ縺輔�",
          12: "繝上し繝溘ぐ繝ｭ繝√Φ",
          13: "縺九∪縺�◆縺｡",
          14: "縺､繧九℃縺ｮ縺ｾ縺�",
          15: "縺�≠縺�℃繧�",
          16: "縺九●縺翫％縺�",
          17: "縺､縺ｰ縺輔〒縺�▽",
          18: "縺ｵ縺阪→縺ｰ縺�",
          19: "縺昴ｉ繧偵→縺ｶ",
          20: "縺励ａ縺､縺代ｋ",
          21: "縺溘◆縺阪▽縺代ｋ",
          22: "縺､繧九�繝�繝�",
          23: "縺ｵ縺ｿ縺､縺�",
          24: "縺ｫ縺ｩ縺偵ｊ",
          25: "繝｡繧ｬ繝医Φ繧ｭ繝�け",
          26: "縺ｨ縺ｳ縺偵ｊ",
          27: "縺ｾ繧上＠縺偵ｊ",
          28: "縺吶↑縺九￠",
          29: "縺壹▽縺�",
          30: "縺､縺ｮ縺ｧ縺､縺�",
          31: "縺ｿ縺�繧後▼縺�",
          32: "縺､縺ｮ繝峨Μ繝ｫ",
          33: "縺溘＞縺ゅ◆繧�",
          34: "縺ｮ縺励°縺九ｊ",
          35: "縺ｾ縺阪▽縺�",
          36: "縺ｨ縺｣縺励ｓ",
          37: "縺ゅ�繧後ｋ",
          38: "縺吶※縺ｿ繧ｿ繝�け繝ｫ",
          39: "縺励▲縺ｽ繧偵�繧�",
          40: "縺ｩ縺上�繧�",
          41: "繝繝悶Ν繝九�繝峨Ν",
          42: "繝溘し繧､繝ｫ縺ｰ繧�",
          43: "縺ｫ繧峨∩縺､縺代ｋ",
          44: "縺九∩縺､縺�",
          45: "縺ｪ縺阪＃縺�",
          46: "縺ｻ縺医ｋ",
          47: "縺�◆縺�",
          48: "縺｡繧�≧縺翫ｓ縺ｱ",
          49: "繧ｽ繝九ャ繧ｯ繝悶�繝�",
          50: "縺九↑縺励�繧�",
          51: "繧医≧縺九＞縺医″",
          52: "縺ｲ縺ｮ縺�",
          53: "縺九∴繧薙⊇縺�＠繧�",
          54: "縺励ｍ縺�″繧�",
          55: "縺ｿ縺壹〒縺｣縺ｽ縺�",
          56: "繝上う繝峨Ο繝昴Φ繝�",
          57: "縺ｪ縺ｿ縺ｮ繧�",
          58: "繧後＞縺ｨ縺�ン繝ｼ繝�",
          59: "縺ｵ縺ｶ縺�",
          60: "繧ｵ繧､繧ｱ縺薙≧縺帙ｓ",
          61: "繝舌ヶ繝ｫ縺薙≧縺帙ｓ",
          62: "繧ｪ繝ｼ繝ｭ繝ｩ繝薙�繝�",
          63: "縺ｯ縺九＞縺薙≧縺帙ｓ",
          64: "縺､縺､縺�",
          65: "繝峨Μ繝ｫ縺上■縺ｰ縺�",
          66: "縺倥＃縺上＄繧九∪",
          67: "縺代◆縺舌ｊ",
          68: "繧ｫ繧ｦ繝ｳ繧ｿ繝ｼ",
          69: "縺｡縺阪ｅ縺�↑縺�",
          70: "縺九＞繧翫″",
          71: "縺吶＞縺ｨ繧�",
          72: "繝｡繧ｬ繝峨Ξ繧､繝ｳ",
          73: "繧�←繧翫℃縺ｮ繧ｿ繝�",
          74: "縺帙＞縺｡繧�≧",
          75: "縺ｯ縺｣縺ｱ繧ｫ繝�ち繝ｼ",
          76: "繧ｽ繝ｼ繝ｩ繝ｼ繝薙�繝�",
          77: "縺ｩ縺上�縺薙↑",
          78: "縺励�繧後＃縺ｪ",
          79: "縺ｭ繧繧翫＃縺ｪ",
          80: "縺ｯ縺ｪ縺ｳ繧峨�縺ｾ縺�",
          81: "縺�→繧偵�縺�",
          82: "繧翫ｅ縺��縺�°繧�",
          83: "縺ｻ縺ｮ縺翫�縺�★",
          84: "縺ｧ繧薙″繧ｷ繝ｧ繝�け",
          85: "�托ｼ舌∪繧薙�繝ｫ繝�",
          86: "縺ｧ繧薙§縺ｯ",
          87: "縺九∩縺ｪ繧�",
          88: "縺�ｏ縺翫→縺�",
          89: "縺倥＠繧�",
          90: "縺倥ｏ繧�",
          91: "縺ゅ↑繧偵⊇繧�",
          92: "縺ｩ縺上←縺�",
          93: "縺ｭ繧薙ｊ縺�",
          94: "繧ｵ繧､繧ｳ繧ｭ繝阪す繧ｹ",
          95: "縺輔＞縺ｿ繧薙§繧�▽",
          96: "繝ｨ繧ｬ縺ｮ繝昴�繧ｺ",
          97: "縺薙≧縺昴￥縺�←縺�",
          98: "縺ｧ繧薙％縺�○縺｣縺�",
          99: "縺�°繧�",
          100: "繝�Ξ繝昴�繝�",
          101: "繝翫う繝医�繝�ラ",
          102: "繧ゅ�縺ｾ縺ｭ",
          103: "縺�ｄ縺ｪ縺翫→",
          104: "縺九￡縺ｶ繧薙＠繧�",
          105: "縺倥％縺輔＞縺帙＞",
          106: "縺九◆縺上↑繧�",
          107: "縺｡縺�＆縺上↑繧�",
          108: "縺医ｓ縺ｾ縺�",
          109: "縺ゅｄ縺励＞縺ｲ縺九ｊ",
          110: "縺九ｉ縺ｫ縺薙ｂ繧�",
          111: "縺ｾ繧九￥縺ｪ繧�",
          112: "繝舌Μ繧｢繝ｼ",
          113: "縺ｲ縺九ｊ縺ｮ縺九∋",
          114: "縺上ｍ縺�″繧�",
          115: "繝ｪ繝輔Ξ繧ｯ繧ｿ繝ｼ",
          116: "縺阪≠縺�□繧�",
          117: "縺後∪繧�",
          118: "繧��繧偵�繧�",
          119: "繧ｪ繧ｦ繝�縺後∴縺�",
          120: "縺倥�縺�",
          121: "繧ｿ繝槭ざ縺ｰ縺上□繧�",
          122: "縺励◆縺ｧ縺ｪ繧√ｋ",
          123: "繧ｹ繝｢繝�げ",
          124: "繝倥ラ繝ｭ縺薙≧縺偵″",
          125: "繝帙ロ縺薙ｓ縺ｼ縺�",
          126: "縺�縺�ｂ繧薙§",
          127: "縺溘″縺ｮ縺ｼ繧�",
          128: "縺九ｉ縺ｧ縺ｯ縺輔�",
          129: "繧ｹ繝斐�繝峨せ繧ｿ繝ｼ",
          130: "繝ｭ繧ｱ繝�ヨ縺壹▽縺�",
          131: "縺ｨ縺偵く繝｣繝弱Φ",
          132: "縺九ｉ縺ｿ縺､縺�",
          133: "繝峨ｏ縺吶ｌ",
          134: "繧ｹ繝励�繝ｳ縺ｾ縺�",
          135: "繧ｿ繝槭ざ縺�∩",
          136: "縺ｨ縺ｳ縺ｲ縺悶￡繧�",
          137: "縺ｸ縺ｳ縺ｫ繧峨∩",
          138: "繧�ａ縺上＞",
          139: "縺ｩ縺上ぎ繧ｹ",
          140: "縺溘∪縺ｪ縺�",
          141: "縺阪ｅ縺�￠縺､",
          142: "縺ゅ￥縺ｾ縺ｮ繧ｭ繝�せ",
          143: "繧ｴ繝�ラ繝舌�繝�",
          144: "縺ｸ繧薙＠繧�",
          145: "縺ゅｏ",
          146: "繝斐Κ繝斐Κ繝代Φ繝�",
          147: "繧ｭ繝弱さ縺ｮ縺ｻ縺�＠",
          148: "繝輔Λ繝�す繝･",
          149: "繧ｵ繧､繧ｳ繧ｦ繧ｧ繝ｼ繝�",
          150: "縺ｯ縺ｭ繧�",
          151: "縺ｨ縺代ｋ",
          152: "繧ｯ繝ｩ繝悶ワ繝ｳ繝槭�",
          153: "縺�縺��縺上�縺､",
          154: "縺ｿ縺�繧後�縺｣縺九″",
          155: "繝帙ロ繝悶�繝｡繝ｩ繝ｳ",
          156: "縺ｭ繧繧�",
          157: "縺�ｏ縺ｪ縺�繧�",
          158: "縺ｲ縺｣縺輔▽縺ｾ縺医�",
          159: "縺九￥縺ｰ繧�",
          160: "繝�け繧ｹ繝√Ε繝ｼ",
          161: "繝医Λ繧､繧｢繧ｿ繝�け",
          162: "縺�°繧翫�縺ｾ縺医�",
          163: "縺阪ｊ縺輔￥",
          164: "縺ｿ縺後ｏ繧�",
          165: "繧上ｋ縺ゅ′縺�",
          166: "繧ｹ繧ｱ繝�メ",
          167: "繝医Μ繝励Ν繧ｭ繝�け",
          168: "縺ｩ繧阪⊂縺�",
          169: "繧ｯ繝｢縺ｮ縺�",
          170: "縺薙％繧阪�繧�",
          171: "縺ゅ￥繧",
          172: "縺九∴繧薙＄繧九∪",
          173: "縺��縺�",
          174: "縺ｮ繧阪＞",
          175: "縺倥◆縺ｰ縺�",
          176: "繝�け繧ｹ繝√Ε繝ｼ��",
          177: "繧ｨ繧｢繝ｭ繝悶Λ繧ｹ繝�",
          178: "繧上◆縺ｻ縺�＠",
          179: "縺阪＠縺九＞縺帙＞",
          180: "縺�ｉ縺ｿ",
          181: "縺薙↑繧�″",
          182: "縺ｾ繧ゅｋ",
          183: "繝槭ャ繝上ヱ繝ｳ繝�",
          184: "縺薙ｏ縺�°縺�",
          185: "縺�縺ｾ縺励≧縺｡",
          186: "縺ｦ繧薙＠縺ｮ繧ｭ繝�せ",
          187: "縺ｯ繧峨□縺�％",
          188: "繝倥ラ繝ｭ縺ｰ縺上□繧�",
          189: "縺ｩ繧阪°縺�",
          190: "繧ｪ繧ｯ繧ｿ繝ｳ縺ｻ縺�",
          191: "縺ｾ縺阪�縺�",
          192: "縺ｧ繧薙§縺ｻ縺�",
          193: "縺ｿ繧��繧�",
          194: "縺ｿ縺｡縺･繧�",
          195: "縺ｻ繧阪�縺ｮ縺�◆",
          196: "縺薙＃縺医ｋ縺九●",
          197: "縺ｿ縺阪ｊ",
          198: "繝懊�繝ｳ繝ｩ繝�す繝･",
          199: "繝ｭ繝�け繧ｪ繝ｳ",
          200: "縺偵″繧翫ｓ",
          201: "縺吶↑縺ゅｉ縺�",
          202: "繧ｮ繧ｬ繝峨Ξ繧､繝ｳ",
          203: "縺薙ｉ縺医ｋ",
          204: "縺ゅ∪縺医ｋ",
          205: "縺薙ｍ縺後ｋ",
          206: "縺ｿ縺ｭ縺�■",
          207: "縺��繧�",
          208: "繝溘Ν繧ｯ縺ｮ縺ｿ",
          209: "繧ｹ繝代�繧ｯ",
          210: "繧後ｓ縺槭￥縺弱ｊ",
          211: "縺ｯ縺後�縺ｮ縺､縺ｰ縺�",
          212: "縺上ｍ縺�∪縺ｪ縺悶＠",
          213: "繝｡繝ｭ繝｡繝ｭ",
          214: "縺ｭ縺斐→",
          215: "縺�ｄ縺励�縺吶★",
          216: "縺翫ｓ縺後∴縺�",
          217: "繝励Ξ繧ｼ繝ｳ繝�",
          218: "繧�▽縺ゅ◆繧�",
          219: "縺励ｓ縺ｴ縺ｮ縺ｾ繧ゅｊ",
          220: "縺�◆縺ｿ繧上￠",
          221: "縺帙＞縺ｪ繧九⊇縺ｮ縺�",
          222: "繝槭げ繝九メ繝･繝ｼ繝�",
          223: "縺ｰ縺上ｌ縺､繝代Φ繝�",
          224: "繝｡繧ｬ繝帙�繝ｳ",
          225: "繧翫ｅ縺��縺��縺�",
          226: "繝舌ヨ繝ｳ繧ｿ繝�メ",
          227: "繧｢繝ｳ繧ｳ繝ｼ繝ｫ",
          228: "縺翫＞縺�■",
          229: "縺薙≧縺昴￥繧ｹ繝斐Φ",
          230: "縺ゅ∪縺�°縺翫ｊ",
          231: "繧｢繧､繧｢繝ｳ繝��繝ｫ",
          232: "繝｡繧ｿ繝ｫ繧ｯ繝ｭ繝ｼ",
          233: "縺ゅ※縺ｿ縺ｪ縺�",
          234: "縺ゅ＆縺ｮ縺ｲ縺悶＠",
          235: "縺薙≧縺斐≧縺帙＞",
          236: "縺､縺阪�縺ｲ縺九ｊ",
          237: "繧√＊繧√ｋ繝代Ρ繝ｼ",
          238: "繧ｯ繝ｭ繧ｹ繝√Ι繝��",
          239: "縺溘▽縺ｾ縺�",
          240: "縺ゅ∪縺斐＞",
          241: "縺ｫ縺ｻ繧薙�繧�",
          242: "縺九∩縺上□縺�",
          243: "繝溘Λ繝ｼ繧ｳ繝ｼ繝�",
          244: "縺倥％縺ゅｓ縺�",
          245: "縺励ｓ縺昴￥",
          246: "縺偵ｓ縺励�縺｡縺九ｉ",
          247: "繧ｷ繝｣繝峨�繝懊�繝ｫ",
          248: "縺ｿ繧峨＞繧医■",
          249: "縺�ｏ縺上□縺�",
          250: "縺�★縺励♀",
          251: "縺ｵ縺上ｍ縺�縺溘″",
          252: "縺ｭ縺薙□縺ｾ縺�",
          253: "縺輔ｏ縺�",
          254: "縺溘￥繧上∴繧�",
          255: "縺ｯ縺阪□縺�",
          256: "縺ｮ縺ｿ縺薙�",
          257: "縺ｭ縺｣縺ｷ縺�",
          258: "縺ゅｉ繧�",
          259: "縺�■繧�ｂ繧�",
          260: "縺翫□縺ｦ繧�",
          261: "縺翫↓縺ｳ",
          262: "縺翫″縺ｿ繧�￡",
          263: "縺九ｉ縺偵ｓ縺�",
          264: "縺阪≠縺�ヱ繝ｳ繝�",
          265: "縺阪▽縺�",
          266: "縺薙�繧��縺ｨ縺ｾ繧�",
          267: "縺励●繧薙�縺｡縺九ｉ",
          268: "縺倥ｅ縺�〒繧�",
          269: "縺｡繧�≧縺ｯ縺､",
          270: "縺ｦ縺�縺吶￠",
          271: "繝医Μ繝�け",
          272: "縺ｪ繧翫″繧�",
          273: "縺ｭ縺後＞縺斐→",
          274: "縺ｭ縺薙�縺ｦ",
          275: "縺ｭ繧偵�繧�",
          276: "縺ｰ縺九△縺九ｉ",
          277: "繝槭ず繝�け繧ｳ繝ｼ繝�",
          278: "繝ｪ繧ｵ繧､繧ｯ繝ｫ",
          279: "繝ｪ繝吶Φ繧ｸ",
          280: "縺九ｏ繧峨ｏ繧�",
          281: "縺ゅ￥縺ｳ",
          282: "縺ｯ縺溘″縺翫→縺�",
          283: "縺後�縺励ｃ繧�",
          284: "縺ｵ繧薙°",
          285: "繧ｹ繧ｭ繝ｫ繧ｹ繝ｯ繝��",
          286: "縺ｵ縺�＞繧�",
          287: "繝ｪ繝輔Ξ繝�す繝･",
          288: "縺翫ｓ縺ｭ繧�",
          289: "繧医％縺ｩ繧�",
          290: "縺ｲ縺ｿ縺､縺ｮ縺｡縺九ｉ",
          291: "繝繧､繝薙Φ繧ｰ",
          292: "縺､縺｣縺ｱ繧�",
          293: "縺ｻ縺斐＠繧�￥",
          294: "縺ｻ縺溘ｋ縺ｳ",
          295: "繝ｩ繧ｹ繧ｿ繝ｼ繝代�繧ｸ",
          296: "繝溘せ繝医�繝ｼ繝ｫ",
          297: "繝輔ぉ繧ｶ繝ｼ繝繝ｳ繧ｹ",
          298: "繝輔Λ繝輔Λ繝繝ｳ繧ｹ",
          299: "繝悶Ξ繧､繧ｺ繧ｭ繝�け",
          300: "縺ｩ繧阪≠縺昴�",
          301: "繧｢繧､繧ｹ繝懊�繝ｫ",
          302: "繝九�繝峨Ν繧｢繝ｼ繝�",
          303: "縺ｪ縺ｾ縺代ｋ",
          304: "繝上う繝代�繝懊う繧ｹ",
          305: "縺ｩ縺上←縺上�繧ｭ繝�",
          306: "繝悶Ξ繧､繧ｯ繧ｯ繝ｭ繝ｼ",
          307: "繝悶Λ繧ｹ繝医ヰ繝ｼ繝ｳ",
          308: "繝上う繝峨Ο繧ｫ繝弱Φ",
          309: "繧ｳ繝｡繝�ヨ繝代Φ繝�",
          310: "縺翫←繧阪°縺�",
          311: "繧ｦ繧ｧ繧ｶ繝ｼ繝懊�繝ｫ",
          312: "繧｢繝ｭ繝槭そ繝ｩ繝斐�",
          313: "縺�◎縺ｪ縺�",
          314: "繧ｨ繧｢繧ｫ繝�ち繝ｼ",
          315: "繧ｪ繝ｼ繝舌�繝偵�繝�",
          316: "縺九℃繧上￠繧�",
          317: "縺後ｓ縺帙″縺ｵ縺�§",
          318: "縺弱ｓ縺�ｍ縺ｮ縺九●",
          319: "縺阪ｓ縺槭￥縺翫ｓ",
          320: "縺上＆縺ｶ縺�",
          321: "縺上☆縺舌ｋ",
          322: "繧ｳ繧ｹ繝｢繝代Ρ繝ｼ",
          323: "縺励♀縺ｵ縺�",
          324: "繧ｷ繧ｰ繝翫Ν繝薙�繝�",
          325: "繧ｷ繝｣繝峨�繝代Φ繝�",
          326: "縺倥ｓ縺､縺�ｊ縺�",
          327: "繧ｹ繧ｫ繧､繧｢繝�ヱ繝ｼ",
          328: "縺吶↑縺倥＃縺�",
          329: "縺懊▲縺溘＞繧後＞縺ｩ",
          330: "縺�縺上ｊ繧�≧",
          331: "繧ｿ繝阪�繧ｷ繝ｳ繧ｬ繝ｳ",
          332: "縺､縺ｰ繧√′縺医＠",
          333: "縺､繧峨ｉ縺ｰ繧�",
          334: "縺ｦ縺｣縺ｺ縺�",
          335: "縺ｨ縺翫○繧薙⊂縺�",
          336: "縺ｨ縺翫⊂縺�",
          337: "繝峨Λ繧ｴ繝ｳ繧ｯ繝ｭ繝ｼ",
          338: "繝上�繝峨�繝ｩ繝ｳ繝�",
          339: "繝薙Ν繝峨い繝��",
          340: "縺ｨ縺ｳ縺ｯ縺ｭ繧�",
          341: "繝槭ャ繝峨す繝ｧ繝�ヨ",
          342: "繝昴う繧ｺ繝ｳ繝��繝ｫ",
          343: "縺ｻ縺励′繧�",
          344: "繝懊Ν繝�ャ繧ｫ繝ｼ",
          345: "繝槭ず繧ｫ繝ｫ繝ｪ繝ｼ繝�",
          346: "縺ｿ縺壹≠縺昴�",
          347: "繧√＞縺昴≧",
          348: "繝ｪ繝ｼ繝輔ヶ繝ｬ繝ｼ繝�",
          349: "繧翫ｅ縺��縺ｾ縺�",
          350: "繝ｭ繝�け繝悶Λ繧ｹ繝�",
          351: "縺ｧ繧薙￡縺阪�",
          352: "縺ｿ縺壹�縺ｯ縺ｩ縺�",
          353: "縺ｯ繧√▽縺ｮ縺ｭ縺後＞",
          354: "繧ｵ繧､繧ｳ繝悶�繧ｹ繝�",
          355: "縺ｯ縺ｭ繧�☆繧�",
          356: "縺倥ｅ縺�ｊ繧�￥",
          357: "繝溘Λ繧ｯ繝ｫ繧｢繧､",
          358: "繧√＊縺ｾ縺励ン繝ｳ繧ｿ",
          359: "繧｢繝ｼ繝�繝上Φ繝槭�",
          360: "繧ｸ繝｣繧､繝ｭ繝懊�繝ｫ",
          361: "縺�ｄ縺励�縺ｭ縺後＞",
          362: "縺励♀縺ｿ縺�",
          363: "縺励●繧薙�繧√＄縺ｿ",
          364: "繝輔ぉ繧､繝ｳ繝�",
          365: "縺､縺��繧",
          366: "縺翫＞縺九●",
          367: "縺､縺ｼ繧偵▽縺�",
          368: "繝｡繧ｿ繝ｫ繝舌�繧ｹ繝�",
          369: "縺ｨ繧薙⊂縺後∴繧�",
          370: "繧､繝ｳ繝輔ぃ繧､繝�",
          371: "縺励▲縺ｺ縺後∴縺�",
          372: "繝繝｡縺翫＠",
          373: "縺輔＠縺翫＆縺�",
          374: "縺ｪ縺偵▽縺代ｋ",
          375: "繧ｵ繧､繧ｳ繧ｷ繝輔ヨ",
          376: "縺阪ｊ縺ｵ縺�",
          377: "縺九＞縺ｵ縺上�縺�§",
          378: "縺励⊂繧翫→繧�",
          379: "繝代Ρ繝ｼ繝医Μ繝�け",
          380: "縺�∴縺�",
          381: "縺翫∪縺倥↑縺�",
          382: "縺輔″縺ｩ繧�",
          383: "縺ｾ縺ｭ縺｣縺�",
          384: "繝代Ρ繝ｼ繧ｹ繝ｯ繝��",
          385: "繧ｬ繝ｼ繝峨せ繝ｯ繝��",
          386: "縺翫＠縺翫″",
          387: "縺ｨ縺｣縺ｦ縺翫″",
          388: "縺ｪ繧�∩縺ｮ繧ｿ繝�",
          389: "縺ｵ縺�≧縺｡",
          390: "縺ｩ縺上�縺�",
          391: "繝上�繝医せ繝ｯ繝��",
          392: "繧｢繧ｯ繧｢繝ｪ繝ｳ繧ｰ",
          393: "縺ｧ繧薙§縺ｵ繧�≧",
          394: "繝輔Ξ繧｢繝峨Λ繧､繝�",
          395: "縺ｯ縺｣縺代＞",
          396: "縺ｯ縺ｩ縺�□繧�",
          397: "繝ｭ繝�け繧ｫ繝�ヨ",
          398: "縺ｩ縺上▼縺�",
          399: "縺ゅ￥縺ｮ縺ｯ縺ｩ縺�",
          400: "縺､縺倥℃繧�",
          401: "繧｢繧ｯ繧｢繝��繝ｫ",
          402: "繧ｿ繝阪�縺上□繧�",
          403: "繧ｨ繧｢繧ｹ繝ｩ繝�す繝･",
          404: "繧ｷ繧ｶ繝ｼ繧ｯ繝ｭ繧ｹ",
          405: "繧縺励�縺輔＊繧√″",
          406: "繧翫ｅ縺��縺ｯ縺ｩ縺�",
          407: "繝峨Λ繧ｴ繝ｳ繝繧､繝�",
          408: "繝代Ρ繝ｼ繧ｸ繧ｧ繝�",
          409: "繝峨Ξ繧､繝ｳ繝代Φ繝�",
          410: "縺励ｓ縺上≧縺ｯ",
          411: "縺阪≠縺�□縺ｾ",
          412: "繧ｨ繝翫ず繝ｼ繝懊�繝ｫ",
          413: "繝悶Ξ繧､繝悶ヰ繝ｼ繝�",
          414: "縺�縺�■縺ｮ縺｡縺九ｉ",
          415: "縺吶ｊ縺九∴",
          416: "繧ｮ繧ｬ繧､繝ｳ繝代け繝�",
          417: "繧上ｋ縺�縺上∩",
          418: "繝舌Ξ繝�ヨ繝代Φ繝�",
          419: "繧�″縺ｪ縺�繧�",
          420: "縺薙♀繧翫�縺､縺ｶ縺ｦ",
          421: "繧ｷ繝｣繝峨�繧ｯ繝ｭ繝ｼ",
          422: "縺九∩縺ｪ繧翫�繧ｭ繝�",
          423: "縺薙♀繧翫�繧ｭ繝�",
          424: "縺ｻ縺ｮ縺翫�繧ｭ繝�",
          425: "縺九￡縺�■",
          426: "縺ｩ繧阪�縺上□繧�",
          427: "繧ｵ繧､繧ｳ繧ｫ繝�ち繝ｼ",
          428: "縺励�繧薙�縺壹▽縺�",
          429: "繝溘Λ繝ｼ繧ｷ繝ｧ繝�ヨ",
          430: "繝ｩ繧ｹ繧ｿ繝ｼ繧ｫ繝弱Φ",
          431: "繝ｭ繝�け繧ｯ繝ｩ繧､繝�",
          432: "縺阪ｊ縺ｰ繧峨＞",
          433: "繝医Μ繝�け繝ｫ繝ｼ繝�",
          434: "繧翫ｅ縺�○縺�＄繧�",
          435: "縺ｻ縺�〒繧�",
          436: "縺ｵ繧薙∴繧�",
          437: "繝ｪ繝ｼ繝輔せ繝医�繝�",
          438: "繝代Ρ繝ｼ繧ｦ繧｣繝��",
          439: "縺後ｓ縺帙″縺ｻ縺�",
          440: "繧ｯ繝ｭ繧ｹ繝昴う繧ｺ繝ｳ",
          441: "繝繧ｹ繝医す繝･繝ｼ繝�",
          442: "繧｢繧､繧｢繝ｳ繝倥ャ繝�",
          443: "繝槭げ繝阪ャ繝医�繝�",
          444: "繧ｹ繝医�繝ｳ繧ｨ繝�ず",
          445: "繧�≧繧上￥",
          446: "繧ｹ繝�Ν繧ｹ繝ｭ繝�け",
          447: "縺上＆繧縺吶�",
          448: "縺翫＠繧�∋繧�",
          449: "縺輔�縺阪�縺､縺ｶ縺ｦ",
          450: "繧縺励￥縺�",
          451: "繝√Ε繝ｼ繧ｸ繝薙�繝�",
          452: "繧ｦ繝�ラ繝上Φ繝槭�",
          453: "繧｢繧ｯ繧｢繧ｸ繧ｧ繝�ヨ",
          454: "縺薙≧縺偵″縺励ｌ縺�",
          455: "縺ｼ縺�℃繧�＠繧後＞",
          456: "縺九＞縺ｵ縺上＠繧後＞",
          457: "繧ゅｍ縺ｯ縺ｮ縺壹▽縺�",
          458: "繝繝悶Ν繧｢繧ｿ繝�け",
          459: "縺ｨ縺阪�縺ｻ縺�％縺�",
          460: "縺ゅ￥縺�○縺､縺�繧�",
          461: "縺ｿ縺九▼縺阪�縺ｾ縺�",
          462: "縺ｫ縺弱ｊ縺､縺ｶ縺�",
          463: "繝槭げ繝槭せ繝医�繝�",
          464: "繝繝ｼ繧ｯ繝帙�繝ｫ",
          465: "繧ｷ繝ｼ繝峨ヵ繝ｬ繧｢",
          466: "縺ゅｄ縺励＞縺九●",
          467: "繧ｷ繝｣繝峨�繝繧､繝�",
          468: "縺､繧√→縺�",
          469: "繝ｯ繧､繝峨ぎ繝ｼ繝�",
          470: "繧ｬ繝ｼ繝峨す繧ｧ繧｢",
          471: "繝代Ρ繝ｼ繧ｷ繧ｧ繧｢",
          472: "繝ｯ繝ｳ繝繝ｼ繝ｫ繝ｼ繝�",
          473: "繧ｵ繧､繧ｳ繧ｷ繝ｧ繝�け",
          474: "繝吶ヮ繝�繧ｷ繝ｧ繝�け",
          475: "繝懊ョ繧｣繝代�繧ｸ",
          476: "縺�°繧翫�縺薙↑",
          477: "繝�Ξ繧ｭ繝阪す繧ｹ",
          478: "繝槭ず繝�け繝ｫ繝ｼ繝�",
          479: "縺�■縺翫→縺�",
          480: "繧�∪縺ゅｉ縺�",
          481: "縺ｯ縺倥￠繧九⊇縺ｮ縺�",
          482: "繝倥ラ繝ｭ繧ｦ繧ｧ繝ｼ繝�",
          483: "縺｡繧�≧縺ｮ縺ｾ縺�",
          484: "繝倥ン繝ｼ繝懊Φ繝舌�",
          485: "繧ｷ繝ｳ繧ｯ繝ｭ繝弱う繧ｺ",
          486: "繧ｨ繝ｬ繧ｭ繝懊�繝ｫ",
          487: "縺ｿ縺壹�縺溘＠",
          488: "繝九ヨ繝ｭ繝√Ε繝ｼ繧ｸ",
          489: "縺ｨ縺舌ｍ繧偵∪縺�",
          490: "繝ｭ繝ｼ繧ｭ繝�け",
          491: "繧｢繧ｷ繝�ラ繝懊Β",
          492: "繧､繧ｫ繧ｵ繝�",
          493: "繧ｷ繝ｳ繝励Ν繝薙�繝�",
          494: "縺ｪ縺九∪縺･縺上ｊ",
          495: "縺翫＆縺阪↓縺ｩ縺�◇",
          496: "繧翫ｓ縺励ｇ縺�",
          497: "繧ｨ繧ｳ繝ｼ繝懊う繧ｹ",
          498: "縺ｪ縺励￥縺壹＠",
          499: "繧ｯ繝ｪ繧｢繧ｹ繝｢繝�げ",
          500: "繧｢繧ｷ繧ｹ繝医ヱ繝ｯ繝ｼ",
          501: "繝輔ぃ繧ｹ繝医ぎ繝ｼ繝�",
          502: "繧ｵ繧､繝峨メ繧ｧ繝ｳ繧ｸ",
          503: "縺ｭ縺｣縺ｨ縺�",
          504: "縺九ｉ繧偵ｄ縺ｶ繧�",
          505: "縺�ｄ縺励�縺ｯ縺ｩ縺�",
          506: "縺溘◆繧翫ａ",
          507: "繝輔Μ繝ｼ繝輔か繝ｼ繝ｫ",
          508: "繧ｮ繧｢繝√ぉ繝ｳ繧ｸ",
          509: "縺ｨ繧ゅ∴縺ｪ縺�",
          510: "繧�″縺､縺上☆",
          511: "縺輔″縺翫￥繧�",
          512: "繧｢繧ｯ繝ｭ繝舌ャ繝�",
          513: "繝溘Λ繝ｼ繧ｿ繧､繝�",
          514: "縺九◆縺阪≧縺｡",
          515: "縺��縺｡縺後￠",
          516: "繧ｮ繝輔ヨ繝代せ",
          517: "繧後ｓ縺斐￥",
          518: "縺ｿ縺壹�縺｡縺九＞",
          519: "縺ｻ縺ｮ縺翫�縺｡縺九＞",
          520: "縺上＆縺ｮ縺｡縺九＞",
          521: "繝懊Ν繝医メ繧ｧ繝ｳ繧ｸ",
          522: "繧縺励�縺ｦ縺�％縺�",
          523: "縺倥↑繧峨＠",
          524: "縺薙♀繧翫�縺��縺�",
          525: "繝峨Λ繧ｴ繝ｳ繝��繝ｫ",
          526: "縺ｵ繧九＞縺溘※繧�",
          527: "繧ｨ繝ｬ繧ｭ繝阪ャ繝�",
          528: "繝ｯ繧､繝ｫ繝峨�繝ｫ繝�",
          529: "繝峨Μ繝ｫ繝ｩ繧､繝翫�",
          530: "繝繝悶Ν繝√Ι繝��",
          531: "繝上�繝医せ繧ｿ繝ｳ繝�",
          532: "繧ｦ繝�ラ繝帙�繝ｳ",
          533: "縺帙＞縺ｪ繧九▽繧九℃",
          534: "繧ｷ繧ｧ繝ｫ繝悶Ξ繝ｼ繝�",
          535: "繝偵�繝医せ繧ｿ繝ｳ繝�",
          536: "繧ｰ繝ｩ繧ｹ繝溘く繧ｵ繝ｼ",
          537: "繝上�繝峨Ο繝ｼ繝ｩ繝ｼ",
          538: "繧ｳ繝�ヨ繝ｳ繧ｬ繝ｼ繝�",
          539: "繝翫う繝医ヰ繝ｼ繧ｹ繝�",
          540: "繧ｵ繧､繧ｳ繝悶Ξ繧､繧ｯ",
          541: "繧ｹ繧､繝ｼ繝励ン繝ｳ繧ｿ",
          542: "縺ｼ縺��縺�",
          543: "繧｢繝輔Ο繝悶Ξ繧､繧ｯ",
          544: "繧ｮ繧｢繧ｽ繝ｼ繧ｵ繝ｼ",
          545: "縺九∴繧薙□繧�",
          546: "繝�け繝弱ヰ繧ｹ繧ｿ繝ｼ",
          547: "縺�↓縺励∴縺ｮ縺�◆",
          548: "縺励ｓ縺ｴ縺ｮ縺､繧九℃",
          549: "縺薙＃縺医ｋ縺帙°縺�",
          550: "繧峨＞縺偵″",
          551: "縺ゅ♀縺�⊇縺ｮ縺�",
          552: "縺ｻ縺ｮ縺翫�縺ｾ縺�",
          553: "繝輔Μ繝ｼ繧ｺ繝懊Ν繝�",
          554: "繧ｳ繝ｼ繝ｫ繝峨ヵ繝ｬ繧｢",
          555: "繝舌�繧ｯ繧｢繧ｦ繝�",
          556: "縺､繧峨ｉ縺翫→縺�",
          557: "�ｶ繧ｸ繧ｧ繝阪Ξ繝ｼ繝�",
          558: "繧ｯ繝ｭ繧ｹ繝輔Ξ繧､繝�",
          559: "繧ｯ繝ｭ繧ｹ繧ｵ繝ｳ繝繝ｼ",
          560: "繝輔Λ繧､繝ｳ繧ｰ繝励Ξ繧ｹ",
          561: "縺溘◆縺ｿ縺後∴縺�",
          562: "繧ｲ繝��",
          563: "縺溘′繧�☆",
          564: "縺ｭ縺ｰ縺ｭ縺ｰ繝阪ャ繝�",
          565: "縺ｨ縺ｩ繧√�繧�",
          566: "繧ｴ繝ｼ繧ｹ繝医ム繧､繝�",
          567: "繝上Ο繧ｦ繧｣繝ｳ",
          568: "縺翫◆縺代�",
          569: "繝励Λ繧ｺ繝槭す繝｣繝ｯ繝ｼ",
          570: "繝代Λ繝懊Λ繝√Ε繝ｼ繧ｸ",
          571: "繧ゅｊ縺ｮ縺ｮ繧阪＞",
          572: "縺ｯ縺ｪ縺ｵ縺ｶ縺�",
          573: "繝輔Μ繝ｼ繧ｺ繝峨Λ繧､",
          574: "繝√Ε繝ｼ繝�繝懊う繧ｹ",
          575: "縺吶※繧ｼ繝ｪ繝�",
          576: "縺ｲ縺｣縺上ｊ縺九∴縺�",
          577: "繝峨Ξ繧､繝ｳ繧ｭ繝�せ",
          578: "繝医Μ繝�け繧ｬ繝ｼ繝�",
          579: "繝輔Λ繝ｯ繝ｼ繧ｬ繝ｼ繝�",
          580: "繧ｰ繝ｩ繧ｹ繝輔ぅ繝ｼ繝ｫ繝�",
          581: "繝溘せ繝医ヵ繧｣繝ｼ繝ｫ繝�",
          582: "縺昴≧縺ｧ繧�",
          583: "縺倥ｃ繧後▽縺�",
          584: "繧医≧縺帙＞縺ｮ縺九●",
          585: "繝�繝ｼ繝ｳ繝輔か繝ｼ繧ｹ",
          586: "縺ｰ縺上♀繧薙�",
          587: "繝輔ぉ繧｢繝ｪ繝ｼ繝ｭ繝�け",
          588: "繧ｭ繝ｳ繧ｰ繧ｷ繝ｼ繝ｫ繝�",
          589: "縺ｪ縺九ｈ縺上☆繧�",
          590: "縺ｪ縺�＠繧��縺ｪ縺�",
          591: "繝繧､繝､繧ｹ繝医�繝�",
          592: "繧ｹ繝√�繝�繝舌�繧ｹ繝�",
          593: "縺�§縺偵ｓ繝帙�繝ｫ",
          594: "縺ｿ縺壹＠繧�ｊ縺代ｓ",
          595: "繝槭ず繧ｫ繝ｫ繝輔Ξ繧､繝�",
          596: "繝九�繝峨Ν繧ｬ繝ｼ繝�",
          597: "繧｢繝ｭ繝槭Α繧ｹ繝�",
          598: "縺九＞縺ｧ繧薙�",
          599: "繝吶ヮ繝�繝医Λ繝��",
          600: "縺ｵ繧薙§繧�",
          601: "繧ｸ繧ｪ繧ｳ繝ｳ繝医Ο繝ｼ繝ｫ",
          602: "縺倥�縺昴≧縺�",
          603: "繝上ャ繝斐�繧ｿ繧､繝�",
          604: "繧ｨ繝ｬ繧ｭ繝輔ぅ繝ｼ繝ｫ繝�",
          605: "繝槭ず繧ｫ繝ｫ繧ｷ繝｣繧､繝ｳ",
          606: "縺翫＞繧上＞",
          607: "縺ｦ繧偵▽縺ｪ縺�",
          608: "縺､縺ｶ繧峨↑縺ｲ縺ｨ縺ｿ",
          609: "縺ｻ縺｣縺ｺ縺吶ｊ縺吶ｊ",
          610: "縺ｦ縺九￡繧�",
          611: "縺ｾ縺ｨ繧上ｊ縺､縺�",
          612: "繧ｰ繝ｭ繧ｦ繝代Φ繝�",
          613: "繝�せ繧ｦ繧､繝ｳ繧ｰ",
          614: "繧ｵ繧ｦ繧ｶ繝ｳ繧｢繝ｭ繝ｼ",
          615: "繧ｵ繧ｦ繧ｶ繝ｳ繧ｦ繧ｧ繝ｼ繝�",
          616: "繧ｰ繝ｩ繝ｳ繝峨ヵ繧ｩ繝ｼ繧ｹ",
          617: "縺ｯ繧√▽縺ｮ縺ｲ縺九ｊ",
          618: "縺薙ｓ縺偵ｓ縺ｮ縺ｯ縺ｩ縺�",
          619: "縺�繧薙′縺��縺､繧九℃",
          620: "繧ｬ繝ｪ繝ｧ繧ｦ繝�Φ繧ｻ繧､",
          621: "縺�§縺偵ｓ繝ｩ繝�す繝･",
          622: "繧ｦ繝ｫ繝医Λ繝繝�す繝･繧｢繧ｿ繝�け",
          623: "繧ｦ繝ｫ繝医Λ繝繝�す繝･繧｢繧ｿ繝�け",
          624: "縺懊ｓ繧翫ｇ縺上�縺昴≧縺偵″繧後▽縺代ｓ",
          625: "縺懊ｓ繧翫ｇ縺上�縺昴≧縺偵″繧後▽縺代ｓ",
          626: "繝輔ぃ繧､繝翫Ν繝繧､繝悶け繝ｩ繝�す繝･",
          627: "繝輔ぃ繧､繝翫Ν繝繧､繝悶け繝ｩ繝�す繝･",
          628: "繧｢繧ｷ繝�ラ繝昴う繧ｺ繝ｳ繝�Μ繝ｼ繝�",
          629: "繧｢繧ｷ繝�ラ繝昴う繧ｺ繝ｳ繝�Μ繝ｼ繝�",
          630: "繝ｩ繧､繧ｸ繝ｳ繧ｰ繝ｩ繝ｳ繝峨が繝ｼ繝舌�",
          631: "繝ｩ繧､繧ｸ繝ｳ繧ｰ繝ｩ繝ｳ繝峨が繝ｼ繝舌�",
          632: "繝ｯ繝ｼ繝ｫ繧ｺ繧ｨ繝ｳ繝峨ヵ繧ｩ繝ｼ繝ｫ",
          633: "繝ｯ繝ｼ繝ｫ繧ｺ繧ｨ繝ｳ繝峨ヵ繧ｩ繝ｼ繝ｫ",
          634: "縺懊▲縺溘＞縺ｻ縺励ｇ縺上°縺�※繧薙＊繧�",
          635: "縺懊▲縺溘＞縺ｻ縺励ｇ縺上°縺�※繧薙＊繧�",
          636: "繧縺偵ｓ縺ゅｓ繧�∈縺ｮ縺�＊縺ｪ縺�",
          637: "繧縺偵ｓ縺ゅｓ繧�∈縺ｮ縺�＊縺ｪ縺�",
          638: "縺｡繧�≧縺懊▽繧峨○繧薙ｌ繧薙￡縺�",
          639: "縺｡繧�≧縺懊▽繧峨○繧薙ｌ繧薙￡縺�",
          640: "繝繧､繝翫Α繝�け繝輔Ν繝輔Ξ繧､繝�",
          641: "繝繧､繝翫Α繝�け繝輔Ν繝輔Ξ繧､繝�",
          642: "繧ｹ繝ｼ繝代�繧｢繧ｯ繧｢繝医Ν繝阪�繝�",
          643: "繧ｹ繝ｼ繝代�繧｢繧ｯ繧｢繝医Ν繝阪�繝�",
          644: "繝悶Ν繝ｼ繝�繧ｷ繝｣繧､繝ｳ繧ｨ繧ｯ繧ｹ繝医Λ",
          645: "繝悶Ν繝ｼ繝�繧ｷ繝｣繧､繝ｳ繧ｨ繧ｯ繧ｹ繝医Λ",
          646: "繧ｹ繝代�繧ｭ繝ｳ繧ｰ繧ｮ繧ｬ繝懊Ν繝�",
          647: "繧ｹ繝代�繧ｭ繝ｳ繧ｰ繧ｮ繧ｬ繝懊Ν繝�",
          648: "繝槭く繧ｷ繝槭Β繧ｵ繧､繝悶Ξ繧､繧ｫ繝ｼ",
          649: "繝槭く繧ｷ繝槭Β繧ｵ繧､繝悶Ξ繧､繧ｫ繝ｼ",
          650: "繝ｬ繧､繧ｸ繝ｳ繧ｰ繧ｸ繧ｪ繝輔Μ繝ｼ繧ｺ",
          651: "繝ｬ繧､繧ｸ繝ｳ繧ｰ繧ｸ繧ｪ繝輔Μ繝ｼ繧ｺ",
          652: "繧｢繝ｫ繝�ぅ繝｡繝�ヨ繝峨Λ繧ｴ繝ｳ繝舌�繝ｳ",
          653: "繧｢繝ｫ繝�ぅ繝｡繝�ヨ繝峨Λ繧ｴ繝ｳ繝舌�繝ｳ",
          654: "繝悶Λ繝�け繝帙�繝ｫ繧､繧ｯ繝ｪ繝励せ",
          655: "繝悶Λ繝�け繝帙�繝ｫ繧､繧ｯ繝ｪ繝励せ",
          656: "繝ｩ繝悶Μ繝ｼ繧ｹ繧ｿ繝ｼ繧､繝ｳ繝代け繝�",
          657: "繝ｩ繝悶Μ繝ｼ繧ｹ繧ｿ繝ｼ繧､繝ｳ繝代け繝�",
          658: "縺ｲ縺｣縺輔▽縺ｮ繝斐き繝√Η繝ｼ繝�",
          659: "縺吶↑縺ゅ▽繧�",
          660: "縺ｧ縺ゅ＞縺後＠繧�",
          661: "繝医�繝√き",
          662: "縺九￡縺ｬ縺�",
          663: "�､�､繝ｩ繝ｪ繧｢繝�ヨ",
          664: "縺�◆縺九◆縺ｮ繧｢繝ｪ繧｢",
          665: "繧｢繧､繧ｹ繝上Φ繝槭�",
          666: "繝輔Λ繝ｯ繝ｼ繝偵�繝ｫ",
          667: "�托ｼ舌∪繧薙�繧翫″",
          668: "縺｡縺九ｉ繧偵☆縺�→繧�",
          669: "繧ｽ繝ｼ繝ｩ繝ｼ繝悶Ξ繝ｼ繝�",
          670: "縺薙�縺ｯ",
          671: "繧ｹ繝昴ャ繝医Λ繧､繝�",
          672: "縺ｩ縺上�縺�→",
          673: "縺ｨ縺弱☆縺ｾ縺�",
          674: "繧｢繧ｷ繧ｹ繝医ぐ繧｢",
          675: "縺倥＃縺上▼縺�",
          676: "縺九�繧薙□繧薙＃",
          677: "繧｢繝ｳ繧ｫ繝ｼ繧ｷ繝ｧ繝�ヨ",
          678: "繧ｵ繧､繧ｳ繝輔ぅ繝ｼ繝ｫ繝�",
          679: "縺ｨ縺ｳ縺九°繧�",
          680: "縺ｻ縺ｮ縺翫�繝�繝�",
          681: "縺､縺代≠縺後ｋ",
          682: "繧ゅ∴縺､縺阪ｋ",
          683: "繧ｹ繝斐�繝峨せ繝ｯ繝��",
          684: "繧ｹ繝槭�繝医�繝ｼ繝ｳ",
          685: "縺倥ｇ縺�°",
          686: "繧√＊繧√ｋ繝繝ｳ繧ｹ",
          687: "繧ｳ繧｢繝代ル繝�す繝｣繝ｼ",
          688: "繝医Ο繝斐き繝ｫ繧ｭ繝�け",
          689: "縺輔＞縺ｯ縺�",
          690: "縺上■縺ｰ縺励く繝｣繝弱Φ",
          691: "繧ｹ繧ｱ繧､繝ｫ繝弱う繧ｺ",
          692: "繝峨Λ繧ｴ繝ｳ繝上Φ繝槭�",
          693: "縺ｶ繧薙∪繧上☆",
          694: "繧ｪ繝ｼ繝ｭ繝ｩ繝吶�繝ｫ",
          695: "繧ｷ繝｣繝峨�繧｢繝ｭ繝ｼ繧ｺ繧ｹ繝医Λ繧､繧ｯ",
          696: "繝上う繝代�繝繝ｼ繧ｯ繧ｯ繝ｩ繝�す繝｣繝ｼ",
          697: "繧上□縺､縺ｿ縺ｮ繧ｷ繝ｳ繝輔か繝九い",
          698: "繧ｬ繝ｼ繝�ぅ繧｢繝ｳ繝ｻ繝��繧｢繝ｭ繝ｼ繝ｩ",
          699: "縺励■縺帙＞縺�縺｣縺薙ｓ縺溘＞",
          700: "繝ｩ繧､繝医ル繝ｳ繧ｰ繧ｵ繝ｼ繝輔Λ繧､繝�",
          701: "縺ｻ繧薙″繧偵□縺吶縺薙≧縺偵″",
          702: "繝翫う繝ｳ繧ｨ繝懊Ν繝悶�繧ｹ繝�",
          703: "繧ｪ繝ｪ繧ｸ繝ｳ繧ｺ繧ｹ繝ｼ繝代�繝弱Χ繧｡",
          704: "繝医Λ繝��繧ｷ繧ｧ繝ｫ",
          705: "繝輔Ν繝ｼ繝ｫ繧ｫ繝弱Φ",
          706: "繧ｵ繧､繧ｳ繝輔ぃ繝ｳ繧ｰ",
          707: "縺倥□繧薙□",
          708: "繧ｷ繝｣繝峨�繝懊�繝ｳ",
          709: "繧｢繧ｯ繧ｻ繝ｫ繝ｭ繝�け",
          710: "繧｢繧ｯ繧｢繝悶Ξ繧､繧ｯ",
          711: "繝励Μ繧ｺ繝�繝ｬ繝ｼ繧ｶ繝ｼ",
          712: "繧ｷ繝｣繝峨�繧ｹ繝√�繝ｫ",
          713: "繝｡繝�が繝峨Λ繧､繝�",
          714: "繧ｷ繝｣繝峨�繝ｬ繧､",
          715: "縺ｪ縺ｿ縺�繧�",
          716: "縺ｳ繧翫�繧翫■縺上■縺�",
          717: "縺励●繧薙�縺�°繧�",
          718: "繝槭Ν繝√い繧ｿ繝�け",
          719: "�托ｼ撰ｼ撰ｼ舌∪繧薙�繝ｫ繝�",
          720: "繝薙ャ繧ｯ繝ｪ繝倥ャ繝�",
          721: "繝励Λ繧ｺ繝槭ヵ繧｣繧ｹ繝�",
          722: "繝輔か繝医Φ繧ｲ繧､繧ｶ繝ｼ",
          723: "縺ｦ繧薙％縺後☆繧√▽縺ｼ縺��縺ｲ縺九ｊ",
          724: "繧ｵ繝ｳ繧ｷ繝｣繧､繝ｳ繧ｹ繝槭ャ繧ｷ繝｣繝ｼ",
          725: "繝�繝ｼ繝ｳ繝ｩ繧､繝医ヶ繝ｩ繧ｹ繧ｿ繝ｼ",
          726: "縺ｽ縺九⊂縺九ヵ繝ｬ繝ｳ繝峨ち繧､繝�",
          727: "繝ｩ繧ｸ繧｢繝ｫ繧ｨ繝�ず繧ｹ繝医�繝�",
          728: "繝悶Ξ繧､繧ｸ繝ｳ繧ｰ繧ｽ繧ｦ繝ｫ繝薙�繝�",
          729: "縺ｰ縺｡縺ｰ縺｡繧｢繧ｯ繧ｻ繝ｫ",
          730: "縺悶�縺悶�繧ｵ繝ｼ繝�",
          731: "縺ｵ繧上�繧上ヵ繧ｩ繝ｼ繝ｫ",
          732: "繝斐き繝斐き繧ｵ繝ｳ繝繝ｼ",
          733: "縺�″縺�″繝舌ヶ繝ｫ",
          734: "縺ｳ繧翫�繧翫お繝ｬ繧ｭ",
          735: "繧√ｉ繧√ｉ繝舌�繝ｳ",
          736: "縺ｩ縺ｰ縺ｩ縺ｰ繧ｪ繝ｼ繝ｩ",
          737: "繧上ｋ繧上ｋ繧ｾ繝ｼ繝ｳ",
          738: "縺吶￥縺吶￥繝懊Φ繝舌�",
          739: "縺薙■縺薙■繝輔Ο繧ｹ繝�",
          740: "縺阪ｉ縺阪ｉ繧ｹ繝医�繝�",
          741: "繝悶う繝悶う繝悶Ξ繧､繧ｯ",
          742: "繝繝悶Ν繝代Φ繝�ぃ繝ｼ",
          743: "繝繧､繧ｦ繧ｩ繝ｼ繝ｫ",
          744: "繝繧､繝槭ャ繧ｯ繧ｹ縺ｻ縺�",
          745: "縺ｭ繧峨＞縺�■",
          746: "縺上ｉ縺�▽縺�",
          747: "縺ｻ縺翫�繧�",
          748: "縺ｯ縺�☆縺��縺倥ｓ",
          749: "繧ｿ繝ｼ繝ｫ繧ｷ繝ｧ繝�ヨ",
          750: "縺ｾ縺ｻ縺��縺薙↑",
          751: "繝峨Λ繧ｴ繝ｳ繧｢繝ｭ繝ｼ",
          752: "縺翫■繧�°縺�",
          753: "縺溘％縺後◆繧�",
          754: "縺ｧ繧薙￡縺阪￥縺｡縺ｰ縺�",
          755: "繧ｨ繝ｩ縺後∩",
          756: "繧ｳ繝ｼ繝医メ繧ｧ繝ｳ繧ｸ",
          757: "繝繧､繝舌�繝ｳ",
          758: "繝繧､繝ｯ繝ｼ繝�",
          759: "繝繧､繧ｵ繝ｳ繝繝ｼ",
          760: "繝繧､繧｢繧ｿ繝�け",
          761: "繝繧､繝翫ャ繧ｯ繝ｫ",
          762: "繝繧､繝帙Ο繧ｦ",
          763: "繝繧､繧｢繧､繧ｹ",
          764: "繝繧､繧｢繧ｷ繝�ラ",
          765: "繝繧､繧ｹ繝医Μ繝ｼ繝�",
          766: "繝繧､繧ｸ繧ｧ繝�ヨ",
          767: "繝繧､繝輔ぉ繧｢繝ｪ繝ｼ",
          768: "繝繧､繝峨Λ繧ｰ繝ｼ繝ｳ",
          769: "繝繧､繧ｵ繧､繧ｳ",
          770: "繝繧､繝ｭ繝�け",
          771: "繝繧､繧｢繝ｼ繧ｹ",
          772: "繝繧､繧｢繝ｼ繧ｯ",
          773: "繝繧､繧ｽ繧ｦ繧ｲ繝ｳ",
          774: "繝繧､繧ｹ繝√Ν",
          775: "繧ｽ繧ｦ繝ｫ繝薙�繝�",
          776: "繝懊ョ繧｣繝励Ξ繧ｹ",
          777: "繝�さ繝ｬ繝ｼ繧ｷ繝ｧ繝ｳ",
          778: "繝峨Λ繝�繧｢繧ｿ繝�け",
          779: "繝医Λ繝舌し繝�",
          780: "縺九∴繧薙�繝ｼ繝ｫ",
          781: "縺阪ｇ縺倥ｅ縺�＊繧�",
          782: "縺阪ｇ縺倥ｅ縺�□繧�",
          783: "繧ｪ繝ｼ繝ｩ縺舌ｋ縺ｾ",
          784: "繝ｯ繧､繝峨ヶ繝ｬ繧､繧ｫ繝ｼ",
          785: "縺医□縺･縺�",
          786: "繧ｪ繝ｼ繝舌�繝峨Λ繧､繝�",
          787: "繧翫ｓ縺斐＆繧�",
          788: "�ｧ縺ｮ縺｡縺九ｉ",
          789: "繧ｽ繧ｦ繝ｫ繧ｯ繝ｩ繝�す繝･",
          790: "繝ｯ繝ｳ繝繝ｼ繧ｹ繝√�繝�",
          791: "縺��縺｡縺ｮ縺励★縺�",
          792: "繝悶Ο繝�く繝ｳ繧ｰ",
          793: "縺ｩ縺偵＊縺､縺�",
          794: "繧ｹ繧ｿ繝ｼ繧｢繧ｵ繝ｫ繝�",
          795: "繝�繧ｲ繝ｳ繝繧､繝薙�繝�",
          796: "縺ｦ縺｣縺ｦ縺�％縺�○繧�",
          797: "繝ｯ繧､繝峨ヵ繧ｩ繝ｼ繧ｹ",
          798: "繧｢繧､繧｢繝ｳ繝ｭ繝ｼ繝ｩ繝ｼ",
          799: "繧ｹ繧ｱ繧､繝ｫ繧ｷ繝ｧ繝�ヨ",
          800: "繝｡繝�が繝薙�繝�",
          801: "繧ｷ繧ｧ繝ｫ繧｢繝ｼ繝�繧ｺ",
          802: "繝溘せ繝医ヰ繝ｼ繧ｹ繝�",
          803: "繧ｰ繝ｩ繧ｹ繧ｹ繝ｩ繧､繝繝ｼ",
          804: "繝ｩ繧､繧ｸ繝ｳ繧ｰ繝懊Ν繝�",
          805: "縺�縺�■縺ｮ縺ｯ縺ｩ縺�",
          806: "縺ｯ縺�ｈ繧九＞縺｡縺偵″",
          807: "縺励▲縺ｨ縺ｮ縺ｻ縺ｮ縺�",
          808: "縺�▲縺ｷ繧薙�繧峨＠",
          809: "繝昴Ν繧ｿ繝ｼ繧ｬ繧､繧ｹ繝�",
          810: "縺ｵ縺励ｇ縺上ぎ繧ｹ",
          811: "繧ｳ繝ｼ繝√Φ繧ｰ",
          812: "繧ｯ繧､繝�け繧ｿ繝ｼ繝ｳ",
          813: "繝医Μ繝励Ν繧｢繧ｯ繧ｻ繝ｫ",
          814: "繝繝悶Ν繧ｦ繧､繝ｳ繧ｰ",
          815: "縺ｭ縺｣縺輔�縺�縺�■",
          816: "繧ｸ繝｣繝ｳ繧ｰ繝ｫ繝偵�繝ｫ",
          817: "縺ゅｓ縺薙￥縺阪ｇ縺�□",
          818: "縺吶＞繧翫ｅ縺�ｌ繧薙□",
          819: "繧ｵ繝ｳ繝繝ｼ繝励Μ繧ｺ繝ｳ",
          820: "繝峨Λ繧ｴ繝ｳ繧ｨ繝翫ず繝ｼ",
          821: "縺�※縺､縺上＠縺帙ｓ",
          822: "繧ゅ∴縺ゅ′繧九＞縺九ｊ",
          823: "繧峨＞繧√＞縺偵ｊ",
          824: "繝悶Μ繧ｶ繝ｼ繝峨Λ繝ｳ繧ｹ",
          825: "繧｢繧ｹ繝医Λ繝ｫ繝薙ャ繝�",
          826: "縺ｶ縺阪∩縺ｪ縺倥ｅ繧ゅｓ",
          827: "繝輔ぉ繧､繧ｿ繝ｫ繧ｯ繝ｭ繝ｼ",
          828: "繝舌Μ繧｢繝ｼ繝ｩ繝�す繝･",
          829: "繝代Ρ繝ｼ繧ｷ繝輔ヨ",
          830: "縺後ｓ縺帙″繧｢繝�け繧ｹ",
          831: "縺ｯ繧九�縺ゅｉ縺�",
          832: "縺励ｓ縺ｴ縺ｮ縺｡縺九ｉ",
          833: "縺�縺��繧薙￡縺�",
          834: "繧ｦ繧ｧ繝ｼ繝悶ち繝�け繝ｫ",
          835: "繧ｯ繝ｭ繝ｭ繝悶Λ繧ｹ繝�",
          836: "縺ｲ繧�≧縺悶ｓ縺翫ｍ縺�",
          837: "縺励ｇ縺�ｊ縺ｮ縺ｾ縺�",
          838: "縺ｶ縺｡縺九∪縺�",
          839: "縺ｩ縺上�繧翫そ繝ｳ繝懊Φ",
          840: "繧ｪ繝ｼ繝ｩ繧ｦ繧､繝ｳ繧ｰ",
          841: "縺�ｉ縺ｿ縺､繧峨∩",
          842: "縺溘※縺薙ｂ繧�",
          843: "�薙⊂繧薙�繧�",
          844: "縺ｲ繧�▲縺阪ｄ縺薙≧",
          845: "縺ｲ縺代ｓ繝ｻ縺｡縺医↑縺ｿ",
          846: "縺薙′繧峨＠縺ゅｉ縺�",
          847: "縺九∩縺ｪ繧翫≠繧峨＠",
          848: "縺ｭ縺｣縺輔�縺ゅｉ縺�",
          849: "縺ｿ縺九▼縺阪�縺��繧�",
          850: "繝悶Ξ繧､繝悶メ繝｣繝ｼ繧ｸ",
          851: "繝�Λ繝舌�繧ｹ繝�",
          852: "繧ｹ繝ｬ繝�ラ繝医Λ繝��",
          853: "縺九°縺ｨ縺翫→縺�",
          854: "縺翫�縺九∪縺�ｊ",
          855: "繝ｫ繝溘リ繧ｳ繝ｪ繧ｸ繝ｧ繝ｳ",
          856: "縺�▲縺｡繧�≧縺ゅ′繧�",
          857: "繧ｸ繧ｧ繝�ヨ繝代Φ繝�",
          858: "繝上ヰ繝阪Ο繧ｨ繧ｭ繧ｹ",
          859: "繝帙う繝ｼ繝ｫ繧ｹ繝斐Φ",
          860: "繝阪ぜ繝溘＊繧�",
          861: "繧｢繧､繧ｹ繧ｹ繝斐リ繝ｼ",
          862: "縺阪ｇ縺代ｓ縺ｨ縺､縺偵″",
          863: "縺輔＞縺阪�縺��繧�",
          864: "縺励♀縺･縺�",
          865: "繝医Μ繝励Ν繝繧､繝�",
          866: "繧ｭ繝ｩ繝ｼ繧ｹ繝斐Φ",
          867: "縺�▽縺励∴",
          868: "縺ｿ繧偵￠縺壹ｋ",
          869: "繝峨ご繧ｶ繝ｳ",
          870: "繝医Μ繝�け繝輔Λ繝ｯ繝ｼ",
          871: "繝輔Ξ繧｢繧ｽ繝ｳ繧ｰ",
          872: "繧｢繧ｯ繧｢繧ｹ繝�ャ繝�",
          873: "繝ｬ繧､繧ｸ繝ｳ繧ｰ繝悶Ν",
          874: "繧ｴ繝ｼ繝ｫ繝峨Λ繝�す繝･",
          875: "繧ｵ繧､繧ｳ繝悶Ξ繧､繝�",
          876: "繝上う繝峨Ο繧ｹ繝√�繝�",
          877: "繧ｫ繧ｿ繧ｹ繝医Ο繝輔ぅ",
          878: "繧｢繧ｯ繧ｻ繝ｫ繝悶Ξ繧､繧ｯ",
          879: "繧､繝翫ぜ繝槭ラ繝ｩ繧､繝�",
          880: "縺励▲縺ｽ縺阪ｊ",
          881: "縺輔�縺�ぐ繝｣繧ｰ",
          882: "縺翫°縺溘▼縺�",
          883: "繧�″縺偵＠縺�",
          884: "縺ｨ縺ｳ縺､縺�",
          885: "縺上＆繧上￠",
          886: "縺ｲ繧�∩縺�",
          887: "繝上う繝代�繝峨Μ繝ｫ",
          888: "繝�う繝ｳ繝薙�繝�",
          889: "縺ｵ繧薙←縺ｮ縺薙�縺�",
          890: "繧｢繝ｼ繝槭�繧ｭ繝｣繝弱Φ",
          891: "繧縺ｭ繧薙�縺､繧九℃",
          892: "縺ｧ繧薙％縺�◎縺�￡縺�",
          893: "繝�き繝上Φ繝槭�",
          894: "縺ｻ縺��縺�",
          895: "繧｢繧ｯ繧｢繧ｫ繝�ち繝ｼ",
          896: "繝舌�繝ｳ繧｢繧ｯ繧ｻ繝ｫ",
          897: "繝繝ｼ繧ｯ繧｢繧ｯ繧ｻ繝ｫ",
          898: "繝昴う繧ｺ繝ｳ繧｢繧ｯ繧ｻ繝ｫ",
          899: "繝輔ぃ繧､繝医い繧ｯ繧ｻ繝ｫ",
          900: "繝槭ず繧ｫ繝ｫ繧｢繧ｯ繧ｻ繝ｫ",
          901: "繝悶Λ繝�ラ繝�繝ｼ繝ｳ",
          902: "繧ｷ繝｣繧ｫ繧ｷ繝｣繧ｫ縺ｻ縺�",
          903: "縺ｿ縺壹≠繧√�繝�",
          904: "繝�ち縺薙ｓ縺ｼ縺�"
        },
        tokusei: {
          1: "縺ゅ￥縺励ｅ縺�",
          2: "縺ゅａ縺ｵ繧峨＠",
          3: "縺九◎縺�",
          4: "繧ｫ繝悶ヨ繧｢繝ｼ繝槭�",
          5: "縺後ｓ縺倥ｇ縺�",
          6: "縺励ａ繧翫￠",
          7: "縺倥ｅ縺�↑繧�",
          8: "縺吶↑縺後￥繧�",
          9: "縺帙＞縺ｧ繧薙″",
          10: "縺｡縺上〒繧�",
          11: "縺｡繧�☆縺�",
          12: "縺ｩ繧薙°繧�",
          13: "繝弱�縺ｦ繧薙″",
          14: "縺ｵ縺上′繧�",
          15: "縺ｵ縺ｿ繧�",
          16: "縺ｸ繧薙＠繧�￥",
          17: "繧√ｓ縺医″",
          18: "繧ゅｉ縺��",
          19: "繧翫ｓ縺ｷ繧�",
          20: "繝槭う繝壹�繧ｹ",
          21: "縺阪ｅ縺��繧�",
          22: "縺�°縺�",
          23: "縺九￡縺ｵ縺ｿ",
          24: "縺輔ａ縺ｯ縺�",
          25: "縺ｵ縺励℃縺ｪ縺ｾ繧ゅｊ",
          26: "縺ｵ繧�≧",
          27: "縺ｻ縺�＠",
          28: "繧ｷ繝ｳ繧ｯ繝ｭ",
          29: "繧ｯ繝ｪ繧｢繝懊ョ繧｣",
          30: "縺励●繧薙°縺��縺�",
          31: "縺ｲ繧峨＞縺励ｓ",
          32: "縺ｦ繧薙�繧√＄縺ｿ",
          33: "縺吶＞縺吶＞",
          34: "繧医≧繧翫ｇ縺上◎",
          35: "縺ｯ縺｣縺薙≧",
          36: "繝医Ξ繝ｼ繧ｹ",
          37: "縺｡縺九ｉ繧ゅ■",
          38: "縺ｩ縺上�繝医ご",
          39: "縺帙＞縺励ｓ繧翫ｇ縺�",
          40: "繝槭げ繝槭�繧医ｍ縺�",
          41: "縺ｿ縺壹�繝吶�繝ｫ",
          42: "縺倥ｊ繧�￥",
          43: "縺ｼ縺�♀繧�",
          44: "縺ゅａ縺�￠縺悶ｉ",
          45: "縺吶↑縺翫％縺�",
          46: "繝励Ξ繝�す繝｣繝ｼ",
          47: "縺ゅ▽縺�＠縺ｼ縺�",
          48: "縺ｯ繧�♀縺�",
          49: "縺ｻ縺ｮ縺翫�縺九ｉ縺�",
          50: "縺ｫ縺偵≠縺�",
          51: "縺吶ｋ縺ｩ縺�ａ",
          52: "縺九＞繧翫″繝舌し繝�",
          53: "繧ゅ�縺ｲ繧阪＞",
          54: "縺ｪ縺ｾ縺�",
          55: "縺ｯ繧翫″繧�",
          56: "繝｡繝ｭ繝｡繝ｭ繝懊ョ繧｣",
          57: "繝励Λ繧ｹ",
          58: "繝槭う繝翫せ",
          59: "縺ｦ繧薙″繧�",
          60: "縺ｭ繧薙■繧�￥",
          61: "縺�縺｣縺ｴ",
          62: "縺薙ｓ縺倥ｇ縺�",
          63: "縺ｵ縺励℃縺ｪ縺�ｍ縺�",
          64: "繝倥ラ繝ｭ縺医″",
          65: "縺励ｓ繧翫ｇ縺�",
          66: "繧ゅ≧縺�",
          67: "縺偵″繧翫ｅ縺�",
          68: "繧縺励�縺励ｉ縺�",
          69: "縺�＠縺ゅ◆縺ｾ",
          70: "縺ｲ縺ｧ繧�",
          71: "縺ゅｊ縺倥＃縺�",
          72: "繧�ｋ縺�",
          73: "縺励ｍ縺�￠繧繧�",
          74: "繝ｨ繧ｬ繝代Ρ繝ｼ",
          75: "繧ｷ繧ｧ繝ｫ繧｢繝ｼ繝槭�",
          76: "繧ｨ繧｢繝ｭ繝�け",
          77: "縺｡縺ｩ繧翫≠縺�",
          78: "縺ｧ繧薙″繧ｨ繝ｳ繧ｸ繝ｳ",
          79: "縺ｨ縺�◎縺�＠繧�",
          80: "縺ｵ縺上▽縺ｮ縺薙％繧�",
          81: "繧�″縺後￥繧�",
          82: "縺上＞縺励ｓ縺ｼ縺�",
          83: "縺�°繧翫�縺､縺ｼ",
          84: "縺九ｋ繧上＊",
          85: "縺溘＞縺ｭ縺､",
          86: "縺溘ｓ縺倥ｅ繧�",
          87: "縺九ｓ縺昴≧縺ｯ縺�",
          88: "繝繧ｦ繝ｳ繝ｭ繝ｼ繝�",
          89: "縺ｦ縺､縺ｮ縺薙�縺�",
          90: "繝昴う繧ｺ繝ｳ繝偵�繝ｫ",
          91: "縺ｦ縺阪♀縺�ｊ繧�￥",
          92: "繧ｹ繧ｭ繝ｫ繝ｪ繝ｳ繧ｯ",
          93: "縺�ｋ縺翫＞繝懊ョ繧｣",
          94: "繧ｵ繝ｳ繝代Ρ繝ｼ",
          95: "縺ｯ繧�≠縺�",
          96: "繝弱�繝槭Ν繧ｹ繧ｭ繝ｳ",
          97: "繧ｹ繝翫う繝代�",
          98: "繝槭ず繝�け繧ｬ繝ｼ繝�",
          99: "繝弱�繧ｬ繝ｼ繝�",
          100: "縺ゅ→縺�縺�",
          101: "繝�け繝九す繝｣繝ｳ",
          102: "繝ｪ繝ｼ繝輔ぎ繝ｼ繝�",
          103: "縺ｶ縺阪ｈ縺�",
          104: "縺九◆繧��繧�",
          105: "縺阪ｇ縺�≧繧�",
          106: "繧�≧縺ｰ縺�",
          107: "縺阪￠繧薙ｈ縺｡",
          108: "繧医■繧",
          109: "縺ｦ繧薙�繧�",
          110: "縺�ｍ繧√′縺ｭ",
          111: "繝輔ぅ繝ｫ繧ｿ繝ｼ",
          112: "繧ｹ繝ｭ繝ｼ繧ｹ繧ｿ繝ｼ繝�",
          113: "縺阪ｂ縺｣縺溘∪",
          114: "繧医�縺ｿ縺�",
          115: "繧｢繧､繧ｹ繝懊ョ繧｣",
          116: "繝上�繝峨Ο繝�け",
          117: "繧�″縺ｵ繧峨＠",
          118: "縺ｿ縺､縺ゅ▽繧�",
          119: "縺翫∩縺ｨ縺翫＠",
          120: "縺吶※縺ｿ",
          121: "繝槭Ν繝√ち繧､繝�",
          122: "繝輔Λ繝ｯ繝ｼ繧ｮ繝輔ヨ",
          123: "繝翫う繝医Γ繧｢",
          124: "繧上ｋ縺�※縺舌○",
          125: "縺｡縺九ｉ縺壹￥",
          126: "縺ゅ∪縺ｮ縺倥ｃ縺�",
          127: "縺阪ｓ縺｡繧�≧縺九ｓ",
          128: "縺ｾ縺代ｓ縺�",
          129: "繧医ｏ縺�",
          130: "縺ｮ繧阪ｏ繧後�繝�ぅ",
          131: "縺�ｄ縺励�縺薙％繧�",
          132: "繝輔Ξ繝ｳ繝峨ぎ繝ｼ繝�",
          133: "縺上□縺代ｋ繧医ｍ縺�",
          134: "繝倥Χ繧｣繝｡繧ｿ繝ｫ",
          135: "繝ｩ繧､繝医Γ繧ｿ繝ｫ",
          136: "繝槭Ν繝√せ繧ｱ繧､繝ｫ",
          137: "縺ｩ縺上⊂縺�◎縺�",
          138: "縺ｭ縺､縺ｼ縺�◎縺�",
          139: "縺励ｅ縺�°縺�",
          140: "繝�Ξ繝代す繝ｼ",
          141: "繝�繝ｩ縺｣縺�",
          142: "縺ｼ縺�§繧�",
          143: "縺ｩ縺上＠繧�",
          144: "縺輔＞縺帙＞繧翫ｇ縺�",
          145: "縺ｯ縺ｨ繧縺ｭ",
          146: "縺吶↑縺九″",
          147: "繝溘Λ繧ｯ繝ｫ繧ｹ繧ｭ繝ｳ",
          148: "繧｢繝翫Λ繧､繧ｺ",
          149: "繧､繝ｪ繝･繝ｼ繧ｸ繝ｧ繝ｳ",
          150: "縺九ｏ繧翫ｂ縺ｮ",
          151: "縺吶ｊ縺ｬ縺�",
          152: "繝溘う繝ｩ",
          153: "縺倥＠繧薙°縺倥ｇ縺�",
          154: "縺帙＞縺弱�縺薙％繧�",
          155: "縺ｳ縺ｳ繧�",
          156: "繝槭ず繝�け繝溘Λ繝ｼ",
          157: "縺昴≧縺励ｇ縺�",
          158: "縺�◆縺壹ｉ縺斐％繧�",
          159: "縺吶↑縺ｮ縺｡縺九ｉ",
          160: "縺ｦ縺､縺ｮ繝医ご",
          161: "繝繝ｫ繝槭Δ繝ｼ繝�",
          162: "縺励ｇ縺�ｊ縺ｮ縺ｻ縺�",
          163: "繧ｿ繝ｼ繝懊ヶ繝ｬ繧､繧ｺ",
          164: "繝�Λ繝懊Ν繝��繧ｸ",
          165: "繧｢繝ｭ繝槭�繝ｼ繝ｫ",
          166: "繝輔Λ繝ｯ繝ｼ繝吶�繝ｫ",
          167: "縺ｻ縺翫�縺上ｍ",
          168: "縺ｸ繧薙￡繧薙§縺悶＞",
          169: "繝輔ぃ繝ｼ繧ｳ繝ｼ繝�",
          170: "繝槭ず繧ｷ繝｣繝ｳ",
          171: "縺ｼ縺�□繧�",
          172: "縺九■縺�",
          173: "縺後ｓ縺倥ｇ縺�≠縺�",
          174: "繝輔Μ繝ｼ繧ｺ繧ｹ繧ｭ繝ｳ",
          175: "繧ｹ繧､繝ｼ繝医�繝ｼ繝ｫ",
          176: "繝舌ヨ繝ｫ繧ｹ繧､繝�メ",
          177: "縺ｯ繧�※縺ｮ縺､縺ｰ縺�",
          178: "繝｡繧ｬ繝ｩ繝ｳ繝√Ε繝ｼ",
          179: "縺上＆縺ｮ縺代′繧�",
          180: "縺阪ｇ縺�○縺�",
          181: "縺九◆縺�ヤ繝｡",
          182: "繝輔ぉ繧｢繝ｪ繝ｼ繧ｹ繧ｭ繝ｳ",
          183: "縺ｬ繧√〓繧�",
          184: "繧ｹ繧ｫ繧､繧ｹ繧ｭ繝ｳ",
          185: "縺翫ｄ縺薙≠縺�",
          186: "繝繝ｼ繧ｯ繧ｪ繝ｼ繝ｩ",
          187: "繝輔ぉ繧｢繝ｪ繝ｼ繧ｪ繝ｼ繝ｩ",
          188: "繧ｪ繝ｼ繝ｩ繝悶Ξ繧､繧ｯ",
          189: "縺ｯ縺倥∪繧翫�縺�∩",
          190: "縺翫ｏ繧翫�縺�縺�■",
          191: "繝�Ν繧ｿ繧ｹ繝医Μ繝ｼ繝�",
          192: "縺倥″繧�≧繧翫ｇ縺�",
          193: "縺ｫ縺偵＃縺�",
          194: "縺阪″縺九＞縺ｲ",
          195: "縺ｿ縺壹′縺溘ａ",
          196: "縺ｲ縺ｨ縺ｧ縺ｪ縺�",
          197: "繝ｪ繝溘ャ繝医す繝ｼ繝ｫ繝�",
          198: "縺ｯ繧翫％縺ｿ",
          199: "縺吶＞縺ｻ縺�",
          200: "縺ｯ縺後�縺､縺九＞",
          201: "縺弱ｃ縺上§繧�≧",
          202: "繧�″縺九″",
          203: "縺医ｓ縺九￥",
          204: "縺�ｋ縺翫＞繝懊う繧ｹ",
          205: "繝偵�繝ｪ繝ｳ繧ｰ繧ｷ繝輔ヨ",
          206: "繧ｨ繝ｬ繧ｭ繧ｹ繧ｭ繝ｳ",
          207: "繧ｵ繝ｼ繝輔ユ繝ｼ繝ｫ",
          208: "縺弱ｇ縺舌ｓ",
          209: "縺ｰ縺代�縺九ｏ",
          210: "縺阪★縺ｪ縺ｸ繧薙￡",
          211: "繧ｹ繝ｯ繝ｼ繝�繝√ぉ繝ｳ繧ｸ",
          212: "縺ｵ縺励ｇ縺�",
          213: "縺懊▲縺溘＞縺ｭ繧繧�",
          214: "縺倥ｇ縺翫≧縺ｮ縺�￡繧�",
          215: "縺ｨ縺ｳ縺�縺吶↑縺九∩",
          216: "縺翫←繧翫％",
          217: "繝舌ャ繝�Μ繝ｼ",
          218: "繧ゅ�繧ゅ�",
          219: "繝薙ン繝�ラ繝懊ョ繧｣",
          220: "繧ｽ繧ｦ繝ｫ繝上�繝�",
          221: "繧ｫ繝ｼ繝ｪ繝ｼ繝倥い繝ｼ",
          222: "繝ｬ繧ｷ繝ｼ繝舌�",
          223: "縺九′縺上�縺｡縺九ｉ",
          224: "繝薙�繧ｹ繝医ヶ繝ｼ繧ｹ繝�",
          225: "�｡�ｲ繧ｷ繧ｹ繝�Β",
          226: "繧ｨ繝ｬ繧ｭ繝｡繧､繧ｫ繝ｼ",
          227: "繧ｵ繧､繧ｳ繝｡繧､繧ｫ繝ｼ",
          228: "繝溘せ繝医Γ繧､繧ｫ繝ｼ",
          229: "繧ｰ繝ｩ繧ｹ繝｡繧､繧ｫ繝ｼ",
          230: "繝｡繧ｿ繝ｫ繝励Ο繝�け繝�",
          231: "繝輔ぃ繝ｳ繝医Β繧ｬ繝ｼ繝�",
          232: "繝励Μ繧ｺ繝�繧｢繝ｼ繝槭�",
          233: "繝悶Ξ繧､繝ｳ繝輔か繝ｼ繧ｹ",
          234: "縺ｵ縺ｨ縺��縺代ｓ",
          235: "縺ｵ縺上▽縺ｮ縺溘※",
          236: "繝ｪ繝吶Ο",
          237: "縺溘∪縺ｲ繧阪＞",
          238: "繧上◆縺�",
          239: "繧ｹ繧ｯ繝ｪ繝･繝ｼ縺翫�繧�",
          240: "繝溘Λ繝ｼ繧｢繝ｼ繝槭�",
          241: "縺��繝溘し繧､繝ｫ",
          242: "縺吶§縺後�縺�ｊ",
          243: "縺倥ｇ縺�″縺阪°繧�",
          244: "繝代Φ繧ｯ繝ｭ繝�け",
          245: "縺吶↑縺ｯ縺�",
          246: "縺薙♀繧翫�繧翫ｓ縺ｷ繧�",
          247: "縺倥ｅ縺上○縺�",
          248: "繧｢繧､繧ｹ繝輔ぉ繧､繧ｹ",
          249: "繝代Ρ繝ｼ繧ｹ繝昴ャ繝�",
          250: "縺弱◆縺�",
          251: "繝舌Μ繧｢繝輔Μ繝ｼ",
          252: "縺ｯ縺後�縺ｮ縺帙＞縺励ｓ",
          253: "縺ｻ繧阪�縺ｮ繝懊ョ繧｣",
          254: "縺輔∪繧医≧縺溘∪縺励＞",
          255: "縺斐ｊ繧縺｡繧�≧",
          256: "縺九′縺上∈繧薙°繧ｬ繧ｹ",
          257: "繝代せ繝�Ν繝吶�繝ｫ",
          258: "縺ｯ繧峨⊆縺薙せ繧､繝�メ",
          259: "繧ｯ繧､繝�け繝峨Ο繧ｦ",
          260: "縺ｵ縺九＠縺ｮ縺薙�縺�",
          261: "縺阪∩繧�≧縺ｪ縺上☆繧�",
          262: "繝医Λ繝ｳ繧ｸ繧ｹ繧ｿ",
          263: "繧翫ｅ縺��縺ゅ℃縺ｨ",
          264: "縺励ｍ縺ｮ縺�↑縺ｪ縺�",
          265: "縺上ｍ縺ｮ縺�↑縺ｪ縺�",
          266: "縺倥ｓ縺ｰ縺�▲縺溘＞",
          267: "縺倥ｓ縺ｰ縺�▲縺溘＞",
          268: "縺ｨ繧後↑縺�↓縺翫＞",
          269: "縺薙⊂繧後ム繝�",
          270: "縺ｭ縺､縺薙≧縺九ｓ",
          271: "縺�°繧翫�縺薙≧繧�",
          272: "縺阪ｈ繧√�縺励♀",
          273: "縺薙ｓ縺後ｊ繝懊ョ繧｣",
          274: "縺九●縺ｮ繧�",
          275: "縺ｰ繧薙￠繧�",
          276: "縺�ｏ縺ｯ縺薙�",
          277: "縺ｵ縺�ｊ繧�￥縺ｧ繧薙″",
          278: "繝槭う繝�ぅ繝√ぉ繝ｳ繧ｸ",
          279: "縺励ｌ縺�→縺�",
          280: "縺ｧ繧薙″縺ｫ縺九∴繧�",
          281: "縺薙□縺�°縺｣縺帙＞",
          282: "繧ｯ繧ｩ繝ｼ繧ｯ繝√Ε繝ｼ繧ｸ",
          283: "縺翫≧縺斐ｓ縺ｮ縺九ｉ縺�",
          284: "繧上＊繧上＞縺ｮ縺�▽繧�",
          285: "繧上＊繧上＞縺ｮ縺､繧九℃",
          286: "繧上＊繧上＞縺ｮ縺翫�縺�",
          287: "繧上＊繧上＞縺ｮ縺溘∪",
          288: "縺ｲ縺ｲ縺�ｍ縺ｮ縺薙←縺�",
          289: "繝上ラ繝ｭ繝ｳ繧ｨ繝ｳ繧ｸ繝ｳ",
          290: "縺ｳ繧薙§繧�≧",
          291: "縺ｯ繧薙☆縺�",
          292: "縺阪ｌ縺ゅ§",
          293: "縺昴≧縺�縺�＠繧�≧",
          294: "縺阪ｇ縺�∴繧�",
          295: "縺ｩ縺上￡縺励ｇ縺�",
          296: "繝�う繝ｫ繧｢繝ｼ繝槭�",
          297: "縺ｩ縺励ｇ縺�",
          298: "縺阪ｓ縺励�縺｡縺九ｉ",
          299: "縺翫ｂ縺ｦ縺ｪ縺�",
          300: "縺励ｓ縺後ｓ",
          301: "縺翫ｂ縺九￡繧�←縺�",
          302: "縺翫ｂ縺九￡繧�←縺�",
          303: "縺翫ｂ縺九￡繧�←縺�",
          304: "縺翫ｂ縺九￡繧�←縺�",
          305: "縺ｩ縺上�縺上＆繧�",
          306: "縺九ｓ繧阪↑繝溘ヤ"
        },
        seikaku: {
          0: "縺後ｓ縺ｰ繧翫ｄ",
          1: "縺輔∩縺励′繧�",
          2: "繧�≧縺九ｓ",
          3: "縺�§縺｣縺ｱ繧�",
          4: "繧�ｓ縺｡繧�",
          5: "縺壹�縺ｨ縺�",
          6: "縺吶↑縺�",
          7: "縺ｮ繧薙″",
          8: "繧上ｓ縺ｱ縺�",
          9: "縺ｮ縺�※繧薙″",
          10: "縺翫￥縺ｳ繧�≧",
          11: "縺帙▲縺九■",
          12: "縺ｾ縺倥ａ",
          13: "繧医≧縺�",
          14: "繧縺倥ｃ縺�",
          15: "縺ｲ縺九∴繧�",
          16: "縺翫▲縺ｨ繧�",
          17: "繧後＞縺帙＞",
          18: "縺ｦ繧後ｄ",
          19: "縺�▲縺九ｊ繧�",
          20: "縺翫□繧�°",
          21: "縺翫→縺ｪ縺励＞",
          22: "縺ｪ縺ｾ縺�″",
          23: "縺励ｓ縺｡繧�≧",
          24: "縺阪∪縺舌ｌ"
        }
      }
    }
  };
  class o {
    constructor() {
      var e, t = util.langCode();
      switch (parseInt(t)) {
      case 1:
        e = new i;
        break;
      case 2:
        e = new class {
          constructor() {
            this.pages = {
              t_common: {
                "#regulation": "Regulations",
                "#available_poke": "Eligible Pokﾃｩmon",
                "#trainer-tab-text": "Trainer Ranking",
                "#pokemon-tab-text": "Pokﾃｩmon Ranking",
                "#open": "Ongoing",
                "#end": "Ended",
                gathering: "Still gathering data",
                not_join: "Not Entered",
                not_join_battle: "You haven't had any battles of this type yet.",
                not_join_tournament: "You haven't participated in this competition.",
                not_join_friendcompe: "You haven't entered any Friendly Competitions yet.",
                win: "WON",
                lose: "LOST",
                draw: "DRAW",
                rental: "Rental Team",
                rank_num: "#%d",
                win_num: "W: %d",
                lose_num: "L: %d",
                draw_num: "D: %d",
                ok: "OK",
                rulename1: "No Restrictions",
                rulename2: "Normal Rules",
                rulename3: "Flat Rules",
                rulename4: "No Restrictions",
                rulename5: "Normal Rules",
                rulename6: "Flat Rules",
                rulename7: "No Restrictions",
                rulename8: "Normal Rules",
                rulename9: "Flat Rules",
                rulename10: "Official Rules 1",
                rulename11: "Official Rules 2",
                rulename12: "Official Rules 1",
                rulename13: "Official Rules 2",
                rulename14: "Official Rules 3",
                outrange: "Did Not Place"
              },
              t_rankmatchPageTexts: {
                "#title-text": "Ranked Battles"
              },
              t_my_rankmatchPageTexts: {
                "#title-text": "Ranked Battle Result Details",
                "#rate_label": "Rating"
              },
              t_pokemonrankingPageTexts: {
                "#title-text": "Pokﾃｩmon Details",
                no: "No.",
                ".battle-team-tab-text": "Details",
                ".when-win-tab-text": "Victories",
                ".when-lose-tab-text": "Defeats",
                "kind-tab-battle-team": "Top 10 Pokﾃｩmon seen in Battle Teams with this Pokﾃｩmon",
                "kind-tab-battle-win": "Top 10 Pokﾃｩmon defeated by this Pokﾃｩmon",
                "kind-tab-battle-lose": "Top 10 Pokﾃｩmon used to defeat this Pokﾃｩmon",
                "kind-tab-battle-waza": "Moves",
                "kind-tab-battle-waza-win": "Top 10 moves used by this Pokﾃｩmon to defeat others",
                "kind-tab-battle-waza-lose": "Top 10 moves used to defeat this Pokﾃｩmon",
                "kind-tab-battle-tokusei": "Ability",
                "kind-tab-battle-item": "Held Item",
                "kind-tab-battle-seikaku": "Nature",
                "kind-tab-battle-terastal": "Tera Type",
                atk: "Attack",
                def: "Defense",
                agi: "Speed",
                spatk: "Sp. Atk",
                spdef: "Sp. Def",
                hyphen: "��"
              },
              t_internetcompetitionPageTexts: {
                "#title-text": "Official Competitions"
              },
              t_internetcompetition_detailPageTexts: {
                "#title-text": "Official Competition Details"
              },
              t_my_internetcompetition_detailPageTexts: {
                "#title-text": "Official Competition Details",
                "#rate_label": "Rating",
                mydata_dialog_title: "Choose records to view",
                mydata_dialog_text: "View player records",
                mydata_dialog_btn1: "Place",
                mydata_dialog_btn2: "Battle Team"
              },
              t_friendcompetitionPageTexts: {
                "#title-text": "Friendly Competitions"
              },
              t_my_friendcompetitionPageTexts: {
                "#title-text": "Friendly Competitions",
                ".organizer-label-text": "Host",
                ".result-label-text": "Results",
                ".battleteam-label-text": "Battle Team"
              },
              t_friendcompetition_detailPageTexts: {
                "#title-text": "Friendly Competition Details"
              },
              t_my_friendcompetition_detailPageTexts: {
                "#title-text": "Friendly Competition Details"
              },
              t_battle_teamPageTexts: {
                internetcompe: "Official Competition Battle Teams",
                friendcompe: "Friendly Competition Battle Teams"
              },
              t_mydataselectPageTexts: {
                title_text_rankmatch: "Your Battle Records",
                title_text_internetcompe: "Official Competition Details",
                title_text_friendcompe: "Friendly Competitions",
                "#dataselect-text": "Please choose save data to view battle records from."
              },
              t_tournament_detailPageTexts: {
                "#title-text": "Tournament Details",
                single_elimination: "Single Elimination",
                double_elimination: "Double Elimination",
                bestX: "Top %d",
                Xround: "Round %d",
                semi_final: "Semifinal",
                final: "Final",
                round_winners: "Winners' Bracket Round #%d",
                final_winners: "Winners' Bracket Round #%d (FINAL)",
                round_losers: "Losers' Bracket Round #%d",
                final_losers: "Losers' Bracket Round #%d (FINAL)",
                grandfinal: "Championship Match",
                coming_soon: "Coming Soon!"
              },
              topPageTexts: {
                "#top-title-text": "Battle Data",
                "#top-mypage-text": "Your Battle Records",
                "#top-rankmatch-text": "Ranked Battles",
                "#top--internetcompe-text": "Online Competitions",
                "#top-regulation-text": "Downloadable Regulations"
              },
              myresult_topPageTexts: {
                "#title-text": "Your Battle Records",
                "#rankmatch-text": "Ranked Battles",
                "#internetcompe-text": "Online Competitions",
                "#friendcompe-text": "Friendly Competitions"
              },
              myresult_romselectPageTexts: {
                "#title-text": "Your Battle Records",
                "#rankmatch-text": "Game Selection"
              },
              myresult_rankmatchPageTexts: {
                "#title-text": "Ranked Battle Result Details",
                "#subtitle1-text": "Season Information",
                "#sub1_label3": "View Details of This Season",
                "#subtitle2-text": "Season Results",
                "#sub2_label1": "Single",
                "#sub2_label2": "Double",
                "#subtitle3-text": "Recent Battle Records",
                "#sub3_label1": "Single",
                "#sub3_label2": "Double"
              },
              my_internetcompetition_listPageTexts: {
                "#title-text": "List of Online Competitions",
                "#subtitle1-text": "Competitions You Participated In"
              },
              my_internetcompetition_detailPageTexts: {
                "#title-text": "Online Competition Result Details",
                "#subtitle1-text": "Competition Information",
                "#sub1_label1": "Game in Use",
                "#sub1_label2": "Competition Rules",
                "#sub1_label3": "Number of Participants",
                "#sub1_label5": "View Competition Details",
                "#sub1_label6": "Competition Results",
                "#subtitle2-text": "Battle Records",
                "#sub2_label1": "Single",
                "#sub2_label2": "Double",
                "#subtitle3-text": "Recent Battle Records",
                "#sub3_label1": "Single",
                "#sub3_label2": "Double"
              },
              friendcompetition_listPageTexts: {
                "#title-text": "List of Friendly Competitions",
                "#subtitle1-text": "Competitions You Participated In",
                ".organizer-label-text": "Host Trainer",
                ".joinednum-label-text": "Number of Participants",
                ".more-button-text": "See More"
              },
              my_friendcompetition_detailPageTexts: {
                "#title-text": "Friendly Competition Result Details",
                "#subtitle1-text": "Competition Information",
                "#sub_label1": "Competition Overview",
                "#sub_label2": "Host Trainer",
                "#sub_label3": "Game in Use",
                "#sub_label4": "Competition Rules",
                "#sub_label5": "Number of Participants",
                "#sub_label7": "View Competition Details",
                "#sub_label8": "Competition Results",
                "#subtitle2-text": "Battle Records"
              },
              friendcompetition_detailPageTexts: {
                "#title-text": "Friendly Competition Details",
                "#subtitle1-text": "Competition Information",
                "#sub_label1": "Competition Overview",
                "#sub_label2": "Host Trainer",
                "#sub_label3": "Game in Use",
                "#sub_label4": "Competition Rules",
                "#sub_label5": "Number of Participants",
                "#sub1_label13": "View Your Ranking",
                "#sub1_label9": "Trainer Ranking",
                "#sub1_label10": "Pokﾃｩmon Ranking",
                "#regulationLink": "Important Info and Regulations",
                "#eligiblePokemonLink": "Eligible Pokﾃｩmon"
              },
              rankmatch_detailPageTexts: {
                "#title-text": "Ranked Battles",
                "#subtitle1-text": "Season Information",
                "#sub_label2": "Number of Participants",
                "#sub_label3": "Important Info and Regulations",
                "#sub_label4": "Eligible Pokﾃｩmon",
                "#sub_label5": "Choose Pokﾃｩmon",
                "#sub_label6": "Filter",
                "#sub_label7": "View Your Ranking",
                "#subtitle2-text": "Battle Records",
                ".trainer-tab-text": "Trainer Ranking",
                ".pokemon-tab-text": "Pokﾃｩmon Ranking"
              },
              internetcompetition_listPageTexts: {
                "#title-text": "Online Competitions",
                "#sub_label1": "View Previous Online Competitions",
                "#sub_label2": "Previously Held Competitions",
                ".more-button-text": "See More"
              },
              internetcompetition_detailPageTexts: {
                "#title-text": "Online Competition Details",
                "#subtitle1-text": "Competition Information",
                "#sub1_label1": "Game in Use",
                "#sub1_label2": "Important Info and Regulations",
                "#sub1_label3": "Eligible Pokﾃｩmon",
                "#sub1_label4": "Competition Overview",
                "#sub1_label5": "Number of Participants",
                "#sub1_label6": "Game in Use",
                "#sub1_label7": "Competition Rules",
                "#sub1_label8": "Duration",
                "#sub1_label9": "Trainer Ranking",
                "#sub1_label10": "Pokﾃｩmon Ranking",
                "#sub1_label11": "Choose Pokﾃｩmon",
                "#sub1_label12": "Filter",
                "#sub1_label13": "View Your Ranking"
              },
              battle_teamPageTexts: {
                "#title-text": "Battle Team Pokﾃｩmon"
              },
              regulation_listPageTexts: {
                "#title-text": "Downloadable Regulations"
              },
              regulation_pokelistPageTexts: {
                "#title-text": "Eligible Pokﾃｩmon"
              },
              event_calendar: {
                "#title-text": "Event Calendar",
                "#option-country": "Current Region",
                "#sunday": "Sunday",
                "#monday": "Monday",
                "#tuesday": "Tuesday",
                "#wednesday": "Wednesday",
                "#thursday": "Thursday",
                "#friday": "Friday",
                "#saturday": "Saturday"
              },
              rankmatch_pokemonranking_detailPageTexts: {
                "#title-text": "Ranked Battles",
                "#subtitle1-text": "Pokﾃｩmon Details",
                ".battle-team-tab-text": "Details",
                ".when-win-tab-text": "Victories",
                ".when-lose-tab-text": "Defeats",
                "kind-tab-battle-team": "Top 10 Pokﾃｩmon seen in Battle Teams with this Pokﾃｩmon",
                "kind-tab-battle-win": "Top 10 Pokﾃｩmon defeated by this Pokﾃｩmon",
                "kind-tab-battle-lose": "Top 10 Pokﾃｩmon used to defeat this Pokﾃｩmon",
                "kind-tab-battle-waza": "Moves",
                "kind-tab-battle-waza-win": "Top 10 moves used by this Pokﾃｩmon to defeat others",
                "kind-tab-battle-waza-lose": "Top 10 moves used to defeat this Pokﾃｩmon",
                "kind-tab-battle-tokusei": "Ability",
                "kind-tab-battle-item": "Item",
                "kind-tab-battle-seikaku": "Nature"
              },
              internetcompetition_pokemonranking_detail: {
                "#title-text": "Online Competitions",
                "#subtitle1-text": "Pokﾃｩmon Details",
                ".battle-team-tab-text": "Details",
                ".when-win-tab-text": "Victories",
                ".when-lose-tab-text": "Defeats",
                "kind-tab-battle-team": "Top 10 Pokﾃｩmon seen in Battle Teams with this Pokﾃｩmon",
                "kind-tab-battle-win": "Top 10 Pokﾃｩmon defeated by this Pokﾃｩmon",
                "kind-tab-battle-lose": "Top 10 Pokﾃｩmon used to defeat this Pokﾃｩmon",
                "kind-tab-battle-waza": "Moves",
                "kind-tab-battle-waza-win": "Top 10 moves used by this Pokﾃｩmon to defeat others",
                "kind-tab-battle-waza-lose": "Top 10 moves used to defeat this Pokﾃｩmon",
                "kind-tab-battle-tokusei": "Ability",
                "kind-tab-battle-item": "Item",
                "kind-tab-battle-seikaku": "Nature"
              },
              friendcompetition_pokemonranking_detail: {
                "#title-text": "Friendly Competitions",
                "#subtitle1-text": "Pokﾃｩmon Details",
                ".battle-team-tab-text": "Details",
                ".when-win-tab-text": "Victories",
                ".when-lose-tab-text": "Defeats",
                "kind-tab-battle-team": "Top 10 Pokﾃｩmon seen in Battle Teams with this Pokﾃｩmon",
                "kind-tab-battle-win": "Top 10 Pokﾃｩmon defeated by this Pokﾃｩmon",
                "kind-tab-battle-lose": "Top 10 Pokﾃｩmon used to defeat this Pokﾃｩmon",
                "kind-tab-battle-waza": "Moves",
                "kind-tab-battle-waza-win": "Top 10 moves used by this Pokﾃｩmon to defeat others",
                "kind-tab-battle-waza-lose": "Top 10 moves used to defeat this Pokﾃｩmon",
                "kind-tab-battle-tokusei": "Ability",
                "kind-tab-battle-item": "Item",
                "kind-tab-battle-seikaku": "Nature"
              }
            }, this.common = {
              ui_texts: {
                ".winIconText": "WIN",
                ".loseIconText": "LOSE",
                ".drawIconText": "DRAW",
                ".joinedNumLabel": "",
                ".periodContainer>.label": "Duration",
                competionRule: "Competition Rules",
                ".rateLabelContainer>.label": "Rating",
                ".prevButton>.labelContainer>.label": "Previous 10",
                ".nextButton>.labelContainer>.label": "Next 10",
                ".rank-beginner-text": "Beginner Tier",
                ".rank-monster-text": "Pokﾃｩ Ball Tier",
                ".rank-super-text": "Great Ball Tier",
                ".rank-hyper-text": "Ultra Ball Tier",
                ".rank-master-text": "Master Ball Tier",
                ".rental-label-text": "Rental Team",
                ".buttle-team-button-text": "Display Battle Teams"
              },
              unit: {
                rank: "Rank: %d",
                win: "W: %d",
                lose: "L: %d",
                draw: "T: %d",
                "season-result": '<span class="ranking-result-margin-right">Rank: %d</span><span class="ranking-result-margin-right">W: %d</span><span class="ranking-result-margin-right">L: %d</span>T: %d',
                "season-result2": '<span class="ranking-result-margin-right">W: %d</span><span class="ranking-result-margin-right">L: %d</span>T: %d',
                "online-result": '<span class="ranking-result-margin-right">W: %d</span><span class="ranking-result-margin-right">L: %d</span>T: %d',
                "friend-result": '<span class="ranking-result-margin-right">Rank: %d</span> <span class="ranking-result-margin-right">W: %d</span><span class="ranking-result-margin-right">L: %d</span> T: %d'
              },
              roms: {
                Sw: "Pokﾃｩmon Sword",
                Sh: "Pokﾃｩmon Shield"
              },
              rule: {
                0: "Single",
                1: "Double"
              },
              season: "Season",
              nojoin: "Not Entered",
              nowAggr: "Gathering Results...",
              langCode: ["JPN", "USA", "FRA", "ITA", "DEU", "ESP", "KOR", "SCH", "TCH"],
              country: {
                100: "Africa",
                600: "North America",
                601: "Canada",
                602: "USA - North",
                603: "USA - East",
                604: "USA - West",
                605: "USA - South",
                699: "Other",
                700: "Latin America",
                701: "Chile",
                702: "Mexico",
                703: "Brazil",
                704: "Argentina",
                705: "Bolivia",
                706: "Colombia",
                707: "Paraguay",
                708: "Peru",
                709: "Ecuador",
                799: "Other",
                800: "Oceania",
                801: "Australia",
                802: "New Zealand",
                899: "Other",
                300: "Asia-Pacific",
                302: "China",
                303: "Hong Kong",
                304: "Japan",
                305: "Korea",
                306: "Malaysia",
                307: "Philippines",
                308: "Singapore",
                309: "Taiwan",
                310: "Thailand",
                399: "Other",
                400: "Europe",
                401: "Austria",
                402: "Belgium",
                403: "France",
                404: "Germany",
                405: "Ireland",
                406: "Italy",
                407: "Netherlands",
                408: "Portugal",
                409: "Spain",
                410: "Switzerland",
                411: "UK",
                412: "Denmark",
                413: "Finland",
                414: "Norway",
                415: "Sweden",
                416: "Poland",
                499: "Other",
                500: "Middle East"
              },
              footerBackLinkLabel: {
                backLinkTop: "Battle Data",
                backLinkInternetComp: "Online Competitions",
                backMyResult: "Your Battle Records",
                backMyInternetComp: "Competitions You Participated In",
                backLinkMyInternetCompDetail: "Online Competition Result Details",
                backLinkMyRankMatchDetail: "Ranked Battle Result Details",
                backLinkMyFriendCompDetail: "Friendly Competition Result Details",
                backLinkFriendCompList: "List of Friendly Competitions",
                backLinkRankBattle: "Ranked Battles",
                backLinkFriendComp: "Friendly Competitions"
              },
              rankBattleRankingNoteDialog: {
                title: "Your ranking couldn't be shown.",
                note1: "For ongoing events, only ranks 1窶�1,000 are shown.<br />",
                note2: "Rankings may not be fully up-to-date,<br />as ranking calculations can take time.<br />",
                note3: "Please wait awhile and check again."
              },
              dialogMsg: {
                ok: "Close"
              }
            }, this.dex = {
              poke: ["Bulbasaur", "Ivysaur", "Venusaur", "Charmander", "Charmeleon", "Charizard", "Squirtle", "Wartortle", "Blastoise", "Caterpie", "Metapod", "Butterfree", "Weedle", "Kakuna", "Beedrill", "Pidgey", "Pidgeotto", "Pidgeot", "Rattata", "Raticate", "Spearow", "Fearow", "Ekans", "Arbok", "Pikachu", "Raichu", "Sandshrew", "Sandslash", "Nidoran笙", "Nidorina", "Nidoqueen", "Nidoran笙�", "Nidorino", "Nidoking", "Clefairy", "Clefable", "Vulpix", "Ninetales", "Jigglypuff", "Wigglytuff", "Zubat", "Golbat", "Oddish", "Gloom", "Vileplume", "Paras", "Parasect", "Venonat", "Venomoth", "Diglett", "Dugtrio", "Meowth", "Persian", "Psyduck", "Golduck", "Mankey", "Primeape", "Growlithe", "Arcanine", "Poliwag", "Poliwhirl", "Poliwrath", "Abra", "Kadabra", "Alakazam", "Machop", "Machoke", "Machamp", "Bellsprout", "Weepinbell", "Victreebel", "Tentacool", "Tentacruel", "Geodude", "Graveler", "Golem", "Ponyta", "Rapidash", "Slowpoke", "Slowbro", "Magnemite", "Magneton", "Farfetch'd", "Doduo", "Dodrio", "Seel", "Dewgong", "Grimer", "Muk", "Shellder", "Cloyster", "Gastly", "Haunter", "Gengar", "Onix", "Drowzee", "Hypno", "Krabby", "Kingler", "Voltorb", "Electrode", "Exeggcute", "Exeggutor", "Cubone", "Marowak", "Hitmonlee", "Hitmonchan", "Lickitung", "Koffing", "Weezing", "Rhyhorn", "Rhydon", "Chansey", "Tangela", "Kangaskhan", "Horsea", "Seadra", "Goldeen", "Seaking", "Staryu", "Starmie", "Mr. Mime", "Scyther", "Jynx", "Electabuzz", "Magmar", "Pinsir", "Tauros", "Magikarp", "Gyarados", "Lapras", "Ditto", "Eevee", "Vaporeon", "Jolteon", "Flareon", "Porygon", "Omanyte", "Omastar", "Kabuto", "Kabutops", "Aerodactyl", "Snorlax", "Articuno", "Zapdos", "Moltres", "Dratini", "Dragonair", "Dragonite", "Mewtwo", "Mew", "Chikorita", "Bayleef", "Meganium", "Cyndaquil", "Quilava", "Typhlosion", "Totodile", "Croconaw", "Feraligatr", "Sentret", "Furret", "Hoothoot", "Noctowl", "Ledyba", "Ledian", "Spinarak", "Ariados", "Crobat", "Chinchou", "Lanturn", "Pichu", "Cleffa", "Igglybuff", "Togepi", "Togetic", "Natu", "Xatu", "Mareep", "Flaaffy", "Ampharos", "Bellossom", "Marill", "Azumarill", "Sudowoodo", "Politoed", "Hoppip", "Skiploom", "Jumpluff", "Aipom", "Sunkern", "Sunflora", "Yanma", "Wooper", "Quagsire", "Espeon", "Umbreon", "Murkrow", "Slowking", "Misdreavus", "Unown", "Wobbuffet", "Girafarig", "Pineco", "Forretress", "Dunsparce", "Gligar", "Steelix", "Snubbull", "Granbull", "Qwilfish", "Scizor", "Shuckle", "Heracross", "Sneasel", "Teddiursa", "Ursaring", "Slugma", "Magcargo", "Swinub", "Piloswine", "Corsola", "Remoraid", "Octillery", "Delibird", "Mantine", "Skarmory", "Houndour", "Houndoom", "Kingdra", "Phanpy", "Donphan", "Porygon2", "Stantler", "Smeargle", "Tyrogue", "Hitmontop", "Smoochum", "Elekid", "Magby", "Miltank", "Blissey", "Raikou", "Entei", "Suicune", "Larvitar", "Pupitar", "Tyranitar", "Lugia", "Ho-Oh", "Celebi", "Treecko", "Grovyle", "Sceptile", "Torchic", "Combusken", "Blaziken", "Mudkip", "Marshtomp", "Swampert", "Poochyena", "Mightyena", "Zigzagoon", "Linoone", "Wurmple", "Silcoon", "Beautifly", "Cascoon", "Dustox", "Lotad", "Lombre", "Ludicolo", "Seedot", "Nuzleaf", "Shiftry", "Taillow", "Swellow", "Wingull", "Pelipper", "Ralts", "Kirlia", "Gardevoir", "Surskit", "Masquerain", "Shroomish", "Breloom", "Slakoth", "Vigoroth", "Slaking", "Nincada", "Ninjask", "Shedinja", "Whismur", "Loudred", "Exploud", "Makuhita", "Hariyama", "Azurill", "Nosepass", "Skitty", "Delcatty", "Sableye", "Mawile", "Aron", "Lairon", "Aggron", "Meditite", "Medicham", "Electrike", "Manectric", "Plusle", "Minun", "Volbeat", "Illumise", "Roselia", "Gulpin", "Swalot", "Carvanha", "Sharpedo", "Wailmer", "Wailord", "Numel", "Camerupt", "Torkoal", "Spoink", "Grumpig", "Spinda", "Trapinch", "Vibrava", "Flygon", "Cacnea", "Cacturne", "Swablu", "Altaria", "Zangoose", "Seviper", "Lunatone", "Solrock", "Barboach", "Whiscash", "Corphish", "Crawdaunt", "Baltoy", "Claydol", "Lileep", "Cradily", "Anorith", "Armaldo", "Feebas", "Milotic", "Castform", "Kecleon", "Shuppet", "Banette", "Duskull", "Dusclops", "Tropius", "Chimecho", "Absol", "Wynaut", "Snorunt", "Glalie", "Spheal", "Sealeo", "Walrein", "Clamperl", "Huntail", "Gorebyss", "Relicanth", "Luvdisc", "Bagon", "Shelgon", "Salamence", "Beldum", "Metang", "Metagross", "Regirock", "Regice", "Registeel", "Latias", "Latios", "Kyogre", "Groudon", "Rayquaza", "Jirachi", "Deoxys", "Turtwig", "Grotle", "Torterra", "Chimchar", "Monferno", "Infernape", "Piplup", "Prinplup", "Empoleon", "Starly", "Staravia", "Staraptor", "Bidoof", "Bibarel", "Kricketot", "Kricketune", "Shinx", "Luxio", "Luxray", "Budew", "Roserade", "Cranidos", "Rampardos", "Shieldon", "Bastiodon", "Burmy", "Wormadam", "Mothim", "Combee", "Vespiquen", "Pachirisu", "Buizel", "Floatzel", "Cherubi", "Cherrim", "Shellos", "Gastrodon", "Ambipom", "Drifloon", "Drifblim", "Buneary", "Lopunny", "Mismagius", "Honchkrow", "Glameow", "Purugly", "Chingling", "Stunky", "Skuntank", "Bronzor", "Bronzong", "Bonsly", "Mime Jr.", "Happiny", "Chatot", "Spiritomb", "Gible", "Gabite", "Garchomp", "Munchlax", "Riolu", "Lucario", "Hippopotas", "Hippowdon", "Skorupi", "Drapion", "Croagunk", "Toxicroak", "Carnivine", "Finneon", "Lumineon", "Mantyke", "Snover", "Abomasnow", "Weavile", "Magnezone", "Lickilicky", "Rhyperior", "Tangrowth", "Electivire", "Magmortar", "Togekiss", "Yanmega", "Leafeon", "Glaceon", "Gliscor", "Mamoswine", "Porygon-Z", "Gallade", "Probopass", "Dusknoir", "Froslass", "Rotom", "Uxie", "Mesprit", "Azelf", "Dialga", "Palkia", "Heatran", "Regigigas", "Giratina", "Cresselia", "Phione", "Manaphy", "Darkrai", "Shaymin", "Arceus", "Victini", "Snivy", "Servine", "Serperior", "Tepig", "Pignite", "Emboar", "Oshawott", "Dewott", "Samurott", "Patrat", "Watchog", "Lillipup", "Herdier", "Stoutland", "Purrloin", "Liepard", "Pansage", "Simisage", "Pansear", "Simisear", "Panpour", "Simipour", "Munna", "Musharna", "Pidove", "Tranquill", "Unfezant", "Blitzle", "Zebstrika", "Roggenrola", "Boldore", "Gigalith", "Woobat", "Swoobat", "Drilbur", "Excadrill", "Audino", "Timburr", "Gurdurr", "Conkeldurr", "Tympole", "Palpitoad", "Seismitoad", "Throh", "Sawk", "Sewaddle", "Swadloon", "Leavanny", "Venipede", "Whirlipede", "Scolipede", "Cottonee", "Whimsicott", "Petilil", "Lilligant", "Basculin", "Sandile", "Krokorok", "Krookodile", "Darumaka", "Darmanitan", "Maractus", "Dwebble", "Crustle", "Scraggy", "Scrafty", "Sigilyph", "Yamask", "Cofagrigus", "Tirtouga", "Carracosta", "Archen", "Archeops", "Trubbish", "Garbodor", "Zorua", "Zoroark", "Minccino", "Cinccino", "Gothita", "Gothorita", "Gothitelle", "Solosis", "Duosion", "Reuniclus", "Ducklett", "Swanna", "Vanillite", "Vanillish", "Vanilluxe", "Deerling", "Sawsbuck", "Emolga", "Karrablast", "Escavalier", "Foongus", "Amoonguss", "Frillish", "Jellicent", "Alomomola", "Joltik", "Galvantula", "Ferroseed", "Ferrothorn", "Klink", "Klang", "Klinklang", "Tynamo", "Eelektrik", "Eelektross", "Elgyem", "Beheeyem", "Litwick", "Lampent", "Chandelure", "Axew", "Fraxure", "Haxorus", "Cubchoo", "Beartic", "Cryogonal", "Shelmet", "Accelgor", "Stunfisk", "Mienfoo", "Mienshao", "Druddigon", "Golett", "Golurk", "Pawniard", "Bisharp", "Bouffalant", "Rufflet", "Braviary", "Vullaby", "Mandibuzz", "Heatmor", "Durant", "Deino", "Zweilous", "Hydreigon", "Larvesta", "Volcarona", "Cobalion", "Terrakion", "Virizion", "Tornadus", "Thundurus", "Reshiram", "Zekrom", "Landorus", "Kyurem", "Keldeo", "Meloetta", "Genesect", "Chespin", "Quilladin", "Chesnaught", "Fennekin", "Braixen", "Delphox", "Froakie", "Frogadier", "Greninja", "Bunnelby", "Diggersby", "Fletchling", "Fletchinder", "Talonflame", "Scatterbug", "Spewpa", "Vivillon", "Litleo", "Pyroar", "Flabﾃｩbﾃｩ", "Floette", "Florges", "Skiddo", "Gogoat", "Pancham", "Pangoro", "Furfrou", "Espurr", "Meowstic", "Honedge", "Doublade", "Aegislash", "Spritzee", "Aromatisse", "Swirlix", "Slurpuff", "Inkay", "Malamar", "Binacle", "Barbaracle", "Skrelp", "Dragalge", "Clauncher", "Clawitzer", "Helioptile", "Heliolisk", "Tyrunt", "Tyrantrum", "Amaura", "Aurorus", "Sylveon", "Hawlucha", "Dedenne", "Carbink", "Goomy", "Sliggoo", "Goodra", "Klefki", "Phantump", "Trevenant", "Pumpkaboo", "Gourgeist", "Bergmite", "Avalugg", "Noibat", "Noivern", "Xerneas", "Yveltal", "Zygarde", "Diancie", "Hoopa", "Volcanion", "Rowlet", "Dartrix", "Decidueye", "Litten", "Torracat", "Incineroar", "Popplio", "Brionne", "Primarina", "Pikipek", "Trumbeak", "Toucannon", "Yungoos", "Gumshoos", "Grubbin", "Charjabug", "Vikavolt", "Crabrawler", "Crabominable", "Oricorio", "Cutiefly", "Ribombee", "Rockruff", "Lycanroc", "Wishiwashi", "Mareanie", "Toxapex", "Mudbray", "Mudsdale", "Dewpider", "Araquanid", "Fomantis", "Lurantis", "Morelull", "Shiinotic", "Salandit", "Salazzle", "Stufful", "Bewear", "Bounsweet", "Steenee", "Tsareena", "Comfey", "Oranguru", "Passimian", "Wimpod", "Golisopod", "Sandygast", "Palossand", "Pyukumuku", "Type: Null", "Silvally", "Minior", "Komala", "Turtonator", "Togedemaru", "Mimikyu", "Bruxish", "Drampa", "Dhelmise", "Jangmo-o", "Hakamo-o", "Kommo-o", "Tapu Koko", "Tapu Lele", "Tapu Bulu", "Tapu Fini", "Cosmog", "Cosmoem", "Solgaleo", "Lunala", "Nihilego", "Buzzwole", "Pheromosa", "Xurkitree", "Celesteela", "Kartana", "Guzzlord", "Necrozma", "Magearna", "Marshadow", "Poipole", "Naganadel", "Stakataka", "Blacephalon", "Zeraora", "Meltan", "Melmetal", "Grookey", "Thwackey", "Rillaboom", "Scorbunny", "Raboot", "Cinderace", "Sobble", "Drizzile", "Inteleon", "Skwovet", "Greedent", "Rookidee", "Corvisquire", "Corviknight", "Blipbug", "Dottler", "Orbeetle", "Nickit", "Thievul", "Gossifleur", "Eldegoss", "Wooloo", "Dubwool", "Chewtle", "Drednaw", "Yamper", "Boltund", "Rolycoly", "Carkol", "Coalossal", "Applin", "Flapple", "Appletun", "Silicobra", "Sandaconda", "Cramorant", "Arrokuda", "Barraskewda", "Toxel", "Toxtricity", "Sizzlipede", "Centiskorch", "Clobbopus", "Grapploct", "Sinistea", "Polteageist", "Hatenna", "Hattrem", "Hatterene", "Impidimp", "Morgrem", "Grimmsnarl", "Obstagoon", "Perrserker", "Cursola", "Sirfetch'd", "Mr. Rime", "Runerigus", "Milcery", "Alcremie", "Falinks", "Pincurchin", "Snom", "Frosmoth", "Stonjourner", "Eiscue", "Indeedee", "Morpeko", "Cufant", "Copperajah", "Dracozolt", "Arctozolt", "Dracovish", "Arctovish", "Duraludon", "Dreepy", "Drakloak", "Dragapult", "Zacian", "Zamazenta", "Eternatus", "Kubfu", "Urshifu", "Zarude", "Regieleki", "Regidrago", "Glastrier", "Spectrier", "Calyrex", "Wyrdeer", "Kleavor", "Ursaluna", "Basculegion", "Sneasler", "Overqwil", "Enamorus", "Sprigatito", "Floragato", "Meowscarada", "Fuecoco", "Crocalor", "Skeledirge", "Quaxly", "Quaxwell", "Quaquaval", "Lechonk", "Oinkologne", "Tarountula", "Spidops", "Nymble", "Lokix", "Pawmi", "Pawmo", "Pawmot", "Tandemaus", "Maushold", "Fidough", "Dachsbun", "Smoliv", "Dolliv", "Arboliva", "Squawkabilly", "Nacli", "Naclstack", "Garganacl", "Charcadet", "Armarouge", "Ceruledge", "Tadbulb", "Bellibolt", "Wattrel", "Kilowattrel", "Maschiff", "Mabosstiff", "Shroodle", "Grafaiai", "Bramblin", "Brambleghast", "Toedscool", "Toedscruel", "Klawf", "Capsakid", "Scovillain", "Rellor", "Rabsca", "Flittle", "Espathra", "Tinkatink", "Tinkatuff", "Tinkaton", "Wiglett", "Wugtrio", "Bombirdier", "Finizen", "Palafin", "Varoom", "Revavroom", "Cyclizar", "Orthworm", "Glimmet", "Glimmora", "Greavard", "Houndstone", "Flamigo", "Cetoddle", "Cetitan", "Veluza", "Dondozo", "Tatsugiri", "Annihilape", "Clodsire", "Farigiraf", "Dudunsparce", "Kingambit", "Great Tusk", "Scream Tail", "Brute Bonnet", "Flutter Mane", "Slither Wing", "Sandy Shocks", "Iron Treads", "Iron Bundle", "Iron Hands", "Iron Jugulis", "Iron Moth", "Iron Thorns", "Frigibax", "Arctibax", "Baxcalibur", "Gimmighoul", "Gholdengo", "Wo-Chien", "Chien-Pao", "Ting-Lu", "Chi-Yu", "Roaring Moon", "Iron Valiant", "Koraidon", "Miraidon", "Walking Wake", "Iron Leaves", "Dipplin", "Poltchageist", "Sinistcha", "Okidogi", "Munkidori", "Fezandipiti", "Ogerpon"],
              pokeType: ["Normal", "Fighting", "Flying", "Poison", "Ground", "Rock", "Bug", "Ghost", "Steel", "Fire", "Water", "Grass", "Electric", "Psychic", "Ice", "Dragon", "Dark", "Fairy"],
              waza: {
                1: "Pound",
                2: "Karate Chop",
                3: "Double Slap",
                4: "Comet Punch",
                5: "Mega Punch",
                6: "Pay Day",
                7: "Fire Punch",
                8: "Ice Punch",
                9: "Thunder Punch",
                10: "Scratch",
                11: "Vise Grip",
                12: "Guillotine",
                13: "Razor Wind",
                14: "Swords Dance",
                15: "Cut",
                16: "Gust",
                17: "Wing Attack",
                18: "Whirlwind",
                19: "Fly",
                20: "Bind",
                21: "Slam",
                22: "Vine Whip",
                23: "Stomp",
                24: "Double Kick",
                25: "Mega Kick",
                26: "Jump Kick",
                27: "Rolling Kick",
                28: "Sand Attack",
                29: "Headbutt",
                30: "Horn Attack",
                31: "Fury Attack",
                32: "Horn Drill",
                33: "Tackle",
                34: "Body Slam",
                35: "Wrap",
                36: "Take Down",
                37: "Thrash",
                38: "Double-Edge",
                39: "Tail Whip",
                40: "Poison Sting",
                41: "Twineedle",
                42: "Pin Missile",
                43: "Leer",
                44: "Bite",
                45: "Growl",
                46: "Roar",
                47: "Sing",
                48: "Supersonic",
                49: "Sonic Boom",
                50: "Disable",
                51: "Acid",
                52: "Ember",
                53: "Flamethrower",
                54: "Mist",
                55: "Water Gun",
                56: "Hydro Pump",
                57: "Surf",
                58: "Ice Beam",
                59: "Blizzard",
                60: "Psybeam",
                61: "Bubble Beam",
                62: "Aurora Beam",
                63: "Hyper Beam",
                64: "Peck",
                65: "Drill Peck",
                66: "Submission",
                67: "Low Kick",
                68: "Counter",
                69: "Seismic Toss",
                70: "Strength",
                71: "Absorb",
                72: "Mega Drain",
                73: "Leech Seed",
                74: "Growth",
                75: "Razor Leaf",
                76: "Solar Beam",
                77: "Poison Powder",
                78: "Stun Spore",
                79: "Sleep Powder",
                80: "Petal Dance",
                81: "String Shot",
                82: "Dragon Rage",
                83: "Fire Spin",
                84: "Thunder Shock",
                85: "Thunderbolt",
                86: "Thunder Wave",
                87: "Thunder",
                88: "Rock Throw",
                89: "Earthquake",
                90: "Fissure",
                91: "Dig",
                92: "Toxic",
                93: "Confusion",
                94: "Psychic",
                95: "Hypnosis",
                96: "Meditate",
                97: "Agility",
                98: "Quick Attack",
                99: "Rage",
                100: "Teleport",
                101: "Night Shade",
                102: "Mimic",
                103: "Screech",
                104: "Double Team",
                105: "Recover",
                106: "Harden",
                107: "Minimize",
                108: "Smokescreen",
                109: "Confuse Ray",
                110: "Withdraw",
                111: "Defense Curl",
                112: "Barrier",
                113: "Light Screen",
                114: "Haze",
                115: "Reflect",
                116: "Focus Energy",
                117: "Bide",
                118: "Metronome",
                119: "Mirror Move",
                120: "Self-Destruct",
                121: "Egg Bomb",
                122: "Lick",
                123: "Smog",
                124: "Sludge",
                125: "Bone Club",
                126: "Fire Blast",
                127: "Waterfall",
                128: "Clamp",
                129: "Swift",
                130: "Skull Bash",
                131: "Spike Cannon",
                132: "Constrict",
                133: "Amnesia",
                134: "Kinesis",
                135: "Soft-Boiled",
                136: "High Jump Kick",
                137: "Glare",
                138: "Dream Eater",
                139: "Poison Gas",
                140: "Barrage",
                141: "Leech Life",
                142: "Lovely Kiss",
                143: "Sky Attack",
                144: "Transform",
                145: "Bubble",
                146: "Dizzy Punch",
                147: "Spore",
                148: "Flash",
                149: "Psywave",
                150: "Splash",
                151: "Acid Armor",
                152: "Crabhammer",
                153: "Explosion",
                154: "Fury Swipes",
                155: "Bonemerang",
                156: "Rest",
                157: "Rock Slide",
                158: "Hyper Fang",
                159: "Sharpen",
                160: "Conversion",
                161: "Tri Attack",
                162: "Super Fang",
                163: "Slash",
                164: "Substitute",
                165: "Struggle",
                166: "Sketch",
                167: "Triple Kick",
                168: "Thief",
                169: "Spider Web",
                170: "Mind Reader",
                171: "Nightmare",
                172: "Flame Wheel",
                173: "Snore",
                174: "Curse",
                175: "Flail",
                176: "Conversion 2",
                177: "Aeroblast",
                178: "Cotton Spore",
                179: "Reversal",
                180: "Spite",
                181: "Powder Snow",
                182: "Protect",
                183: "Mach Punch",
                184: "Scary Face",
                185: "Feint Attack",
                186: "Sweet Kiss",
                187: "Belly Drum",
                188: "Sludge Bomb",
                189: "Mud-Slap",
                190: "Octazooka",
                191: "Spikes",
                192: "Zap Cannon",
                193: "Foresight",
                194: "Destiny Bond",
                195: "Perish Song",
                196: "Icy Wind",
                197: "Detect",
                198: "Bone Rush",
                199: "Lock-On",
                200: "Outrage",
                201: "Sandstorm",
                202: "Giga Drain",
                203: "Endure",
                204: "Charm",
                205: "Rollout",
                206: "False Swipe",
                207: "Swagger",
                208: "Milk Drink",
                209: "Spark",
                210: "Fury Cutter",
                211: "Steel Wing",
                212: "Mean Look",
                213: "Attract",
                214: "Sleep Talk",
                215: "Heal Bell",
                216: "Return",
                217: "Present",
                218: "Frustration",
                219: "Safeguard",
                220: "Pain Split",
                221: "Sacred Fire",
                222: "Magnitude",
                223: "Dynamic Punch",
                224: "Megahorn",
                225: "Dragon Breath",
                226: "Baton Pass",
                227: "Encore",
                228: "Pursuit",
                229: "Rapid Spin",
                230: "Sweet Scent",
                231: "Iron Tail",
                232: "Metal Claw",
                233: "Vital Throw",
                234: "Morning Sun",
                235: "Synthesis",
                236: "Moonlight",
                237: "Hidden Power",
                238: "Cross Chop",
                239: "Twister",
                240: "Rain Dance",
                241: "Sunny Day",
                242: "Crunch",
                243: "Mirror Coat",
                244: "Psych Up",
                245: "Extreme Speed",
                246: "Ancient Power",
                247: "Shadow Ball",
                248: "Future Sight",
                249: "Rock Smash",
                250: "Whirlpool",
                251: "Beat Up",
                252: "Fake Out",
                253: "Uproar",
                254: "Stockpile",
                255: "Spit Up",
                256: "Swallow",
                257: "Heat Wave",
                258: "Hail",
                259: "Torment",
                260: "Flatter",
                261: "Will-O-Wisp",
                262: "Memento",
                263: "Facade",
                264: "Focus Punch",
                265: "Smelling Salts",
                266: "Follow Me",
                267: "Nature Power",
                268: "Charge",
                269: "Taunt",
                270: "Helping Hand",
                271: "Trick",
                272: "Role Play",
                273: "Wish",
                274: "Assist",
                275: "Ingrain",
                276: "Superpower",
                277: "Magic Coat",
                278: "Recycle",
                279: "Revenge",
                280: "Brick Break",
                281: "Yawn",
                282: "Knock Off",
                283: "Endeavor",
                284: "Eruption",
                285: "Skill Swap",
                286: "Imprison",
                287: "Refresh",
                288: "Grudge",
                289: "Snatch",
                290: "Secret Power",
                291: "Dive",
                292: "Arm Thrust",
                293: "Camouflage",
                294: "Tail Glow",
                295: "Luster Purge",
                296: "Mist Ball",
                297: "Feather Dance",
                298: "Teeter Dance",
                299: "Blaze Kick",
                300: "Mud Sport",
                301: "Ice Ball",
                302: "Needle Arm",
                303: "Slack Off",
                304: "Hyper Voice",
                305: "Poison Fang",
                306: "Crush Claw",
                307: "Blast Burn",
                308: "Hydro Cannon",
                309: "Meteor Mash",
                310: "Astonish",
                311: "Weather Ball",
                312: "Aromatherapy",
                313: "Fake Tears",
                314: "Air Cutter",
                315: "Overheat",
                316: "Odor Sleuth",
                317: "Rock Tomb",
                318: "Silver Wind",
                319: "Metal Sound",
                320: "Grass Whistle",
                321: "Tickle",
                322: "Cosmic Power",
                323: "Water Spout",
                324: "Signal Beam",
                325: "Shadow Punch",
                326: "Extrasensory",
                327: "Sky Uppercut",
                328: "Sand Tomb",
                329: "Sheer Cold",
                330: "Muddy Water",
                331: "Bullet Seed",
                332: "Aerial Ace",
                333: "Icicle Spear",
                334: "Iron Defense",
                335: "Block",
                336: "Howl",
                337: "Dragon Claw",
                338: "Frenzy Plant",
                339: "Bulk Up",
                340: "Bounce",
                341: "Mud Shot",
                342: "Poison Tail",
                343: "Covet",
                344: "Volt Tackle",
                345: "Magical Leaf",
                346: "Water Sport",
                347: "Calm Mind",
                348: "Leaf Blade",
                349: "Dragon Dance",
                350: "Rock Blast",
                351: "Shock Wave",
                352: "Water Pulse",
                353: "Doom Desire",
                354: "Psycho Boost",
                355: "Roost",
                356: "Gravity",
                357: "Miracle Eye",
                358: "Wake-Up Slap",
                359: "Hammer Arm",
                360: "Gyro Ball",
                361: "Healing Wish",
                362: "Brine",
                363: "Natural Gift",
                364: "Feint",
                365: "Pluck",
                366: "Tailwind",
                367: "Acupressure",
                368: "Metal Burst",
                369: "U-turn",
                370: "Close Combat",
                371: "Payback",
                372: "Assurance",
                373: "Embargo",
                374: "Fling",
                375: "Psycho Shift",
                376: "Trump Card",
                377: "Heal Block",
                378: "Wring Out",
                379: "Power Trick",
                380: "Gastro Acid",
                381: "Lucky Chant",
                382: "Me First",
                383: "Copycat",
                384: "Power Swap",
                385: "Guard Swap",
                386: "Punishment",
                387: "Last Resort",
                388: "Worry Seed",
                389: "Sucker Punch",
                390: "Toxic Spikes",
                391: "Heart Swap",
                392: "Aqua Ring",
                393: "Magnet Rise",
                394: "Flare Blitz",
                395: "Force Palm",
                396: "Aura Sphere",
                397: "Rock Polish",
                398: "Poison Jab",
                399: "Dark Pulse",
                400: "Night Slash",
                401: "Aqua Tail",
                402: "Seed Bomb",
                403: "Air Slash",
                404: "X-Scissor",
                405: "Bug Buzz",
                406: "Dragon Pulse",
                407: "Dragon Rush",
                408: "Power Gem",
                409: "Drain Punch",
                410: "Vacuum Wave",
                411: "Focus Blast",
                412: "Energy Ball",
                413: "Brave Bird",
                414: "Earth Power",
                415: "Switcheroo",
                416: "Giga Impact",
                417: "Nasty Plot",
                418: "Bullet Punch",
                419: "Avalanche",
                420: "Ice Shard",
                421: "Shadow Claw",
                422: "Thunder Fang",
                423: "Ice Fang",
                424: "Fire Fang",
                425: "Shadow Sneak",
                426: "Mud Bomb",
                427: "Psycho Cut",
                428: "Zen Headbutt",
                429: "Mirror Shot",
                430: "Flash Cannon",
                431: "Rock Climb",
                432: "Defog",
                433: "Trick Room",
                434: "Draco Meteor",
                435: "Discharge",
                436: "Lava Plume",
                437: "Leaf Storm",
                438: "Power Whip",
                439: "Rock Wrecker",
                440: "Cross Poison",
                441: "Gunk Shot",
                442: "Iron Head",
                443: "Magnet Bomb",
                444: "Stone Edge",
                445: "Captivate",
                446: "Stealth Rock",
                447: "Grass Knot",
                448: "Chatter",
                449: "Judgment",
                450: "Bug Bite",
                451: "Charge Beam",
                452: "Wood Hammer",
                453: "Aqua Jet",
                454: "Attack Order",
                455: "Defend Order",
                456: "Heal Order",
                457: "Head Smash",
                458: "Double Hit",
                459: "Roar of Time",
                460: "Spacial Rend",
                461: "Lunar Dance",
                462: "Crush Grip",
                463: "Magma Storm",
                464: "Dark Void",
                465: "Seed Flare",
                466: "Ominous Wind",
                467: "Shadow Force",
                468: "Hone Claws",
                469: "Wide Guard",
                470: "Guard Split",
                471: "Power Split",
                472: "Wonder Room",
                473: "Psyshock",
                474: "Venoshock",
                475: "Autotomize",
                476: "Rage Powder",
                477: "Telekinesis",
                478: "Magic Room",
                479: "Smack Down",
                480: "Storm Throw",
                481: "Flame Burst",
                482: "Sludge Wave",
                483: "Quiver Dance",
                484: "Heavy Slam",
                485: "Synchronoise",
                486: "Electro Ball",
                487: "Soak",
                488: "Flame Charge",
                489: "Coil",
                490: "Low Sweep",
                491: "Acid Spray",
                492: "Foul Play",
                493: "Simple Beam",
                494: "Entrainment",
                495: "After You",
                496: "Round",
                497: "Echoed Voice",
                498: "Chip Away",
                499: "Clear Smog",
                500: "Stored Power",
                501: "Quick Guard",
                502: "Ally Switch",
                503: "Scald",
                504: "Shell Smash",
                505: "Heal Pulse",
                506: "Hex",
                507: "Sky Drop",
                508: "Shift Gear",
                509: "Circle Throw",
                510: "Incinerate",
                511: "Quash",
                512: "Acrobatics",
                513: "Reflect Type",
                514: "Retaliate",
                515: "Final Gambit",
                516: "Bestow",
                517: "Inferno",
                518: "Water Pledge",
                519: "Fire Pledge",
                520: "Grass Pledge",
                521: "Volt Switch",
                522: "Struggle Bug",
                523: "Bulldoze",
                524: "Frost Breath",
                525: "Dragon Tail",
                526: "Work Up",
                527: "Electroweb",
                528: "Wild Charge",
                529: "Drill Run",
                530: "Dual Chop",
                531: "Heart Stamp",
                532: "Horn Leech",
                533: "Sacred Sword",
                534: "Razor Shell",
                535: "Heat Crash",
                536: "Leaf Tornado",
                537: "Steamroller",
                538: "Cotton Guard",
                539: "Night Daze",
                540: "Psystrike",
                541: "Tail Slap",
                542: "Hurricane",
                543: "Head Charge",
                544: "Gear Grind",
                545: "Searing Shot",
                546: "Techno Blast",
                547: "Relic Song",
                548: "Secret Sword",
                549: "Glaciate",
                550: "Bolt Strike",
                551: "Blue Flare",
                552: "Fiery Dance",
                553: "Freeze Shock",
                554: "Ice Burn",
                555: "Snarl",
                556: "Icicle Crash",
                557: "V-create",
                558: "Fusion Flare",
                559: "Fusion Bolt",
                560: "Flying Press",
                561: "Mat Block",
                562: "Belch",
                563: "Rototiller",
                564: "Sticky Web",
                565: "Fell Stinger",
                566: "Phantom Force",
                567: "Trick-or-Treat",
                568: "Noble Roar",
                569: "Ion Deluge",
                570: "Parabolic Charge",
                571: "Forest's Curse",
                572: "Petal Blizzard",
                573: "Freeze-Dry",
                574: "Disarming Voice",
                575: "Parting Shot",
                576: "Topsy-Turvy",
                577: "Draining Kiss",
                578: "Crafty Shield",
                579: "Flower Shield",
                580: "Grassy Terrain",
                581: "Misty Terrain",
                582: "Electrify",
                583: "Play Rough",
                584: "Fairy Wind",
                585: "Moonblast",
                586: "Boomburst",
                587: "Fairy Lock",
                588: "King's Shield",
                589: "Play Nice",
                590: "Confide",
                591: "Diamond Storm",
                592: "Steam Eruption",
                593: "Hyperspace Hole",
                594: "Water Shuriken",
                595: "Mystical Fire",
                596: "Spiky Shield",
                597: "Aromatic Mist",
                598: "Eerie Impulse",
                599: "Venom Drench",
                600: "Powder",
                601: "Geomancy",
                602: "Magnetic Flux",
                603: "Happy Hour",
                604: "Electric Terrain",
                605: "Dazzling Gleam",
                606: "Celebrate",
                607: "Hold Hands",
                608: "Baby-Doll Eyes",
                609: "Nuzzle",
                610: "Hold Back",
                611: "Infestation",
                612: "Power-Up Punch",
                613: "Oblivion Wing",
                614: "Thousand Arrows",
                615: "Thousand Waves",
                616: "Land's Wrath",
                617: "Light of Ruin",
                618: "Origin Pulse",
                619: "Precipice Blades",
                620: "Dragon Ascent",
                621: "Hyperspace Fury",
                622: "Breakneck Blitz",
                623: "Breakneck Blitz",
                624: "All-Out Pummeling",
                625: "All-Out Pummeling",
                626: "Supersonic Skystrike",
                627: "Supersonic Skystrike",
                628: "Acid Downpour",
                629: "Acid Downpour",
                630: "Tectonic Rage",
                631: "Tectonic Rage",
                632: "Continental Crush",
                633: "Continental Crush",
                634: "Savage Spin-Out",
                635: "Savage Spin-Out",
                636: "Never-Ending Nightmare",
                637: "Never-Ending Nightmare",
                638: "Corkscrew Crash",
                639: "Corkscrew Crash",
                640: "Inferno Overdrive",
                641: "Inferno Overdrive",
                642: "Hydro Vortex",
                643: "Hydro Vortex",
                644: "Bloom Doom",
                645: "Bloom Doom",
                646: "Gigavolt Havoc",
                647: "Gigavolt Havoc",
                648: "Shattered Psyche",
                649: "Shattered Psyche",
                650: "Subzero Slammer",
                651: "Subzero Slammer",
                652: "Devastating Drake",
                653: "Devastating Drake",
                654: "Black Hole Eclipse",
                655: "Black Hole Eclipse",
                656: "Twinkle Tackle",
                657: "Twinkle Tackle",
                658: "Catastropika",
                659: "Shore Up",
                660: "First Impression",
                661: "Baneful Bunker",
                662: "Spirit Shackle",
                663: "Darkest Lariat",
                664: "Sparkling Aria",
                665: "Ice Hammer",
                666: "Floral Healing",
                667: "High Horsepower",
                668: "Strength Sap",
                669: "Solar Blade",
                670: "Leafage",
                671: "Spotlight",
                672: "Toxic Thread",
                673: "Laser Focus",
                674: "Gear Up",
                675: "Throat Chop",
                676: "Pollen Puff",
                677: "Anchor Shot",
                678: "Psychic Terrain",
                679: "Lunge",
                680: "Fire Lash",
                681: "Power Trip",
                682: "Burn Up",
                683: "Speed Swap",
                684: "Smart Strike",
                685: "Purify",
                686: "Revelation Dance",
                687: "Core Enforcer",
                688: "Trop Kick",
                689: "Instruct",
                690: "Beak Blast",
                691: "Clanging Scales",
                692: "Dragon Hammer",
                693: "Brutal Swing",
                694: "Aurora Veil",
                695: "Sinister Arrow Raid",
                696: "Malicious Moonsault",
                697: "Oceanic Operetta",
                698: "Guardian of Alola",
                699: "Soul-Stealing 7-Star Strike",
                700: "Stoked Sparksurfer",
                701: "Pulverizing Pancake",
                702: "Extreme Evoboost",
                703: "Genesis Supernova",
                704: "Shell Trap",
                705: "Fleur Cannon",
                706: "Psychic Fangs",
                707: "Stomping Tantrum",
                708: "Shadow Bone",
                709: "Accelerock",
                710: "Liquidation",
                711: "Prismatic Laser",
                712: "Spectral Thief",
                713: "Sunsteel Strike",
                714: "Moongeist Beam",
                715: "Tearful Look",
                716: "Zing Zap",
                717: "Nature's Madness",
                718: "Multi-Attack",
                719: "10,000,000 Volt Thunderbolt",
                720: "Mind Blown",
                721: "Plasma Fists",
                722: "Photon Geyser",
                723: "Light That Burns the Sky",
                724: "Searing Sunraze Smash",
                725: "Menacing Moonraze Maelstrom",
                726: "Let's Snuggle Forever",
                727: "Splintered Stormshards",
                728: "Clangorous Soulblaze",
                729: "Zippy Zap",
                730: "Splishy Splash",
                731: "Floaty Fall",
                732: "Pika Papow",
                733: "Bouncy Bubble",
                734: "Buzzy Buzz",
                735: "Sizzly Slide",
                736: "Glitzy Glow",
                737: "Baddy Bad",
                738: "Sappy Seed",
                739: "Freezy Frost",
                740: "Sparkly Swirl",
                741: "Veevee Volley",
                742: "Double Iron Bash",
                743: "Max Guard",
                744: "Dynamax Cannon",
                745: "Snipe Shot",
                746: "Jaw Lock",
                747: "Stuff Cheeks",
                748: "No Retreat",
                749: "Tar Shot",
                750: "Magic Powder",
                751: "Dragon Darts",
                752: "Teatime",
                753: "Octolock",
                754: "Bolt Beak",
                755: "Fishious Rend",
                756: "Court Change",
                757: "Max Flare",
                758: "Max Flutterby",
                759: "Max Lightning",
                760: "Max Strike",
                761: "Max Knuckle",
                762: "Max Phantasm",
                763: "Max Hailstorm",
                764: "Max Ooze",
                765: "Max Geyser",
                766: "Max Airstream",
                767: "Max Starfall",
                768: "Max Wyrmwind",
                769: "Max Mindstorm",
                770: "Max Rockfall",
                771: "Max Quake",
                772: "Max Darkness",
                773: "Max Overgrowth",
                774: "Max Steelspike",
                775: "Clangorous Soul",
                776: "Body Press",
                777: "Decorate",
                778: "Drum Beating",
                779: "Snap Trap",
                780: "Pyro Ball",
                781: "Behemoth Blade",
                782: "Behemoth Bash",
                783: "Aura Wheel",
                784: "Breaking Swipe",
                785: "Branch Poke",
                786: "Overdrive",
                787: "Apple Acid",
                788: "Grav Apple",
                789: "Spirit Break",
                790: "Strange Steam",
                791: "Life Dew",
                792: "Obstruct",
                793: "False Surrender",
                794: "Meteor Assault",
                795: "Eternabeam",
                796: "Steel Beam",
                797: "Expanding Force",
                798: "Steel Roller",
                799: "Scale Shot",
                800: "Meteor Beam",
                801: "Shell Side Arm",
                802: "Misty Explosion",
                803: "Grassy Glide",
                804: "Rising Voltage",
                805: "Terrain Pulse",
                806: "Skitter Smack",
                807: "Burning Jealousy",
                808: "Lash Out",
                809: "Poltergeist",
                810: "Corrosive Gas",
                811: "Coaching",
                812: "Flip Turn",
                813: "Triple Axel",
                814: "Dual Wingbeat",
                815: "Scorching Sands",
                816: "Jungle Healing",
                817: "Wicked Blow",
                818: "Surging Strikes",
                819: "Thunder Cage",
                820: "Dragon Energy",
                821: "Freezing Glare",
                822: "Fiery Wrath",
                823: "Thunderous Kick",
                824: "Glacial Lance",
                825: "Astral Barrage",
                826: "Eerie Spell",
                827: "Dire Claw",
                828: "Psyshield Bash",
                829: "Power Shift",
                830: "Stone Axe",
                831: "Springtide Storm",
                832: "Mystical Power",
                833: "Raging Fury",
                834: "Wave Crash",
                835: "Chloroblast",
                836: "Mountain Gale",
                837: "Victory Dance",
                838: "Headlong Rush",
                839: "Barb Barrage",
                840: "Esper Wing",
                841: "Bitter Malice",
                842: "Shelter",
                843: "Triple Arrows",
                844: "Infernal Parade",
                845: "Ceaseless Edge",
                846: "Bleakwind Storm",
                847: "Wildbolt Storm",
                848: "Sandsear Storm",
                849: "Lunar Blessing",
                850: "Take Heart",
                851: "Tera Blast",
                852: "Silk Trap",
                853: "Axe Kick",
                854: "Last Respects",
                855: "Lumina Crash",
                856: "Order Up",
                857: "Jet Punch",
                858: "Spicy Extract",
                859: "Spin Out",
                860: "Population Bomb",
                861: "Ice Spinner",
                862: "Glaive Rush",
                863: "Revival Blessing",
                864: "Salt Cure",
                865: "Triple Dive",
                866: "Mortal Spin",
                867: "Doodle",
                868: "Fillet Away",
                869: "Kowtow Cleave",
                870: "Flower Trick",
                871: "Torch Song",
                872: "Aqua Step",
                873: "Raging Bull",
                874: "Make It Rain",
                875: "Psyblade",
                876: "Hydro Steam",
                877: "Ruination",
                878: "Collision Course",
                879: "Electro Drift",
                880: "Shed Tail",
                881: "Chilly Reception",
                882: "Tidy Up",
                883: "Snowscape",
                884: "Pounce",
                885: "Trailblaze",
                886: "Chilling Water",
                887: "Hyper Drill",
                888: "Twin Beam",
                889: "Rage Fist",
                890: "Armor Cannon",
                891: "Bitter Blade",
                892: "Double Shock",
                893: "Gigaton Hammer",
                894: "Comeuppance",
                895: "Aqua Cutter",
                896: "Blazing Torque",
                897: "Wicked Torque",
                898: "Noxious Torque",
                899: "Combat Torque",
                900: "Magical Torque",
                901: "Blood Moon",
                902: "Matcha Gotcha",
                903: "Syrup Bomb",
                904: "Ivy Cudgel"
              },
              tokusei: {
                1: "Stench",
                2: "Drizzle",
                3: "Speed Boost",
                4: "Battle Armor",
                5: "Sturdy",
                6: "Damp",
                7: "Limber",
                8: "Sand Veil",
                9: "Static",
                10: "Volt Absorb",
                11: "Water Absorb",
                12: "Oblivious",
                13: "Cloud Nine",
                14: "Compound Eyes",
                15: "Insomnia",
                16: "Color Change",
                17: "Immunity",
                18: "Flash Fire",
                19: "Shield Dust",
                20: "Own Tempo",
                21: "Suction Cups",
                22: "Intimidate",
                23: "Shadow Tag",
                24: "Rough Skin",
                25: "Wonder Guard",
                26: "Levitate",
                27: "Effect Spore",
                28: "Synchronize",
                29: "Clear Body",
                30: "Natural Cure",
                31: "Lightning Rod",
                32: "Serene Grace",
                33: "Swift Swim",
                34: "Chlorophyll",
                35: "Illuminate",
                36: "Trace",
                37: "Huge Power",
                38: "Poison Point",
                39: "Inner Focus",
                40: "Magma Armor",
                41: "Water Veil",
                42: "Magnet Pull",
                43: "Soundproof",
                44: "Rain Dish",
                45: "Sand Stream",
                46: "Pressure",
                47: "Thick Fat",
                48: "Early Bird",
                49: "Flame Body",
                50: "Run Away",
                51: "Keen Eye",
                52: "Hyper Cutter",
                53: "Pickup",
                54: "Truant",
                55: "Hustle",
                56: "Cute Charm",
                57: "Plus",
                58: "Minus",
                59: "Forecast",
                60: "Sticky Hold",
                61: "Shed Skin",
                62: "Guts",
                63: "Marvel Scale",
                64: "Liquid Ooze",
                65: "Overgrow",
                66: "Blaze",
                67: "Torrent",
                68: "Swarm",
                69: "Rock Head",
                70: "Drought",
                71: "Arena Trap",
                72: "Vital Spirit",
                73: "White Smoke",
                74: "Pure Power",
                75: "Shell Armor",
                76: "Air Lock",
                77: "Tangled Feet",
                78: "Motor Drive",
                79: "Rivalry",
                80: "Steadfast",
                81: "Snow Cloak",
                82: "Gluttony",
                83: "Anger Point",
                84: "Unburden",
                85: "Heatproof",
                86: "Simple",
                87: "Dry Skin",
                88: "Download",
                89: "Iron Fist",
                90: "Poison Heal",
                91: "Adaptability",
                92: "Skill Link",
                93: "Hydration",
                94: "Solar Power",
                95: "Quick Feet",
                96: "Normalize",
                97: "Sniper",
                98: "Magic Guard",
                99: "No Guard",
                100: "Stall",
                101: "Technician",
                102: "Leaf Guard",
                103: "Klutz",
                104: "Mold Breaker",
                105: "Super Luck",
                106: "Aftermath",
                107: "Anticipation",
                108: "Forewarn",
                109: "Unaware",
                110: "Tinted Lens",
                111: "Filter",
                112: "Slow Start",
                113: "Scrappy",
                114: "Storm Drain",
                115: "Ice Body",
                116: "Solid Rock",
                117: "Snow Warning",
                118: "Honey Gather",
                119: "Frisk",
                120: "Reckless",
                121: "Multitype",
                122: "Flower Gift",
                123: "Bad Dreams",
                124: "Pickpocket",
                125: "Sheer Force",
                126: "Contrary",
                127: "Unnerve",
                128: "Defiant",
                129: "Defeatist",
                130: "Cursed Body",
                131: "Healer",
                132: "Friend Guard",
                133: "Weak Armor",
                134: "Heavy Metal",
                135: "Light Metal",
                136: "Multiscale",
                137: "Toxic Boost",
                138: "Flare Boost",
                139: "Harvest",
                140: "Telepathy",
                141: "Moody",
                142: "Overcoat",
                143: "Poison Touch",
                144: "Regenerator",
                145: "Big Pecks",
                146: "Sand Rush",
                147: "Wonder Skin",
                148: "Analytic",
                149: "Illusion",
                150: "Imposter",
                151: "Infiltrator",
                152: "Mummy",
                153: "Moxie",
                154: "Justified",
                155: "Rattled",
                156: "Magic Bounce",
                157: "Sap Sipper",
                158: "Prankster",
                159: "Sand Force",
                160: "Iron Barbs",
                161: "Zen Mode",
                162: "Victory Star",
                163: "Turboblaze",
                164: "Teravolt",
                165: "Aroma Veil",
                166: "Flower Veil",
                167: "Cheek Pouch",
                168: "Protean",
                169: "Fur Coat",
                170: "Magician",
                171: "Bulletproof",
                172: "Competitive",
                173: "Strong Jaw",
                174: "Refrigerate",
                175: "Sweet Veil",
                176: "Stance Change",
                177: "Gale Wings",
                178: "Mega Launcher",
                179: "Grass Pelt",
                180: "Symbiosis",
                181: "Tough Claws",
                182: "Pixilate",
                183: "Gooey",
                184: "Aerilate",
                185: "Parental Bond",
                186: "Dark Aura",
                187: "Fairy Aura",
                188: "Aura Break",
                189: "Primordial Sea",
                190: "Desolate Land",
                191: "Delta Stream",
                192: "Stamina",
                193: "Wimp Out",
                194: "Emergency Exit",
                195: "Water Compaction",
                196: "Merciless",
                197: "Shields Down",
                198: "Stakeout",
                199: "Water Bubble",
                200: "Steelworker",
                201: "Berserk",
                202: "Slush Rush",
                203: "Long Reach",
                204: "Liquid Voice",
                205: "Triage",
                206: "Galvanize",
                207: "Surge Surfer",
                208: "Schooling",
                209: "Disguise",
                210: "Battle Bond",
                211: "Power Construct",
                212: "Corrosion",
                213: "Comatose",
                214: "Queenly Majesty",
                215: "Innards Out",
                216: "Dancer",
                217: "Battery",
                218: "Fluffy",
                219: "Dazzling",
                220: "Soul-Heart",
                221: "Tangling Hair",
                222: "Receiver",
                223: "Power of Alchemy",
                224: "Beast Boost",
                225: "RKS System",
                226: "Electric Surge",
                227: "Psychic Surge",
                228: "Misty Surge",
                229: "Grassy Surge",
                230: "Full Metal Body",
                231: "Shadow Shield",
                232: "Prism Armor",
                233: "Neuroforce",
                234: "Intrepid Sword",
                235: "Dauntless Shield",
                236: "Libero",
                237: "Ball Fetch",
                238: "Cotton Down",
                239: "Propeller Tail",
                240: "Mirror Armor",
                241: "Gulp Missile",
                242: "Stalwart",
                243: "Steam Engine",
                244: "Punk Rock",
                245: "Sand Spit",
                246: "Ice Scales",
                247: "Ripen",
                248: "Ice Face",
                249: "Power Spot",
                250: "Mimicry",
                251: "Screen Cleaner",
                252: "Steely Spirit",
                253: "Perish Body",
                254: "Wandering Spirit",
                255: "Gorilla Tactics",
                256: "Neutralizing Gas",
                257: "Pastel Veil",
                258: "Hunger Switch",
                259: "Quick Draw",
                260: "Unseen Fist",
                261: "Curious Medicine",
                262: "Transistor",
                263: "Dragon's Maw",
                264: "Chilling Neigh",
                265: "Grim Neigh",
                266: "As One",
                267: "As One",
                268: "Lingering Aroma",
                269: "Seed Sower",
                270: "Thermal Exchange",
                271: "Anger Shell",
                272: "Purifying Salt",
                273: "Well-Baked Body",
                274: "Wind Rider",
                275: "Guard Dog",
                276: "Rocky Payload",
                277: "Wind Power",
                278: "Zero to Hero",
                279: "Commander",
                280: "Electromorphosis",
                281: "Protosynthesis",
                282: "Quark Drive",
                283: "Good as Gold",
                284: "Vessel of Ruin",
                285: "Sword of Ruin",
                286: "Tablets of Ruin",
                287: "Beads of Ruin",
                288: "Orichalcum Pulse",
                289: "Hadron Engine",
                290: "Opportunist",
                291: "Cud Chew",
                292: "Sharpness",
                293: "Supreme Overlord",
                294: "Costar",
                295: "Toxic Debris",
                296: "Armor Tail",
                297: "Earth Eater",
                298: "Mycelium Might",
                299: "Hospitality",
                300: "Mind's Eye",
                301: "Embody Aspect",
                302: "Embody Aspect",
                303: "Embody Aspect",
                304: "Embody Aspect",
                305: "Toxic Chain",
                306: "Supersweet Syrup"
              },
              seikaku: {
                0: "Hardy",
                1: "Lonely",
                2: "Brave",
                3: "Adamant",
                4: "Naughty",
                5: "Bold",
                6: "Docile",
                7: "Relaxed",
                8: "Impish",
                9: "Lax",
                10: "Timid",
                11: "Hasty",
                12: "Serious",
                13: "Jolly",
                14: "Naive",
                15: "Modest",
                16: "Mild",
                17: "Quiet",
                18: "Bashful",
                19: "Rash",
                20: "Calm",
                21: "Gentle",
                22: "Sassy",
                23: "Careful",
                24: "Quirky"
              }
            }
          }
        };
        break;
      case 3:
        e = new class {
          constructor() {
            this.pages = {
              t_common: {
                "#regulation": "Rﾃｨgles",
                "#available_poke": "Pokﾃｩmon autorisﾃｩs",
                "#trainer-tab-text": "Classement des Dresseurs",
                "#pokemon-tab-text": "Classement des Pokﾃｩmon",
                "#open": "En cours",
                "#end": "Terminﾃｩe",
                gathering: "En cours de calcul",
                not_join: "N'a pas participﾃｩ",
                not_join_battle: "Vous n'avez pas encore participﾃｩ ﾃ� un combat<br>de ce type.",
                not_join_tournament: "Vous ne participez pas ou n'avez pas participﾃｩ ﾃ� cette compﾃｩtition.",
                not_join_friendcompe: "Vous n'avez pas encore participﾃｩ ﾃ� un tournoi amical.",
                win: "VICTOIRE",
                lose: "Dﾃ宇AITE",
                draw: "MATCH NUL",
                rental: "ﾃ衛uipe d'emprunt",
                rank_num: "Classement : %d",
                win_num: "Victoires : %d",
                lose_num: "Dﾃｩfaites : %d",
                draw_num: "Matchs nuls : %d",
                ok: "OK",
                rulename1: "Sans restrictions",
                rulename2: "Rﾃｨgles souples",
                rulename3: "Rﾃｨgles strictes",
                rulename4: "Sans restrictions",
                rulename5: "Rﾃｨgles souples",
                rulename6: "Rﾃｨgles strictes",
                rulename7: "Sans restrictions",
                rulename8: "Rﾃｨgles souples",
                rulename9: "Rﾃｨgles strictes",
                rulename10: "Rﾃｨgles officielles 1",
                rulename11: "Rﾃｨgles officielles 2",
                rulename12: "Rﾃｨgles officielles 1",
                rulename13: "Rﾃｨgles officielles 2",
                rulename14: "Rﾃｨgles officielles 3",
                outrange: "Hors classement"
              },
              t_rankmatchPageTexts: {
                "#title-text": "Combats classﾃｩs"
              },
              t_my_rankmatchPageTexts: {
                "#title-text": "Rﾃｩsultats des combats classﾃｩs",
                "#rate_label": "Cote"
              },
              t_pokemonrankingPageTexts: {
                "#title-text": "Rﾃｩsumﾃｩ du Pokﾃｩmon",
                no: "Nﾂｺ",
                ".battle-team-tab-text": "Dﾃｩtails",
                ".when-win-tab-text": "Victoires",
                ".when-lose-tab-text": "Dﾃｩfaites",
                "kind-tab-battle-team": "Top 10 des Pokﾃｩmon inclus en ﾃ衛uipe Combat avec ce Pokﾃｩmon",
                "kind-tab-battle-win": "Top 10 des Pokﾃｩmon mis K.O. par ce Pokﾃｩmon",
                "kind-tab-battle-lose": "Top 10 des Pokﾃｩmon qui ont mis ce Pokﾃｩmon K.O.",
                "kind-tab-battle-waza": "Capacitﾃｩs",
                "kind-tab-battle-waza-win": "Top 10 de ses capacitﾃｩs qui ont mis d'autres Pokﾃｩmon K.O.",
                "kind-tab-battle-waza-lose": "Top 10 des capacitﾃｩs qui ont mis ce Pokﾃｩmon K.O.",
                "kind-tab-battle-tokusei": "Talent",
                "kind-tab-battle-item": "Objet tenu",
                "kind-tab-battle-seikaku": "Nature",
                "kind-tab-battle-terastal": "Type Tﾃｩracristal",
                atk: "Attaque",
                def: "Dﾃｩfense",
                agi: "Vitesse",
                spatk: "Atq. Spﾃｩ.",
                spdef: "Dﾃｩf. Spﾃｩ.",
                hyphen: "��"
              },
              t_internetcompetitionPageTexts: {
                "#title-text": "Compﾃｩtitions officielles"
              },
              t_internetcompetition_detailPageTexts: {
                "#title-text": "Infos sur la compﾃｩtition officielle"
              },
              t_my_internetcompetition_detailPageTexts: {
                "#title-text": "Infos sur la compﾃｩtition officielle",
                "#rate_label": "Cote",
                mydata_dialog_title: "Choix des donnﾃｩes ﾃ� consulter",
                mydata_dialog_text: "Vous pouvez consulter les donnﾃｩes de jeu suivantes",
                mydata_dialog_btn1: "Classement",
                mydata_dialog_btn2: "ﾃ衛uipes Combat"
              },
              t_friendcompetitionPageTexts: {
                "#title-text": "Tournois amicaux"
              },
              t_my_friendcompetitionPageTexts: {
                "#title-text": "Tournois amicaux",
                ".organizer-label-text": "Organisateur",
                ".result-label-text": "Rﾃｩsultats",
                ".battleteam-label-text": "ﾃ衛uipes Combat"
              },
              t_friendcompetition_detailPageTexts: {
                "#title-text": "Infos sur le tournoi amical"
              },
              t_my_friendcompetition_detailPageTexts: {
                "#title-text": "Infos sur le tournoi amical"
              },
              t_battle_teamPageTexts: {
                internetcompe: "ﾃ衛uipes Combat des compﾃｩtitions officielles",
                friendcompe: "ﾃ衛uipes Combat des tournois amicaux"
              },
              t_mydataselectPageTexts: {
                title_text_rankmatch: "Historique des combats",
                title_text_internetcompe: "Infos sur la compﾃｩtition officielle",
                title_text_friendcompe: "Tournois amicaux",
                "#dataselect-text": "Veuillez sﾃｩlectionner des donnﾃｩes de sauvegarde<br>afin de consulter un historique des combats."
              },
              t_tournament_detailPageTexts: {
                "#title-text": "Infos sur le tournoi",
                single_elimination: "ﾃ瑛imination directe",
                double_elimination: "Double ﾃｩlimination",
                bestX: "Top %d",
                Xround: "Manche nﾂｺ %d",
                semi_final: "Demi-finale",
                final: "Finale",
                round_winners: "Manche des vainqueurs nﾂｺ %d",
                final_winners: "Manche des vainqueurs nﾂｺ %d (finale)",
                round_losers: "Manche des perdants nﾂｺ %d",
                final_losers: "Manche des perdants nﾂｺ %d (finale)",
                grandfinal: "Grande finale",
                coming_soon: "Prochainement !"
              },
              topPageTexts: {
                "#top-title-text": "Infos combats",
                "#top-mypage-text": "Historique des combats",
                "#top-rankmatch-text": "Combats classﾃｩs",
                "#top--internetcompe-text": "Compﾃｩtitions Internet",
                "#top-regulation-text": "Rﾃｨgles distribuﾃｩes"
              },
              myresult_topPageTexts: {
                "#title-text": "Historique des combats",
                "#rankmatch-text": "Combats classﾃｩs",
                "#internetcompe-text": "Compﾃｩtitions Internet",
                "#friendcompe-text": "Tournois amicaux"
              },
              myresult_romselectPageTexts: {
                "#title-text": "Historique des combats",
                "#rankmatch-text": "Choix du jeu"
              },
              myresult_rankmatchPageTexts: {
                "#title-text": "Rﾃｩsultats des combats classﾃｩs",
                "#subtitle1-text": "Infos sur la saison",
                "#sub1_label3": "En savoir plus sur la saison",
                "#subtitle2-text": "Rﾃｩsultats de la saison",
                "#sub2_label1": "Solo",
                "#sub2_label2": "Duo",
                "#subtitle3-text": "Combats rﾃｩcents",
                "#sub3_label1": "Solo",
                "#sub3_label2": "Duo"
              },
              my_internetcompetition_listPageTexts: {
                "#title-text": "Liste des compﾃｩtitions Internet",
                "#subtitle1-text": "Liste des compﾃｩtitions disputﾃｩes"
              },
              my_internetcompetition_detailPageTexts: {
                "#title-text": "Infos sur les compﾃｩtitions Internet",
                "#subtitle1-text": "Infos sur la compﾃｩtition",
                "#sub1_label1": "Jeu utilisﾃｩ",
                "#sub1_label2": "Format de combat",
                "#sub1_label3": "Nombre de participants",
                "#sub1_label5": "En savoir plus",
                "#sub1_label6": "Rﾃｩsultats de la compﾃｩtition",
                "#subtitle2-text": "Historique des combats",
                "#sub2_label1": "Solo",
                "#sub2_label2": "Duo",
                "#subtitle3-text": "Combats rﾃｩcents",
                "#sub3_label1": "Solo",
                "#sub3_label2": "Duo"
              },
              friendcompetition_listPageTexts: {
                "#title-text": "Liste des tournois amicaux",
                "#subtitle1-text": "Liste des compﾃｩtitions disputﾃｩes",
                ".organizer-label-text": "Organisateur",
                ".joinednum-label-text": "Nombre de participants",
                ".more-button-text": "Voir plus"
              },
              my_friendcompetition_detailPageTexts: {
                "#title-text": "Rﾃｩsultats des tournois amicaux",
                "#subtitle1-text": "Infos sur la compﾃｩtition",
                "#sub_label1": "Rﾃｩsumﾃｩ de la compﾃｩtition",
                "#sub_label2": "Organisateur",
                "#sub_label3": "Jeu utilisﾃｩ",
                "#sub_label4": "Format de combat",
                "#sub_label5": "Nombre de participants",
                "#sub_label7": "En savoir plus",
                "#sub_label8": "Rﾃｩsultats de la compﾃｩtition",
                "#subtitle2-text": "Historique des combats"
              },
              friendcompetition_detailPageTexts: {
                "#title-text": "Infos sur le tournoi amical",
                "#subtitle1-text": "Infos sur la compﾃｩtition",
                "#sub_label1": "Rﾃｩsumﾃｩ de la compﾃｩtition",
                "#sub_label2": "Organisateur",
                "#sub_label3": "Jeu utilisﾃｩ",
                "#sub_label4": "Format de combat",
                "#sub_label5": "Nombre de participants",
                "#sub1_label13": "Voir votre classement",
                "#sub1_label9": "Classement des Dresseurs",
                "#sub1_label10": "Classement des Pokﾃｩmon",
                "#regulationLink": "Infos importantes / rﾃｨgles",
                "#eligiblePokemonLink": "Pokﾃｩmon autorisﾃｩs"
              },
              rankmatch_detailPageTexts: {
                "#title-text": "Combats classﾃｩs",
                "#subtitle1-text": "Infos sur la saison",
                "#sub_label2": "Nombre de participants",
                "#sub_label3": "Infos importantes / rﾃｨgles",
                "#sub_label4": "Pokﾃｩmon autorisﾃｩs",
                "#sub_label5": "Choisir Pokﾃｩmon",
                "#sub_label6": "Filtrer",
                "#sub_label7": "Voir votre classement",
                "#subtitle2-text": "Historique des combats",
                ".trainer-tab-text": "Classement des Dresseurs",
                ".pokemon-tab-text": "Classement des Pokﾃｩmon"
              },
              internetcompetition_listPageTexts: {
                "#title-text": "Compﾃｩtitions Internet",
                "#sub_label1": "Voir les compﾃｩtitions Internet passﾃｩes",
                "#sub_label2": "Anciennes compﾃｩtitions",
                ".more-button-text": "Voir plus"
              },
              internetcompetition_detailPageTexts: {
                "#title-text": "Infos sur la compﾃｩtition Internet",
                "#subtitle1-text": "Infos sur la compﾃｩtition",
                "#sub1_label1": "Jeu utilisﾃｩ",
                "#sub1_label2": "Infos importantes / rﾃｨgles",
                "#sub1_label3": "Pokﾃｩmon autorisﾃｩs",
                "#sub1_label4": "Rﾃｩsumﾃｩ de la compﾃｩtition",
                "#sub1_label5": "Nombre de participants",
                "#sub1_label6": "Jeu utilisﾃｩ",
                "#sub1_label7": "Format de combat",
                "#sub1_label8": "Durﾃｩe",
                "#sub1_label9": "Classement des Dresseurs",
                "#sub1_label10": "Classement des Pokﾃｩmon",
                "#sub1_label11": "Choisir Pokﾃｩmon",
                "#sub1_label12": "Filtrer",
                "#sub1_label13": "Voir votre classement"
              },
              battle_teamPageTexts: {
                "#title-text": "Pokﾃｩmon de l'ﾃ衛uipe Combat"
              },
              regulation_listPageTexts: {
                "#title-text": "Rﾃｨgles distribuﾃｩes"
              },
              regulation_pokelistPageTexts: {
                "#title-text": "Pokﾃｩmon autorisﾃｩs"
              },
              event_calendar: {
                "#title-text": "Calendrier des ﾃｩvﾃｨnements",
                "#option-country": "Rﾃｩgion",
                "#sunday": "Dim.",
                "#monday": "Lun.",
                "#tuesday": "Mar.",
                "#wednesday": "Mer.",
                "#thursday": "Jeu.",
                "#friday": "Ven.",
                "#saturday": "Sam."
              },
              rankmatch_pokemonranking_detailPageTexts: {
                "#title-text": "Combats classﾃｩs",
                "#subtitle1-text": "Rﾃｩsumﾃｩ du Pokﾃｩmon",
                ".battle-team-tab-text": "Dﾃｩtails",
                ".when-win-tab-text": "Victoires",
                ".when-lose-tab-text": "Dﾃｩfaites",
                "kind-tab-battle-team": "Top 10 des Pokﾃｩmon ajoutﾃｩs ﾃ� la mﾃｪme ﾃ衛uipe Combat",
                "kind-tab-battle-win": "Top 10 des Pokﾃｩmon mis K.O. par ce Pokﾃｩmon",
                "kind-tab-battle-lose": "Top 10 des Pokﾃｩmon qui ont mis ce Pokﾃｩmon K.O.",
                "kind-tab-battle-waza": "Capacitﾃｩs",
                "kind-tab-battle-waza-win": "Top 10 des capacitﾃｩs ayant mis un autre Pokﾃｩmon K.O.",
                "kind-tab-battle-waza-lose": "Top 10 des capacitﾃｩs qui ont mis ce Pokﾃｩmon K.O.",
                "kind-tab-battle-tokusei": "Talents",
                "kind-tab-battle-item": "Objets",
                "kind-tab-battle-seikaku": "Natures"
              },
              internetcompetition_pokemonranking_detail: {
                "#title-text": "Compﾃｩtitions Internet",
                "#subtitle1-text": "Rﾃｩsumﾃｩ du Pokﾃｩmon",
                ".battle-team-tab-text": "Dﾃｩtails",
                ".when-win-tab-text": "Victoires",
                ".when-lose-tab-text": "Dﾃｩfaites",
                "kind-tab-battle-team": "Top 10 des Pokﾃｩmon ajoutﾃｩs ﾃ� la mﾃｪme ﾃ衛uipe Combat",
                "kind-tab-battle-win": "Top 10 des Pokﾃｩmon mis K.O. par ce Pokﾃｩmon",
                "kind-tab-battle-lose": "Top 10 des Pokﾃｩmon qui ont mis ce Pokﾃｩmon K.O.",
                "kind-tab-battle-waza": "Capacitﾃｩs",
                "kind-tab-battle-waza-win": "Top 10 des capacitﾃｩs ayant mis un autre Pokﾃｩmon K.O.",
                "kind-tab-battle-waza-lose": "Top 10 des capacitﾃｩs qui ont mis ce Pokﾃｩmon K.O.",
                "kind-tab-battle-tokusei": "Talents",
                "kind-tab-battle-item": "Objets",
                "kind-tab-battle-seikaku": "Natures"
              },
              friendcompetition_pokemonranking_detail: {
                "#title-text": "Tournois amicaux",
                "#subtitle1-text": "Rﾃｩsumﾃｩ du Pokﾃｩmon",
                ".battle-team-tab-text": "Dﾃｩtails",
                ".when-win-tab-text": "Victoires",
                ".when-lose-tab-text": "Dﾃｩfaites",
                "kind-tab-battle-team": "Top 10 des Pokﾃｩmon ajoutﾃｩs ﾃ� la mﾃｪme ﾃ衛uipe Combat",
                "kind-tab-battle-win": "Top 10 des Pokﾃｩmon mis K.O. par ce Pokﾃｩmon",
                "kind-tab-battle-lose": "Top 10 des Pokﾃｩmon qui ont mis ce Pokﾃｩmon K.O.",
                "kind-tab-battle-waza": "Capacitﾃｩs",
                "kind-tab-battle-waza-win": "Top 10 des capacitﾃｩs ayant mis un autre Pokﾃｩmon K.O.",
                "kind-tab-battle-waza-lose": "Top 10 des capacitﾃｩs qui ont mis ce Pokﾃｩmon K.O.",
                "kind-tab-battle-tokusei": "Talents",
                "kind-tab-battle-item": "Objets",
                "kind-tab-battle-seikaku": "Natures"
              }
            }, this.common = {
              ui_texts: {
                ".winIconText": "VICTOIRE",
                ".loseIconText": "Dﾃ宇AITE",
                ".drawIconText": "MATCH NUL",
                ".joinedNumLabel": "",
                ".periodContainer>.label": "Durﾃｩe",
                ".rateLabelContainer>.label": "Cote",
                competionRule: "Format de combat",
                ".prevButton>.labelContainer>.label": "10 prﾃｩcﾃｩdents",
                ".nextButton>.labelContainer>.label": "10 suivants",
                ".rank-beginner-text": "Niveau Dﾃｩbutant",
                ".rank-monster-text": "Niveau Pokﾃｩ Ball",
                ".rank-super-text": "Niveau Super Ball",
                ".rank-hyper-text": "Niveau Hyper Ball",
                ".rank-master-text": "Niveau Master Ball",
                ".rental-label-text": "ﾃ衛uipes d'emprunt",
                ".buttle-team-button-text": "Afficher l'ﾃ衛uipe Combat"
              },
              unit: {
                rank: "Classement : %d",
                win: "Victoires : %d",
                lose: "Dﾃｩfaites : %d",
                draw: "Matchs nuls : %d",
                "season-result": 'Classement : %d<br /> <span class="ranking-result-margin-right">Victoires : %d</span><span class="ranking-result-margin-right">Dﾃｩfaites : %d</span>Matchs nuls : %d',
                "season-result2": '<span class="ranking-result-margin-right">Victoires : %d</span><span class="ranking-result-margin-right">Dﾃｩfaites : %d</span>Matchs nuls : %d',
                "online-result": '<span class="ranking-result-margin-right">Victoires : %d</span><span class="ranking-result-margin-right">Dﾃｩfaites : %d</span>Matchs nuls : %d',
                "friend-result": 'Classement : %d<br /><span class="ranking-result-margin-right">Victoires : %d</span><span class="ranking-result-margin-right">Dﾃｩfaites : %d</span>Matchs nuls : %d'
              },
              roms: {
                Sw: "Pokﾃｩmon ﾃ英ﾃｩe",
                Sh: "Pokﾃｩmon Bouclier"
              },
              rule: {
                0: "Solo",
                1: "Duo"
              },
              nojoin: "N'a pas participﾃｩ",
              nowAggr: "En cours de calcul",
              country: {
                100: "Afrique",
                600: "Amﾃｩrique du Nord",
                601: "Canada",
                602: "ﾃ液ats-Unis (Nord)",
                603: "ﾃ液ats-Unis (Est)",
                604: "ﾃ液ats-Unis (Ouest)",
                605: "ﾃ液ats-Unis (Sud)",
                699: "Autre",
                700: "Amﾃｩrique latine",
                701: "Chili",
                702: "Mexique",
                703: "Brﾃｩsil",
                704: "Argentine",
                705: "Bolivie",
                706: "Colombie",
                707: "Paraguay",
                708: "Pﾃｩrou",
                709: "ﾃ衛uateur",
                799: "Autre",
                800: "Ocﾃｩanie",
                801: "Australie",
                802: "Nouvelle-Zﾃｩlande",
                899: "Autre",
                300: "Asie-Pacifique",
                302: "Chine",
                303: "Hong Kong",
                304: "Japon",
                305: "Corﾃｩe du Sud",
                306: "Malaisie",
                307: "Philippines",
                308: "Singapour",
                309: "Taﾃｯwan",
                310: "Thaﾃｯlande",
                399: "Autre",
                400: "Europe",
                401: "Autriche",
                402: "Belgique",
                403: "France",
                404: "Allemagne",
                405: "Irlande",
                406: "Italie",
                407: "Pays-Bas",
                408: "Portugal",
                409: "Espagne",
                410: "Suisse",
                411: "Royaume-Uni",
                412: "Danemark",
                413: "Finlande",
                414: "Norvﾃｨge",
                415: "Suﾃｨde",
                416: "Pologne",
                499: "Autre",
                500: "Moyen-Orient"
              },
              footerBackLinkLabel: {
                backLinkTop: "Infos combats",
                backLinkInternetComp: "Compﾃｩtitions Internet",
                backMyResult: "Historique des combats",
                backMyInternetComp: "Liste des compﾃｩtitions disputﾃｩes",
                backLinkMyInternetCompDetail: "Rﾃｩsultats des compﾃｩtitions Internet",
                backLinkMyRankMatchDetail: "Rﾃｩsultats des combats classﾃｩs",
                backLinkMyFriendCompDetail: "Rﾃｩsultats des tournois amicaux",
                backLinkFriendCompList: "Liste des tournois amicaux",
                backLinkRankBattle: "Combats classﾃｩs",
                backLinkFriendComp: "Tournois amicaux"
              },
              rankBattleRankingNoteDialog: {
                title: "Impossible d'afficher votre classement.",
                note1: "Pour les ﾃｩvﾃｨnements en cours, seul le top 1 000 s'affiche.<br />",
                note2: "Il est possible que les classements affichﾃｩs ne soient pas<br />entiﾃｨrement ﾃ� jour, car le calcul des classements peut<br />prendre du temps.<br />",
                note3: "Veuillez vﾃｩrifier de nouveau ultﾃｩrieurement."
              },
              dialogMsg: {
                ok: "Fermer"
              }
            }, this.dex = {
              poke: ["Bulbizarre", "Herbizarre", "Florizarre", "Salamﾃｨche", "Reptincel", "Dracaufeu", "Carapuce", "Carabaffe", "Tortank", "Chenipan", "Chrysacier", "Papilusion", "Aspicot", "Coconfort", "Dardargnan", "Roucool", "Roucoups", "Roucarnage", "Rattata", "Rattatac", "Piafabec", "Rapasdepic", "Abo", "Arbok", "Pikachu", "Raichu", "Sabelette", "Sablaireau", "Nidoran笙", "Nidorina", "Nidoqueen", "Nidoran笙�", "Nidorino", "Nidoking", "Mﾃｩlofﾃｩe", "Mﾃｩlodelfe", "Goupix", "Feunard", "Rondoudou", "Grodoudou", "Nosferapti", "Nosferalto", "Mystherbe", "Ortide", "Rafflesia", "Paras", "Parasect", "Mimitoss", "Aﾃｩromite", "Taupiqueur", "Triopikeur", "Miaouss", "Persian", "Psykokwak", "Akwakwak", "Fﾃｩrosinge", "Colossinge", "Caninos", "Arcanin", "Ptitard", "Tﾃｪtarte", "Tartard", "Abra", "Kadabra", "Alakazam", "Machoc", "Machopeur", "Mackogneur", "Chﾃｩtiflor", "Boustiflor", "Empiflor", "Tentacool", "Tentacruel", "Racaillou", "Gravalanch", "Grolem", "Ponyta", "Galopa", "Ramoloss", "Flagadoss", "Magnﾃｩti", "Magnﾃｩton", "Canarticho", "Doduo", "Dodrio", "Otaria", "Lamantine", "Tadmorv", "Grotadmorv", "Kokiyas", "Crustabri", "Fantominus", "Spectrum", "Ectoplasma", "Onix", "Soporifik", "Hypnomade", "Krabby", "Krabboss", "Voltorbe", "ﾃ瑛ectrode", "Noeunoeuf", "Noadkoko", "Osselait", "Ossatueur", "Kicklee", "Tygnon", "Excelangue", "Smogo", "Smogogo", "Rhinocorne", "Rhinofﾃｩros", "Leveinard", "Saquedeneu", "Kangourex", "Hypotrempe", "Hypocﾃｩan", "Poissirﾃｨne", "Poissoroy", "Stari", "Staross", "M. Mime", "Insﾃｩcateur", "Lippoutou", "ﾃ瑛ektek", "Magmar", "Scarabrute", "Tauros", "Magicarpe", "Lﾃｩviator", "Lokhlass", "Mﾃｩtamorph", "ﾃ益oli", "Aquali", "Voltali", "Pyroli", "Porygon", "Amonita", "Amonistar", "Kabuto", "Kabutops", "Ptﾃｩra", "Ronflex", "Artikodin", "ﾃ瑛ecthor", "Sulfura", "Minidraco", "Draco", "Dracolosse", "Mewtwo", "Mew", "Germignon", "Macronium", "Mﾃｩganium", "Hﾃｩricendre", "Feurisson", "Typhlosion", "Kaiminus", "Crocrodil", "Aligatueur", "Fouinette", "Fouinar", "Hoothoot", "Noarfang", "Coxy", "Coxyclaque", "Mimigal", "Migalos", "Nostenfer", "Loupio", "Lanturn", "Pichu", "Mﾃｩlo", "Toudoudou", "Togepi", "Togetic", "Natu", "Xatu", "Wattouat", "Lainergie", "Pharamp", "Joliflor", "Marill", "Azumarill", "Simularbre", "Tarpaud", "Granivol", "Floravol", "Cotovol", "Capumain", "Tournegrin", "Hﾃｩliatronc", "Yanma", "Axoloto", "Maraiste", "Mentali", "Noctali", "Cornﾃｨbre", "Roigada", "Feuforﾃｪve", "Zarbi", "Qulbutokﾃｩ", "Girafarig", "Pomdepik", "Foretress", "Insolourdo", "Scorplane", "Steelix", "Snubbull", "Granbull", "Qwilfish", "Cizayox", "Caratroc", "Scarhino", "Farfuret", "Teddiursa", "Ursaring", "Limagma", "Volcaropod", "Marcacrin", "Cochignon", "Corayon", "Rﾃｩmoraid", "Octillery", "Cadoizo", "Dﾃｩmanta", "Airmure", "Malosse", "Dﾃｩmolosse", "Hyporoi", "Phanpy", "Donphan", "Porygon2", "Cerfrousse", "Queulorior", "Debugant", "Kapoera", "Lippouti", "ﾃ瑛ekid", "Magby", "ﾃ営rﾃｩmeuh", "Leuphorie", "Raikou", "Entei", "Suicune", "Embrylex", "Ymphect", "Tyranocif", "Lugia", "Ho-Oh", "Celebi", "Arcko", "Massko", "Jungko", "Poussifeu", "Galifeu", "Brasﾃｩgali", "Gobou", "Flobio", "Laggron", "Medhyﾃｨna", "Grahyﾃｨna", "Zigzaton", "Linﾃｩon", "Chenipotte", "Armulys", "Charmillon", "Blindalys", "Papinox", "Nﾃｩnupiot", "Lombre", "Ludicolo", "Grainipiot", "Pifeuil", "Tengalice", "Nirondelle", "Hﾃｩlﾃｩdelle", "Goﾃｩlise", "Bekipan", "Tarsal", "Kirlia", "Gardevoir", "Arakdo", "Maskadra", "Balignon", "Chapignon", "Parecool", "Vigoroth", "Monaflﾃｨmit", "Ningale", "Ninjask", "Munja", "Chuchmur", "Ramboum", "Brouhabam", "Makuhita", "Hariyama", "Azurill", "Tarinor", "Skitty", "Delcatty", "Tﾃｩnﾃｩfix", "Mysdibule", "Galekid", "Galegon", "Galeking", "Mﾃｩditikka", "Charmina", "Dynavolt", "ﾃ瑛ecsprint", "Posipi", "Nﾃｩgapi", "Muciole", "Lumivole", "Rosﾃｩlia", "Gloupti", "Avaltout", "Carvanha", "Sharpedo", "Wailmer", "Wailord", "Chamallot", "Camﾃｩrupt", "Chartor", "Spoink", "Groret", "Spinda", "Kraknoix", "Vibraninf", "Libﾃｩgon", "Cacnea", "Cacturne", "Tylton", "Altaria", "Mangriff", "Sﾃｩviper", "Sﾃｩlﾃｩroc", "Solaroc", "Barloche", "Barbicha", "ﾃ営rapince", "Colhomard", "Balbuto", "Kaorine", "Lilia", "Vacilys", "Anorith", "Armaldo", "Barpau", "Milobellus", "Morphﾃｩo", "Kecleon", "Polichombr", "Branette", "Skelﾃｩnox", "Tﾃｩraclope", "Tropius", "ﾃ頴ko", "Absol", "Okﾃｩokﾃｩ", "Stalgamin", "Oniglali", "Obalie", "Phogleur", "Kaimorse", "Coquiperl", "Serpang", "Rosabyss", "Relicanth", "Lovdisc", "Draby", "Drackhaus", "Drattak", "Terhal", "Mﾃｩtang", "Mﾃｩtalosse", "Regirock", "Regice", "Registeel", "Latias", "Latios", "Kyogre", "Groudon", "Rayquaza", "Jirachi", "Deoxys", "Tortipouss", "Boskara", "Torterra", "Ouisticram", "Chimpenfeu", "Simiabraz", "Tiplouf", "Prinplouf", "Pingolﾃｩon", "ﾃ液ourmi", "ﾃ液ourvol", "ﾃ液ouraptor", "Keunotor", "Castorno", "Crikzik", "Mﾃｩlokrik", "Lixy", "Luxio", "Luxray", "Rozbouton", "Roserade", "Kranidos", "Charkos", "Dinoclier", "Bastiodon", "Cheniti", "Cheniselle", "Papilord", "Apitrini", "Apireine", "Pachirisu", "Mustﾃｩbouﾃｩe", "Mustﾃｩflott", "Ceribou", "Ceriflor", "Sancoki", "Tritosor", "Capidextre", "Baudrive", "Grodrive", "Laporeille", "Lockpin", "Magirﾃｪve", "Corboss", "Chaglam", "Chaffreux", "Korillon", "Moufouette", "Moufflair", "Archﾃｩomire", "Archﾃｩodong", "Manzaﾃｯ", "Mime Jr.", "Ptiravi", "Pijako", "Spiritomb", "Griknot", "Carmache", "Carchacrok", "Goinfrex", "Riolu", "Lucario", "Hippopotas", "Hippodocus", "Rapion", "Drascore", "Cradopaud", "Coatox", "Vortente", "ﾃ営ayon", "Luminﾃｩon", "Babimanta", "Blizzi", "Blizzaroi", "Dimoret", "Magnﾃｩzone", "Coudlangue", "Rhinastoc", "Bouldeneu", "ﾃ瑛ekable", "Maganon", "Togekiss", "Yanmega", "Phyllali", "Givrali", "Scorvol", "Mammochon", "Porygon-Z", "Gallame", "Tarinorme", "Noctunoir", "Momartik", "Motisma", "Crﾃｩhelf", "Crﾃｩfollet", "Crﾃｩfadet", "Dialga", "Palkia", "Heatran", "Regigigas", "Giratina", "Cresselia", "Phione", "Manaphy", "Darkrai", "Shaymin", "Arceus", "Victini", "Vipﾃｩlierre", "Lianaja", "Majaspic", "Gruikui", "Grotichon", "Roitiflam", "Moustillon", "Mateloutre", "Clamiral", "Ratentif", "Miradar", "Ponchiot", "Ponchien", "Mastouffe", "Chacripan", "Lﾃｩopardus", "Feuillajou", "Feuiloutan", "Flamajou", "Flamoutan", "Flotajou", "Flotoutan", "Munna", "Mushana", "Poichigeon", "Colombeau", "Dﾃｩflaisan", "Zﾃｩbibron", "Zﾃｩblitz", "Nodulithe", "Gﾃｩolithe", "Gigalithe", "Chovsourir", "Rhinolove", "Rototaupe", "Minotaupe", "Nanmﾃｩouﾃｯe", "Charpenti", "Ouvrifier", "Bﾃｩtochef", "Tritonde", "Batracnﾃｩ", "Crapustule", "Judokrak", "Karaclﾃｩe", "Larveyette", "Couverdure", "Manternel", "Venipatte", "Scobolide", "Brutapode", "Doudouvet", "Farfaduvet", "Chlorobule", "Fragilady", "Bargantua", "Mascaﾃｯman", "Escroco", "Crocorible", "Darumarond", "Darumacho", "Maracachi", "Crabicoque", "Crabaraque", "Baggiguane", "Baggaﾃｯd", "Cryptﾃｩro", "Tutafeh", "Tutankafer", "Carapagos", "Mﾃｩgapagos", "Arkﾃｩapti", "Aﾃｩroptﾃｩryx", "Miamiasme", "Miasmax", "Zorua", "Zoroark", "Chinchidou", "Pashmilla", "Scrutella", "Mesmﾃｩrella", "Sidﾃｩrella", "Nuclﾃｩos", "Mﾃｩios", "Symbios", "Couaneton", "Lakmﾃｩcygne", "Sorbﾃｩbﾃｩ", "Sorboul", "Sorbouboul", "Vivaldaim", "Haydaim", "Emolga", "Carabing", "Lanﾃｧargot", "Trompignon", "Gaulet", "Viskuse", "Moyade", "Mamanbo", "Statitik", "Mygavolt", "Grindur", "Noacier", "Tic", "Clic", "Cliticlic", "Anchwatt", "Lampﾃｩroie", "Ohmassacre", "Lewsor", "Neitram", "Funﾃｩcire", "Mﾃｩlancolux", "Lugulabre", "Coupenotte", "Incisache", "Tranchodon", "Polarhume", "Polagriffe", "Hexagel", "Escargaume", "Limaspeed", "Limonde", "Kungfouine", "Shaofouine", "Drakkarmin", "Gringolem", "Golemastoc", "Scalpion", "Scalproie", "Frison", "Furaiglon", "Gueriaigle", "Vostourno", "Vaututrice", "Aflamanoir", "Fermite", "Solochi", "Diamat", "Trioxhydre", "Pyronille", "Pyrax", "Cobaltium", "Terrakium", "Viridium", "Borﾃｩas", "Fulguris", "Reshiram", "Zekrom", "Dﾃｩmﾃｩtﾃｩros", "Kyurem", "Keldeo", "Meloetta", "Genesect", "Marisson", "Boguﾃｩrisse", "Blindﾃｩpique", "Feunnec", "Roussil", "Goupelin", "Grenousse", "Croﾃ｢poral", "Amphinobi", "Sapereau", "Excavarenne", "Passerouge", "Braisillon", "Flambusard", "Lﾃｩpidonille", "Pﾃｩrﾃｩgrain", "Prismillon", "Hﾃｩlionceau", "Nﾃｩmﾃｩlios", "Flabﾃｩbﾃｩ", "Floette", "Florges", "Cabriolaine", "Chevroum", "Pandespiﾃｨgle", "Pandarbare", "Couafarel", "Psystigri", "Mistigrix", "Monorpale", "Dimoclﾃｨs", "Exagide", "Fluvetin", "Cocotine", "Sucroquin", "Cupcanaille", "Sepiatop", "Sepiatroce", "Opermine", "Golgopathe", "Venalgue", "Kravarech", "Flingouste", "Gamblast", "Galvaran", "Iguolta", "Ptyranidur", "Rexillius", "Amagara", "Dragmara", "Nymphali", "Brutalibrﾃｩ", "Dedenne", "Strassie", "Mucuscule", "Colimucus", "Muplodocus", "Trousselin", "Brocﾃｩlﾃｴme", "Dessﾃｩliande", "Pitrouille", "Banshitrouye", "Grelaﾃｧon", "Sﾃｩracrawl", "Sonistrelle", "Bruyverne", "Xerneas", "Yveltal", "Zygarde", "Diancie", "Hoopa", "Volcanion", "Brindibou", "Efflﾃｨche", "Archﾃｩduc", "Flamiaou", "Matoufeu", "Fﾃｩlinferno", "Otaquin", "Otarlette", "Oratoria", "Picassaut", "Piclairon", "Bazoucan", "Manglouton", "Argouste", "Larvibule", "Chrysapile", "Lucanon", "Crabagarre", "Crabominable", "Plumeline", "Bombydou", "Rubombelle", "Rocabot", "Lougaroc", "Froussardine", "Vorastﾃｩrie", "Prﾃｩdastﾃｩrie", "Tiboudet", "Bourrinos", "Araqua", "Tarenbulle", "Mimantis", "Floramantis", "Spododo", "Lampignon", "Tritox", "Malamandre", "Nounourson", "Chelours", "Croquine", "Candine", "Sucreine", "Guﾃｩrilande", "Gouroutan", "Quartermac", "Sovkipou", "Sarmuraﾃｯ", "Bacabouh", "Trﾃｩpassable", "Concombaffe", "Type:0", "Silvalliﾃｩ", "Mﾃｩtﾃｩno", "Dodoala", "Boumata", "Togedemaru", "Mimiqui", "Denticrisse", "Draﾃｯeul", "Sinistrail", "Bﾃｩbﾃｩcaille", "ﾃ営aﾃｯd", "ﾃ洩aﾃｯser", "Tokorico", "Tokopiyon", "Tokotoro", "Tokopisco", "Cosmog", "Cosmovum", "Solgaleo", "Lunala", "Zﾃｩroﾃｯd", "Mouscoto", "Cancrelove", "Cﾃ｢blifﾃｨre", "Bamboiselle", "Katagami", "Engloutyran", "Necrozma", "Magearna", "Marshadow", "Vﾃｩmini", "Mandrillon", "Ama-Ama", "Pierroteknik", "Zeraora", "Meltan", "Melmetal", "Ouistempo", "Badabouin", "Gorythmic", "Flambino", "Lapyro", "Pyrobut", "Larmﾃｩlﾃｩon", "Arrozard", "Lﾃｩzargus", "Rongourmand", "Rongrigou", "Minisange", "Bleuseille", "Corvaillus", "Larvadar", "Colﾃｩodﾃｴme", "Astronelle", "Goupilou", "Roublenard", "Tournicoton", "Blancoton", "Moumouton", "Moumouflon", "Khﾃｩlocrok", "Torgamord", "Voltoutou", "Fulgudog", "Charbi", "Wagomine", "Monthracite", "Verpom", "Pomdrapi", "Dratatin", "Dunaja", "Dunaconda", "Nigosier", "Embrochet", "Hastacuda", "Toxizap", "Salarsen", "Grillepattes", "Scolocendre", "Poulpaf", "Krakos", "Thﾃｩffroi", "Polthﾃｩgeist", "Bibichut", "Chapotus", "Sorcilence", "Grimalin", "Fourbelin", "Angoliath", "Ixon", "Berserkatt", "Corayﾃｴme", "Palarticho", "M. Glaquette", "Tutﾃｩtﾃｩkri", "Crﾃｨmy", "Charmilly", "Hexadron", "Wattapik", "Frissonille", "Beldeneige", "Dolman", "Bekaglaﾃｧon", "Wimessir", "Morpeko", "Charibari", "Pachyradjah", "Galvagon", "Galvagla", "Hydragon", "Hydragla", "Duralugon", "Fantyrm", "Dispareptil", "Lanssorien", "Zacian", "Zamazenta", "ﾃ液hernatos", "Wushours", "Shifours", "Zarude", "Regieleki", "Regidrago", "Blizzeval", "Spectreval", "Sylveroy", "Cerbyllin", "Hachﾃｩcateur", "Ursaking", "Paragruel", "Farfurex", "Qwilpik", "Amovﾃｩnus", "Poussacha", "Matourgeon", "Miascarade", "Chochodile", "Crocogril", "Flﾃ｢migator", "Coiffeton", "Canarbello", "Palmaval", "Gourmelet", "Fragroin", "Tissenboule", "Filentrappe", "Lilliterelle", "Gambex", "Pohm", "Pohmotte", "Pohmarmotte", "Compagnol", "Famignol", "Pﾃ｢tachiot", "Briochien", "Olivini", "Olivado", "Arboliva", "Tapatoﾃｨs", "Selutin", "Amassel", "Gigansel", "Charbambin", "Carmadura", "Malvalame", "Tﾃｪtampoule", "Ampibidou", "Zapﾃｩtrel", "Fulgulairo", "Grondogue", "Dogrino", "Gribouraigne", "Tag-Tag", "Virovent", "Virevorreur", "Terracool", "Terracruel", "Craparoi", "Pimito", "Scovilain", "Lﾃｩboulﾃｩrou", "Bﾃｩrasca", "Flotillon", "Clﾃｩopsytra", "Forgerette", "Forgella", "Forgelina", "Taupikeau", "Triopikeau", "Lestombaile", "Dofin", "Superdofin", "Vrombi", "Vrombotor", "Motorizard", "Ferdeter", "Germﾃｩclat", "Florﾃｩclat", "Toutombe", "Tomberro", "Flamenroule", "Piﾃｩtacﾃｩ", "Balbalﾃｨze", "Dﾃｩlestin", "Oyacata", "Nigirigon", "Courrousinge", "Terraiste", "Farigiraf", "Deusolourdo", "Scalpereur", "Fort-Ivoire", "Hurle-Queue", "Fongus-Furie", "Flotte-Mﾃｨche", "Rampe-Ailes", "Pelage-Sablﾃｩ", "Roue-de-Fer", "Hotte-de-Fer", "Paume-de-Fer", "Tﾃｪtes-de-Fer", "Mite-de-Fer", "ﾃ英ine-de-Fer", "Frigodo", "Cryodo", "Glaivodo", "Mordudor", "Gromago", "Chongjian", "Baojian", "Dinglu", "Yuyu", "Rugit-Lune", "Garde-de-Fer", "Koraidon", "Miraidon", "Serpente-Eau", "Vert-de-Fer", "Pomdramour", "Poltchageist", "Thﾃｩffroyable", "Fﾃｩlicanis", "Fortusimia", "Favianos", "Ogerpon"],
              pokeType: ["Normal", "Combat", "Vol", "Poison", "Sol", "Roche", "Insecte", "Spectre", "Acier", "Feu", "Eau", "Plante", "ﾃ瑛ectrik", "Psy", "Glace", "Dragon", "Tﾃｩnﾃｨbres", "Fﾃｩe"],
              waza: {
                1: "ﾃ営ras'Face",
                2: "Poing Karatﾃｩ",
                3: "Torgnoles",
                4: "Poing Comﾃｨte",
                5: "Ultimapoing",
                6: "Jackpot",
                7: "Poing Feu",
                8: "Poing Glace",
                9: "Poing ﾃ営lair",
                10: "Griffe",
                11: "Force Poigne",
                12: "Guillotine",
                13: "Coupe-Vent",
                14: "Danse Lames",
                15: "Coupe",
                16: "Tornade",
                17: "Cru-Ailes",
                18: "Cyclone",
                19: "Vol",
                20: "ﾃ液reinte",
                21: "Souplesse",
                22: "Fouet Lianes",
                23: "ﾃ営rasement",
                24: "Double Pied",
                25: "Ultimawashi",
                26: "Pied Sautﾃｩ",
                27: "Mawashi Geri",
                28: "Jet de Sable",
                29: "Coup d'Boule",
                30: "Koud'Korne",
                31: "Furie",
                32: "Empal'Korne",
                33: "Charge",
                34: "Plaquage",
                35: "Ligotage",
                36: "Bﾃｩlier",
                37: "Mania",
                38: "Damoclﾃｨs",
                39: "Mimi-Queue",
                40: "Dard-Venin",
                41: "Double Dard",
                42: "Dard-Nuﾃｩe",
                43: "Groz'Yeux",
                44: "Morsure",
                45: "Rugissement",
                46: "Hurlement",
                47: "Berceuse",
                48: "Ultrason",
                49: "Sonic Boom",
                50: "Entrave",
                51: "Acide",
                52: "Flammﾃｨche",
                53: "Lance-Flammes",
                54: "Brume",
                55: "Pistolet ﾃ� O",
                56: "Hydrocanon",
                57: "Surf",
                58: "Laser Glace",
                59: "Blizzard",
                60: "Rafale Psy",
                61: "Bulles d'O",
                62: "Onde Borﾃｩale",
                63: "Ultralaser",
                64: "Picpic",
                65: "Bec Vrille",
                66: "Sacrifice",
                67: "Balayage",
                68: "Riposte",
                69: "Frappe Atlas",
                70: "Force",
                71: "Vole-Vie",
                72: "Mﾃｩga-Sangsue",
                73: "Vampigraine",
                74: "Croissance",
                75: "Tranch'Herbe",
                76: "Lance-Soleil",
                77: "Poudre Toxik",
                78: "Para-Spore",
                79: "Poudre Dodo",
                80: "Danse Fleurs",
                81: "Sﾃｩcrﾃｩtion",
                82: "Draco-Rage",
                83: "Danse Flammes",
                84: "ﾃ営lair",
                85: "Tonnerre",
                86: "Cage ﾃ営lair",
                87: "Fatal-Foudre",
                88: "Jet-Pierres",
                89: "Sﾃｩisme",
                90: "Abﾃｮme",
                91: "Tunnel",
                92: "Toxik",
                93: "Choc Mental",
                94: "Psyko",
                95: "Hypnose",
                96: "Yoga",
                97: "Hﾃ｢te",
                98: "Vive-Attaque",
                99: "Frﾃｩnﾃｩsie",
                100: "Tﾃｩlﾃｩport",
                101: "Ombre Nocturne",
                102: "Copie",
                103: "Grincement",
                104: "Reflet",
                105: "Soin",
                106: "Armure",
                107: "Lilliput",
                108: "Brouillard",
                109: "Onde Folie",
                110: "Repli",
                111: "Boul'Armure",
                112: "Bouclier",
                113: "Mur Lumiﾃｨre",
                114: "Buﾃｩe Noire",
                115: "Protection",
                116: "Puissance",
                117: "Patience",
                118: "Mﾃｩtronome",
                119: "Mimique",
                120: "Destruction",
                121: "Bombe ﾅ置f",
                122: "Lﾃｩchouille",
                123: "Purﾃｩdpois",
                124: "Dﾃｩtritus",
                125: "Massd'Os",
                126: "Dﾃｩflagration",
                127: "Cascade",
                128: "Claquoir",
                129: "Mﾃｩtﾃｩores",
                130: "Coud'Krﾃ｢ne",
                131: "Picanon",
                132: "Constriction",
                133: "Amnﾃｩsie",
                134: "Tﾃｩlﾃｩkinﾃｩsie",
                135: "E-Coque",
                136: "Pied Voltige",
                137: "Regard Mﾃｩdusant",
                138: "Dﾃｩvorﾃｪve",
                139: "Gaz Toxik",
                140: "Pilonnage",
                141: "Vampirisme",
                142: "Grobisou",
                143: "Piquﾃｩ",
                144: "Morphing",
                145: "ﾃ営ume",
                146: "Uppercut",
                147: "Spore",
                148: "Flash",
                149: "Vague Psy",
                150: "Trempette",
                151: "Acidarmure",
                152: "Pince-Masse",
                153: "Explosion",
                154: "Combo-Griffe",
                155: "Osmerang",
                156: "Repos",
                157: "ﾃ叡oulement",
                158: "Croc de Mort",
                159: "Affﾃｻtage",
                160: "Conversion",
                161: "Triplattaque",
                162: "Croc Fatal",
                163: "Tranche",
                164: "Clonage",
                165: "Lutte",
                166: "Gribouille",
                167: "Triple Pied",
                168: "Larcin",
                169: "Toile",
                170: "Lire-Esprit",
                171: "Cauchemar",
                172: "Roue de Feu",
                173: "Ronflement",
                174: "Malﾃｩdiction",
                175: "Gigotage",
                176: "Conversion 2",
                177: "Aﾃｩroblast",
                178: "Spore Coton",
                179: "Contre",
                180: "Dﾃｩpit",
                181: "Poudreuse",
                182: "Abri",
                183: "Mach Punch",
                184: "Grimace",
                185: "Feinte",
                186: "Doux Baiser",
                187: "Cognobidon",
                188: "Bombe Beurk",
                189: "Coud'Boue",
                190: "Octazooka",
                191: "Picots",
                192: "ﾃ瑛ecanon",
                193: "Clairvoyance",
                194: "Lien du Destin",
                195: "Requiem",
                196: "Vent Glace",
                197: "Dﾃｩtection",
                198: "Charge Os",
                199: "Verrouillage",
                200: "Colﾃｨre",
                201: "Tempﾃｪte de Sable",
                202: "Giga-Sangsue",
                203: "Tﾃｩnacitﾃｩ",
                204: "Charme",
                205: "Roulade",
                206: "Faux-Chage",
                207: "Vantardise",
                208: "Lait ﾃ� Boire",
                209: "ﾃ液incelle",
                210: "Taillade",
                211: "Ailes d'Acier",
                212: "Regard Noir",
                213: "Attraction",
                214: "Blabla Dodo",
                215: "Glas de Soin",
                216: "Retour",
                217: "Cadeau",
                218: "Frustration",
                219: "Rune Protect",
                220: "Balance",
                221: "Feu Sacrﾃｩ",
                222: "Ampleur",
                223: "Dynamo-Poing",
                224: "Mﾃｩgacorne",
                225: "Draco-Souffle",
                226: "Relais",
                227: "Encore",
                228: "Poursuite",
                229: "Tour Rapide",
                230: "Doux Parfum",
                231: "Queue de Fer",
                232: "Griffe Acier",
                233: "Corps Perdu",
                234: "Aurore",
                235: "Synthﾃｨse",
                236: "Rayon Lune",
                237: "Puissance Cachﾃｩe",
                238: "Coup Croix",
                239: "Ouragan",
                240: "Danse Pluie",
                241: "Zﾃｩnith",
                242: "Mﾃ｢chouille",
                243: "Voile Miroir",
                244: "Boost",
                245: "Vitesse Extrﾃｪme",
                246: "Pouvoir Antique",
                247: "Ball'Ombre",
                248: "Prescience",
                249: "ﾃ営late-Roc",
                250: "Siphon",
                251: "Baston",
                252: "Bluff",
                253: "Brouhaha",
                254: "Stockage",
                255: "Relﾃ｢che",
                256: "Avale",
                257: "Canicule",
                258: "Grﾃｪle",
                259: "Tourmente",
                260: "Flatterie",
                261: "Feu Follet",
                262: "Souvenir",
                263: "Faﾃｧade",
                264: "Mitra-Poing",
                265: "Stimulant",
                266: "Par Ici",
                267: "Force Nature",
                268: "Chargeur",
                269: "Provoc",
                270: "Coup d'Main",
                271: "Tour de Magie",
                272: "Imitation",
                273: "Vﾅ砥",
                274: "Assistance",
                275: "Racines",
                276: "Surpuissance",
                277: "Reflet Magik",
                278: "Recyclage",
                279: "Vendetta",
                280: "Casse-Brique",
                281: "Bﾃ｢illement",
                282: "Sabotage",
                283: "Effort",
                284: "ﾃ詠uption",
                285: "ﾃ営hange",
                286: "Possessif",
                287: "Rﾃｩgﾃｩnﾃｩration",
                288: "Rancune",
                289: "Saisie",
                290: "Force Cachﾃｩe",
                291: "Plongﾃｩe",
                292: "Cogne",
                293: "Camouflage",
                294: "Lumi-Queue",
                295: "Lumi-ﾃ営lat",
                296: "Ball'Brume",
                297: "Danse Plumes",
                298: "Danse Folle",
                299: "Pied Brﾃｻleur",
                300: "Lance-Boue",
                301: "Ball'Glace",
                302: "Poing Dard",
                303: "Paresse",
                304: "Mﾃｩgaphone",
                305: "Crochet Venin",
                306: "ﾃ営late Griffe",
                307: "Rafale Feu",
                308: "Hydroblast",
                309: "Poing Mﾃｩtﾃｩore",
                310: "ﾃ液onnement",
                311: "Ball'Mﾃｩtﾃｩo",
                312: "Aromathﾃｩrapie",
                313: "Croco Larme",
                314: "Tranch'Air",
                315: "Surchauffe",
                316: "Flair",
                317: "Tomberoche",
                318: "Vent Argentﾃｩ",
                319: "Strido-Son",
                320: "Siffl'Herbe",
                321: "Chatouille",
                322: "Force Cosmique",
                323: "Giclﾃｩdo",
                324: "Rayon Signal",
                325: "Poing Ombre",
                326: "Extrasenseur",
                327: "Stratopercut",
                328: "Tourbi-Sable",
                329: "Glaciation",
                330: "Ocroupi",
                331: "Balle Graine",
                332: "Aﾃｩropique",
                333: "Stalactite",
                334: "Mur de Fer",
                335: "Barrage",
                336: "Grondement",
                337: "Draco-Griffe",
                338: "Vﾃｩgﾃｩ-Attaque",
                339: "Gonflette",
                340: "Rebond",
                341: "Tir de Boue",
                342: "Queue-Poison",
                343: "Implore",
                344: "ﾃ瑛ectacle",
                345: "Feuille Magik",
                346: "Tourniquet",
                347: "Plﾃｩnitude",
                348: "Lame Feuille",
                349: "Danse Draco",
                350: "Boule Roc",
                351: "Onde de Choc",
                352: "Vibraqua",
                353: "Vﾅ砥 Destructeur",
                354: "Psycho-Boost",
                355: "Atterrissage",
                356: "Gravitﾃｩ",
                357: "ﾅ段l Miracle",
                358: "Rﾃｩveil Forcﾃｩ",
                359: "Marto-Poing",
                360: "Gyroballe",
                361: "Vﾅ砥 Soin",
                362: "Saumure",
                363: "Don Naturel",
                364: "Ruse",
                365: "Picore",
                366: "Vent Arriﾃｨre",
                367: "Acupression",
                368: "Fulmifer",
                369: "Demi-Tour",
                370: "Close Combat",
                371: "Reprﾃｩsailles",
                372: "Assurance",
                373: "Embargo",
                374: "Dﾃｩgommage",
                375: "ﾃ営hange Psy",
                376: "Atout",
                377: "Anti-Soin",
                378: "Essorage",
                379: "Astuce Force",
                380: "Suc Digestif",
                381: "Air Veinard",
                382: "Moi d'Abord",
                383: "Photocopie",
                384: "Permuforce",
                385: "Permugarde",
                386: "Punition",
                387: "Dernier Recours",
                388: "Soucigraine",
                389: "Coup Bas",
                390: "Pics Toxik",
                391: "Permucﾅ砥r",
                392: "Anneau Hydro",
                393: "Vol Magnﾃｩtik",
                394: "Boutefeu",
                395: "Forte-Paume",
                396: "Aurasphﾃｨre",
                397: "Poliroche",
                398: "Direct Toxik",
                399: "Vibrobscur",
                400: "Tranche-Nuit",
                401: "Hydro-Queue",
                402: "Canon Graine",
                403: "Lame d'Air",
                404: "Plaie Croix",
                405: "Bourdon",
                406: "Draco-Choc",
                407: "Draco-Charge",
                408: "Rayon Gemme",
                409: "Vampi-Poing",
                410: "Onde Vide",
                411: "Exploforce",
                412: "ﾃ営o-Sphﾃｨre",
                413: "Rapace",
                414: "Telluriforce",
                415: "Passe-Passe",
                416: "Giga Impact",
                417: "Machination",
                418: "Pisto-Poing",
                419: "Avalanche",
                420: "ﾃ営lats Glace",
                421: "Griffe Ombre",
                422: "Crocs ﾃ営lair",
                423: "Crocs Givre",
                424: "Crocs Feu",
                425: "Ombre Portﾃｩe",
                426: "Boue-Bombe",
                427: "Coupe Psycho",
                428: "Psykoud'Boul",
                429: "Miroi-Tir",
                430: "Luminocanon",
                431: "Escalade",
                432: "Anti-Brume",
                433: "Distorsion",
                434: "Draco-Mﾃｩtﾃｩore",
                435: "Coup d'Jus",
                436: "ﾃ叡ullilave",
                437: "Tempﾃｪte Verte",
                438: "Mﾃｩgafouet",
                439: "Roc-Boulet",
                440: "Poison Croix",
                441: "Dﾃｩtricanon",
                442: "Tﾃｪte de Fer",
                443: "Bombe Aimant",
                444: "Lame de Roc",
                445: "Sﾃｩduction",
                446: "Piﾃｨge de Roc",
                447: "Nﾅ砥d Herbe",
                448: "Babil",
                449: "Jugement",
                450: "Piqﾃｻre",
                451: "Rayon Chargﾃｩ",
                452: "Martobois",
                453: "Aqua-Jet",
                454: "Appel Attaque",
                455: "Appel Dﾃｩfense",
                456: "Appel Soins",
                457: "Fracass'Tﾃｪte",
                458: "Coup Double",
                459: "Hurle-Temps",
                460: "Spatio-Rift",
                461: "Danse Lune",
                462: "Presse",
                463: "Vortex Magma",
                464: "Trou Noir",
                465: "Fulmigraine",
                466: "Vent Mauvais",
                467: "Revenant",
                468: "Aiguisage",
                469: "Garde Large",
                470: "Partage Garde",
                471: "Partage Force",
                472: "Zone ﾃ液range",
                473: "Choc Psy",
                474: "Choc Venin",
                475: "Allﾃｨgement",
                476: "Poudre Fureur",
                477: "Lﾃｩvikinﾃｩsie",
                478: "Zone Magique",
                479: "Anti-Air",
                480: "Yama Arashi",
                481: "Rebondifeu",
                482: "Cradovague",
                483: "Papillodanse",
                484: "Tacle Lourd",
                485: "Synchropeine",
                486: "Boule ﾃ瑛ek",
                487: "Dﾃｩtrempage",
                488: "Nitrocharge",
                489: "Enroulement",
                490: "Balayette",
                491: "Bombe Acide",
                492: "Tricherie",
                493: "Rayon Simple",
                494: "Ten-Danse",
                495: "Aprﾃｨs Vous",
                496: "Chant Canon",
                497: "ﾃ営ho",
                498: "Attrition",
                499: "Bain de Smog",
                500: "Force Ajoutﾃｩe",
                501: "Prﾃｩvention",
                502: "Interversion",
                503: "ﾃ叡ullition",
                504: "Exuviation",
                505: "Vibra Soin",
                506: "Chﾃ｢timent",
                507: "Chute Libre",
                508: "Change-Vitesse",
                509: "Projection",
                510: "Calcination",
                511: "ﾃ la Queue",
                512: "Acrobatie",
                513: "Copie-Type",
                514: "Vengeance",
                515: "Tout ou Rien",
                516: "Passe-Cadeau",
                517: "Feu d'Enfer",
                518: "Aire d'Eau",
                519: "Aire de Feu",
                520: "Aire d'Herbe",
                521: "Change-ﾃ営lair",
                522: "Survinsecte",
                523: "Piﾃｩtisol",
                524: "Souffle Glacﾃｩ",
                525: "Draco-Queue",
                526: "Rengorgement",
                527: "Toile ﾃ瑛ek",
                528: "ﾃ営lair Fou",
                529: "Tunnelier",
                530: "Double Baffe",
                531: "Crﾃｨve-Cﾅ砥r",
                532: "Encornebois",
                533: "Lame Sainte",
                534: "Coqui-Lame",
                535: "Tacle Feu",
                536: "Phytomixeur",
                537: "Bulldoboule",
                538: "Cotogarde",
                539: "Explonuit",
                540: "Frappe Psy",
                541: "Plumo-Queue",
                542: "Vent Violent",
                543: "Peignﾃｩe",
                544: "Lancﾃｩcrou",
                545: "Incendie",
                546: "Techno-Buster",
                547: "Chant Antique",
                548: "Lame Ointe",
                549: "ﾃ�re Glaciaire",
                550: "Charge Foudre",
                551: "Flamme Bleue",
                552: "Danse du Feu",
                553: "ﾃ営lair Gelﾃｩ",
                554: "Feu Glacﾃｩ",
                555: "Aboiement",
                556: "Chute Glace",
                557: "Coup Victoire",
                558: "Flamme Croix",
                559: "ﾃ営lair Croix",
                560: "Flying Press",
                561: "Tatamigaeshi",
                562: "ﾃ詠uctation",
                563: "Fertilisation",
                564: "Toile Gluante",
                565: "Dard Mortel",
                566: "Hantise",
                567: "Halloween",
                568: "Rﾃ｢le Mﾃ｢le",
                569: "Dﾃｩluge Plasmique",
                570: "Parabocharge",
                571: "Malﾃｩfice Sylvain",
                572: "Tempﾃｪte Florale",
                573: "Lyophilisation",
                574: "Voix Enjﾃｴleuse",
                575: "Dernier Mot",
                576: "Renversement",
                577: "Vampibaiser",
                578: "Vigilance",
                579: "Garde Florale",
                580: "Champ Herbu",
                581: "Champ Brumeux",
                582: "ﾃ瑛ectrisation",
                583: "Cﾃ｢linerie",
                584: "Vent Fﾃｩﾃｩrique",
                585: "Pouvoir Lunaire",
                586: "Bang Sonique",
                587: "Verrou Enchantﾃｩ",
                588: "Bouclier Royal",
                589: "Camaraderie",
                590: "Confidence",
                591: "Orage Adamantin",
                592: "Jet de Vapeur",
                593: "TrouDimensionnel",
                594: "Sheauriken",
                595: "Feu Ensorcelﾃｩ",
                596: "Pico-Dﾃｩfense",
                597: "Brume Capiteuse",
                598: "Ondes ﾃ液ranges",
                599: "Piﾃｨge de Venin",
                600: "Nuﾃｩe de Poudre",
                601: "Gﾃｩo-Contrﾃｴle",
                602: "Magnﾃｩ-Contrﾃｴle",
                603: "ﾃ液rennes",
                604: "Champ ﾃ瑛ectrifiﾃｩ",
                605: "ﾃ営lat Magique",
                606: "Cﾃｩlﾃｩbration",
                607: "Mains Jointes",
                608: "Regard Touchant",
                609: "Frotte-Frimousse",
                610: "Retenue",
                611: "Harcﾃｨlement",
                612: "Poing Boost",
                613: "Mort'Ailes",
                614: "Myria-Flﾃｨches",
                615: "Myria-Vagues",
                616: "Force Chtonienne",
                617: "Lumiﾃｨre du Nﾃｩant",
                618: "Onde Originelle",
                619: "Lame Pangﾃｩenne",
                620: "Draco-Ascension",
                621: "Furie Dimension",
                622: "Turbo-Charge Bulldozer",
                623: "Turbo-Charge Bulldozer",
                624: "Combo Hyper-Furie",
                625: "Combo Hyper-Furie",
                626: "Piquﾃｩ Supersonique",
                627: "Piquﾃｩ Supersonique",
                628: "Dﾃｩluge Causti-Toxique",
                629: "Dﾃｩluge Causti-Toxique",
                630: "ﾃ詠uption Gﾃｩo-Sismique",
                631: "ﾃ詠uption Gﾃｩo-Sismique",
                632: "Apocalypse Gigalithique",
                633: "Apocalypse Gigalithique",
                634: "Cocon Fatal",
                635: "Cocon Fatal",
                636: "Appel des Ombres ﾃ液ernelles",
                637: "Appel des Ombres ﾃ液ernelles",
                638: "Vrille Maximum",
                639: "Vrille Maximum",
                640: "Pyro-Explosion Cataclysmique",
                641: "Pyro-Explosion Cataclysmique",
                642: "Super Tourbillon Abyssal",
                643: "Super Tourbillon Abyssal",
                644: "Pﾃｩtalexplosion ﾃ叡louissante",
                645: "Pﾃｩtalexplosion ﾃ叡louissante",
                646: "Fulguro-Lance Gigavolt",
                647: "Fulguro-Lance Gigavolt",
                648: "Psycho-Pulvﾃｩrisation EX",
                649: "Psycho-Pulvﾃｩrisation EX",
                650: "Laser Cryogﾃｩnique",
                651: "Laser Cryogﾃｩnique",
                652: "Chaos Draconique",
                653: "Chaos Draconique",
                654: "Trou Noir des Ombres",
                655: "Trou Noir des Ombres",
                656: "Impact Choupinova",
                657: "Impact Choupinova",
                658: "Pikachute Foudroyante",
                659: "Amass'Sable",
                660: "Escarmouche",
                661: "Blockhaus",
                662: "Tisse Ombre",
                663: "Dark Lariat",
                664: "Aria de l'ﾃ営ume",
                665: "Marteau de Glace",
                666: "Soin Floral",
                667: "Cavalerie Lourde",
                668: "Vole-Force",
                669: "Lame Solaire",
                670: "Feuillage",
                671: "Projecteur",
                672: "Fil Toxique",
                673: "Affilage",
                674: "Engrenage",
                675: "Exﾃｩcu-Son",
                676: "Boule Pollen",
                677: "Ancrage",
                678: "Champ Psychique",
                679: "Furie-Bond",
                680: "Fouet de Feu",
                681: "Arrogance",
                682: "Flamme Ultime",
                683: "Permuvitesse",
                684: "Estocorne",
                685: "Purification",
                686: "Danse ﾃ益eil",
                687: "Sanction Suprﾃｪme",
                688: "Botte Sucrette",
                689: "Sommation",
                690: "Bec-Canon",
                691: "Vibrﾃｩcaille",
                692: "Draco-Marteau",
                693: "Centrifugifle",
                694: "Voile Aurore",
                695: "Fureur des Plumes Spectrales",
                696: "Dark Body Press",
                697: "Symphonie des Ondines",
                698: "Colﾃｨre du Gardien d'Alola",
                699: "Fauche-ﾃＮe des Sept ﾃ液oiles",
                700: "ﾃ瑛ectro-Surf Survoltﾃｩ",
                701: "Gare au Ronflex",
                702: "Neuf pour Un",
                703: "Supernova Originelle",
                704: "Carapiﾃｨge",
                705: "Canon Floral",
                706: "Psycho-Croc",
                707: "Trﾃｩpignement",
                708: "Os Ombre",
                709: "Vif Roc",
                710: "Aqua-Brﾃｨche",
                711: "Laser Prisme",
                712: "Clepto-Mﾃ｢nes",
                713: "Choc Mﾃｩtﾃｩore",
                714: "Rayon Spectral",
                715: "Larme ﾃ� l'ﾅ段l",
                716: "ﾃ瑛ectrikipik",
                717: "Ire de la Nature",
                718: "Coup Varia-Type",
                719: "Giga-Tonnerre",
                720: "Caboche-Kaboum",
                721: "Plasma Punch",
                722: "Photo-Geyser",
                723: "Apocalypsis Luminis",
                724: "Hﾃｩlio-Choc Dﾃｩvastateur",
                725: "Rayons Sﾃｩlﾃｩno-Explosifs",
                726: "Patati-Patattrape",
                727: "Hurlement des Roches-Lames",
                728: "Dracacophonie Flamboyante",
                729: "Pika-Sprint",
                730: "Pika-Splash",
                731: "Pika-Piquﾃｩ",
                732: "Pika-Fracas",
                733: "ﾃ益o-Thalasso",
                734: "ﾃ益o-Dynamo",
                735: "ﾃ益o-Flambo",
                736: "ﾃ益o-Psycho",
                737: "ﾃ益o-Tﾃｩnﾃｩbro",
                738: "ﾃ益o-ﾃ営olo",
                739: "ﾃ益o-Congﾃｩlo",
                740: "ﾃ益o-Fabulo",
                741: "ﾃ益o-Chardasso",
                742: "ﾃ営rous d'Poing",
                743: "Gardomax",
                744: "Canon Dynamax",
                745: "Tir de Prﾃｩcision",
                746: "Croque Fort",
                747: "Garde-ﾃ�-Joues",
                748: "Ultime Bastion",
                749: "Goudronnage",
                750: "Poudre Magique",
                751: "Draco-Flﾃｨches",
                752: "Thﾃｩrﾃｩmonie",
                753: "Octoprise",
                754: "Prise de Bec",
                755: "Branchicrok",
                756: "Change-Cﾃｴtﾃｩ",
                757: "Pyromax",
                758: "Insectomax",
                759: "Fulguromax",
                760: "Normalomax",
                761: "Pugilomax",
                762: "Spectromax",
                763: "Cryomax",
                764: "Toxinomax",
                765: "Hydromax",
                766: "Aﾃｩromax",
                767: "Enchantomax",
                768: "Dracomax",
                769: "Psychomax",
                770: "Lithomax",
                771: "Sismomax",
                772: "Sinistromax",
                773: "Phytomax",
                774: "Mﾃｩtallomax",
                775: "Dracacophonie",
                776: "Big Splash",
                777: "Nappage",
                778: "Tambour Battant",
                779: "Troquenard",
                780: "Ballon Brﾃｻlant",
                781: "Gladius Maximus",
                782: "Aegis Maxima",
                783: "Roue Libre",
                784: "Abattage",
                785: "Tapotige",
                786: "Overdrive",
                787: "Acide Malique",
                788: "Force G",
                789: "Choc ﾃ盈otionnel",
                790: "Vapeur Fﾃｩﾃｩrique",
                791: "Fontaine de Vie",
                792: "Blocage",
                793: "Fourbette",
                794: "Joute Astrale",
                795: "Laser Infinimax",
                796: "Mﾃｩtalaser",
                797: "Vaste Pouvoir",
                798: "Mﾃｩtalliroue",
                799: "Rafale ﾃ営ailles",
                800: "Laser Mﾃｩtﾃｩore",
                801: "Kokiyarme",
                802: "Explo-Brume",
                803: "Gliss'Herbe",
                804: "Monte-Tension",
                805: "Champlification",
                806: "Ravage Rampant",
                807: "Feu Envieux",
                808: "Cent Rancunes",
                809: "Esprit Frappeur",
                810: "Gaz Corrosif",
                811: "Coaching",
                812: "Eau Revoir",
                813: "Triple Axel",
                814: "Double Volﾃｩe",
                815: "Sable Ardent",
                816: "Selve Salvatrice",
                817: "Poing Obscur",
                818: "Torrent de Coups",
                819: "Voltageﾃｴle",
                820: "Draco-ﾃ穎ergie",
                821: "Regard Glaﾃｧant",
                822: "Fureur Ardente",
                823: "Coup Fulgurant",
                824: "Lance de Glace",
                825: "ﾃ営lat Spectral",
                826: "Sort Sinistre",
                827: "Griffes Funestes",
                828: "Sprint Bouclier",
                829: "ﾃ営hange Force",
                830: "Hache de Pierre",
                831: "Typhon Passionnﾃｩ",
                832: "Force Mystique",
                833: "Grand Courroux",
                834: "Aquatacle",
                835: "Herblast",
                836: "Bise Glaciaire",
                837: "Danse Victoire",
                838: "Assaut Frontal",
                839: "Multitoxik",
                840: "Ailes Psycho",
                841: "Cﾅ砥r de Rancﾅ砥r",
                842: "Mur Fumigﾃｨne",
                843: "Triple Flﾃｨche",
                844: "Cortﾃｨge Funﾃｨbre",
                845: "Vagues ﾃ� Lames",
                846: "Typhon Hivernal",
                847: "Typhon Fulgurant",
                848: "Typhon Pyrosable",
                849: "Priﾃｨre Lunaire",
                850: "Extravaillance",
                851: "Tﾃｩra Explosion",
                852: "Piﾃｨge de Fil",
                853: "Talon-Marteau",
                854: "Hommage Posthume",
                855: "Lumino-Impact",
                856: "Plat du Jour",
                857: "Poing Sonique",
                858: "Habanerage",
                859: "Dﾃｩrapage",
                860: "Prolifﾃｩration",
                861: "Cryo-Pirouette",
                862: "Charge Glaive",
                863: "Second Souffle",
                864: "Salaison",
                865: "Triple Plongeon",
                866: "Toupie ﾃ営lat",
                867: "Dﾃｩcalquage",
                868: "Dﾃｩcharnement",
                869: "Gﾃｩnusection",
                870: "Magie Florale",
                871: "Chant Flamboyant",
                872: "Danse Aquatique",
                873: "Taurogne",
                874: "Ruﾃｩe d'Or",
                875: "Lame Psychique",
                876: "Hydrovapeur",
                877: "Cataclysme",
                878: "Nitro Crash",
                879: "Turbo Volt",
                880: "Queulonage",
                881: "Neigeux de Mots",
                882: "Grand Nettoyage",
                883: "Chute de Neige",
                884: "Bond",
                885: "Dﾃｩsherbaffe",
                886: "Douche Froide",
                887: "Hyperceuse",
                888: "Double Laser",
                889: "Poing de Colﾃｨre",
                890: "Canon Blindﾃｩ",
                891: "Lame en Peine",
                892: "Double Dﾃｩcharge",
                893: "Marteau Mastoc",
                894: "Vindicte",
                895: "Tranch'Aqua",
                896: "Crash Brﾃｻlant",
                897: "Crash Obscur",
                898: "Crash Toxique",
                899: "Crash Musclﾃｩ",
                900: "Crash Magique",
                901: "Lune Rouge",
                902: "Mortier Matcha",
                903: "Bombe au Sirop",
                904: "Massue Liane"
              },
              tokusei: {
                1: "Puanteur",
                2: "Crachin",
                3: "Turbo",
                4: "Armurbaston",
                5: "Fermetﾃｩ",
                6: "Moiteur",
                7: "ﾃ営hauffement",
                8: "Voile Sable",
                9: "Statik",
                10: "Absorbe-Volt",
                11: "Absorbe-Eau",
                12: "Benﾃｪt",
                13: "Ciel Gris",
                14: "ﾅ段l Composﾃｩ",
                15: "Insomnia",
                16: "Homochromie",
                17: "Vaccin",
                18: "Torche",
                19: "ﾃ営ran Poudre",
                20: "Tempo Perso",
                21: "Ventouse",
                22: "Intimidation",
                23: "Marque Ombre",
                24: "Peau Dure",
                25: "Garde Mystik",
                26: "Lﾃｩvitation",
                27: "Pose Spore",
                28: "Synchro",
                29: "Corps Sain",
                30: "Mﾃｩdic Nature",
                31: "Paratonnerre",
                32: "Sﾃｩrﾃｩnitﾃｩ",
                33: "Glissade",
                34: "Chlorophylle",
                35: "Lumiattirance",
                36: "Calque",
                37: "Coloforce",
                38: "Point Poison",
                39: "Attention",
                40: "Armumagma",
                41: "Ignifu-Voile",
                42: "Magnﾃｩpiﾃｨge",
                43: "Anti-Bruit",
                44: "Cuvette",
                45: "Sable Volant",
                46: "Pression",
                47: "Isograisse",
                48: "Matinal",
                49: "Corps Ardent",
                50: "Fuite",
                51: "Regard Vif",
                52: "Hyper Cutter",
                53: "Ramassage",
                54: "Absentﾃｩisme",
                55: "Agitation",
                56: "Joli Sourire",
                57: "Plus",
                58: "Moins",
                59: "Mﾃｩtﾃｩo",
                60: "Glu",
                61: "Mue",
                62: "Cran",
                63: "ﾃ営aille Spﾃｩciale",
                64: "Suintement",
                65: "Engrais",
                66: "Brasier",
                67: "Torrent",
                68: "Essaim",
                69: "Tﾃｪte de Roc",
                70: "Sﾃｩcheresse",
                71: "Piﾃｨge Sable",
                72: "Esprit Vital",
                73: "ﾃ営ran Fumﾃｩe",
                74: "Force Pure",
                75: "Coque Armure",
                76: "Air Lock",
                77: "Pieds Confus",
                78: "Motorisﾃｩ",
                79: "Rivalitﾃｩ",
                80: "Impassible",
                81: "Rideau Neige",
                82: "Gloutonnerie",
                83: "Colﾃｩrique",
                84: "Dﾃｩlestage",
                85: "Ignifugﾃｩ",
                86: "Simple",
                87: "Peau Sﾃｨche",
                88: "Tﾃｩlﾃｩcharge",
                89: "Poing de Fer",
                90: "Soin Poison",
                91: "Adaptabilitﾃｩ",
                92: "Multi-Coups",
                93: "Hydratation",
                94: "Force Soleil",
                95: "Pied Vﾃｩloce",
                96: "Normalise",
                97: "Sniper",
                98: "Garde Magik",
                99: "Annule Garde",
                100: "Frein",
                101: "Technicien",
                102: "Feuille Garde",
                103: "Maladresse",
                104: "Brise Moule",
                105: "Chanceux",
                106: "Boom Final",
                107: "Anticipation",
                108: "Prﾃｩdiction",
                109: "Inconscient",
                110: "Lentiteintﾃｩe",
                111: "Filtre",
                112: "Dﾃｩbut Calme",
                113: "Querelleur",
                114: "Lavabo",
                115: "Corps Gel",
                116: "Solide Roc",
                117: "Alerte Neige",
                118: "Cherche Miel",
                119: "Fouille",
                120: "Tﾃｩmﾃｩraire",
                121: "Multi-Type",
                122: "Don Floral",
                123: "Mauvais Rﾃｪve",
                124: "Pickpocket",
                125: "Sans Limite",
                126: "Contestation",
                127: "Tension",
                128: "Acharnﾃｩ",
                129: "Dﾃｩfaitiste",
                130: "Corps Maudit",
                131: "Cﾅ砥r Soin",
                132: "Garde-Ami",
                133: "Armurouillﾃｩe",
                134: "Heavy Metal",
                135: "Light Metal",
                136: "Multiﾃｩcaille",
                137: "Rage Poison",
                138: "Rage Brﾃｻlure",
                139: "Rﾃｩcolte",
                140: "Tﾃｩlﾃｩpathe",
                141: "Lunatique",
                142: "Envelocape",
                143: "Toxitouche",
                144: "Rﾃｩgﾃｩ-Force",
                145: "Cﾅ砥r de Coq",
                146: "Baigne Sable",
                147: "Peau Miracle",
                148: "Analyste",
                149: "Illusion",
                150: "Imposteur",
                151: "Infiltration",
                152: "Momie",
                153: "Impudence",
                154: "Cﾅ砥r Noble",
                155: "Phobique",
                156: "Miroir Magik",
                157: "Herbivore",
                158: "Farceur",
                159: "Force Sable",
                160: "ﾃ英ine de Fer",
                161: "Mode Transe",
                162: "Victorieux",
                163: "Turbo Brasier",
                164: "Tﾃｩra-Voltage",
                165: "Aroma-Voile",
                166: "Flora-Voile",
                167: "Bajoues",
                168: "Protﾃｩen",
                169: "Toison ﾃ英aisse",
                170: "Magicien",
                171: "Pare-Balles",
                172: "Battant",
                173: "Prognathe",
                174: "Peau Gelﾃｩe",
                175: "Gluco-Voile",
                176: "Dﾃｩclic Tactique",
                177: "Ailes Bourrasque",
                178: "Mﾃｩga Blaster",
                179: "Toison Herbue",
                180: "Symbiose",
                181: "Griffe Dure",
                182: "Peau Fﾃｩﾃｩrique",
                183: "Poisseux",
                184: "Peau Cﾃｩleste",
                185: "Amour Filial",
                186: "Aura Tﾃｩnﾃｩbreuse",
                187: "Aura Fﾃｩﾃｩrique",
                188: "Aura Inversﾃｩe",
                189: "Mer Primaire",
                190: "Terre Finale",
                191: "Souffle Delta",
                192: "Endurance",
                193: "Escampette",
                194: "Repli Tactique",
                195: "Sable Humide",
                196: "Cruautﾃｩ",
                197: "Bouclier-Carcan",
                198: "Filature",
                199: "Aquabulle",
                200: "Expert Acier",
                201: "Folle Furie",
                202: "Chasse-Neige",
                203: "Longue Portﾃｩe",
                204: "Hydrata-Son",
                205: "Prioguﾃｩrison",
                206: "Peau ﾃ瑛ectrique",
                207: "Surf Caudal",
                208: "Banc",
                209: "Fantﾃｴmasque",
                210: "Synergie",
                211: "Rassemblement",
                212: "Corrosion",
                213: "Hypersommeil",
                214: "Prestance Royale",
                215: "Expuls'Organes",
                216: "Danseuse",
                217: "Batterie",
                218: "Boule de Poils",
                219: "Corps Colorﾃｩ",
                220: "Animacﾅ砥r",
                221: "Mﾃｨche Rebelle",
                222: "Receveur",
                223: "Osmose",
                224: "Boost Chimﾃｨre",
                225: "Systﾃｨme Alpha",
                226: "Crﾃｩa-ﾃ瑛ec",
                227: "Crﾃｩa-Psy",
                228: "Crﾃｩa-Brume",
                229: "Crﾃｩa-Herbe",
                230: "Mﾃｩtallo-Garde",
                231: "Spectro-Bouclier",
                232: "Prisme-Armure",
                233: "Cﾃｩrﾃｩbro-Force",
                234: "Lame Indomptable",
                235: "ﾃ曳ide Inflexible",
                236: "Libﾃｩro",
                237: "Ramasse Ball",
                238: "Effilochage",
                239: "Propulseur",
                240: "Armure Miroir",
                241: "Dﾃｩgobage",
                242: "Nerfs d'Acier",
                243: "Turbine",
                244: "Punk Rock",
                245: "Expul'Sable",
                246: "ﾃ営ailles Glacﾃｩes",
                247: "Mﾃｻrissement",
                248: "Tﾃｪte de Gel",
                249: "Cercle d'ﾃ穎ergie",
                250: "Mimﾃｩtisme",
                251: "Brise-Barriﾃｨre",
                252: "Boost Acier",
                253: "Corps Condamnﾃｩ",
                254: "ﾃＮe Vagabonde",
                255: "Entﾃｪtement",
                256: "Gaz Inhibiteur",
                257: "Voile Pastel",
                258: "Dﾃｩclic Fringale",
                259: "Tir Vif",
                260: "Poing Invisible",
                261: "Breuvage Suspect",
                262: "Transistor",
                263: "Dent de Dragon",
                264: "Blanche Ruade",
                265: "Sombre Ruade",
                266: "Osmose ﾃ衛uine",
                267: "Osmose ﾃ衛uine",
                268: "Odeur Tenace",
                269: "Semencier",
                270: "Thermodynamique",
                271: "Courroupace",
                272: "Sel Purificateur",
                273: "Bien Cuit",
                274: "Aﾃｩroportﾃｩ",
                275: "Chien de Garde",
                276: "Porte-Roche",
                277: "Turbine ﾃ頴lienne",
                278: "Supermutation",
                279: "Commandant",
                280: "Grecharge",
                281: "Palﾃｩosynthﾃｨse",
                282: "Charge Quantique",
                283: "Corps en Or",
                284: "Urne du Flﾃｩau",
                285: "ﾃ英ﾃｩe du Flﾃｩau",
                286: "Bois du Flﾃｩau",
                287: "Perles du Flﾃｩau",
                288: "Pouls Orichalque",
                289: "Moteur ﾃ� Hadrons",
                290: "Opportuniste",
                291: "Ruminant",
                292: "Incisif",
                293: "Gﾃｩnﾃｩral Suprﾃｪme",
                294: "Collab",
                295: "Dﾃｩpﾃｴt Toxique",
                296: "Armure Caudale",
                297: "Absorbe-Terre",
                298: "Force Fongique",
                299: "Aux Petits Soins",
                300: "ﾅ段l Rﾃｩvﾃｩlateur",
                301: "Force Mﾃｩmorielle",
                302: "Force Mﾃｩmorielle",
                303: "Force Mﾃｩmorielle",
                304: "Force Mﾃｩmorielle",
                305: "Chaﾃｮne Toxique",
                306: "Nectar Mielleux"
              },
              seikaku: {
                0: "Hardi",
                1: "Solo",
                2: "Brave",
                3: "Rigide",
                4: "Mauvais",
                5: "Assurﾃｩ",
                6: "Docile",
                7: "Relax",
                8: "Malin",
                9: "Lﾃ｢che",
                10: "Timide",
                11: "Pressﾃｩ",
                12: "Sﾃｩrieux",
                13: "Jovial",
                14: "Naﾃｯf",
                15: "Modeste",
                16: "Doux",
                17: "Discret",
                18: "Pudique",
                19: "Foufou",
                20: "Calme",
                21: "Gentil",
                22: "Malpoli",
                23: "Prudent",
                24: "Bizarre"
              }
            }
          }
        };
        break;
      case 4:
        e = new class {
          constructor() {
            this.pages = {
              t_common: {
                "#regulation": "Regole",
                "#available_poke": "Pokﾃｩmon ammessi",
                "#trainer-tab-text": "Classifica Allenatori",
                "#pokemon-tab-text": "Classifica Pokﾃｩmon",
                "#open": "In corso",
                "#end": "Conclusa",
                gathering: "Conteggio in corso...",
                not_join: "Non disputata",
                not_join_battle: "Non hai ancora partecipato a nessuna lotta<br>di questo tipo.",
                not_join_tournament: "Non stai partecipando o non hai partecipato a questa gara.",
                not_join_friendcompe: "Non hai ancora partecipato a nessuna Gara privata.",
                win: "VITTORIA",
                lose: "SCONFITTA",
                draw: "PAREGGIO",
                rental: "Squadra a nolo",
                rank_num: "%dﾂｰ posto",
                win_num: "Vittorie: %d",
                lose_num: "Sconfitte: %d",
                draw_num: "Pareggi: %d",
                ok: "Ok",
                rulename1: "Senza restrizioni",
                rulename2: "Regole normali",
                rulename3: "Regole alla pari",
                rulename4: "Senza restrizioni",
                rulename5: "Regole normali",
                rulename6: "Regole alla pari",
                rulename7: "Senza restrizioni",
                rulename8: "Regole normali",
                rulename9: "Regole alla pari",
                rulename10: "Regole ufficiali 1",
                rulename11: "Regole ufficiali 2",
                rulename12: "Regole ufficiali 1",
                rulename13: "Regole ufficiali 2",
                rulename14: "Regole ufficiali 3",
                outrange: "Fuori classifica"
              },
              t_rankmatchPageTexts: {
                "#title-text": "Lotte Competitive"
              },
              t_my_rankmatchPageTexts: {
                "#title-text": "Risultati delle Lotte Competitive",
                "#rate_label": "Punteggio"
              },
              t_pokemonrankingPageTexts: {
                "#title-text": "Informazioni sul Pokﾃｩmon",
                no: "Nﾂｺ",
                ".battle-team-tab-text": "Dettagli",
                ".when-win-tab-text": "Vittorie",
                ".when-lose-tab-text": "Sconfitte",
                "kind-tab-battle-team": "Top 10 dei Pokﾃｩmon piﾃｹ spesso con lui nella Squadra Lotta",
                "kind-tab-battle-win": "Top 10 dei Pokﾃｩmon da lui mandati KO piﾃｹ spesso",
                "kind-tab-battle-lose": "Top 10 dei Pokﾃｩmon che l'hanno mandato KO piﾃｹ spesso",
                "kind-tab-battle-waza": "Mosse",
                "kind-tab-battle-waza-win": "Top 10 delle mosse da lui piﾃｹ usate per mandare i nemici KO",
                "kind-tab-battle-waza-lose": "Top 10 delle mosse che l'hanno mandato KO piﾃｹ spesso",
                "kind-tab-battle-tokusei": "Abilitﾃ�",
                "kind-tab-battle-item": "Strumenti",
                "kind-tab-battle-seikaku": "Nature",
                "kind-tab-battle-terastal": "Teratipo",
                atk: "Attacco",
                def: "Difesa",
                agi: "Velocitﾃ�",
                spatk: "Att. Sp.",
                spdef: "Dif. Sp.",
                hyphen: "-"
              },
              t_internetcompetitionPageTexts: {
                "#title-text": "Gare Ufficiali"
              },
              t_internetcompetition_detailPageTexts: {
                "#title-text": "Dettagli della Gara Ufficiale"
              },
              t_my_internetcompetition_detailPageTexts: {
                "#title-text": "Dettagli della Gara Ufficiale",
                "#rate_label": "Punteggio",
                mydata_dialog_title: "Scegli dati",
                mydata_dialog_text: "Dati giocatore",
                mydata_dialog_btn1: "Posizione",
                mydata_dialog_btn2: "Squadra Lotta"
              },
              t_friendcompetitionPageTexts: {
                "#title-text": "Gare Private"
              },
              t_my_friendcompetitionPageTexts: {
                "#title-text": "Gare Private",
                ".organizer-label-text": "Organizzata da",
                ".result-label-text": "Risultati",
                ".battleteam-label-text": "Squadra Lotta"
              },
              t_friendcompetition_detailPageTexts: {
                "#title-text": "Dettagli della Gara Privata"
              },
              t_my_friendcompetition_detailPageTexts: {
                "#title-text": "Dettagli della Gara Privata"
              },
              t_battle_teamPageTexts: {
                internetcompe: "Squadre Lotta delle Gare Ufficiali",
                friendcompe: "Squadre Lotta delle Gare Private"
              },
              t_mydataselectPageTexts: {
                title_text_rankmatch: "Tuoi risultati",
                title_text_internetcompe: "Dettagli della Gara Ufficiale",
                title_text_friendcompe: "Gare Private",
                "#dataselect-text": "Scegli i dati di salvataggio di cui vedere la cronologia lotte."
              },
              t_tournament_detailPageTexts: {
                "#title-text": "Dettagli del torneo",
                single_elimination: "Eliminazione diretta",
                double_elimination: "Doppia eliminazione",
                bestX: "Top %d",
                Xround: "%dﾂｺ turno",
                semi_final: "Semifinale",
                final: "Finale",
                round_winners: "%dﾂｺ turno girone dei vincitori",
                final_winners: "%dﾂｺ turno girone dei vincitori (finale)",
                round_losers: "%dﾂｺ girone dei perdenti",
                final_losers: "%dﾂｺ girone dei perdenti (finale)",
                grandfinal: "Finalissima",
                coming_soon: "In arrivo!"
              },
              topPageTexts: {
                "#top-title-text": "Schermata lotte",
                "#top-mypage-text": "Tuoi risultati",
                "#top-rankmatch-text": "Lotte Competitive",
                "#top--internetcompe-text": "Gare Online",
                "#top-regulation-text": "Regole scaricabili"
              },
              myresult_topPageTexts: {
                "#title-text": "Tuoi risultati",
                "#rankmatch-text": "Lotte Competitive",
                "#internetcompe-text": "Gare Online",
                "#friendcompe-text": "Gare Private"
              },
              myresult_romselectPageTexts: {
                "#title-text": "Tuoi risultati",
                "#rankmatch-text": "Scelta del gioco"
              },
              myresult_rankmatchPageTexts: {
                "#title-text": "Risultati delle Lotte Competitive",
                "#subtitle1-text": "Informazioni sulla stagione",
                "#sub1_label3": "Dettagli di questa stagione",
                "#subtitle2-text": "Risultati della stagione",
                "#sub2_label1": "Lotta in Singolo",
                "#sub2_label2": "Lotta in Doppio",
                "#subtitle3-text": "Lotte recenti",
                "#sub3_label1": "Lotta in Singolo",
                "#sub3_label2": "Lotta in Doppio"
              },
              my_internetcompetition_listPageTexts: {
                "#title-text": "Gare Online",
                "#subtitle1-text": "Gare a cui hai partecipato"
              },
              my_internetcompetition_detailPageTexts: {
                "#title-text": "Risultati della Gara Online",
                "#subtitle1-text": "Informazioni sulla gara",
                "#sub1_label1": "Giochi utilizzati",
                "#sub1_label2": "Formato",
                "#sub1_label3": "Partecipanti",
                "#sub1_label5": "Dettagli di questa gara",
                "#sub1_label6": "Risultati della gara",
                "#subtitle2-text": "Cronologia lotte",
                "#sub2_label1": "Lotta in Singolo",
                "#sub2_label2": "Lotta in Doppio",
                "#subtitle3-text": "Lotte recenti",
                "#sub3_label1": "Lotta in Singolo",
                "#sub3_label2": "Lotta in Doppio"
              },
              friendcompetition_listPageTexts: {
                "#title-text": "Gare Private",
                "#subtitle1-text": "Gare a cui hai partecipato",
                ".organizer-label-text": "Organizzatore della gara",
                ".joinednum-label-text": "Partecipanti",
                ".more-button-text": "Vedi altro"
              },
              my_friendcompetition_detailPageTexts: {
                "#title-text": "Risultati della Gara Privata",
                "#subtitle1-text": "Informazioni sulla gara",
                "#sub_label1": "Descrizione della gara",
                "#sub_label2": "Organizzatore della gara",
                "#sub_label3": "Giochi utilizzati",
                "#sub_label4": "Formato",
                "#sub_label5": "Partecipanti",
                "#sub_label7": "Dettagli di questa gara",
                "#sub_label8": "Risultati della gara",
                "#subtitle2-text": "Cronologia lotte"
              },
              friendcompetition_detailPageTexts: {
                "#title-text": "Dettagli della Gara Privata",
                "#subtitle1-text": "Informazioni sulla gara",
                "#sub_label1": "Descrizione della gara",
                "#sub_label2": "Organizzatore della gara",
                "#sub_label3": "Giochi utilizzati",
                "#sub_label4": "Formato",
                "#sub_label5": "Partecipanti",
                "#sub1_label13": "La mia posizione",
                "#sub1_label9": "Classifica Allenatori",
                "#sub1_label10": "Classifica Pokﾃｩmon",
                "#regulationLink": "Regolamento e note",
                "#eligiblePokemonLink": "Pokﾃｩmon ammessi"
              },
              rankmatch_detailPageTexts: {
                "#title-text": "Lotte Competitive",
                "#subtitle1-text": "Informazioni sulla stagione",
                "#sub_label2": "Partecipanti",
                "#sub_label3": "Regolamento e note",
                "#sub_label4": "Pokﾃｩmon ammessi",
                "#sub_label5": "Seleziona Pokﾃｩmon",
                "#sub_label6": "Filtra",
                "#sub_label7": "La mia posizione",
                "#subtitle2-text": "Cronologia lotte",
                ".trainer-tab-text": "Classifica Allenatori",
                ".pokemon-tab-text": "Classifica Pokﾃｩmon"
              },
              internetcompetition_listPageTexts: {
                "#title-text": "Gare Online",
                "#sub_label1": "Gare Online precedenti",
                "#sub_label2": "Gare concluse",
                ".more-button-text": "Vedi altro"
              },
              internetcompetition_detailPageTexts: {
                "#title-text": "Dettagli della Gara Online",
                "#subtitle1-text": "Informazioni sulla gara",
                "#sub1_label1": "Giochi utilizzati",
                "#sub1_label2": "Regolamento e note",
                "#sub1_label3": "Pokﾃｩmon ammessi",
                "#sub1_label4": "Descrizione della gara",
                "#sub1_label5": "Partecipanti",
                "#sub1_label6": "Giochi utilizzati",
                "#sub1_label7": "Formato",
                "#sub1_label8": "Durata",
                "#sub1_label9": "Classifica Allenatori",
                "#sub1_label10": "Classifica Pokﾃｩmon",
                "#sub1_label11": "Seleziona Pokﾃｩmon",
                "#sub1_label12": "Filtra",
                "#sub1_label13": "La mia posizione"
              },
              battle_teamPageTexts: {
                "#title-text": "Pokﾃｩmon nella Squadra Lotta"
              },
              regulation_listPageTexts: {
                "#title-text": "Regole scaricabili"
              },
              regulation_pokelistPageTexts: {
                "#title-text": "Pokﾃｩmon ammessi"
              },
              event_calendar: {
                "#title-text": "Calendario eventi",
                "#option-country": "Paese/regione",
                "#sunday": "Dom",
                "#monday": "Lun",
                "#tuesday": "Mar",
                "#wednesday": "Mer",
                "#thursday": "Gio",
                "#friday": "Ven",
                "#saturday": "Sab"
              },
              rankmatch_pokemonranking_detailPageTexts: {
                "#title-text": "Lotte Competitive",
                "#subtitle1-text": "Informazioni sul Pokﾃｩmon",
                ".battle-team-tab-text": "Dettagli",
                ".when-win-tab-text": "Vittorie",
                ".when-lose-tab-text": "Sconfitte",
                "kind-tab-battle-team": "Top 10 dei Pokﾃｩmon piﾃｹ spesso con lui nella Squadra Lotta",
                "kind-tab-battle-win": "Top 10 dei Pokﾃｩmon da lui mandati KO piﾃｹ spesso",
                "kind-tab-battle-lose": "Top 10 dei Pokﾃｩmon che l'hanno mandato KO piﾃｹ spesso",
                "kind-tab-battle-waza": "Mosse",
                "kind-tab-battle-waza-win": "Top 10 delle mosse da lui piﾃｹ usate per mandare i nemici KO",
                "kind-tab-battle-waza-lose": "Top 10 delle mosse che l'hanno mandato KO piﾃｹ spesso",
                "kind-tab-battle-tokusei": "Abilitﾃ�",
                "kind-tab-battle-item": "Strumenti",
                "kind-tab-battle-seikaku": "Nature"
              },
              internetcompetition_pokemonranking_detail: {
                "#title-text": "Gare Online",
                "#subtitle1-text": "Informazioni sul Pokﾃｩmon",
                ".battle-team-tab-text": "Dettagli",
                ".when-win-tab-text": "Vittorie",
                ".when-lose-tab-text": "Sconfitte",
                "kind-tab-battle-team": "Top 10 dei Pokﾃｩmon piﾃｹ spesso con lui nella Squadra Lotta",
                "kind-tab-battle-win": "Top 10 dei Pokﾃｩmon da lui mandati KO piﾃｹ spesso",
                "kind-tab-battle-lose": "Top 10 dei Pokﾃｩmon che l'hanno mandato KO piﾃｹ spesso",
                "kind-tab-battle-waza": "Mosse",
                "kind-tab-battle-waza-win": "Top 10 delle mosse da lui piﾃｹ usate per mandare i nemici KO",
                "kind-tab-battle-waza-lose": "Top 10 delle mosse che l'hanno mandato KO piﾃｹ spesso",
                "kind-tab-battle-tokusei": "Abilitﾃ�",
                "kind-tab-battle-item": "Strumenti",
                "kind-tab-battle-seikaku": "Nature"
              },
              friendcompetition_pokemonranking_detail: {
                "#title-text": "Gare Private",
                "#subtitle1-text": "Informazioni sul Pokﾃｩmon",
                ".battle-team-tab-text": "Dettagli",
                ".when-win-tab-text": "Vittorie",
                ".when-lose-tab-text": "Sconfitte",
                "kind-tab-battle-team": "Top 10 dei Pokﾃｩmon piﾃｹ spesso con lui nella Squadra Lotta",
                "kind-tab-battle-win": "Top 10 dei Pokﾃｩmon da lui mandati KO piﾃｹ spesso",
                "kind-tab-battle-lose": "Top 10 dei Pokﾃｩmon che l'hanno mandato KO piﾃｹ spesso",
                "kind-tab-battle-waza": "Mosse",
                "kind-tab-battle-waza-win": "Top 10 delle mosse da lui piﾃｹ usate per mandare i nemici KO",
                "kind-tab-battle-waza-lose": "Top 10 delle mosse che l'hanno mandato KO piﾃｹ spesso",
                "kind-tab-battle-tokusei": "Abilitﾃ�",
                "kind-tab-battle-item": "Strumenti",
                "kind-tab-battle-seikaku": "Nature"
              }
            }, this.common = {
              ui_texts: {
                ".winIconText": "VITTORIA",
                ".loseIconText": "SCONFITTA",
                ".drawIconText": "PAREGGIO",
                ".joinedNumLabel": "",
                ".periodContainer>.label": "Durata",
                ".rateLabelContainer>.label": "Punteggio",
                competionRule: "Formato",
                ".prevButton>.labelContainer>.label": "10 precedenti",
                ".nextButton>.labelContainer>.label": "10 successivi",
                ".rank-beginner-text": "Classe Principiante",
                ".rank-monster-text": "Classe Pokﾃｩ Ball",
                ".rank-super-text": "Classe Mega Ball",
                ".rank-hyper-text": "Classe Ultra Ball",
                ".rank-master-text": "Classe Master Ball",
                ".rental-label-text": "Squadra a nolo",
                ".buttle-team-button-text": "Visualizza Squadra Lotta"
              },
              unit: {
                rank: "%dﾂｰ posto",
                win: "Vittorie: %d",
                lose: "Sconfitte: %d",
                draw: "Pareggi: %d",
                "season-result": '%dﾂｰ posto<br /> <span class="ranking-result-margin-right">Vittorie: %d</span><span class="ranking-result-margin-right">Sconfitte: %d</span>Pareggi: %d',
                "season-result2": '<span class="ranking-result-margin-right">Vittorie: %d</span><span class="ranking-result-margin-right">Sconfitte: %d</span>Pareggi: %d',
                "online-result": '<span class="ranking-result-margin-right">Vittorie: %d</span><span class="ranking-result-margin-right">Sconfitte: %d</span>Pareggi: %d',
                "friend-result": '%dﾂｰ posto<br />  <span class="ranking-result-margin-right">Vittorie: %d</span><span class="ranking-result-margin-right">Sconfitte: %d</span>Pareggi: %d'
              },
              roms: {
                Sw: "Pokﾃｩmon Spada",
                Sh: "Pokﾃｩmon Scudo"
              },
              rule: {
                0: "Lotta in Singolo",
                1: "Lotta in Doppio"
              },
              nojoin: "Non disputata",
              nowAggr: "Conteggio in corso...",
              country: {
                100: "Africa",
                600: "America del Nord",
                601: "Canada",
                602: "Stati Uniti settentrionali",
                603: "Stati Uniti orientali",
                604: "Stati Uniti occidentali",
                605: "Stati Uniti meridionali",
                699: "Altro",
                700: "America Latina",
                701: "Cile",
                702: "Messico",
                703: "Brasile",
                704: "Argentina",
                705: "Bolivia",
                706: "Colombia",
                707: "Paraguay",
                708: "Perﾃｹ",
                709: "Ecuador",
                799: "Altro",
                800: "Oceania",
                801: "Australia",
                802: "Nuova Zelanda",
                899: "Altro",
                300: "Asia e Oceania",
                302: "Cina",
                303: "Hong Kong",
                304: "Giappone",
                305: "Corea",
                306: "Malesia",
                307: "Filippine",
                308: "Singapore",
                309: "Taiwan",
                310: "Thailandia",
                399: "Altro",
                400: "Europa",
                401: "Austria",
                402: "Belgio",
                403: "Francia",
                404: "Germania",
                405: "Irlanda",
                406: "Italia",
                407: "Paesi Bassi",
                408: "Portogallo",
                409: "Spagna",
                410: "Svizzera",
                411: "Regno Unito",
                412: "Danimarca",
                413: "Finlandia",
                414: "Norvegia",
                415: "Svezia",
                416: "Polonia",
                499: "Altro",
                500: "Medio Oriente"
              },
              footerBackLinkLabel: {
                backLinkTop: "Schermata lotte",
                backLinkInternetComp: "Gare Online",
                backMyResult: "Tuoi risultati",
                backMyInternetComp: "Gare a cui hai partecipato",
                backLinkMyInternetCompDetail: "Risultati della Gara Online",
                backLinkMyRankMatchDetail: "Risultati delle Lotte Competitive",
                backLinkMyFriendCompDetail: "Risultati della Gara Privata",
                backLinkFriendCompList: "Gare Private",
                backLinkRankBattle: "Lotte Competitive",
                backLinkFriendComp: "Gare Private"
              },
              rankBattleRankingNoteDialog: {
                title: "Impossibile visualizzare la tua posizione",
                note1: "Per le gare in corso vengono mostrati i primi 1.000<br />classificati.<br />",
                note2: "Il calcolo delle classifiche potrebbe richiedere tempo,<br />pertanto la classifica visualizzata potrebbe non essere<br />aggiornata.<br />",
                note3: "Controlla di nuovo piﾃｹ tardi."
              },
              dialogMsg: {
                ok: "Chiudi"
              }
            }, this.dex = {
              poke: ["Bulbasaur", "Ivysaur", "Venusaur", "Charmander", "Charmeleon", "Charizard", "Squirtle", "Wartortle", "Blastoise", "Caterpie", "Metapod", "Butterfree", "Weedle", "Kakuna", "Beedrill", "Pidgey", "Pidgeotto", "Pidgeot", "Rattata", "Raticate", "Spearow", "Fearow", "Ekans", "Arbok", "Pikachu", "Raichu", "Sandshrew", "Sandslash", "Nidoran笙", "Nidorina", "Nidoqueen", "Nidoran笙�", "Nidorino", "Nidoking", "Clefairy", "Clefable", "Vulpix", "Ninetales", "Jigglypuff", "Wigglytuff", "Zubat", "Golbat", "Oddish", "Gloom", "Vileplume", "Paras", "Parasect", "Venonat", "Venomoth", "Diglett", "Dugtrio", "Meowth", "Persian", "Psyduck", "Golduck", "Mankey", "Primeape", "Growlithe", "Arcanine", "Poliwag", "Poliwhirl", "Poliwrath", "Abra", "Kadabra", "Alakazam", "Machop", "Machoke", "Machamp", "Bellsprout", "Weepinbell", "Victreebel", "Tentacool", "Tentacruel", "Geodude", "Graveler", "Golem", "Ponyta", "Rapidash", "Slowpoke", "Slowbro", "Magnemite", "Magneton", "Farfetch'd", "Doduo", "Dodrio", "Seel", "Dewgong", "Grimer", "Muk", "Shellder", "Cloyster", "Gastly", "Haunter", "Gengar", "Onix", "Drowzee", "Hypno", "Krabby", "Kingler", "Voltorb", "Electrode", "Exeggcute", "Exeggutor", "Cubone", "Marowak", "Hitmonlee", "Hitmonchan", "Lickitung", "Koffing", "Weezing", "Rhyhorn", "Rhydon", "Chansey", "Tangela", "Kangaskhan", "Horsea", "Seadra", "Goldeen", "Seaking", "Staryu", "Starmie", "Mr. Mime", "Scyther", "Jynx", "Electabuzz", "Magmar", "Pinsir", "Tauros", "Magikarp", "Gyarados", "Lapras", "Ditto", "Eevee", "Vaporeon", "Jolteon", "Flareon", "Porygon", "Omanyte", "Omastar", "Kabuto", "Kabutops", "Aerodactyl", "Snorlax", "Articuno", "Zapdos", "Moltres", "Dratini", "Dragonair", "Dragonite", "Mewtwo", "Mew", "Chikorita", "Bayleef", "Meganium", "Cyndaquil", "Quilava", "Typhlosion", "Totodile", "Croconaw", "Feraligatr", "Sentret", "Furret", "Hoothoot", "Noctowl", "Ledyba", "Ledian", "Spinarak", "Ariados", "Crobat", "Chinchou", "Lanturn", "Pichu", "Cleffa", "Igglybuff", "Togepi", "Togetic", "Natu", "Xatu", "Mareep", "Flaaffy", "Ampharos", "Bellossom", "Marill", "Azumarill", "Sudowoodo", "Politoed", "Hoppip", "Skiploom", "Jumpluff", "Aipom", "Sunkern", "Sunflora", "Yanma", "Wooper", "Quagsire", "Espeon", "Umbreon", "Murkrow", "Slowking", "Misdreavus", "Unown", "Wobbuffet", "Girafarig", "Pineco", "Forretress", "Dunsparce", "Gligar", "Steelix", "Snubbull", "Granbull", "Qwilfish", "Scizor", "Shuckle", "Heracross", "Sneasel", "Teddiursa", "Ursaring", "Slugma", "Magcargo", "Swinub", "Piloswine", "Corsola", "Remoraid", "Octillery", "Delibird", "Mantine", "Skarmory", "Houndour", "Houndoom", "Kingdra", "Phanpy", "Donphan", "Porygon2", "Stantler", "Smeargle", "Tyrogue", "Hitmontop", "Smoochum", "Elekid", "Magby", "Miltank", "Blissey", "Raikou", "Entei", "Suicune", "Larvitar", "Pupitar", "Tyranitar", "Lugia", "Ho-Oh", "Celebi", "Treecko", "Grovyle", "Sceptile", "Torchic", "Combusken", "Blaziken", "Mudkip", "Marshtomp", "Swampert", "Poochyena", "Mightyena", "Zigzagoon", "Linoone", "Wurmple", "Silcoon", "Beautifly", "Cascoon", "Dustox", "Lotad", "Lombre", "Ludicolo", "Seedot", "Nuzleaf", "Shiftry", "Taillow", "Swellow", "Wingull", "Pelipper", "Ralts", "Kirlia", "Gardevoir", "Surskit", "Masquerain", "Shroomish", "Breloom", "Slakoth", "Vigoroth", "Slaking", "Nincada", "Ninjask", "Shedinja", "Whismur", "Loudred", "Exploud", "Makuhita", "Hariyama", "Azurill", "Nosepass", "Skitty", "Delcatty", "Sableye", "Mawile", "Aron", "Lairon", "Aggron", "Meditite", "Medicham", "Electrike", "Manectric", "Plusle", "Minun", "Volbeat", "Illumise", "Roselia", "Gulpin", "Swalot", "Carvanha", "Sharpedo", "Wailmer", "Wailord", "Numel", "Camerupt", "Torkoal", "Spoink", "Grumpig", "Spinda", "Trapinch", "Vibrava", "Flygon", "Cacnea", "Cacturne", "Swablu", "Altaria", "Zangoose", "Seviper", "Lunatone", "Solrock", "Barboach", "Whiscash", "Corphish", "Crawdaunt", "Baltoy", "Claydol", "Lileep", "Cradily", "Anorith", "Armaldo", "Feebas", "Milotic", "Castform", "Kecleon", "Shuppet", "Banette", "Duskull", "Dusclops", "Tropius", "Chimecho", "Absol", "Wynaut", "Snorunt", "Glalie", "Spheal", "Sealeo", "Walrein", "Clamperl", "Huntail", "Gorebyss", "Relicanth", "Luvdisc", "Bagon", "Shelgon", "Salamence", "Beldum", "Metang", "Metagross", "Regirock", "Regice", "Registeel", "Latias", "Latios", "Kyogre", "Groudon", "Rayquaza", "Jirachi", "Deoxys", "Turtwig", "Grotle", "Torterra", "Chimchar", "Monferno", "Infernape", "Piplup", "Prinplup", "Empoleon", "Starly", "Staravia", "Staraptor", "Bidoof", "Bibarel", "Kricketot", "Kricketune", "Shinx", "Luxio", "Luxray", "Budew", "Roserade", "Cranidos", "Rampardos", "Shieldon", "Bastiodon", "Burmy", "Wormadam", "Mothim", "Combee", "Vespiquen", "Pachirisu", "Buizel", "Floatzel", "Cherubi", "Cherrim", "Shellos", "Gastrodon", "Ambipom", "Drifloon", "Drifblim", "Buneary", "Lopunny", "Mismagius", "Honchkrow", "Glameow", "Purugly", "Chingling", "Stunky", "Skuntank", "Bronzor", "Bronzong", "Bonsly", "Mime Jr.", "Happiny", "Chatot", "Spiritomb", "Gible", "Gabite", "Garchomp", "Munchlax", "Riolu", "Lucario", "Hippopotas", "Hippowdon", "Skorupi", "Drapion", "Croagunk", "Toxicroak", "Carnivine", "Finneon", "Lumineon", "Mantyke", "Snover", "Abomasnow", "Weavile", "Magnezone", "Lickilicky", "Rhyperior", "Tangrowth", "Electivire", "Magmortar", "Togekiss", "Yanmega", "Leafeon", "Glaceon", "Gliscor", "Mamoswine", "Porygon-Z", "Gallade", "Probopass", "Dusknoir", "Froslass", "Rotom", "Uxie", "Mesprit", "Azelf", "Dialga", "Palkia", "Heatran", "Regigigas", "Giratina", "Cresselia", "Phione", "Manaphy", "Darkrai", "Shaymin", "Arceus", "Victini", "Snivy", "Servine", "Serperior", "Tepig", "Pignite", "Emboar", "Oshawott", "Dewott", "Samurott", "Patrat", "Watchog", "Lillipup", "Herdier", "Stoutland", "Purrloin", "Liepard", "Pansage", "Simisage", "Pansear", "Simisear", "Panpour", "Simipour", "Munna", "Musharna", "Pidove", "Tranquill", "Unfezant", "Blitzle", "Zebstrika", "Roggenrola", "Boldore", "Gigalith", "Woobat", "Swoobat", "Drilbur", "Excadrill", "Audino", "Timburr", "Gurdurr", "Conkeldurr", "Tympole", "Palpitoad", "Seismitoad", "Throh", "Sawk", "Sewaddle", "Swadloon", "Leavanny", "Venipede", "Whirlipede", "Scolipede", "Cottonee", "Whimsicott", "Petilil", "Lilligant", "Basculin", "Sandile", "Krokorok", "Krookodile", "Darumaka", "Darmanitan", "Maractus", "Dwebble", "Crustle", "Scraggy", "Scrafty", "Sigilyph", "Yamask", "Cofagrigus", "Tirtouga", "Carracosta", "Archen", "Archeops", "Trubbish", "Garbodor", "Zorua", "Zoroark", "Minccino", "Cinccino", "Gothita", "Gothorita", "Gothitelle", "Solosis", "Duosion", "Reuniclus", "Ducklett", "Swanna", "Vanillite", "Vanillish", "Vanilluxe", "Deerling", "Sawsbuck", "Emolga", "Karrablast", "Escavalier", "Foongus", "Amoonguss", "Frillish", "Jellicent", "Alomomola", "Joltik", "Galvantula", "Ferroseed", "Ferrothorn", "Klink", "Klang", "Klinklang", "Tynamo", "Eelektrik", "Eelektross", "Elgyem", "Beheeyem", "Litwick", "Lampent", "Chandelure", "Axew", "Fraxure", "Haxorus", "Cubchoo", "Beartic", "Cryogonal", "Shelmet", "Accelgor", "Stunfisk", "Mienfoo", "Mienshao", "Druddigon", "Golett", "Golurk", "Pawniard", "Bisharp", "Bouffalant", "Rufflet", "Braviary", "Vullaby", "Mandibuzz", "Heatmor", "Durant", "Deino", "Zweilous", "Hydreigon", "Larvesta", "Volcarona", "Cobalion", "Terrakion", "Virizion", "Tornadus", "Thundurus", "Reshiram", "Zekrom", "Landorus", "Kyurem", "Keldeo", "Meloetta", "Genesect", "Chespin", "Quilladin", "Chesnaught", "Fennekin", "Braixen", "Delphox", "Froakie", "Frogadier", "Greninja", "Bunnelby", "Diggersby", "Fletchling", "Fletchinder", "Talonflame", "Scatterbug", "Spewpa", "Vivillon", "Litleo", "Pyroar", "Flabﾃｩbﾃｩ", "Floette", "Florges", "Skiddo", "Gogoat", "Pancham", "Pangoro", "Furfrou", "Espurr", "Meowstic", "Honedge", "Doublade", "Aegislash", "Spritzee", "Aromatisse", "Swirlix", "Slurpuff", "Inkay", "Malamar", "Binacle", "Barbaracle", "Skrelp", "Dragalge", "Clauncher", "Clawitzer", "Helioptile", "Heliolisk", "Tyrunt", "Tyrantrum", "Amaura", "Aurorus", "Sylveon", "Hawlucha", "Dedenne", "Carbink", "Goomy", "Sliggoo", "Goodra", "Klefki", "Phantump", "Trevenant", "Pumpkaboo", "Gourgeist", "Bergmite", "Avalugg", "Noibat", "Noivern", "Xerneas", "Yveltal", "Zygarde", "Diancie", "Hoopa", "Volcanion", "Rowlet", "Dartrix", "Decidueye", "Litten", "Torracat", "Incineroar", "Popplio", "Brionne", "Primarina", "Pikipek", "Trumbeak", "Toucannon", "Yungoos", "Gumshoos", "Grubbin", "Charjabug", "Vikavolt", "Crabrawler", "Crabominable", "Oricorio", "Cutiefly", "Ribombee", "Rockruff", "Lycanroc", "Wishiwashi", "Mareanie", "Toxapex", "Mudbray", "Mudsdale", "Dewpider", "Araquanid", "Fomantis", "Lurantis", "Morelull", "Shiinotic", "Salandit", "Salazzle", "Stufful", "Bewear", "Bounsweet", "Steenee", "Tsareena", "Comfey", "Oranguru", "Passimian", "Wimpod", "Golisopod", "Sandygast", "Palossand", "Pyukumuku", "Tipo Zero", "Silvally", "Minior", "Komala", "Turtonator", "Togedemaru", "Mimikyu", "Bruxish", "Drampa", "Dhelmise", "Jangmo-o", "Hakamo-o", "Kommo-o", "Tapu Koko", "Tapu Lele", "Tapu Bulu", "Tapu Fini", "Cosmog", "Cosmoem", "Solgaleo", "Lunala", "Nihilego", "Buzzwole", "Pheromosa", "Xurkitree", "Celesteela", "Kartana", "Guzzlord", "Necrozma", "Magearna", "Marshadow", "Poipole", "Naganadel", "Stakataka", "Blacephalon", "Zeraora", "Meltan", "Melmetal", "Grookey", "Thwackey", "Rillaboom", "Scorbunny", "Raboot", "Cinderace", "Sobble", "Drizzile", "Inteleon", "Skwovet", "Greedent", "Rookidee", "Corvisquire", "Corviknight", "Blipbug", "Dottler", "Orbeetle", "Nickit", "Thievul", "Gossifleur", "Eldegoss", "Wooloo", "Dubwool", "Chewtle", "Drednaw", "Yamper", "Boltund", "Rolycoly", "Carkol", "Coalossal", "Applin", "Flapple", "Appletun", "Silicobra", "Sandaconda", "Cramorant", "Arrokuda", "Barraskewda", "Toxel", "Toxtricity", "Sizzlipede", "Centiskorch", "Clobbopus", "Grapploct", "Sinistea", "Polteageist", "Hatenna", "Hattrem", "Hatterene", "Impidimp", "Morgrem", "Grimmsnarl", "Obstagoon", "Perrserker", "Cursola", "Sirfetch'd", "Mr. Rime", "Runerigus", "Milcery", "Alcremie", "Falinks", "Pincurchin", "Snom", "Frosmoth", "Stonjourner", "Eiscue", "Indeedee", "Morpeko", "Cufant", "Copperajah", "Dracozolt", "Arctozolt", "Dracovish", "Arctovish", "Duraludon", "Dreepy", "Drakloak", "Dragapult", "Zacian", "Zamazenta", "Eternatus", "Kubfu", "Urshifu", "Zarude", "Regieleki", "Regidrago", "Glastrier", "Spectrier", "Calyrex", "Wyrdeer", "Kleavor", "Ursaluna", "Basculegion", "Sneasler", "Overqwil", "Enamorus", "Sprigatito", "Floragato", "Meowscarada", "Fuecoco", "Crocalor", "Skeledirge", "Quaxly", "Quaxwell", "Quaquaval", "Lechonk", "Oinkologne", "Tarountula", "Spidops", "Nymble", "Lokix", "Pawmi", "Pawmo", "Pawmot", "Tandemaus", "Maushold", "Fidough", "Dachsbun", "Smoliv", "Dolliv", "Arboliva", "Squawkabilly", "Nacli", "Naclstack", "Garganacl", "Charcadet", "Armarouge", "Ceruledge", "Tadbulb", "Bellibolt", "Wattrel", "Kilowattrel", "Maschiff", "Mabosstiff", "Shroodle", "Grafaiai", "Bramblin", "Brambleghast", "Toedscool", "Toedscruel", "Klawf", "Capsakid", "Scovillain", "Rellor", "Rabsca", "Flittle", "Espathra", "Tinkatink", "Tinkatuff", "Tinkaton", "Wiglett", "Wugtrio", "Bombirdier", "Finizen", "Palafin", "Varoom", "Revavroom", "Cyclizar", "Orthworm", "Glimmet", "Glimmora", "Greavard", "Houndstone", "Flamigo", "Cetoddle", "Cetitan", "Veluza", "Dondozo", "Tatsugiri", "Annihilape", "Clodsire", "Farigiraf", "Dudunsparce", "Kingambit", "Grandizanne", "Codaurlante", "Fungofurioso", "Crinealato", "Alirasenti", "Peldisabbia", "Solcoferreo", "Saccoferreo", "Manoferrea", "Colloferreo", "Falenaferrea", "Spineferree", "Frigibax", "Arctibax", "Baxcalibur", "Gimmighoul", "Gholdengo", "Wo-Chien", "Chien-Pao", "Ting-Lu", "Chi-Yu", "Lunaruggente", "Eroeferreo", "Koraidon", "Miraidon", "Acquecrespe", "Fogliaferrea", "Dipplin", "Poltchageist", "Sinistcha", "Okidogi", "Munkidori", "Fezandipiti", "Ogerpon"],
              pokeType: ["Normale", "Lotta", "Volante", "Veleno", "Terra", "Roccia", "Coleottero", "Spettro", "Acciaio", "Fuoco", "Acqua", "Erba", "Elettro", "Psico", "Ghiaccio", "Drago", "Buio", "Folletto"],
              waza: {
                1: "Botta",
                2: "Colpokarate",
                3: "Doppiasberla",
                4: "Cometapugno",
                5: "Megapugno",
                6: "Giornopaga",
                7: "Fuocopugno",
                8: "Gelopugno",
                9: "Tuonopugno",
                10: "Graffio",
                11: "Presa",
                12: "Ghigliottina",
                13: "Ventagliente",
                14: "Danzaspada",
                15: "Taglio",
                16: "Raffica",
                17: "Attacco d'Ala",
                18: "Turbine",
                19: "Volo",
                20: "Legatutto",
                21: "Schianto",
                22: "Frustata",
                23: "Pestone",
                24: "Doppiocalcio",
                25: "Megacalcio",
                26: "Calciosalto",
                27: "Calciorullo",
                28: "Turbosabbia",
                29: "Bottintesta",
                30: "Incornata",
                31: "Furia",
                32: "Perforcorno",
                33: "Azione",
                34: "Corposcontro",
                35: "Avvolgibotta",
                36: "Riduttore",
                37: "Colpo",
                38: "Sdoppiatore",
                39: "Colpocoda",
                40: "Velenospina",
                41: "Doppio Ago",
                42: "Missilspillo",
                43: "Fulmisguardo",
                44: "Morso",
                45: "Ruggito",
                46: "Boato",
                47: "Canto",
                48: "Supersuono",
                49: "Sonicboom",
                50: "Inibitore",
                51: "Acido",
                52: "Braciere",
                53: "Lanciafiamme",
                54: "Nebbia",
                55: "Pistolacqua",
                56: "Idropompa",
                57: "Surf",
                58: "Geloraggio",
                59: "Bora",
                60: "Psicoraggio",
                61: "Bollaraggio",
                62: "Raggiaurora",
                63: "Iper Raggio",
                64: "Beccata",
                65: "Perforbecco",
                66: "Sottomissione",
                67: "Colpo Basso",
                68: "Contrattacco",
                69: "Movim. Sismico",
                70: "Forza",
                71: "Assorbimento",
                72: "Megassorbimento",
                73: "Parassiseme",
                74: "Crescita",
                75: "Foglielama",
                76: "Solarraggio",
                77: "Velenpolvere",
                78: "Paralizzante",
                79: "Sonnifero",
                80: "Petalodanza",
                81: "Millebave",
                82: "Ira di Drago",
                83: "Turbofuoco",
                84: "Tuonoshock",
                85: "Fulmine",
                86: "Tuononda",
                87: "Tuono",
                88: "Sassata",
                89: "Terremoto",
                90: "Abisso",
                91: "Fossa",
                92: "Tossina",
                93: "Confusione",
                94: "Psichico",
                95: "Ipnosi",
                96: "Meditazione",
                97: "Agilitﾃ�",
                98: "Attacco Rapido",
                99: "Ira",
                100: "Teletrasporto",
                101: "Ombra Notturna",
                102: "Mimica",
                103: "Stridio",
                104: "Doppioteam",
                105: "Ripresa",
                106: "Rafforzatore",
                107: "Minimizzato",
                108: "Muro di Fumo",
                109: "Stordiraggio",
                110: "Ritirata",
                111: "Ricciolscudo",
                112: "Barriera",
                113: "Schermoluce",
                114: "Nube",
                115: "Riflesso",
                116: "Focalenergia",
                117: "Pazienza",
                118: "Metronomo",
                119: "Speculmossa",
                120: "Autodistruzione",
                121: "Uovobomba",
                122: "Leccata",
                123: "Smog",
                124: "Fango",
                125: "Ossoclava",
                126: "Fuocobomba",
                127: "Cascata",
                128: "Tenaglia",
                129: "Comete",
                130: "Capocciata",
                131: "Sparalance",
                132: "Limitazione",
                133: "Amnesia",
                134: "Cinﾃｨsi",
                135: "Covauova",
                136: "Calcinvolo",
                137: "Sguardo Feroce",
                138: "Mangiasogni",
                139: "Velenogas",
                140: "Sferattacco",
                141: "Sanguisuga",
                142: "Demonbacio",
                143: "Aeroattacco",
                144: "Trasformazione",
                145: "Bolla",
                146: "Stordipugno",
                147: "Spora",
                148: "Flash",
                149: "Psiconda",
                150: "Splash",
                151: "Scudo Acido",
                152: "Martellata",
                153: "Esplosione",
                154: "Sfuriate",
                155: "Ossomerang",
                156: "Riposo",
                157: "Frana",
                158: "Iperzanna",
                159: "Affilatore",
                160: "Conversione",
                161: "Tripletta",
                162: "Superzanna",
                163: "Lacerazione",
                164: "Sostituto",
                165: "Scontro",
                166: "Schizzo",
                167: "Triplocalcio",
                168: "Furto",
                169: "Ragnatela",
                170: "Leggimente",
                171: "Incubo",
                172: "Ruotafuoco",
                173: "Russare",
                174: "Maledizione",
                175: "Flagello",
                176: "Conversione2",
                177: "Aerocolpo",
                178: "Cotonspora",
                179: "Contropiede",
                180: "Dispetto",
                181: "Polneve",
                182: "Protezione",
                183: "Pugnorapido",
                184: "Visotruce",
                185: "Finta",
                186: "Dolcebacio",
                187: "Panciamburo",
                188: "Fangobomba",
                189: "Fangosberla",
                190: "Octazooka",
                191: "Punte",
                192: "Elettrocannone",
                193: "Preveggenza",
                194: "Destinobbligato",
                195: "Ultimocanto",
                196: "Ventogelato",
                197: "Individua",
                198: "Ossoraffica",
                199: "Localizza",
                200: "Oltraggio",
                201: "Terrempesta",
                202: "Gigassorbimento",
                203: "Resistenza",
                204: "Fascino",
                205: "Rotolamento",
                206: "Falsofinale",
                207: "Bullo",
                208: "Buonlatte",
                209: "Scintilla",
                210: "Tagliofuria",
                211: "Alacciaio",
                212: "Malosguardo",
                213: "Attrazione",
                214: "Sonnolalia",
                215: "Rintoccasana",
                216: "Ritorno",
                217: "Regalino",
                218: "Frustrazione",
                219: "Salvaguardia",
                220: "Malcomune",
                221: "Magifuoco",
                222: "Magnitudo",
                223: "Dinamipugno",
                224: "Megacorno",
                225: "Dragospiro",
                226: "Staffetta",
                227: "Ripeti",
                228: "Inseguimento",
                229: "Rapigiro",
                230: "Profumino",
                231: "Codacciaio",
                232: "Ferrartigli",
                233: "Vitaltiro",
                234: "Mattindoro",
                235: "Sintesi",
                236: "Lucelunare",
                237: "Introforza",
                238: "Incrocolpo",
                239: "Tornado",
                240: "Pioggiadanza",
                241: "Giornodisole",
                242: "Sgranocchio",
                243: "Specchiovelo",
                244: "Psicamisﾃｹ",
                245: "Extrarapido",
                246: "Forzantica",
                247: "Palla Ombra",
                248: "Divinazione",
                249: "Spaccaroccia",
                250: "Mulinello",
                251: "Picchiaduro",
                252: "Bruciapelo",
                253: "Baraonda",
                254: "Accumulo",
                255: "Sfoghenergia",
                256: "Introenergia",
                257: "Ondacalda",
                258: "Grandine",
                259: "Attaccalite",
                260: "Adulazione",
                261: "Fuocofatuo",
                262: "Memento",
                263: "Facciata",
                264: "Centripugno",
                265: "Maniereforti",
                266: "Sonoqui",
                267: "Naturforza",
                268: "Sottocarica",
                269: "Provocazione",
                270: "Altruismo",
                271: "Raggiro",
                272: "Giocodiruolo",
                273: "Desiderio",
                274: "Assistente",
                275: "Radicamento",
                276: "Troppoforte",
                277: "Magivelo",
                278: "Riciclo",
                279: "Vendetta",
                280: "Breccia",
                281: "Sbadiglio",
                282: "Privazione",
                283: "Rimonta",
                284: "Eruzione",
                285: "Baratto",
                286: "Esclusiva",
                287: "Rinfrescata",
                288: "Rancore",
                289: "Scippo",
                290: "Forzasegreta",
                291: "Sub",
                292: "Sberletese",
                293: "Camuffamento",
                294: "Codadiluce",
                295: "Abbagliante",
                296: "Foschisfera",
                297: "Danzadipiume",
                298: "Strampadanza",
                299: "Calciardente",
                300: "Fangata",
                301: "Palla Gelo",
                302: "Pugnospine",
                303: "Pigro",
                304: "Granvoce",
                305: "Velenodenti",
                306: "Tritartigli",
                307: "Incendio",
                308: "Idrocannone",
                309: "Meteorpugno",
                310: "Sgomento",
                311: "Palla Clima",
                312: "Aromaterapia",
                313: "Falselacrime",
                314: "Aerasoio",
                315: "Vampata",
                316: "Segugio",
                317: "Rocciotomba",
                318: "Ventargenteo",
                319: "Ferrostrido",
                320: "Meloderba",
                321: "Solletico",
                322: "Cosmoforza",
                323: "Zampillo",
                324: "Segnoraggio",
                325: "Pugnodombra",
                326: "Extrasenso",
                327: "Stramontante",
                328: "Sabbiotomba",
                329: "Purogelo",
                330: "Fanghiglia",
                331: "Semitraglia",
                332: "Aeroassalto",
                333: "Gelolancia",
                334: "Ferroscudo",
                335: "Blocco",
                336: "Gridodilotta",
                337: "Dragartigli",
                338: "Radicalbero",
                339: "Granfisico",
                340: "Rimbalzo",
                341: "Colpodifango",
                342: "Velenocoda",
                343: "Supplica",
                344: "Locomovolt",
                345: "Fogliamagica",
                346: "Docciascudo",
                347: "Calmamente",
                348: "Fendifoglia",
                349: "Dragodanza",
                350: "Cadutamassi",
                351: "Ondashock",
                352: "Idropulsar",
                353: "Desiderio Fatale",
                354: "Psicoslancio",
                355: "Trespolo",
                356: "Gravitﾃ�",
                357: "Miracolvista",
                358: "Svegliopacca",
                359: "Martelpugno",
                360: "Vortexpalla",
                361: "Curardore",
                362: "Acquadisale",
                363: "Dononaturale",
                364: "Fintoattacco",
                365: "Spennata",
                366: "Ventoincoda",
                367: "Acupressione",
                368: "Metalscoppio",
                369: "Retromarcia",
                370: "Zuffa",
                371: "Rivincita",
                372: "Garanzia",
                373: "Divieto",
                374: "Lancio",
                375: "Psicotransfer",
                376: "Asso",
                377: "Anticura",
                378: "Strizzata",
                379: "Ingannoforza",
                380: "Gastroacido",
                381: "Fortuncanto",
                382: "Precedenza",
                383: "Copione",
                384: "Barattoforza",
                385: "Barattoscudo",
                386: "Punizione",
                387: "Ultimascelta",
                388: "Affannoseme",
                389: "Sbigoattacco",
                390: "Fielepunte",
                391: "Cuorbaratto",
                392: "Acquanello",
                393: "Magnetascesa",
                394: "Fuococarica",
                395: "Palmoforza",
                396: "Sferapulsar",
                397: "Lucidatura",
                398: "Velenpuntura",
                399: "Neropulsar",
                400: "Nottesferza",
                401: "Idrondata",
                402: "Semebomba",
                403: "Eterelama",
                404: "Forbice X",
                405: "Ronzio",
                406: "Dragopulsar",
                407: "Dragofuria",
                408: "Gemmoforza",
                409: "Assorbipugno",
                410: "Vuotonda",
                411: "Focalcolpo",
                412: "Energipalla",
                413: "Baldeali",
                414: "Geoforza",
                415: "Rapidscambio",
                416: "Gigaimpatto",
                417: "Congiura",
                418: "Pugnoscarica",
                419: "Slavina",
                420: "Geloscheggia",
                421: "Ombrartigli",
                422: "Fulmindenti",
                423: "Gelodenti",
                424: "Rogodenti",
                425: "Furtivombra",
                426: "Pantanobomba",
                427: "Psicotaglio",
                428: "Cozzata Zen",
                429: "Cristalcolpo",
                430: "Cannonflash",
                431: "Scalaroccia",
                432: "Scacciabruma",
                433: "Distortozona",
                434: "Dragobolide",
                435: "Scarica",
                436: "Lavasbuffo",
                437: "Verdebufera",
                438: "Vigorcolpo",
                439: "Devastomasso",
                440: "Velenocroce",
                441: "Sporcolancio",
                442: "Metaltestata",
                443: "Bombagnete",
                444: "Pietrataglio",
                445: "Incanto",
                446: "Levitoroccia",
                447: "Laccioerboso",
                448: "Schiamazzo",
                449: "Giudizio",
                450: "Coleomorso",
                451: "Raggioscossa",
                452: "Mazzuolegno",
                453: "Acquagetto",
                454: "Comandourto",
                455: "Comandoscudo",
                456: "Comandocura",
                457: "Zuccata",
                458: "Doppiosmash",
                459: "Fragortempo",
                460: "Fendispazio",
                461: "Lunardanza",
                462: "Sbriciolmano",
                463: "Magmaclisma",
                464: "Vuototetro",
                465: "Infuriaseme",
                466: "Funestovento",
                467: "Oscurotuffo",
                468: "Unghiaguzze",
                469: "Bodyguard",
                470: "Paridifesa",
                471: "Pariattacco",
                472: "Mirabilzona",
                473: "Psicoshock",
                474: "Velenoshock",
                475: "Sganciapesi",
                476: "Polverabbia",
                477: "Telecinesi",
                478: "Magicozona",
                479: "Abbattimento",
                480: "Tempestretta",
                481: "Pirolancio",
                482: "Fangonda",
                483: "Eledanza",
                484: "Pesobomba",
                485: "Sincrumore",
                486: "Energisfera",
                487: "Inondazione",
                488: "Nitrocarica",
                489: "Arrotola",
                490: "Calciobasso",
                491: "Acidobomba",
                492: "Ripicca",
                493: "Ondisinvolta",
                494: "Saltamicizia",
                495: "Cortesia",
                496: "Coro",
                497: "Echeggiavoce",
                498: "Insidia",
                499: "Pulifumo",
                500: "Veicolaforza",
                501: "Anticipo",
                502: "Cambiaposto",
                503: "Idrovampata",
                504: "Gettaguscio",
                505: "Curapulsar",
                506: "Sciagura",
                507: "Cadutalibera",
                508: "Cambiomarcia",
                509: "Ribaltiro",
                510: "Bruciatutto",
                511: "Spintone",
                512: "Acrobazia",
                513: "Riflettipo",
                514: "Nemesi",
                515: "Azzardo",
                516: "Cediregalo",
                517: "Marchiatura",
                518: "Acquapatto",
                519: "Fiammapatto",
                520: "Erbapatto",
                521: "Invertivolt",
                522: "Entomoblocco",
                523: "Battiterra",
                524: "Alitogelido",
                525: "Codadrago",
                526: "Cuordileone",
                527: "Elettrotela",
                528: "Sprizzalampo",
                529: "Giravvita",
                530: "Doppiocolpo",
                531: "Cuorestampo",
                532: "Legnicorno",
                533: "Spadasolenne",
                534: "Conchilama",
                535: "Marchiafuoco",
                536: "Vorticerba",
                537: "Rulloduro",
                538: "Cotonscudo",
                539: "Urtoscuro",
                540: "Psicobotta",
                541: "Spazzasberla",
                542: "Tifone",
                543: "Ricciolata",
                544: "Ingracolpo",
                545: "Sparafuoco",
                546: "Tecnobotto",
                547: "Cantoantico",
                548: "Spadamistica",
                549: "Gelamondo",
                550: "Lucesiluro",
                551: "Fuocoblu",
                552: "Voldifuoco",
                553: "Elettrogelo",
                554: "Vampagelida",
                555: "Urlorabbia",
                556: "Scagliagelo",
                557: "Generatore V",
                558: "Incrofiamma",
                559: "Incrotuono",
                560: "Schiacciatuffo",
                561: "Ribaltappeto",
                562: "Rutto",
                563: "Aracampo",
                564: "Rete Vischiosa",
                565: "Pungiglione",
                566: "Spettrotuffo",
                567: "Halloween",
                568: "Urlo",
                569: "Pioggiaplasma",
                570: "Caricaparabola",
                571: "Boscomalocchio",
                572: "Fiortempesta",
                573: "Liofilizzazione",
                574: "Incantavoce",
                575: "Monito",
                576: "Sottosopra",
                577: "Assorbibacio",
                578: "Truccodifesa",
                579: "Fiordifesa",
                580: "Campo Erboso",
                581: "Campo Nebbioso",
                582: "Elettrocontagio",
                583: "Carineria",
                584: "Vento di Fata",
                585: "Forza Lunare",
                586: "Ondaboato",
                587: "Blocco Fatato",
                588: "Scudo Reale",
                589: "Simpatia",
                590: "Confidenza",
                591: "Diamantempesta",
                592: "Vaporscoppio",
                593: "Forodimensionale",
                594: "Acqualame",
                595: "Magifiamma",
                596: "Agodifesa",
                597: "Nebularoma",
                598: "Elettromistero",
                599: "Velenotrappola",
                600: "Pulviscoppio",
                601: "Geocontrollo",
                602: "Controllo Polare",
                603: "Cuccagna",
                604: "Campo Elettrico",
                605: "Magibrillio",
                606: "Auguri",
                607: "Mano nella Mano",
                608: "Occhioni Teneri",
                609: "Elettrococcola",
                610: "Riguardo",
                611: "Assillo",
                612: "Crescipugno",
                613: "Ali del Fato",
                614: "Mille Frecce",
                615: "Mille Onde",
                616: "Forza Tellurica",
                617: "Luce Nefasta",
                618: "Primopulsar",
                619: "Spade Telluriche",
                620: "Ascesa del Drago",
                621: "Urtodimensionale",
                622: "Carica Travolgente",
                623: "Carica Travolgente",
                624: "Iperscarica Furiosa",
                625: "Iperscarica Furiosa",
                626: "Picchiata Devastante",
                627: "Picchiata Devastante",
                628: "Acidiluvio Corrosivo",
                629: "Acidiluvio Corrosivo",
                630: "Furore della Terra",
                631: "Furore della Terra",
                632: "Gigamacigno Polverizzante",
                633: "Gigamacigno Polverizzante",
                634: "Bozzolo Fatale",
                635: "Bozzolo Fatale",
                636: "Abbraccio Spettrale",
                637: "Abbraccio Spettrale",
                638: "Spirale Perforante",
                639: "Spirale Perforante",
                640: "Fiammobomba Detonante",
                641: "Fiammobomba Detonante",
                642: "Idrovortice Abissale",
                643: "Idrovortice Abissale",
                644: "Floriscoppio Sfolgorante",
                645: "Floriscoppio Sfolgorante",
                646: "Gigascarica Folgorante",
                647: "Gigascarica Folgorante",
                648: "Impatto Psicocinetico",
                649: "Impatto Psicocinetico",
                650: "Criodistruzione Polare",
                651: "Criodistruzione Polare",
                652: "Dragoschianto Finale",
                653: "Dragoschianto Finale",
                654: "Buco Nero del Non Ritorno",
                655: "Buco Nero del Non Ritorno",
                656: "Astroimpatto Fatato",
                657: "Astroimpatto Fatato",
                658: "Super Pikaboom",
                659: "Sabbiaccumulo",
                660: "Schermaglia",
                661: "Fortino",
                662: "Cucitura d'Ombra",
                663: "Braccioteso",
                664: "Canto Effimero",
                665: "Martelgelo",
                666: "Cura Floreale",
                667: "Forza Equina",
                668: "Assorbiforza",
                669: "Lama Solare",
                670: "Fogliame",
                671: "Riflettore",
                672: "Velenotela",
                673: "Concentrazione",
                674: "Marciainpiﾃｹ",
                675: "Colpo Infernale",
                676: "Sferapolline",
                677: "Colpo d'Ancora",
                678: "Campo Psichico",
                679: "Assalto",
                680: "Frusta di Fuoco",
                681: "Tracotanza",
                682: "Ultima Fiamma",
                683: "Velociscambio",
                684: "Sottilcorno",
                685: "Purificazione",
                686: "Mutadanza",
                687: "Nucleocastigo",
                688: "Tropicalcio",
                689: "Imposizione",
                690: "Cannonbecco",
                691: "Clamorsquame",
                692: "Marteldrago",
                693: "Vorticolpo",
                694: "Velaurora",
                695: "Dardoassalto Spettrale",
                696: "Iperschianto delle Tenebre",
                697: "Sinfonia del Mare",
                698: "Collera del Guardiano",
                699: "Colpo Eptastellare Rubanima",
                700: "Elettrosurf Folgorante",
                701: "Adesso Faccio sul Serio",
                702: "Potenziamento Eevolutivo",
                703: "Supernova delle Origini",
                704: "Gusciotrappola",
                705: "Cannonfiore",
                706: "Psicozanna",
                707: "Battipiedi",
                708: "Ossotetro",
                709: "Rocciarapida",
                710: "Idrobreccia",
                711: "Prismalaser",
                712: "Ombrafurto",
                713: "Astrocarica",
                714: "Raggio d'Ombra",
                715: "Occhionilucidi",
                716: "Elettropizzico",
                717: "Ira della Natura",
                718: "Multiattacco",
                719: "Iperfulmine",
                720: "Sbalorditesta",
                721: "Pugni Plasma",
                722: "Geyser Fotonico",
                723: "Fotodistruzione Apocalittica",
                724: "Supercollisione Solare",
                725: "Deflagrazione Lunare",
                726: "Dolcesacco di Botte",
                727: "Litotempesta Radiale",
                728: "Dracofonia Divampante",
                729: "Sprintaboom",
                730: "Surfasplash",
                731: "Piombaflap",
                732: "Pikasaetta",
                733: "Bollaslurp",
                734: "Elettrozap",
                735: "Fiammabam",
                736: "Auraswoosh",
                737: "Zona Buiabuia",
                738: "Bombafrush",
                739: "Scricchiagelo",
                740: "Sbrilluccibufera",
                741: "Eeveempatto",
                742: "Pugni Corazzati",
                743: "Dynabarriera",
                744: "Cannone Dynamax",
                745: "Tiromirato",
                746: "Morsostretto",
                747: "Riempiguance",
                748: "Spalle al Muro",
                749: "Colpocatrame",
                750: "Magipolvere",
                751: "Dragofrecce",
                752: "Ora del Tﾃｨ",
                753: "Tentacolock",
                754: "Beccoshock",
                755: "Branchiomorso",
                756: "Cambiocampo",
                757: "Dynafiammata",
                758: "Dynainsetto",
                759: "Dynasaetta",
                760: "Dynattacco",
                761: "Dynapugno",
                762: "Dynavuoto",
                763: "Dynagelo",
                764: "Dynacorrosione",
                765: "Dynaflusso",
                766: "Dynajet",
                767: "Dynafata",
                768: "Dynadragone",
                769: "Dynapsiche",
                770: "Dynamacigno",
                771: "Dynasisma",
                772: "Dynatenebre",
                773: "Dynaflora",
                774: "Dynametallo",
                775: "Dracofonia",
                776: "Schiacciacorpo",
                777: "Decorazione",
                778: "Tamburattacco",
                779: "Tagliola",
                780: "Palla Infuocata",
                781: "Taglio Maestoso",
                782: "Colpo Maestoso",
                783: "Ruota d'Aura",
                784: "Vastoimpatto",
                785: "Ramostoccata",
                786: "Overdrive",
                787: "Acido Malico",
                788: "Forza G",
                789: "Frantumanima",
                790: "Vapore Incantato",
                791: "Goccia Vitale",
                792: "Sbarramento",
                793: "Supplicolpo",
                794: "Sfolgorassalto",
                795: "Raggio Infinito",
                796: "Raggio d'Acciaio",
                797: "Vastenergia",
                798: "Ferrorullo",
                799: "Squamacolpo",
                800: "Raggiometeora",
                801: "Armaguscio",
                802: "Nebbioscoppio",
                803: "Erboscivolata",
                804: "Elettroimpennata",
                805: "Campopulsar",
                806: "Strisciacolpo",
                807: "Fiamminvidia",
                808: "Sfogarabbia",
                809: "Poltergeist",
                810: "Gas Corrosivo",
                811: "Coaching",
                812: "Virata",
                813: "Triplo Axel",
                814: "Doppia Ala",
                815: "Sabbiardente",
                816: "Giunglacura",
                817: "Pugnotenebra",
                818: "Idroraffica",
                819: "Elettrogabbia",
                820: "Dragoenergia",
                821: "Sguardo Gelido",
                822: "Furia Ardente",
                823: "Calcio Tonante",
                824: "Lancia Glaciale",
                825: "Schegge Astrali",
                826: "Inquietantesimo",
                827: "Artigli Fatali",
                828: "Barrierassalto",
                829: "Scambioforza",
                830: "Rocciascure",
                831: "Tempesta Zefirea",
                832: "Forza Mistica",
                833: "Ira Furente",
                834: "Ondaschianto",
                835: "Clorofillaser",
                836: "Soffio d'Iceberg",
                837: "Danzavittoria",
                838: "Scontro Frontale",
                839: "Mille Fielespine",
                840: "Ali d'Aura",
                841: "Livore",
                842: "Barricata",
                843: "Triplodardo",
                844: "Corteo Spettrale",
                845: "Lama Milleflutti",
                846: "Tempesta Boreale",
                847: "Tempesta Tonante",
                848: "Tempesta Ardente",
                849: "Invocaluna",
                850: "Baldimpulso",
                851: "Terascoppio",
                852: "Telatrappola",
                853: "Calcio ad Ascia",
                854: "Omaggio ai KO",
                855: "Fotocollisione",
                856: "Alta Cucina",
                857: "Pugnojet",
                858: "Essenza Piccante",
                859: "Slittaruote",
                860: "Infestazione",
                861: "Vortighiaccio",
                862: "Spadoncarica",
                863: "Preghiera Vitale",
                864: "Sotto Sale",
                865: "Triplo Tuffo",
                866: "Glitturbine",
                867: "Ricalco",
                868: "Alleggerimento",
                869: "Genufendente",
                870: "Prestigiafiore",
                871: "Canzone Ardente",
                872: "Idroballetto",
                873: "Scatenatoro",
                874: "Corsa all'Oro",
                875: "Psicolama",
                876: "Idrovapore",
                877: "Catastrofe",
                878: "Turboschianto",
                879: "Fulmiscatto",
                880: "Tagliacoda",
                881: "Freddura",
                882: "Pulizie",
                883: "Vista Innevata",
                884: "Balzo",
                885: "Apripista",
                886: "Doccia Fredda",
                887: "Ipertrapano",
                888: "Doppioraggio",
                889: "Pugno Furibondo",
                890: "Corazza Cannone",
                891: "Lama del Rimorso",
                892: "Doppiolampo",
                893: "Granmartello",
                894: "Ritorsione",
                895: "Idrotaglio",
                896: "Turboustione",
                897: "Turbotenebra",
                898: "Turbotossina",
                899: "Turborissa",
                900: "Turboincanto",
                901: "Luna Rossa",
                902: "Spruzzatﾃｨ",
                903: "Bomba Sciroppata",
                904: "Clava di Liane"
              },
              tokusei: {
                1: "Tanfo",
                2: "Piovischio",
                3: "Acceleratore",
                4: "Lottascudo",
                5: "Vigore",
                6: "Umiditﾃ�",
                7: "Scioltezza",
                8: "Sabbiavelo",
                9: "Statico",
                10: "Assorbivolt",
                11: "Assorbacqua",
                12: "Indifferenza",
                13: "Antimeteo",
                14: "Insettocchi",
                15: "Insonnia",
                16: "Cambiacolore",
                17: "Immunitﾃ�",
                18: "Fuocardore",
                19: "Polvoscudo",
                20: "Mente Locale",
                21: "Ventose",
                22: "Prepotenza",
                23: "Pedinombra",
                24: "Cartavetro",
                25: "Magidifesa",
                26: "Levitazione",
                27: "Spargispora",
                28: "Sincronismo",
                29: "Corpochiaro",
                30: "Alternacura",
                31: "Parafulmine",
                32: "Leggiadro",
                33: "Nuotovelox",
                34: "Clorofilla",
                35: "Risplendi",
                36: "Traccia",
                37: "Macroforza",
                38: "Velenopunte",
                39: "Forza Interiore",
                40: "Magmascudo",
                41: "Idrovelo",
                42: "Magnetismo",
                43: "Antisuono",
                44: "Copripioggia",
                45: "Sabbiafiume",
                46: "Pressione",
                47: "Grassospesso",
                48: "Sveglialampo",
                49: "Corpodifuoco",
                50: "Fugafacile",
                51: "Sguardofermo",
                52: "Ipertaglio",
                53: "Raccolta",
                54: "Pigrone",
                55: "Tuttafretta",
                56: "Incantevole",
                57: "Piﾃｹ",
                58: "Meno",
                59: "Previsioni",
                60: "Antifurto",
                61: "Muta",
                62: "Dentistretti",
                63: "Pelledura",
                64: "Melma",
                65: "Erbaiuto",
                66: "Aiutofuoco",
                67: "Acquaiuto",
                68: "Aiutinsetto",
                69: "Testadura",
                70: "Siccitﾃ�",
                71: "Trappoarena",
                72: "Spiritovivo",
                73: "Fumochiaro",
                74: "Forzapura",
                75: "Guscioscudo",
                76: "Riparo",
                77: "Intricopiedi",
                78: "Elettrorapid",
                79: "Antagonismo",
                80: "Cuordeciso",
                81: "Mantelneve",
                82: "Voracitﾃ�",
                83: "Grancollera",
                84: "Agiltecnica",
                85: "Antifuoco",
                86: "Disinvoltura",
                87: "Pellearsa",
                88: "Download",
                89: "Ferropugno",
                90: "Velencura",
                91: "Adattabilitﾃ�",
                92: "Abillegame",
                93: "Idratazione",
                94: "Solarpotere",
                95: "Piedisvelti",
                96: "Normalitﾃ�",
                97: "Cecchino",
                98: "Magicscudo",
                99: "Nullodifesa",
                100: "Rallentatore",
                101: "Tecnico",
                102: "Fogliamanto",
                103: "Impaccio",
                104: "Rompiforma",
                105: "Supersorte",
                106: "Scoppio",
                107: "Presagio",
                108: "Premonizione",
                109: "Imprudenza",
                110: "Lentifumﾃｩ",
                111: "Filtro",
                112: "Lentoinizio",
                113: "Nervisaldi",
                114: "Acquascolo",
                115: "Corpogelo",
                116: "Solidroccia",
                117: "Scendineve",
                118: "Mielincetta",
                119: "Indagine",
                120: "Temerarietﾃ�",
                121: "Multitipo",
                122: "Regalfiore",
                123: "Sogniamari",
                124: "Arraffalesto",
                125: "Forzabruta",
                126: "Inversione",
                127: "Agitazione",
                128: "Agonismo",
                129: "Sconforto",
                130: "Corpofunesto",
                131: "Curacuore",
                132: "Amicoscudo",
                133: "Sottilguscio",
                134: "Metalpesante",
                135: "Metalleggero",
                136: "Multisquame",
                137: "Velenimpeto",
                138: "Bruciaimpeto",
                139: "Coglibacche",
                140: "Telepatia",
                141: "Altalena",
                142: "Copricapo",
                143: "Velentocco",
                144: "Rigenergia",
                145: "Pettinfuori",
                146: "Remasabbia",
                147: "Splendicute",
                148: "Ponderazione",
                149: "Illusione",
                150: "Sosia",
                151: "Intrapasso",
                152: "Mummia",
                153: "Arroganza",
                154: "Giustizia",
                155: "Paura",
                156: "Magispecchio",
                157: "Mangiaerba",
                158: "Burla",
                159: "Silicoforza",
                160: "Spineferrate",
                161: "Stato Zen",
                162: "Vittorstella",
                163: "Piroturbina",
                164: "Teravolt",
                165: "Aromavelo",
                166: "Fiorvelo",
                167: "Guancegonfie",
                168: "Mutatipo",
                169: "Foltopelo",
                170: "Prestigiatore",
                171: "Antiproiettile",
                172: "Tenacia",
                173: "Ferromascella",
                174: "Pellegelo",
                175: "Dolcevelo",
                176: "Accendilotta",
                177: "Aliraffica",
                178: "Megalancio",
                179: "Peloderba",
                180: "Simbiosi",
                181: "Unghiedure",
                182: "Pellefolletto",
                183: "Viscositﾃ�",
                184: "Pellecielo",
                185: "Amorefiliale",
                186: "Auratetra",
                187: "Aurafolletto",
                188: "Frangiaura",
                189: "Mare Primordiale",
                190: "Terra Estrema",
                191: "Flusso Delta",
                192: "Sopportazione",
                193: "Fuggifuggi",
                194: "Passoindietro",
                195: "Idrorinforzo",
                196: "Spietatezza",
                197: "Scudosoglia",
                198: "Sorveglianza",
                199: "Bolladacqua",
                200: "Tempracciaio",
                201: "Furore",
                202: "Spalaneve",
                203: "Distacco",
                204: "Idrovoce",
                205: "Primacura",
                206: "Pellelettro",
                207: "Codasurf",
                208: "Banco",
                209: "Fantasmanto",
                210: "Morfosintonia",
                211: "Sciamefusione",
                212: "Corrosione",
                213: "Sonno Assoluto",
                214: "Regalitﾃ�",
                215: "Espellinterno",
                216: "Sincrodanza",
                217: "Batteria",
                218: "Morbidone",
                219: "Corposgargiante",
                220: "Cuoreanima",
                221: "Boccolidoro",
                222: "Ricezione",
                223: "Forza Chimica",
                224: "Ultraboost",
                225: "Sistema Primevo",
                226: "Elettrogenesi",
                227: "Psicogenesi",
                228: "Nebbiogenesi",
                229: "Erbogenesi",
                230: "Metalprotezione",
                231: "Spettroguardia",
                232: "Scudoprisma",
                233: "Cerebroforza",
                234: "Spada Indomita",
                235: "Scudo Saldo",
                236: "Libero",
                237: "Raccattapalle",
                238: "Lanugine",
                239: "Elicopinna",
                240: "Blindospecchio",
                241: "Inghiottimissile",
                242: "Volontﾃ� di Ferro",
                243: "Vapormacchina",
                244: "Punk Rock",
                245: "Sputasabbia",
                246: "Geloscaglie",
                247: "Maturazione",
                248: "Gelofaccia",
                249: "Fonte Energetica",
                250: "Mimetismo",
                251: "Annullabarriere",
                252: "Spiritoferreo",
                253: "Ultimotocco",
                254: "Anima Errante",
                255: "Vigorilla",
                256: "Gas Reagente",
                257: "Pastelvelo",
                258: "Pancialterna",
                259: "Colpolesto",
                260: "Pugni Invisibili",
                261: "Stranofarmaco",
                262: "Transistor",
                263: "Dragomascelle",
                264: "Nitrito Bianco",
                265: "Nitrito Nero",
                266: "Sintonia Equina",
                267: "Sintonia Equina",
                268: "Odore Tenace",
                269: "Spargisemi",
                270: "Termoscambio",
                271: "Iraguscio",
                272: "Sale Purificante",
                273: "Bentostato",
                274: "Vento Propizio",
                275: "Cane da Guardia",
                276: "Portamassi",
                277: "Energia Eolica",
                278: "Supercambio",
                279: "Torre di Comando",
                280: "Convertivolt",
                281: "Paleoattivazione",
                282: "Carica Quark",
                283: "Corpo Aureo",
                284: "Vaso Nefasto",
                285: "Spada Nefasta",
                286: "Amuleto Nefasto",
                287: "Monile Nefasto",
                288: "Ritmo d'Oricalco",
                289: "Motore Adronico",
                290: "Scrocco",
                291: "Ruminante",
                292: "Affilama",
                293: "Generale Supremo",
                294: "Coprotagonismo",
                295: "Mantossina",
                296: "Codarmatura",
                297: "Mangiaterra",
                298: "Micoforza",
                299: "Ospitalitﾃ�",
                300: "Occhio Interiore",
                301: "Albergamemorie",
                302: "Albergamemorie",
                303: "Albergamemorie",
                304: "Albergamemorie",
                305: "Catena Tossica",
                306: "Sciroppo Sublime"
              },
              seikaku: {
                0: "Ardita",
                1: "Schiva",
                2: "Audace",
                3: "Decisa",
                4: "Birbona",
                5: "Sicura",
                6: "Docile",
                7: "Placida",
                8: "Scaltra",
                9: "Fiacca",
                10: "Timida",
                11: "Lesta",
                12: "Seria",
                13: "Allegra",
                14: "Ingenua",
                15: "Modesta",
                16: "Mite",
                17: "Quieta",
                18: "Ritrosa",
                19: "Ardente",
                20: "Calma",
                21: "Gentile",
                22: "Vivace",
                23: "Cauta",
                24: "Furba"
              }
            }
          }
        };
        break;
      case 5:
        e = new class {
          constructor() {
            this.pages = {
              t_common: {
                "#regulation": "Regeln",
                "#available_poke": "Zugelassene Pokﾃｩmon",
                "#trainer-tab-text": "Trainer-Ranglisten",
                "#pokemon-tab-text": "Pokﾃｩmon-Ranglisten",
                "#open": "Im Gange",
                "#end": "Beendet",
                gathering: "Berechnung lﾃ､uft",
                not_join: "Nicht teilgenommen",
                not_join_battle: "Du hast noch nicht an Kﾃ､mpfen dieser Art<br>teilgenommen.",
                not_join_tournament: "Du hast noch nicht an Turnieren dieser Art teilgenommen.",
                not_join_friendcompe: "Du hast noch nicht an Freundesturnieren teilgenommen.",
                win: "Sieg",
                lose: "Niederlage",
                draw: "Unentsch.",
                rental: "Leihteam",
                rank_num: "Platz %d",
                win_num: "Siege: %d",
                lose_num: "Niederlagen: %d",
                draw_num: "Unentschieden: %d",
                ok: "OK",
                rulename1: "Keine Einschrﾃ､nkungen",
                rulename2: "Normale Regeln",
                rulename3: "Strenge Regeln",
                rulename4: "Keine Einschrﾃ､nkungen",
                rulename5: "Normale Regeln",
                rulename6: "Strenge Regeln",
                rulename7: "Keine Einschrﾃ､nkungen",
                rulename8: "Normale Regeln",
                rulename9: "Strenge Regeln",
                rulename10: "Offizielle Regeln 1",
                rulename11: "Offizielle Regeln 2",
                rulename12: "Offizielle Regeln 1",
                rulename13: "Offizielle Regeln 2",
                rulename14: "Offizielle Regeln 3",
                outrange: "Nicht platziert"
              },
              t_rankmatchPageTexts: {
                "#title-text": "Rangkﾃ､mpfe"
              },
              t_my_rankmatchPageTexts: {
                "#title-text": "Details zu den Rangkampf-Ergebnissen",
                "#rate_label": "Wertung"
              },
              t_pokemonrankingPageTexts: {
                "#title-text": "Pokﾃｩmon-Informationen",
                no: "Nr.",
                ".battle-team-tab-text": "Details",
                ".when-win-tab-text": "Siege",
                ".when-lose-tab-text": "Niederlagen",
                "kind-tab-battle-team": "Top-10-Pokﾃｩmon in denselben Kampfteams wie dieses Pokﾃｩmon",
                "kind-tab-battle-win": "Die 10 Pokﾃｩmon, die es am hﾃ､ufigsten besiegt hat",
                "kind-tab-battle-lose": "Die 10 Pokﾃｩmon, die es am hﾃ､ufigsten besiegt haben",
                "kind-tab-battle-waza": "Attacken",
                "kind-tab-battle-waza-win": "Die 10 Attacken, mit denen es die meisten Pokﾃｩmon besiegt hat",
                "kind-tab-battle-waza-lose": "Die 10 Attacken, mit denen es am hﾃ､ufigsten besiegt wurde",
                "kind-tab-battle-tokusei": "Fﾃ､higkeit",
                "kind-tab-battle-item": "Items",
                "kind-tab-battle-seikaku": "Wesen",
                "kind-tab-battle-terastal": "Tera-Typ",
                atk: "Angriff",
                def: "Vert.",
                agi: "Initiative",
                spatk: "Sp.-Ang.",
                spdef: "Sp.-Vert.",
                hyphen: "��"
              },
              t_internetcompetitionPageTexts: {
                "#title-text": "Offizielle Turniere"
              },
              t_internetcompetition_detailPageTexts: {
                "#title-text": "Details zu Offiziellen Turnieren"
              },
              t_my_internetcompetition_detailPageTexts: {
                "#title-text": "Details zu Offiziellen Turnieren",
                "#rate_label": "Wertung",
                mydata_dialog_title: "Auswahl der anzuzeigenden Ergebnisse",
                mydata_dialog_text: "Spielerdaten anzeigen",
                mydata_dialog_btn1: "Platzierung",
                mydata_dialog_btn2: "Kampfteams"
              },
              t_friendcompetitionPageTexts: {
                "#title-text": "Freundesturniere"
              },
              t_my_friendcompetitionPageTexts: {
                "#title-text": "Freundesturniere",
                ".organizer-label-text": "Ausrichter:",
                ".result-label-text": "Ergebnisse",
                ".battleteam-label-text": "Kampfteams"
              },
              t_friendcompetition_detailPageTexts: {
                "#title-text": "Freundesturnier-Details"
              },
              t_my_friendcompetition_detailPageTexts: {
                "#title-text": "Freundesturnier-Details"
              },
              t_battle_teamPageTexts: {
                internetcompe: "Kampfteams in Offiziellen Turnieren",
                friendcompe: "Kampfteam in Freundesturnieren"
              },
              t_mydataselectPageTexts: {
                title_text_rankmatch: "Deine Kampfergebnisse",
                title_text_internetcompe: "Details zu Offiziellen Turnieren",
                title_text_friendcompe: "Freundesturniere",
                "#dataselect-text": "Bitte wﾃ､hle Speicherdaten aus, um Kampfergebnisse anzusehen."
              },
              t_tournament_detailPageTexts: {
                "#title-text": "Turnier-Details",
                single_elimination: "Einzelausscheidung",
                double_elimination: "Doppelausscheidung",
                bestX: "Top %d",
                Xround: "Runde #%d",
                semi_final: "Halbfinale",
                final: "Finale",
                round_winners: "Sieger-Block: Runde #%d",
                final_winners: "Sieger-Block: Runde #%d (Finale)",
                round_losers: "Verlierer-Block: Runde #%d",
                final_losers: "Verlierer-Block: Runde #%d (Finale)",
                grandfinal: "Finalkampf",
                coming_soon: "Bald erhﾃ､ltlich!"
              },
              topPageTexts: {
                "#top-title-text": "Kampfdaten",
                "#top-mypage-text": "Deine Kampfergebnisse",
                "#top-rankmatch-text": "Rangkﾃ､mpfe",
                "#top--internetcompe-text": "Online-Turniere",
                "#top-regulation-text": "Herunterladbare Regeln"
              },
              myresult_topPageTexts: {
                "#title-text": "Deine Kampfergebnisse",
                "#rankmatch-text": "Rangkﾃ､mpfe",
                "#internetcompe-text": "Online-Turniere",
                "#friendcompe-text": "Freundesturniere"
              },
              myresult_romselectPageTexts: {
                "#title-text": "Deine Kampfergebnisse",
                "#rankmatch-text": "Wahl der Spielesoftware"
              },
              myresult_rankmatchPageTexts: {
                "#title-text": "Details zu den Rangkampf-Ergebnissen",
                "#subtitle1-text": "Saison-Informationen",
                "#sub1_label3": "Details zur Saison",
                "#subtitle2-text": "Saison-Ergebnisse",
                "#sub2_label1": "Einzelkampf",
                "#sub2_label2": "Doppelkampf",
                "#subtitle3-text": "Kﾃｼrzlich ausgetragene Kﾃ､mpfe",
                "#sub3_label1": "Einzelkampf",
                "#sub3_label2": "Doppelkampf"
              },
              my_internetcompetition_listPageTexts: {
                "#title-text": "Online-Turniere",
                "#subtitle1-text": "Liste deiner Turnierteilnahmen"
              },
              my_internetcompetition_detailPageTexts: {
                "#title-text": "Details zu den Online-Turnier-Ergebnissen",
                "#subtitle1-text": "Turnierinformationen",
                "#sub1_label1": "Spielesoftware",
                "#sub1_label2": "Regeln",
                "#sub1_label3": "Teilnehmerzahl",
                "#sub1_label5": "Turnierdetails anzeigen",
                "#sub1_label6": "Turnierergebnisse",
                "#subtitle2-text": "Ausgetragene Kﾃ､mpfe",
                "#sub2_label1": "Einzelkampf",
                "#sub2_label2": "Doppelkampf",
                "#subtitle3-text": "Kﾃｼrzlich ausgetragene Kﾃ､mpfe",
                "#sub3_label1": "Einzelkampf",
                "#sub3_label2": "Doppelkampf"
              },
              friendcompetition_listPageTexts: {
                "#title-text": "Freundesturniere",
                "#subtitle1-text": "Liste deiner Turnierteilnahmen",
                ".organizer-label-text": "Veranstalter",
                ".joinednum-label-text": "Teilnehmerzahl",
                ".more-button-text": "Mehr anzeigen"
              },
              my_friendcompetition_detailPageTexts: {
                "#title-text": "Details zu den Freundesturnier-Ergebnissen",
                "#subtitle1-text": "Turnierinformationen",
                "#sub_label1": "Turnierﾃｼbersicht",
                "#sub_label2": "Veranstalter",
                "#sub_label3": "Spielesoftware",
                "#sub_label4": "Regeln",
                "#sub_label5": "Teilnehmerzahl",
                "#sub_label7": "Turnierdetails anzeigen",
                "#sub_label8": "Turnierergebnisse",
                "#subtitle2-text": "Ausgetragene Kﾃ､mpfe"
              },
              friendcompetition_detailPageTexts: {
                "#title-text": "Freundesturnier-Details",
                "#subtitle1-text": "Turnierinformationen",
                "#sub_label1": "Turnierﾃｼbersicht",
                "#sub_label2": "Veranstalter",
                "#sub_label3": "Spielesoftware",
                "#sub_label4": "Regeln",
                "#sub_label5": "Teilnehmerzahl",
                "#sub1_label13": "Meine Platzierung",
                "#sub1_label9": "Trainer-Ranglisten",
                "#sub1_label10": "Pokﾃｩmon-Ranglisten",
                "#regulationLink": "Hinweise und Regeln",
                "#eligiblePokemonLink": "Zugelassene Pokﾃｩmon"
              },
              rankmatch_detailPageTexts: {
                "#title-text": "Rangkﾃ､mpfe",
                "#subtitle1-text": "Saison-Informationen",
                "#sub_label2": "Teilnehmerzahl",
                "#sub_label3": "Hinweise und Regeln",
                "#sub_label4": "Zugelassene Pokﾃｩmon",
                "#sub_label5": "Pokﾃｩmon wﾃ､hlen",
                "#sub_label6": "Filtern",
                "#sub_label7": "Meine Platzierung",
                "#subtitle2-text": "Ausgetragene Kﾃ､mpfe",
                ".trainer-tab-text": "Trainer-Ranglisten",
                ".pokemon-tab-text": "Pokﾃｩmon-Ranglisten"
              },
              internetcompetition_listPageTexts: {
                "#title-text": "Online-Turniere",
                "#sub_label1": "Liste vergangener Online-Turniere",
                "#sub_label2": "Bisherige Turniere",
                ".more-button-text": "Mehr anzeigen"
              },
              internetcompetition_detailPageTexts: {
                "#title-text": "Online-Turnier-Details",
                "#subtitle1-text": "Turnierinformationen",
                "#sub1_label1": "Spielesoftware",
                "#sub1_label2": "Hinweise und Regeln",
                "#sub1_label3": "Zugelassene Pokﾃｩmon",
                "#sub1_label4": "Turnierﾃｼbersicht",
                "#sub1_label5": "Teilnehmerzahl",
                "#sub1_label6": "Spielesoftware",
                "#sub1_label7": "Regeln",
                "#sub1_label8": "Austragungszeitraum",
                "#sub1_label9": "Trainer-Ranglisten",
                "#sub1_label10": "Pokﾃｩmon-Ranglisten",
                "#sub1_label11": "Pokﾃｩmon wﾃ､hlen",
                "#sub1_label12": "Filtern",
                "#sub1_label13": "Meine Platzierung"
              },
              battle_teamPageTexts: {
                "#title-text": "Pokﾃｩmon im Kampfteam"
              },
              regulation_listPageTexts: {
                "#title-text": "Herunterladbare Regeln"
              },
              regulation_pokelistPageTexts: {
                "#title-text": "Zugelassene Pokﾃｩmon"
              },
              event_calendar: {
                "#title-text": "Veranstaltungskalender",
                "#option-country": "Angezeigte Region",
                "#sunday": "So",
                "#monday": "Mo",
                "#tuesday": "Di",
                "#wednesday": "Mi",
                "#thursday": "Do",
                "#friday": "Fr",
                "#saturday": "Sa"
              },
              rankmatch_pokemonranking_detailPageTexts: {
                "#title-text": "Rangkﾃ､mpfe",
                "#subtitle1-text": "Pokﾃｩmon-Informationen",
                ".battle-team-tab-text": "Details",
                ".when-win-tab-text": "Siege",
                ".when-lose-tab-text": "Niederlagen",
                "kind-tab-battle-team": "Top-10-Pokﾃｩmon in denselben Kampfteams wie dieses Pokﾃｩmon",
                "kind-tab-battle-win": "Die 10 Pokﾃｩmon, die es am hﾃ､ufigsten besiegt hat",
                "kind-tab-battle-lose": "Die 10 Pokﾃｩmon, die es am hﾃ､ufigsten besiegt haben",
                "kind-tab-battle-waza": "Attacken",
                "kind-tab-battle-waza-win": "Die 10 Attacken, mit denen es die meisten Pokﾃｩmon besiegt hat",
                "kind-tab-battle-waza-lose": "Die 10 Attacken, mit denen es am hﾃ､ufigsten besiegt wurde",
                "kind-tab-battle-tokusei": "Fﾃ､higkeiten",
                "kind-tab-battle-item": "Items",
                "kind-tab-battle-seikaku": "Wesen"
              },
              internetcompetition_pokemonranking_detail: {
                "#title-text": "Online-Turniere",
                "#subtitle1-text": "Pokﾃｩmon-Informationen",
                ".battle-team-tab-text": "Details",
                ".when-win-tab-text": "Siege",
                ".when-lose-tab-text": "Niederlagen",
                "kind-tab-battle-team": "Top-10-Pokﾃｩmon in denselben Kampfteams wie dieses Pokﾃｩmon",
                "kind-tab-battle-win": "Die 10 Pokﾃｩmon, die es am hﾃ､ufigsten besiegt hat",
                "kind-tab-battle-lose": "Die 10 Pokﾃｩmon, die es am hﾃ､ufigsten besiegt haben",
                "kind-tab-battle-waza": "Attacken",
                "kind-tab-battle-waza-win": "Die 10 Attacken, mit denen es die meisten Pokﾃｩmon besiegt hat",
                "kind-tab-battle-waza-lose": "Die 10 Attacken, mit denen es am hﾃ､ufigsten besiegt wurde",
                "kind-tab-battle-tokusei": "Fﾃ､higkeiten",
                "kind-tab-battle-item": "Items",
                "kind-tab-battle-seikaku": "Wesen"
              },
              friendcompetition_pokemonranking_detail: {
                "#title-text": "Freundesturniere",
                "#subtitle1-text": "Pokﾃｩmon-Informationen",
                ".battle-team-tab-text": "Details",
                ".when-win-tab-text": "Siege",
                ".when-lose-tab-text": "Niederlagen",
                "kind-tab-battle-team": "Top-10-Pokﾃｩmon in denselben Kampfteams wie dieses Pokﾃｩmon",
                "kind-tab-battle-win": "Die 10 Pokﾃｩmon, die es am hﾃ､ufigsten besiegt hat",
                "kind-tab-battle-lose": "Die 10 Pokﾃｩmon, die es am hﾃ､ufigsten besiegt haben",
                "kind-tab-battle-waza": "Attacken",
                "kind-tab-battle-waza-win": "Die 10 Attacken, mit denen es die meisten Pokﾃｩmon besiegt hat",
                "kind-tab-battle-waza-lose": "Die 10 Attacken, mit denen es am hﾃ､ufigsten besiegt wurde",
                "kind-tab-battle-tokusei": "Fﾃ､higkeiten",
                "kind-tab-battle-item": "Items",
                "kind-tab-battle-seikaku": "Wesen"
              }
            }, this.common = {
              ui_texts: {
                ".winIconText": "Sieg",
                ".loseIconText": "Niederlage",
                ".drawIconText": "Unentsch.",
                ".joinedNumLabel": "",
                ".periodContainer>.label": "Austragungszeitraum",
                ".rateLabelContainer>.label": "Wertung",
                competionRule: "Regeln",
                ".prevButton>.labelContainer>.label": "Vorherige 10",
                ".nextButton>.labelContainer>.label": "Nﾃ､chste 10",
                ".rank-beginner-text": "Anfﾃ､nger-Klasse",
                ".rank-monster-text": "Pokﾃｩball-Klasse",
                ".rank-super-text": "Superball-Klasse",
                ".rank-hyper-text": "Hyperball-Klasse",
                ".rank-master-text": "Meisterball-Klasse",
                ".rental-label-text": "Leihteam",
                ".buttle-team-button-text": "Kampfteam ansehen"
              },
              unit: {
                rank: "Platz %d",
                win: "Siege: %d",
                lose: "Niederlagen: %d",
                draw: "Unentschieden: %d",
                "season-result": 'Platz %d<br /> <span class="ranking-result-margin-right">Siege: %d</span><span class="ranking-result-margin-right">Niederlagen: %d</span>Unentschieden: %d',
                "season-result2": '<span class="ranking-result-margin-right">Siege: %d</span><span class="ranking-result-margin-right">Niederlagen: %d</span>Unentschieden: %d',
                "online-result": '<span class="ranking-result-margin-right">Siege: %d</span><span class="ranking-result-margin-right">Niederlagen: %d</span>Unentschieden: %d',
                "friend-result": 'Platz %d<br /><span class="ranking-result-margin-right">Siege: %d</span><span class="ranking-result-margin-right">Niederlagen: %d</span>Unentschieden: %d'
              },
              roms: {
                Sw: "Pokﾃｩmon Schwert",
                Sh: "Pokﾃｩmon Schild"
              },
              rule: {
                0: "Einzelkampf",
                1: "Doppelkampf"
              },
              nojoin: "Nicht teilgenommen",
              nowAggr: "Berechnung lﾃ､uft",
              country: {
                100: "Afrika",
                600: "Nordamerika",
                601: "Kanada",
                602: "Vereinigte Staaten - Nord",
                603: "Vereinigte Staaten - Ost",
                604: "Vereinigte Staaten - West",
                605: "Vereinigte Staaten - Sﾃｼd",
                699: "Sonstige",
                700: "Lateinamerika",
                701: "Chile",
                702: "Mexiko",
                703: "Brasilien",
                704: "Argentinien",
                705: "Bolivien",
                706: "Kolumbien",
                707: "Paraguay",
                708: "Peru",
                709: "Ecuador",
                799: "Sonstige",
                800: "Ozeanien",
                801: "Australien",
                802: "Neuseeland",
                899: "Sonstige",
                300: "Asien-Pazifik",
                302: "China",
                303: "Hongkong",
                304: "Japan",
                305: "Korea",
                306: "Malaysia",
                307: "Philippinen",
                308: "Singapur",
                309: "Taiwan",
                310: "Thailand",
                399: "Sonstige",
                400: "Europa",
                401: "ﾃ穆terreich",
                402: "Belgien",
                403: "Frankreich",
                404: "Deutschland",
                405: "Irland",
                406: "Italien",
                407: "Niederlande",
                408: "Portugal",
                409: "Spanien",
                410: "Schweiz",
                411: "Vereinigtes Kﾃｶnigreich",
                412: "Dﾃ､nemark",
                413: "Finnland",
                414: "Norwegen",
                415: "Schweden",
                416: "Polen",
                499: "Sonstige",
                500: "Naher Osten"
              },
              footerBackLinkLabel: {
                backLinkTop: "Kampfdaten",
                backLinkInternetComp: "Online-Turniere",
                backMyResult: "Deine Kampfergebnisse",
                backMyInternetComp: "Liste deiner Turnierteilnahmen",
                backLinkMyInternetCompDetail: "Details zu den Online-Turnier-Ergebnissen",
                backLinkMyRankMatchDetail: "Details zu den Rangkampf-Ergebnissen",
                backLinkMyFriendCompDetail: "Details zu den Freundesturnier-Ergebnissen",
                backLinkFriendCompList: "Freundesturniere",
                backLinkRankBattle: "Rangkﾃ､mpfe",
                backLinkFriendComp: "Freundesturniere"
              },
              rankBattleRankingNoteDialog: {
                title: "Deine Platzierung konnte nicht angezeigt werden.",
                note1: "Fﾃｼr laufende Veranstaltungen werden nur die<br />ersten 1000 Rﾃ､nge angezeigt.<br />",
                note2: "Da die Berechnung der Platzierungen einige Zeit<br />in Anspruch nehmen kann, sind die Ranglisten<br />mﾃｶglicherweise nicht auf dem neuesten Stand.<br />",
                note3: "Bitte versuche es spﾃ､ter noch einmal."
              },
              dialogMsg: {
                ok: "Schlieﾃ歹n"
              }
            }, this.dex = {
              poke: ["Bisasam", "Bisaknosp", "Bisaflor", "Glumanda", "Glutexo", "Glurak", "Schiggy", "Schillok", "Turtok", "Raupy", "Safcon", "Smettbo", "Hornliu", "Kokuna", "Bibor", "Taubsi", "Tauboga", "Tauboss", "Rattfratz", "Rattikarl", "Habitak", "Ibitak", "Rettan", "Arbok", "Pikachu", "Raichu", "Sandan", "Sandamer", "Nidoran笙", "Nidorina", "Nidoqueen", "Nidoran笙�", "Nidorino", "Nidoking", "Piepi", "Pixi", "Vulpix", "Vulnona", "Pummeluff", "Knuddeluff", "Zubat", "Golbat", "Myrapla", "Duflor", "Giflor", "Paras", "Parasek", "Bluzuk", "Omot", "Digda", "Digdri", "Mauzi", "Snobilikat", "Enton", "Entoron", "Menki", "Rasaff", "Fukano", "Arkani", "Quapsel", "Quaputzi", "Quappo", "Abra", "Kadabra", "Simsala", "Machollo", "Maschock", "Machomei", "Knofensa", "Ultrigaria", "Sarzenia", "Tentacha", "Tentoxa", "Kleinstein", "Georok", "Geowaz", "Ponita", "Gallopa", "Flegmon", "Lahmus", "Magnetilo", "Magneton", "Porenta", "Dodu", "Dodri", "Jurob", "Jugong", "Sleima", "Sleimok", "Muschas", "Austos", "Nebulak", "Alpollo", "Gengar", "Onix", "Traumato", "Hypno", "Krabby", "Kingler", "Voltobal", "Lektrobal", "Owei", "Kokowei", "Tragosso", "Knogga", "Kicklee", "Nockchan", "Schlurp", "Smogon", "Smogmog", "Rihorn", "Rizeros", "Chaneira", "Tangela", "Kangama", "Seeper", "Seemon", "Goldini", "Golking", "Sterndu", "Starmie", "Pantimos", "Sichlor", "Rossana", "Elektek", "Magmar", "Pinsir", "Tauros", "Karpador", "Garados", "Lapras", "Ditto", "Evoli", "Aquana", "Blitza", "Flamara", "Porygon", "Amonitas", "Amoroso", "Kabuto", "Kabutops", "Aerodactyl", "Relaxo", "Arktos", "Zapdos", "Lavados", "Dratini", "Dragonir", "Dragoran", "Mewtu", "Mew", "Endivie", "Lorblatt", "Meganie", "Feurigel", "Igelavar", "Tornupto", "Karnimani", "Tyracroc", "Impergator", "Wiesor", "Wiesenior", "Hoothoot", "Noctuh", "Ledyba", "Ledian", "Webarak", "Ariados", "Iksbat", "Lampi", "Lanturn", "Pichu", "Pii", "Fluffeluff", "Togepi", "Togetic", "Natu", "Xatu", "Voltilamm", "Waaty", "Ampharos", "Blubella", "Marill", "Azumarill", "Mogelbaum", "Quaxo", "Hoppspross", "Hubelupf", "Papungha", "Griffel", "Sonnkern", "Sonnflora", "Yanma", "Felino", "Morlord", "Psiana", "Nachtara", "Kramurx", "Laschoking", "Traunfugil", "Icognito", "Woingenau", "Girafarig", "Tannza", "Forstellka", "Dummisel", "Skorgla", "Stahlos", "Snubbull", "Granbull", "Baldorfish", "Scherox", "Pottrott", "Skaraborn", "Sniebel", "Teddiursa", "Ursaring", "Schneckmag", "Magcargo", "Quiekel", "Keifel", "Corasonn", "Remoraid", "Octillery", "Botogel", "Mantax", "Panzaeron", "Hunduster", "Hundemon", "Seedraking", "Phanpy", "Donphan", "Porygon2", "Damhirplex", "Farbeagle", "Rabauz", "Kapoera", "Kussilla", "Elekid", "Magby", "Miltank", "Heiteira", "Raikou", "Entei", "Suicune", "Larvitar", "Pupitar", "Despotar", "Lugia", "Ho-Oh", "Celebi", "Geckarbor", "Reptain", "Gewaldro", "Flemmli", "Jungglut", "Lohgock", "Hydropi", "Moorabbel", "Sumpex", "Fiffyen", "Magnayen", "Zigzachs", "Geradaks", "Waumpel", "Schaloko", "Papinella", "Panekon", "Pudox", "Loturzel", "Lombrero", "Kappalores", "Samurzel", "Blanas", "Tengulist", "Schwalbini", "Schwalboss", "Wingull", "Pelipper", "Trasla", "Kirlia", "Guardevoir", "Gehweiher", "Maskeregen", "Knilz", "Kapilz", "Bummelz", "Muntier", "Letarking", "Nincada", "Ninjask", "Ninjatom", "Flurmel", "Krakeelo", "Krawumms", "Makuhita", "Hariyama", "Azurill", "Nasgnet", "Eneco", "Enekoro", "Zobiris", "Flunkifer", "Stollunior", "Stollrak", "Stolloss", "Meditie", "Meditalis", "Frizelbliz", "Voltenso", "Plusle", "Minun", "Volbeat", "Illumise", "Roselia", "Schluppuck", "Schlukwech", "Kanivanha", "Tohaido", "Wailmer", "Wailord", "Camaub", "Camerupt", "Qurtel", "Spoink", "Groink", "Pandir", "Knacklion", "Vibrava", "Libelldra", "Tuska", "Noktuska", "Wablu", "Altaria", "Sengo", "Vipitis", "Lunastein", "Sonnfel", "Schmerbe", "Welsar", "Krebscorps", "Krebutack", "Puppance", "Lepumentas", "Liliep", "Wielie", "Anorith", "Armaldo", "Barschwa", "Milotic", "Formeo", "Kecleon", "Shuppet", "Banette", "Zwirrlicht", "Zwirrklop", "Tropius", "Palimpalim", "Absol", "Isso", "Schneppke", "Firnontor", "Seemops", "Seejong", "Walraisa", "Perlu", "Aalabyss", "Saganabyss", "Relicanth", "Liebiskus", "Kindwurm", "Draschel", "Brutalanda", "Tanhel", "Metang", "Metagross", "Regirock", "Regice", "Registeel", "Latias", "Latios", "Kyogre", "Groudon", "Rayquaza", "Jirachi", "Deoxys", "Chelast", "Chelcarain", "Chelterrar", "Panflam", "Panpyro", "Panferno", "Plinfa", "Pliprin", "Impoleon", "Staralili", "Staravia", "Staraptor", "Bidiza", "Bidifas", "Zirpurze", "Zirpeise", "Sheinux", "Luxio", "Luxtra", "Knospi", "Roserade", "Koknodon", "Rameidon", "Schilterus", "Bollterus", "Burmy", "Burmadame", "Moterpel", "Wadribie", "Honweisel", "Pachirisu", "Bamelin", "Bojelin", "Kikugi", "Kinoso", "Schalellos", "Gastrodon", "Ambidiffel", "Driftlon", "Drifzepeli", "Haspiror", "Schlapor", "Traunmagil", "Kramshef", "Charmian", "Shnurgarst", "Klingplim", "Skunkapuh", "Skuntank", "Bronzel", "Bronzong", "Mobai", "Pantimimi", "Wonneira", "Plaudagei", "Kryppuk", "Kaumalat", "Knarksel", "Knakrack", "Mampfaxo", "Riolu", "Lucario", "Hippopotas", "Hippoterus", "Pionskora", "Piondragi", "Glibunkel", "Toxiquak", "Venuflibis", "Finneon", "Lumineon", "Mantirps", "Shnebedeck", "Rexblisar", "Snibunna", "Magnezone", "Schlurplek", "Rihornior", "Tangoloss", "Elevoltek", "Magbrant", "Togekiss", "Yanmega", "Folipurba", "Glaziola", "Skorgro", "Mamutel", "Porygon-Z", "Galagladi", "Voluminas", "Zwirrfinst", "Frosdedje", "Rotom", "Selfe", "Vesprit", "Tobutz", "Dialga", "Palkia", "Heatran", "Regigigas", "Giratina", "Cresselia", "Phione", "Manaphy", "Darkrai", "Shaymin", "Arceus", "Victini", "Serpifeu", "Efoserp", "Serpiroyal", "Floink", "Ferkokel", "Flambirex", "Ottaro", "Zwottronin", "Admurai", "Nagelotz", "Kukmarda", "Yorkleff", "Terribark", "Bissbark", "Felilou", "Kleoparda", "Vegimak", "Vegichita", "Grillmak", "Grillchita", "Sodamak", "Sodachita", "Somniam", "Somnivora", "Dusselgurr", "Navitaub", "Fasasnob", "Elezeba", "Zebritz", "Kiesling", "Sedimantur", "Brockoloss", "Fleknoil", "Fletiamo", "Rotomurf", "Stalobor", "Ohrdoch", "Praktibalk", "Strepoli", "Meistagrif", "Schallquap", "Mebrana", "Branawarz", "Jiutesto", "Karadonis", "Strawickl", "Folikon", "Matrifol", "Toxiped", "Rollum", "Cerapendra", "Waumboll", "Elfun", "Lilminip", "Dressella", "Barschuft", "Ganovil", "Rokkaiman", "Rabigator", "Flampion", "Flampivian", "Maracamba", "Lithomith", "Castellith", "Zurrokex", "Irokex", "Symvolara", "Makabaja", "Echnatoll", "Galapaflos", "Karippas", "Flapteryx", "Aeropteryx", "Unratﾃｼtox", "Deponitox", "Zorua", "Zoroark", "Picochilla", "Chillabell", "Mollimorba", "Hypnomorba", "Morbitesse", "Monozyto", "Mitodos", "Zytomega", "Piccolente", "Swaroness", "Gelatini", "Gelatroppo", "Gelatwino", "Sesokitz", "Kronjuwild", "Emolga", "Laukaps", "Cavalanzas", "Tarnpignon", "Hutsassa", "Quabbel", "Apoquallyp", "Mamolida", "Wattzapf", "Voltula", "Kastadur", "Tentantel", "Klikk", "Kliklak", "Klikdiklak", "Zapplardin", "Zapplalek", "Zapplarang", "Pygraulon", "Megalon", "Lichtel", "Laternecto", "Skelabra", "Milza", "Sharfax", "Maxax", "Petznief", "Siberio", "Frigometri", "Schnuthelm", "Hydragil", "Flunschlik", "Lin-Fu", "Wie-Shu", "Shardrago", "Golbit", "Golgantes", "Gladiantri", "Caesurio", "Bisofank", "Geronimatz", "Washakwil", "Skallyk", "Grypheldis", "Furnifraﾃ�", "Fermicula", "Kapuno", "Duodino", "Trikephalo", "Ignivor", "Ramoth", "Kobalium", "Terrakium", "Viridium", "Boreos", "Voltolos", "Reshiram", "Zekrom", "Demeteros", "Kyurem", "Keldeo", "Meloetta", "Genesect", "Igamaro", "Igastarnish", "Brigaron", "Fynx", "Rutena", "Fennexis", "Froxy", "Amphizel", "Quajutsu", "Scoppel", "Grebbit", "Dartiri", "Dartignis", "Fiaro", "Purmel", "Puponcho", "Vivillon", "Leufeo", "Pyroleo", "Flabﾃｩbﾃｩ", "Floette", "Florges", "Mﾃ､hikel", "Chevrumm", "Pam-Pam", "Pandagro", "Coiffwaff", "Psiau", "Psiaugon", "Gramokles", "Duokles", "Durengard", "Parfi", "Parfinesse", "Flauschling", "Sabbaione", "Iscalar", "Calamanero", "Bithora", "Thanathora", "Algitt", "Tandrak", "Scampisto", "Wummer", "Eguana", "Elezard", "Balgoras", "Monargoras", "Amarino", "Amagarga", "Feelinara", "Resladero", "Dedenne", "Rocara", "Viscora", "Viscargot", "Viscogon", "Clavion", "Paragoni", "Trombork", "Irrbis", "Pumpdjinn", "Arktip", "Arktilas", "eF-eM", "UHaFnir", "Xerneas", "Yveltal", "Zygarde", "Diancie", "Hoopa", "Volcanion", "Bauz", "Arboretoss", "Silvarro", "Flamiau", "Miezunder", "Fuegro", "Robball", "Marikeck", "Primarene", "Peppeck", "Trompeck", "Tukanon", "Mangunior", "Manguspektor", "Mabula", "Akkup", "Donarion", "Krabbox", "Krawell", "Choreogel", "Wommel", "Bandelby", "Wuffels", "Wolwerock", "Lusardin", "Garstella", "Aggrostella", "Pampuli", "Pampross", "Araqua", "Aranestro", "Imantis", "Mantidea", "Bubungus", "Lamellux", "Molunk", "Amfira", "Velursi", "Kosturso", "Frubberl", "Frubaila", "Fruyal", "Curelei", "Kommandutan", "Quartermak", "Reiﾃ殕aus", "Tectass", "Sankabuh", "Colossand", "Gufa", "Typ:Null", "Amigento", "Meteno", "Koalelu", "Tortunator", "Togedemaru", "Mimigma", "Knirfish", "Sen-Long", "Moruda", "Miniras", "Mediras", "Grandiras", "Kapu-Riki", "Kapu-Fala", "Kapu-Toro", "Kapu-Kime", "Cosmog", "Cosmovum", "Solgaleo", "Lunala", "Anego", "Masskito", "Schabelle", "Voltriant", "Kaguron", "Katagami", "Schlingking", "Necrozma", "Magearna", "Marshadow", "Venicro", "Agoyon", "Muramura", "Kopplosio", "Zeraora", "Meltan", "Melmetal", "Chimpep", "Chimstix", "Gortrom", "Hopplo", "Kickerlo", "Liberlo", "Memmeon", "Phlegleon", "Intelleon", "Raffel", "Schlaraffel", "Meikro", "Kranoviz", "Krarmor", "Sensect", "Keradar", "Maritellit", "Kleptifux", "Gaunux", "Cottini", "Cottomi", "Wolly", "Zwollock", "Kamehaps", "Kamalm", "Voldi", "Bellektro", "Klonkett", "Wagong", "Montecarbo", "Knapfel", "Drapfel", "Schlapfel", "Salanga", "Sanaconda", "Urgl", "Pikuda", "Barrakiefa", "Toxel", "Riffex", "Thermopod", "Infernopod", "Klopptopus", "Kaocto", "Fatalitee", "Mortipot", "Brimova", "Brimano", "Silembrim", "Bﾃ､hmon", "Pelzebub", "Olangaar", "Barrikadax", "Mauzinger", "Gorgasonn", "Lauchzelot", "Pantifrost", "Oghnatoll", "Hokumil", "Pokusan", "Legios", "Britzigel", "Snomnom", "Mottineva", "Humanolith", "Kubuin", "Servol", "Morpeko", "Kupfanti", "Patinaraja", "Lectragon", "Lecryodon", "Pescragon", "Pescryodon", "Duraludon", "Grolldra", "Phandra", "Katapuldra", "Zacian", "Zamazenta", "Endynalos", "Dakuma", "Wulaosu", "Zarude", "Regieleki", "Regidrago", "Polaross", "Phantoross", "Coronospa", "Damythir", "Axantor", "Ursaluna", "Salmagnis", "Snieboss", "Myriador", "Cupidos", "Felori", "Feliospa", "Maskagato", "Krokel", "Lokroko", "Skelokrok", "Kwaks", "Fuentente", "Bailonda", "Ferkuli", "Fragrunz", "Tarundel", "Spinsidias", "Micrick", "Lextremo", "Pamo", "Pamamo", "Pamomamo", "Zwieps", "Famieps", "Hefel", "Backel", "Olini", "Olivinio", "Olithena", "Krawalloro", "Geosali", "Sedisal", "Saltigant", "Knarbon", "Crimanzo", "Azugladis", "Blipp", "Wampitz", "Voltrel", "Voltrean", "Mobtiff", "Mastifioso", "Sproxi", "Affiti", "Weherba", "Horrerba", "Tentagra", "Tenterra", "Klibbe", "Chilingel", "Halupenjo", "Relluk", "Skarabaks", "Flattutu", "Psiopatra", "Forgita", "Tafforgita", "Granforgita", "Schligda", "Schligdri", "Adebom", "Normifin", "Delfinator", "Knattox", "Knattatox", "Mopex", "Schlurm", "Lumispross", "Lumiflora", "Gruff", "Friedwuff", "Flaminkno", "Flaniwal", "Kolowal", "Agiluza", "Heerashai", "Nigiragi", "Epitaff", "Suelord", "Farigiraf", "Dummimisel", "Gladimperio", "Riesenzahn", "Brﾃｼllschweif", "Wutpilz", "Flatterhaar", "Kriechflﾃｼgel", "Sandfell", "Eisenrad", "Eisenbﾃｼndel", "Eisenhand", "Eisenhals", "Eisenfalter", "Eisendorn", "Frospino", "Cryospino", "Espinodon", "Gierspenst", "Monetigo", "Chongjian", "Baojian", "Dinglu", "Yuyu", "Donnersichel", "Eisenkrieger", "Koraidon", "Miraidon", "Windewoge", "Eisenblatt", "Sirapfel", "Mortcha", "Fatalitcha", "Boninu", "Benesaru", "Beatori", "Ogerpon"],
              pokeType: ["Normal", "Kampf", "Flug", "Gift", "Boden", "Gestein", "Kﾃ､fer", "Geist", "Stahl", "Feuer", "Wasser", "Pflanze", "Elektro", "Psycho", "Eis", "Drache", "Unlicht", "Fee"],
              waza: {
                1: "Klaps",
                2: "Karateschlag",
                3: "Duplexhieb",
                4: "Kometenhieb",
                5: "Megahieb",
                6: "Zahltag",
                7: "Feuerschlag",
                8: "Eishieb",
                9: "Donnerschlag",
                10: "Kratzer",
                11: "Klammer",
                12: "Guillotine",
                13: "Klingensturm",
                14: "Schwerttanz",
                15: "Zerschneider",
                16: "Windstoﾃ�",
                17: "Flﾃｼgelschlag",
                18: "Wirbelwind",
                19: "Fliegen",
                20: "Klammergriff",
                21: "Slam",
                22: "Rankenhieb",
                23: "Stampfer",
                24: "Doppelkick",
                25: "Megakick",
                26: "Sprungkick",
                27: "Fegekick",
                28: "Sandwirbel",
                29: "Kopfnuss",
                30: "Hornattacke",
                31: "Furienschlag",
                32: "Hornbohrer",
                33: "Tackle",
                34: "Bodyslam",
                35: "Wickel",
                36: "Bodycheck",
                37: "Fuchtler",
                38: "Risikotackle",
                39: "Rutenschlag",
                40: "Giftstachel",
                41: "Duonadel",
                42: "Nadelrakete",
                43: "Silberblick",
                44: "Biss",
                45: "Heuler",
                46: "Brﾃｼller",
                47: "Gesang",
                48: "Superschall",
                49: "Ultraschall",
                50: "Aussetzer",
                51: "Sﾃ､ure",
                52: "Glut",
                53: "Flammenwurf",
                54: "Weiﾃ殤ebel",
                55: "Aquaknarre",
                56: "Hydropumpe",
                57: "Surfer",
                58: "Eisstrahl",
                59: "Blizzard",
                60: "Psystrahl",
                61: "Blubbstrahl",
                62: "Aurorastrahl",
                63: "Hyperstrahl",
                64: "Pikser",
                65: "Bohrschnabel",
                66: "ﾃ彙erroller",
                67: "Fuﾃ殘ick",
                68: "Konter",
                69: "Geowurf",
                70: "Stﾃ､rke",
                71: "Absorber",
                72: "Megasauger",
                73: "Egelsamen",
                74: "Wachstum",
                75: "Rasierblatt",
                76: "Solarstrahl",
                77: "Giftpuder",
                78: "Stachelspore",
                79: "Schlafpuder",
                80: "Blﾃ､ttertanz",
                81: "Fadenschuss",
                82: "Drachenwut",
                83: "Feuerwirbel",
                84: "Donnerschock",
                85: "Donnerblitz",
                86: "Donnerwelle",
                87: "Donner",
                88: "Steinwurf",
                89: "Erdbeben",
                90: "Geofissur",
                91: "Schaufler",
                92: "Toxin",
                93: "Konfusion",
                94: "Psychokinese",
                95: "Hypnose",
                96: "Meditation",
                97: "Agilitﾃ､t",
                98: "Ruckzuckhieb",
                99: "Raserei",
                100: "Teleport",
                101: "Nachtnebel",
                102: "Mimikry",
                103: "Kreideschrei",
                104: "Doppelteam",
                105: "Genesung",
                106: "Hﾃ､rtner",
                107: "Komprimator",
                108: "Rauchwolke",
                109: "Konfusstrahl",
                110: "Panzerschutz",
                111: "Einigler",
                112: "Barriere",
                113: "Lichtschild",
                114: "Dunkelnebel",
                115: "Reflektor",
                116: "Energiefokus",
                117: "Geduld",
                118: "Metronom",
                119: "Spiegeltrick",
                120: "Finale",
                121: "Eierbombe",
                122: "Schlecker",
                123: "Smog",
                124: "Schlammbad",
                125: "Knochenkeule",
                126: "Feuersturm",
                127: "Kaskade",
                128: "Schnapper",
                129: "Sternschauer",
                130: "Schﾃ､delwumme",
                131: "Dornkanone",
                132: "Umklammerung",
                133: "Amnesie",
                134: "Psykraft",
                135: "Weichei",
                136: "Turmkick",
                137: "Schlangenblick",
                138: "Traumfresser",
                139: "Giftwolke",
                140: "Stakkato",
                141: "Blutsauger",
                142: "Todeskuss",
                143: "Himmelsfeger",
                144: "Wandler",
                145: "Blubber",
                146: "Irrschlag",
                147: "Pilzspore",
                148: "Blitz",
                149: "Psywelle",
                150: "Platscher",
                151: "Sﾃ､urepanzer",
                152: "Krabbhammer",
                153: "Explosion",
                154: "Kratzfurie",
                155: "Knochmerang",
                156: "Erholung",
                157: "Steinhagel",
                158: "Hyperzahn",
                159: "Schﾃ､rfer",
                160: "Umwandlung",
                161: "Triplette",
                162: "Superzahn",
                163: "Schlitzer",
                164: "Delegator",
                165: "Verzweifler",
                166: "Nachahmer",
                167: "Dreifachkick",
                168: "Raub",
                169: "Spinnennetz",
                170: "Willensleser",
                171: "Nachtmahr",
                172: "Flammenrad",
                173: "Schnarcher",
                174: "Fluch",
                175: "Dreschflegel",
                176: "Umwandlung 2",
                177: "Luftstoﾃ�",
                178: "Baumwollsaat",
                179: "Gegenschlag",
                180: "Groll",
                181: "Pulverschnee",
                182: "Schutzschild",
                183: "Tempohieb",
                184: "Grimasse",
                185: "Finte",
                186: "Bitterkuss",
                187: "Bauchtrommel",
                188: "Matschbombe",
                189: "Lehmschelle",
                190: "Octazooka",
                191: "Stachler",
                192: "Blitzkanone",
                193: "Scharfblick",
                194: "Abgangsbund",
                195: "Abgesang",
                196: "Eissturm",
                197: "Scanner",
                198: "Knochenhatz",
                199: "Zielschuss",
                200: "Wutanfall",
                201: "Sandsturm",
                202: "Gigasauger",
                203: "Ausdauer",
                204: "Charme",
                205: "Walzer",
                206: "Trugschlag",
                207: "Angeberei",
                208: "Milchgetrﾃ､nk",
                209: "Funkensprung",
                210: "Zornklinge",
                211: "Stahlflﾃｼgel",
                212: "Horrorblick",
                213: "Anziehung",
                214: "Schlafrede",
                215: "Vitalglocke",
                216: "Rﾃｼckkehr",
                217: "Geschenk",
                218: "Frustration",
                219: "Bodyguard",
                220: "Leidteiler",
                221: "Lﾃ､uterfeuer",
                222: "Intensitﾃ､t",
                223: "Wuchtschlag",
                224: "Vielender",
                225: "Feuerodem",
                226: "Stafette",
                227: "Zugabe",
                228: "Verfolgung",
                229: "Turbodreher",
                230: "Lockduft",
                231: "Eisenschweif",
                232: "Metallklaue",
                233: "ﾃ彙erwurf",
                234: "Morgengrauen",
                235: "Synthese",
                236: "Mondschein",
                237: "Kraftreserve",
                238: "Kreuzhieb",
                239: "Windhose",
                240: "Regentanz",
                241: "Sonnentag",
                242: "Knirscher",
                243: "Spiegelcape",
                244: "Psycho-Plus",
                245: "Turbotempo",
                246: "Antik-Kraft",
                247: "Spukball",
                248: "Seher",
                249: "Zertrﾃｼmmerer",
                250: "Whirlpool",
                251: "Prﾃｼgler",
                252: "Mogelhieb",
                253: "Aufruhr",
                254: "Horter",
                255: "Entfessler",
                256: "Verzehrer",
                257: "Hitzewelle",
                258: "Hagelsturm",
                259: "Folterknecht",
                260: "Schmeichler",
                261: "Irrlicht",
                262: "Memento-Mori",
                263: "Fassade",
                264: "Power-Punch",
                265: "Riechsalz",
                266: "Spotlight",
                267: "Natur-Kraft",
                268: "Ladevorgang",
                269: "Verhﾃｶhner",
                270: "Rechte Hand",
                271: "Trickbetrug",
                272: "Rollenspiel",
                273: "Wunschtraum",
                274: "Zuschuss",
                275: "Verwurzler",
                276: "Kraftkoloss",
                277: "Magiemantel",
                278: "Aufbereitung",
                279: "Vergeltung",
                280: "Durchbruch",
                281: "Gﾃ､hner",
                282: "Abschlag",
                283: "Notsituation",
                284: "Eruption",
                285: "Fﾃ､higkeitstausch",
                286: "Begrenzer",
                287: "Heilung",
                288: "Nachspiel",
                289: "ﾃ彙ernahme",
                290: "Geheimpower",
                291: "Taucher",
                292: "Armstoﾃ�",
                293: "Tarnung",
                294: "Schweifglanz",
                295: "Scheinwerfer",
                296: "Nebelball",
                297: "Daunenreigen",
                298: "Taumeltanz",
                299: "Feuerfeger",
                300: "Lehmsuhler",
                301: "Frostbeule",
                302: "Nietenranke",
                303: "Tagedieb",
                304: "Schallwelle",
                305: "Giftzahn",
                306: "Zermalmklaue",
                307: "Lohekanonade",
                308: "Aquahaubitze",
                309: "Sternenhieb",
                310: "Erstauner",
                311: "Meteorologe",
                312: "Aromakur",
                313: "Trugtrﾃ､ne",
                314: "Windschnitt",
                315: "Hitzekoller",
                316: "Schnﾃｼffler",
                317: "Felsgrab",
                318: "Silberhauch",
                319: "Metallsound",
                320: "Grasflﾃｶte",
                321: "Spaﾃ殘anone",
                322: "Kosmik-Kraft",
                323: "Fontrﾃ､nen",
                324: "Ampelleuchte",
                325: "Finsterfaust",
                326: "Sondersensor",
                327: "Himmelhieb",
                328: "Sandgrab",
                329: "Eiseskﾃ､lte",
                330: "Lehmbrﾃｼhe",
                331: "Kugelsaat",
                332: "Aero-Ass",
                333: "Eisspeer",
                334: "Eisenabwehr",
                335: "Rﾃｼckentzug",
                336: "Jauler",
                337: "Drachenklaue",
                338: "Flora-Statue",
                339: "Protzer",
                340: "Sprungfeder",
                341: "Lehmschuss",
                342: "Giftschweif",
                343: "Bezirzer",
                344: "Volttackle",
                345: "Zauberblatt",
                346: "Nassmacher",
                347: "Gedankengut",
                348: "Laubklinge",
                349: "Drachentanz",
                350: "Felswurf",
                351: "Schockwelle",
                352: "Aquawelle",
                353: "Kismetwunsch",
                354: "Psyschub",
                355: "Ruheort",
                356: "Erdanziehung",
                357: "Wunderauge",
                358: "Weckruf",
                359: "Hammerarm",
                360: "Gyroball",
                361: "Heilopfer",
                362: "Lake",
                363: "Beerenkrﾃ､fte",
                364: "Offenlegung",
                365: "Pflﾃｼcker",
                366: "Rﾃｼckenwind",
                367: "Akupressur",
                368: "Metallstoﾃ�",
                369: "Kehrtwende",
                370: "Nahkampf",
                371: "Gegenstoﾃ�",
                372: "Gewissheit",
                373: "Itemsperre",
                374: "Schleuder",
                375: "Psybann",
                376: "Trumpfkarte",
                377: "Heilblockade",
                378: "Auswringen",
                379: "Krafttrick",
                380: "Magensﾃ､fte",
                381: "Beschwﾃｶrung",
                382: "Egotrip",
                383: "Imitator",
                384: "Krafttausch",
                385: "Schutztausch",
                386: "Strafattacke",
                387: "Zuflucht",
                388: "Sorgensamen",
                389: "Tiefschlag",
                390: "Giftspitzen",
                391: "Statustausch",
                392: "Wasserring",
                393: "Magnetflug",
                394: "Flammenblitz",
                395: "Kraftwelle",
                396: "Aurasphﾃ､re",
                397: "Steinpolitur",
                398: "Gifthieb",
                399: "Finsteraura",
                400: "Nachthieb",
                401: "Nassschweif",
                402: "Samenbomben",
                403: "Luftschnitt",
                404: "Kreuzschere",
                405: "Kﾃ､fergebrumm",
                406: "Drachenpuls",
                407: "Drachenstoﾃ�",
                408: "Juwelenkraft",
                409: "Ableithieb",
                410: "Vakuumwelle",
                411: "Fokusstoﾃ�",
                412: "Energieball",
                413: "Sturzflug",
                414: "Erdkrﾃ､fte",
                415: "Wechseldich",
                416: "Gigastoﾃ�",
                417: "Rﾃ､nkeschmied",
                418: "Patronenhieb",
                419: "Lawine",
                420: "Eissplitter",
                421: "Dunkelklaue",
                422: "Donnerzahn",
                423: "Eiszahn",
                424: "Feuerzahn",
                425: "Schattenstoﾃ�",
                426: "Schlammbombe",
                427: "Psychoklinge",
                428: "Zen-Kopfstoﾃ�",
                429: "Spiegelsalve",
                430: "Lichtkanone",
                431: "Kraxler",
                432: "Auflockern",
                433: "Bizarroraum",
                434: "Draco Meteor",
                435: "Ladungsstoﾃ�",
                436: "Flammensturm",
                437: "Blﾃ､ttersturm",
                438: "Blattgeiﾃ歹l",
                439: "Felswerfer",
                440: "Giftstreich",
                441: "Mﾃｼlltreffer",
                442: "Eisenschﾃ､del",
                443: "Magnetbombe",
                444: "Steinkante",
                445: "Liebreiz",
                446: "Tarnsteine",
                447: "Strauchler",
                448: "Geschwﾃ､tz",
                449: "Urteilskraft",
                450: "Kﾃ､ferbiss",
                451: "Ladestrahl",
                452: "Holzhammer",
                453: "Wasserdﾃｼse",
                454: "Schlagbefehl",
                455: "Blockbefehl",
                456: "Heilbefehl",
                457: "Kopfstoﾃ�",
                458: "Doppelschlag",
                459: "Zeitenlﾃ､rm",
                460: "Raumschlag",
                461: "Lunartanz",
                462: "Quetschgriff",
                463: "Lavasturm",
                464: "Schlummerort",
                465: "Schocksamen",
                466: "Unheilbﾃｶen",
                467: "Schemenkraft",
                468: "Klauenwetzer",
                469: "Rundumschutz",
                470: "Schutzteiler",
                471: "Kraftteiler",
                472: "Wunderraum",
                473: "Psychoschock",
                474: "Giftschock",
                475: "Autotomie",
                476: "Wutpulver",
                477: "Telekinese",
                478: "Magieraum",
                479: "Katapult",
                480: "Bergsturm",
                481: "Funkenflug",
                482: "Schlammwoge",
                483: "Falterreigen",
                484: "Rammboss",
                485: "Synchrolﾃ､rm",
                486: "Elektroball",
                487: "ﾃ彙erflutung",
                488: "Nitroladung",
                489: "Einrollen",
                490: "Fuﾃ殳ritt",
                491: "Sﾃ､urespeier",
                492: "Schmarotzer",
                493: "Wankelstrahl",
                494: "Zwango",
                495: "Galanterie",
                496: "Kanon",
                497: "Widerhall",
                498: "Zermﾃｼrben",
                499: "Klﾃ､rsmog",
                500: "Kraftvorrat",
                501: "Rapidschutz",
                502: "Seitentausch",
                503: "Siedewasser",
                504: "Hausbruch",
                505: "Heilwoge",
                506: "Bﾃｼrde",
                507: "Freier Fall",
                508: "Gangwechsel",
                509: "ﾃ彙erkopfwurf",
                510: "Einﾃ､schern",
                511: "Verzﾃｶgerung",
                512: "Akrobatik",
                513: "Typenspiegel",
                514: "Heimzahlung",
                515: "Wagemut",
                516: "Offerte",
                517: "Inferno",
                518: "Wassersﾃ､ulen",
                519: "Feuersﾃ､ulen",
                520: "Pflanzensﾃ､ulen",
                521: "Voltwechsel",
                522: "Kﾃ､fertrutz",
                523: "Dampfwalze",
                524: "Eisesodem",
                525: "Drachenrute",
                526: "Kraftschub",
                527: "Elektronetz",
                528: "Stromstoﾃ�",
                529: "Schlagbohrer",
                530: "Doppelhieb",
                531: "Herzstempel",
                532: "Holzgeweih",
                533: "Sanctoklinge",
                534: "Kalkklinge",
                535: "Brandstempel",
                536: "Grasmixer",
                537: "Quetschwalze",
                538: "Watteschild",
                539: "Nachtflut",
                540: "Psychostoﾃ�",
                541: "Kehrschelle",
                542: "Orkan",
                543: "Steinschﾃ､del",
                544: "Klikkdiskus",
                545: "Flammenball",
                546: "Techblaster",
                547: "Urgesang",
                548: "Mystoschwert",
                549: "Eiszeit",
                550: "Blitzschlag",
                551: "Blauflammen",
                552: "Feuerreigen",
                553: "Frostvolt",
                554: "Frosthauch",
                555: "Standpauke",
                556: "Eiszapfhagel",
                557: "V-Generator",
                558: "Kreuzflamme",
                559: "Kreuzdonner",
                560: "Flying Press",
                561: "Tatami-Schild",
                562: "Rﾃｼlpser",
                563: "Pflﾃｼger",
                564: "Klebenetz",
                565: "Stachelfinale",
                566: "Phantomkraft",
                567: "Halloween",
                568: "Kampfgebrﾃｼll",
                569: "Plasmaschauer",
                570: "Parabolladung",
                571: "Waldesfluch",
                572: "Blﾃｼtenwirbel",
                573: "Gefriertrockner",
                574: "Sﾃ､uselstimme",
                575: "Abgangstirade",
                576: "Invertigo",
                577: "Diebeskuss",
                578: "Trickschutz",
                579: "Floraschutz",
                580: "Grasfeld",
                581: "Nebelfeld",
                582: "Elektrifizierung",
                583: "Knuddler",
                584: "Feenbrise",
                585: "Mondgewalt",
                586: "ﾃ彙erschallknall",
                587: "Feenschloss",
                588: "Kﾃｶnigsschild",
                589: "Kameradschaft",
                590: "Vertrauenssache",
                591: "Diamantsturm",
                592: "Dampfschwall",
                593: "Dimensionsloch",
                594: "Wasser-Shuriken",
                595: "Magieflamme",
                596: "Schutzstacheln",
                597: "Duftwolke",
                598: "Mystowellen",
                599: "Giftfalle",
                600: "Pulverschleuder",
                601: "Geokontrolle",
                602: "Magnetregler",
                603: "Goldene Zeiten",
                604: "Elektrofeld",
                605: "Zauberschein",
                606: "Ehrentag",
                607: "Hﾃ､ndchenhalten",
                608: "Kulleraugen",
                609: "Wangenrubbler",
                610: "Zurﾃｼckhaltung",
                611: "Plage",
                612: "Steigerungshieb",
                613: "Unheilsschwingen",
                614: "Tausend Pfeile",
                615: "Tausend Wellen",
                616: "Bodengewalt",
                617: "Lux Calamitatis",
                618: "Ursprungswoge",
                619: "Abgrundsklinge",
                620: "Zenitstﾃｼrmer",
                621: "Dimensionswahn",
                622: "Hyper-Sprintangriff",
                623: "Hyper-Sprintangriff",
                624: "Fulminante Faustschlﾃ､ge",
                625: "Fulminante Faustschlﾃ､ge",
                626: "Finaler Steilflug",
                627: "Finaler Steilflug",
                628: "Vernichtender Sﾃ､ureregen",
                629: "Vernichtender Sﾃ､ureregen",
                630: "Seismische Eruption",
                631: "Seismische Eruption",
                632: "Apokalyptische Steinpresse",
                633: "Apokalyptische Steinpresse",
                634: "Wirbelnder Insektenhieb",
                635: "Wirbelnder Insektenhieb",
                636: "Ewige Nacht",
                637: "Ewige Nacht",
                638: "Turbo-Spiralkombo",
                639: "Turbo-Spiralkombo",
                640: "Dynamische Maxiflamme",
                641: "Dynamische Maxiflamme",
                642: "Super-Wassertornado",
                643: "Super-Wassertornado",
                644: "Brillante Blﾃｼtenpracht",
                645: "Brillante Blﾃｼtenpracht",
                646: "Gigavolt-Funkensalve",
                647: "Gigavolt-Funkensalve",
                648: "Psycho-Schmetterschlag",
                649: "Psycho-Schmetterschlag",
                650: "Tobender Geofrost",
                651: "Tobender Geofrost",
                652: "Drastisches Drachendrﾃｶhnen",
                653: "Drastisches Drachendrﾃｶhnen",
                654: "Schwarzes Loch des Grauens",
                655: "Schwarzes Loch des Grauens",
                656: "Entzﾃｼckender Sternenstoﾃ�",
                657: "Entzﾃｼckender Sternenstoﾃ�",
                658: "Perfektes Pika-Projektil",
                659: "Sandsammler",
                660: "ﾃ彙errumpler",
                661: "Bunker",
                662: "Schattenfessel",
                663: "Dark Lariat",
                664: "Schaumserenade",
                665: "Eishammer",
                666: "Florakur",
                667: "Pferdestﾃ､rke",
                668: "Kraftabsorber",
                669: "Solarklinge",
                670: "Blattwerk",
                671: "Rampenlicht",
                672: "Giftfaden",
                673: "Konzentration",
                674: "Hilfsmechanik",
                675: "Neck Strike",
                676: "Pollenknﾃｶdel",
                677: "Ankerschuss",
                678: "Psychofeld",
                679: "Anfallen",
                680: "Feuerpeitsche",
                681: "ﾃ彙erheblichkeit",
                682: "Ausbrennen",
                683: "Initiativetausch",
                684: "Schmalhorn",
                685: "Lﾃ､uterung",
                686: "Wecktanz",
                687: "Sanktionskern",
                688: "Tropenkick",
                689: "Kommando",
                690: "Schnabelkanone",
                691: "Schuppenrasseln",
                692: "Drachenhammer",
                693: "Wirbler",
                694: "Auroraschleier",
                695: "Schatten-Pfeilregen",
                696: "Hyper Dark Crusher",
                697: "Grandiose Meeressymphonie",
                698: "Alolas Wﾃ､chter",
                699: "Sternbild des Seelenraubes",
                700: "Blitz-Wellenritt",
                701: "Schluss mit lustig",
                702: "Macht der Neun",
                703: "Supernova des Ursprungs",
                704: "Panzerfalle",
                705: "Kanonenbouquet",
                706: "Psychobeiﾃ歹r",
                707: "Fruststampfer",
                708: "Schattenknochen",
                709: "Turbofelsen",
                710: "Aquadurchstoﾃ�",
                711: "Prisma-Laser",
                712: "Diebesschatten",
                713: "Stahlgestirn",
                714: "Schattenstrahl",
                715: "Trﾃ､nendrﾃｼse",
                716: "Elektropikser",
                717: "Naturzorn",
                718: "Multi-Angriff",
                719: "Tausendfacher Donnerblitz",
                720: "Knallkopf",
                721: "Plasmafﾃ､uste",
                722: "Photonen-Geysir",
                723: "Licht des Erlﾃｶschens",
                724: "Schmetternde Sonnenwalze",
                725: "Geballter Mondlaser",
                726: "Herzliche Knuddelkloppe",
                727: "Fataler Steinregen",
                728: "Rasselnder Seelentanz",
                729: "Britzelturbo",
                730: "Plﾃ､tschersurfer",
                731: "Schwebesturz",
                732: "Pika-Flash",
                733: "Blubbsauger",
                734: "Knisterladung",
                735: "Flackerbrand",
                736: "Pulsieraura",
                737: "Quﾃ､lzone",
                738: "Sprieﾃ歟omben",
                739: "Klirrfrost",
                740: "Glitzersturm",
                741: "Evo-Crash",
                742: "Panzerfﾃ､uste",
                743: "Dyna-Wall",
                744: "Dynamax-Kanone",
                745: "Prﾃ､zisionsschuss",
                746: "Fesselbiss",
                747: "Backenstopfer",
                748: "Finalformation",
                749: "Teerschuss",
                750: "Magiepuder",
                751: "Drachenpfeile",
                752: "Teatime",
                753: "Octoklammer",
                754: "Schockschnabel",
                755: "Kiemenbiss",
                756: "Seitenwechsel",
                757: "Dyna-Brand",
                758: "Dyna-Schwarm",
                759: "Dyna-Gewitter",
                760: "Dyna-Angriff",
                761: "Dyna-Faust",
                762: "Dyna-Spuk",
                763: "Dyna-Frost",
                764: "Dyna-Giftschwall",
                765: "Dyna-Flut",
                766: "Dyna-Dﾃｼse",
                767: "Dyna-Zauber",
                768: "Dyna-Wyrm",
                769: "Dyna-Kinese",
                770: "Dyna-Brocken",
                771: "Dyna-Erdstoﾃ�",
                772: "Dyna-Dunkel",
                773: "Dyna-Flora",
                774: "Dyna-Stahlzacken",
                775: "Seelentanz",
                776: "Body Press",
                777: "Verzierung",
                778: "Trommelschlﾃ､ge",
                779: "Fangeisen",
                780: "Feuerball",
                781: "Gigantenhieb",
                782: "Gigantenstoﾃ�",
                783: "Aura-Rad",
                784: "Breitseite",
                785: "Zweigstoﾃ�",
                786: "Overdrive",
                787: "Apfelsﾃ､ure",
                788: "Gravitation",
                789: "Seelenbruch",
                790: "Wunderdampf",
                791: "Lebenstropfen",
                792: "Abblocker",
                793: "Kniefalltrick",
                794: "Sternensturm",
                795: "Unendynastrahlen",
                796: "Stahlstrahl",
                797: "Flﾃ､chenmacht",
                798: "Eisenwalze",
                799: "Schuppenschuss",
                800: "Meteorstrahl",
                801: "Muschelwaffe",
                802: "Nebelexplosion",
                803: "Grasrutsche",
                804: "Hochspannung",
                805: "Feldimpuls",
                806: "Krabbelkracher",
                807: "Neidflammen",
                808: "Frustventil",
                809: "Poltergeist",
                810: "Korrosionsgas",
                811: "Coaching",
                812: "Rollwende",
                813: "Dreifach-Axel",
                814: "Doppelflﾃｼgel",
                815: "Brandsand",
                816: "Dschungelheilung",
                817: "Finstertreffer",
                818: "Trefferschwall",
                819: "Blitzgefﾃ､ngnis",
                820: "Drachenkrﾃ､fte",
                821: "Eisiger Blick",
                822: "Brennender Zorn",
                823: "Donnernder Tritt",
                824: "Blizzardlanze",
                825: "Astralfragmente",
                826: "Schauderspruch",
                827: "Unheilsklauen",
                828: "Barrierenstoﾃ�",
                829: "Kraftwechsel",
                830: "Felsaxt",
                831: "Frﾃｼhlingsorkan",
                832: "Mythenkraft",
                833: "Flammenwut",
                834: "Wellentackle",
                835: "Chlorostrahl",
                836: "Frostfallwind",
                837: "Siegestanz",
                838: "Schmetterramme",
                839: "Giftstachelregen",
                840: "Auraschwingen",
                841: "Niedertracht",
                842: "Refugium",
                843: "Drillingspfeile",
                844: "Phantomparade",
                845: "Klingenschwall",
                846: "Polarorkan",
                847: "Donnerorkan",
                848: "Wﾃｼstenorkan",
                849: "Lunargebet",
                850: "Mutschub",
                851: "Tera-Ausbruch",
                852: "Fadenfalle",
                853: "Fersenkick",
                854: "Letzte Ehre",
                855: "Lichteinschlag",
                856: "Auftischen",
                857: "Dﾃｼsenhieb",
                858: "Chili-Essenz",
                859: "Reifendrehung",
                860: "Mﾃ､useplage",
                861: "Eiskreisel",
                862: "Groﾃ殘lingenstoﾃ�",
                863: "Vitalsegen",
                864: "Pﾃｶkelsalz",
                865: "Tauchtriade",
                866: "Letalwirbler",
                867: "Abpausen",
                868: "Abspaltung",
                869: "Kniefallspalter",
                870: "Blumentrick",
                871: "Loderlied",
                872: "Wogentanz",
                873: "Rasender Stier",
                874: "Goldrausch",
                875: "Psychoschneide",
                876: "Hydrodampf",
                877: "Verderben",
                878: "Kollisionskurs",
                879: "Blitztour",
                880: "Schwanzabwurf",
                881: "Eisige Stimmung",
                882: "Aufrﾃ､umen",
                883: "Schneelandschaft",
                884: "Anspringen",
                885: "Wegbereiter",
                886: "Kalte Dusche",
                887: "Hyperbohrer",
                888: "Doppelstrahl",
                889: "Zornesfaust",
                890: "Rﾃｼstungskanone",
                891: "Reueschwert",
                892: "Zweifachladung",
                893: "Riesenhammer",
                894: "Vendetta",
                895: "Aquaschnitt",
                896: "Hitzeturbo",
                897: "Finsterturbo",
                898: "Toxiturbo",
                899: "Raufturbo",
                900: "Zauberturbo",
                901: "Blutmond",
                902: "Quirlschuss",
                903: "Sirupbombe",
                904: "Rankenkeule"
              },
              tokusei: {
                1: "Duftnote",
                2: "Niesel",
                3: "Temposchub",
                4: "Kampfpanzer",
                5: "Robustheit",
                6: "Feuchtigkeit",
                7: "Flexibilitﾃ､t",
                8: "Sandschleier",
                9: "Statik",
                10: "Voltabsorber",
                11: "H2O-Absorber",
                12: "Dﾃｶsigkeit",
                13: "Wolke Sieben",
                14: "Facettenauge",
                15: "Insomnia",
                16: "Farbwechsel",
                17: "Immunitﾃ､t",
                18: "Feuerfﾃ､nger",
                19: "Puderabwehr",
                20: "Gleichmut",
                21: "Saugnapf",
                22: "Bedroher",
                23: "Wegsperre",
                24: "Rauhaut",
                25: "Wunderwache",
                26: "Schwebe",
                27: "Sporenwirt",
                28: "Synchro",
                29: "Neutraltorso",
                30: "Innere Kraft",
                31: "Blitzfﾃ､nger",
                32: "Edelmut",
                33: "Wassertempo",
                34: "Chlorophyll",
                35: "Erleuchtung",
                36: "Erfassen",
                37: "Kraftkoloss",
                38: "Giftdorn",
                39: "Konzentrator",
                40: "Magmapanzer",
                41: "Aquahﾃｼlle",
                42: "Magnetfalle",
                43: "Lﾃ､rmschutz",
                44: "Regengenuss",
                45: "Sandsturm",
                46: "Erzwinger",
                47: "Speckschicht",
                48: "Frﾃｼhwecker",
                49: "Flammkﾃｶrper",
                50: "Angsthase",
                51: "Adlerauge",
                52: "Scherenmacht",
                53: "Mitnahme",
                54: "Schnarchnase",
                55: "ﾃ彙ereifer",
                56: "Charmebolzen",
                57: "Plus",
                58: "Minus",
                59: "Prognose",
                60: "Klebekﾃｶrper",
                61: "Expidermis",
                62: "Adrenalin",
                63: "Notschutz",
                64: "Kloakensoﾃ歹",
                65: "Notdﾃｼnger",
                66: "Groﾃ歟rand",
                67: "Sturzbach",
                68: "Hexaplaga",
                69: "Steinhaupt",
                70: "Dﾃｼrre",
                71: "Ausweglos",
                72: "Munterkeit",
                73: "Pulverrauch",
                74: "Mentalkraft",
                75: "Panzerhaut",
                76: "Klimaschutz",
                77: "Taumelschritt",
                78: "Starthilfe",
                79: "Rivalitﾃ､t",
                80: "Felsenfest",
                81: "Schneemantel",
                82: "Vﾃｶllerei",
                83: "Kurzschluss",
                84: "Entlastung",
                85: "Hitzeschutz",
                86: "Wankelmut",
                87: "Trockenheit",
                88: "Download",
                89: "Eisenfaust",
                90: "Giftheilung",
                91: "Anpassung",
                92: "Wertelink",
                93: "Hydration",
                94: "Solarkraft",
                95: "Rasanz",
                96: "Regulierung",
                97: "Superschﾃｼtze",
                98: "Magieschild",
                99: "Schildlos",
                100: "Zeitspiel",
                101: "Techniker",
                102: "Floraschild",
                103: "Tollpatsch",
                104: "ﾃ彙erbrﾃｼckung",
                105: "Glﾃｼckspilz",
                106: "Finalschlag",
                107: "Vorahnung",
                108: "Vorwarnung",
                109: "Unkenntnis",
                110: "Aufwertung",
                111: "Filter",
                112: "Saumselig",
                113: "Rauflust",
                114: "Sturmsog",
                115: "Eishaut",
                116: "Felskern",
                117: "Schneeschauer",
                118: "Honigmaul",
                119: "Schnﾃｼffler",
                120: "Achtlos",
                121: "Variabilitﾃ､t",
                122: "Pflanzengabe",
                123: "Alptraum",
                124: "Langfinger",
                125: "Rohe Gewalt",
                126: "Umkehrung",
                127: "Anspannung",
                128: "Siegeswille",
                129: "Schwﾃ､chling",
                130: "Tastfluch",
                131: "Heilherz",
                132: "Freundeshut",
                133: "Bruchrﾃｼstung",
                134: "Schwermetall",
                135: "Leichtmetall",
                136: "Multischuppe",
                137: "Giftwahn",
                138: "Hitzewahn",
                139: "Reiche Ernte",
                140: "Telepathie",
                141: "Gefﾃｼhlswippe",
                142: "Partikelschutz",
                143: "Giftgriff",
                144: "Belebekraft",
                145: "Brustbieter",
                146: "Sandscharrer",
                147: "Wunderhaut",
                148: "Analyse",
                149: "Trugbild",
                150: "Doppelgﾃ､nger",
                151: "Schwebedurch",
                152: "Mumie",
                153: "Hochmut",
                154: "Redlichkeit",
                155: "Hasenfuﾃ�",
                156: "Magiespiegel",
                157: "Vegetarier",
                158: "Strolch",
                159: "Sandgewalt",
                160: "Eisenstachel",
                161: "Trance-Modus",
                162: "Triumphstern",
                163: "Turbobrand",
                164: "Teravolt",
                165: "Dufthﾃｼlle",
                166: "Blﾃｼtenhﾃｼlle",
                167: "Backentaschen",
                168: "Wandlungskunst",
                169: "Fellkleid",
                170: "Zauberer",
                171: "Kugelsicher",
                172: "Unbeugsamkeit",
                173: "Titankiefer",
                174: "Frostschicht",
                175: "Zuckerhﾃｼlle",
                176: "Taktikwechsel",
                177: "Orkanschwingen",
                178: "Megawumme",
                179: "Pflanzenpelz",
                180: "Symbiose",
                181: "Krallenwucht",
                182: "Feenschicht",
                183: "Viskositﾃ､t",
                184: "Zenithaut",
                185: "Familienbande",
                186: "Dunkelaura",
                187: "Feenaura",
                188: "Aura-Umkehr",
                189: "Urmeer",
                190: "Endland",
                191: "Delta-Wind",
                192: "Zﾃ､higkeit",
                193: "Reiﾃ歛us",
                194: "Rﾃｼckzug",
                195: "Verklumpen",
                196: "Quﾃ､lerei",
                197: "Limitschild",
                198: "Beschattung",
                199: "Wasserblase",
                200: "Stahlprofi",
                201: "Wutausbruch",
                202: "Schneescharrer",
                203: "Langstrecke",
                204: "Plﾃ､tscherstimme",
                205: "Heilwandel",
                206: "Elektrohaut",
                207: "Surf-Schweif",
                208: "Fischschwarm",
                209: "Kostﾃｼmspuk",
                210: "Freundschaftsakt",
                211: "Scharwandel",
                212: "Korrosion",
                213: "Dauerschlaf",
                214: "Majestﾃ､t",
                215: "Magenkrempler",
                216: "Tﾃ､nzer",
                217: "Batterie",
                218: "Flauschigkeit",
                219: "Buntkﾃｶrper",
                220: "Seelenherz",
                221: "Lockenkopf",
                222: "Receiver",
                223: "Chemiekraft",
                224: "Bestien-Boost",
                225: "Alpha-System",
                226: "Elektro-Erzeuger",
                227: "Psycho-Erzeuger",
                228: "Nebel-Erzeuger",
                229: "Gras-Erzeuger",
                230: "Metallprotektor",
                231: "Phantomschutz",
                232: "Prismarﾃｼstung",
                233: "Zerebralmacht",
                234: "Kﾃｼhnes Schwert",
                235: "Wackerer Schild",
                236: "Libero",
                237: "Apport",
                238: "Wollflaum",
                239: "Schraubflosse",
                240: "Spiegelrﾃｼstung",
                241: "Wﾃｼrggeschoss",
                242: "Stahlrﾃｼckgrat",
                243: "Dampfantrieb",
                244: "Punk Rock",
                245: "Sandspeier",
                246: "Eisflﾃｼgelstaub",
                247: "Heranreifen",
                248: "Tiefkﾃｼhlkopf",
                249: "Kraftquelle",
                250: "Mimese",
                251: "Hemmungslos",
                252: "Stﾃ､hlerner Wille",
                253: "Unheilskﾃｶrper",
                254: "Rastlose Seele",
                255: "Affenfokus",
                256: "Reaktionsgas",
                257: "Pastellhﾃｼlle",
                258: "Heiﾃ殄unger",
                259: "Schnellschuss",
                260: "Verborgene Faust",
                261: "Kuriose Arznei",
                262: "Transistor",
                263: "Drachenkiefer",
                264: "Helles Wiehern",
                265: "Dunkles Wiehern",
                266: "Reitgespann",
                267: "Reitgespann",
                268: "Duftschwade",
                269: "Streusaat",
                270: "Thermowandel",
                271: "Wutpanzer",
                272: "Lﾃ､utersalz",
                273: "Knusperkruste",
                274: "Windreiter",
                275: "Wachhund",
                276: "Steintrﾃ､ger",
                277: "Windkraft",
                278: "Superwechsel",
                279: "Kommandant",
                280: "Dynamo",
                281: "Palﾃ､osynthese",
                282: "Quantenantrieb",
                283: "Goldkﾃｶrper",
                284: "Unheilsgefﾃ､ﾃ�",
                285: "Unheilsschwert",
                286: "Unheilstafeln",
                287: "Unheilsjuwelen",
                288: "Orichalkum-Puls",
                289: "Hadronen-Motor",
                290: "Profiteur",
                291: "Wiederkﾃ､uer",
                292: "Scharfkantig",
                293: "Feldherr",
                294: "Synchronauftritt",
                295: "Giftbelag",
                296: "Schweifrﾃｼstung",
                297: "Bodenschmaus",
                298: "Myzelienkraft",
                299: "Gastlichkeit",
                300: "Geistiges Auge",
                301: "Maskenmacht",
                302: "Maskenmacht",
                303: "Maskenmacht",
                304: "Maskenmacht",
                305: "Giftkette",
                306: "Sﾃｼﾃ歹r Nektar"
              },
              seikaku: {
                0: "Robust",
                1: "Solo",
                2: "Mutig",
                3: "Hart",
                4: "Frech",
                5: "Kﾃｼhn",
                6: "Sanft",
                7: "Locker",
                8: "Pfiffig",
                9: "Lasch",
                10: "Scheu",
                11: "Hastig",
                12: "Ernst",
                13: "Froh",
                14: "Naiv",
                15: "Mﾃ､ﾃ殃g",
                16: "Mild",
                17: "Ruhig",
                18: "Zaghaft",
                19: "Hitzig",
                20: "Still",
                21: "Zart",
                22: "Forsch",
                23: "Sacht",
                24: "Kauzig"
              }
            }
          }
        };
        break;
      case 7:
        e = new class {
          constructor() {
            this.pages = {
              t_common: {
                "#regulation": "Reglamentos",
                "#available_poke": "Pokﾃｩmon permitidos",
                "#trainer-tab-text": "Clasificaciﾃｳn de Entrenadores",
                "#pokemon-tab-text": "Clasificaciﾃｳn de Pokﾃｩmon",
                "#open": "En curso",
                "#end": "Finalizado",
                gathering: "Recuento en curso",
                not_join: "No has participado",
                not_join_battle: "Todavﾃｭa no has participado en combates<br>de este tipo.",
                not_join_tournament: "No participas o no has participado en este torneo.",
                not_join_friendcompe: "Todavﾃｭa no has participado en ningﾃｺn torneo amistoso.",
                win: "VICTORIA",
                lose: "DERROTA",
                draw: "EMPATE",
                rental: "Equipo de Prﾃｩstamo",
                rank_num: "Puesto: %d",
                win_num: "Victorias: %d",
                lose_num: "Derrotas: %d",
                draw_num: "Empates: %d",
                ok: "Aceptar",
                rulename1: "Sin restricciones",
                rulename2: "Normal",
                rulename3: "Con restricciones",
                rulename4: "Sin restricciones",
                rulename5: "Normal",
                rulename6: "Con restricciones",
                rulename7: "Sin restricciones",
                rulename8: "Normal",
                rulename9: "Con restricciones",
                rulename10: "Oficial 1",
                rulename11: "Oficial 2",
                rulename12: "Oficial 1",
                rulename13: "Oficial 2",
                rulename14: "Oficial 3",
                outrange: "Sin clasificar"
              },
              t_rankmatchPageTexts: {
                "#title-text": "Combates Clasificatorios"
              },
              t_my_rankmatchPageTexts: {
                "#title-text": "Resultados de los Combates Clasificatorios",
                "#rate_label": "Puntos"
              },
              t_pokemonrankingPageTexts: {
                "#title-text": "Estadﾃｭsticas del Pokﾃｩmon",
                no: "N.ﾂｺ",
                ".battle-team-tab-text": "Datos",
                ".when-win-tab-text": "Victorias",
                ".when-lose-tab-text": "Derrotas",
                "kind-tab-battle-team": "Los 10 Pokﾃｩmon con los que mﾃ｡s forma Equipo de Combate",
                "kind-tab-battle-win": "Los 10 Pokﾃｩmon que ha derrotado mﾃ｡s veces",
                "kind-tab-battle-lose": "Los 10 Pokﾃｩmon que lo han debilitado mﾃ｡s veces",
                "kind-tab-battle-waza": "Movimientos",
                "kind-tab-battle-waza-win": "Los 10 movimientos que mﾃ｡s ha usado para ganar",
                "kind-tab-battle-waza-lose": "Los 10 movimientos con los que lo han debilitado mﾃ｡s veces",
                "kind-tab-battle-tokusei": "Habilidad",
                "kind-tab-battle-item": "Objeto",
                "kind-tab-battle-seikaku": "Naturaleza",
                "kind-tab-battle-terastal": "Teratipo",
                atk: "Ataque",
                def: "Defensa",
                agi: "Velocidad",
                spatk: "At. Esp.",
                spdef: "Def. Esp.",
                hyphen: "窶�"
              },
              t_internetcompetitionPageTexts: {
                "#title-text": "Torneos oficiales"
              },
              t_internetcompetition_detailPageTexts: {
                "#title-text": "Detalles del torneo oficial"
              },
              t_my_internetcompetition_detailPageTexts: {
                "#title-text": "Detalles del torneo oficial",
                "#rate_label": "Puntos",
                mydata_dialog_title: "Selecciona los resultados que quieras ver",
                mydata_dialog_text: "Ver resultados del usuario",
                mydata_dialog_btn1: "Clasificaciﾃｳn",
                mydata_dialog_btn2: "Equipo de Combate"
              },
              t_friendcompetitionPageTexts: {
                "#title-text": "Torneos amistosos"
              },
              t_my_friendcompetitionPageTexts: {
                "#title-text": "Torneos amistosos",
                ".organizer-label-text": "Organizado por",
                ".result-label-text": "Resultados",
                ".battleteam-label-text": "Equipo de Combate"
              },
              t_friendcompetition_detailPageTexts: {
                "#title-text": "Detalles del torneo amistoso"
              },
              t_my_friendcompetition_detailPageTexts: {
                "#title-text": "Detalles del torneo amistoso"
              },
              t_battle_teamPageTexts: {
                internetcompe: "Equipo de Combate para torneos oficiales",
                friendcompe: "Equipo de Combate para torneos amistosos"
              },
              t_mydataselectPageTexts: {
                title_text_rankmatch: "Mis resultados",
                title_text_internetcompe: "Detalles del torneo oficial",
                title_text_friendcompe: "Torneos amistosos",
                "#dataselect-text": "Elige unos datos de guardado para comprobar sus resultados."
              },
              t_tournament_detailPageTexts: {
                "#title-text": "Detalles del torneo",
                single_elimination: "Eliminaciﾃｳn directa",
                double_elimination: "Doble eliminaciﾃｳn",
                bestX: "Mejores %d",
                Xround: "Ronda %d",
                semi_final: "Semifinal",
                final: "Final",
                round_winners: "Grupo de ganadores: ronda %d",
                final_winners: "Grupo ganadores: ronda %d (final)",
                round_losers: "Grupo de perdedores: ronda %d",
                final_losers: "Grupo perdedores: ronda %d (final)",
                grandfinal: "Gran final",
                coming_soon: "ﾂ｡Prﾃｳximamente!"
              },
              topPageTexts: {
                "#top-title-text": "Datos de combate",
                "#top-mypage-text": "Mis resultados",
                "#top-rankmatch-text": "Combates Clasificatorios",
                "#top--internetcompe-text": "Torneos en Lﾃｭnea",
                "#top-regulation-text": "Descarga de reglamentos"
              },
              myresult_topPageTexts: {
                "#title-text": "Mis resultados",
                "#rankmatch-text": "Combates Clasificatorios",
                "#internetcompe-text": "Torneos en Lﾃｭnea",
                "#friendcompe-text": "Torneos amistosos"
              },
              myresult_romselectPageTexts: {
                "#title-text": "Mis resultados",
                "#rankmatch-text": "Selecciﾃｳn de juego"
              },
              myresult_rankmatchPageTexts: {
                "#title-text": "Resultados de los Combates Clasificatorios",
                "#subtitle1-text": "Informaciﾃｳn de la temporada",
                "#sub1_label3": "Detalles de esta temporada",
                "#subtitle2-text": "Resultados de la temporada",
                "#sub2_label1": "Combates Individuales",
                "#sub2_label2": "Combates Dobles",
                "#subtitle3-text": "Combates recientes",
                "#sub3_label1": "Combates Individuales",
                "#sub3_label2": "Combates Dobles"
              },
              my_internetcompetition_listPageTexts: {
                "#title-text": "Torneos en Lﾃｭnea",
                "#subtitle1-text": "Torneos en los que has participado"
              },
              my_internetcompetition_detailPageTexts: {
                "#title-text": "Resultados del Torneo en Lﾃｭnea",
                "#subtitle1-text": "Informaciﾃｳn del torneo",
                "#sub1_label1": "Juegos",
                "#sub1_label2": "Modalidad",
                "#sub1_label3": "N.ﾂｺ de participantes",
                "#sub1_label5": "Detalles del torneo",
                "#sub1_label6": "Resultados del torneo",
                "#subtitle2-text": "Historial de combates",
                "#sub2_label1": "Combates Individuales",
                "#sub2_label2": "Combates Dobles",
                "#subtitle3-text": "Combates recientes",
                "#sub3_label1": "Combates Individuales",
                "#sub3_label2": "Combates Dobles"
              },
              friendcompetition_listPageTexts: {
                "#title-text": "Torneos amistosos",
                "#subtitle1-text": "Torneos en los que has participado",
                ".organizer-label-text": "Anfitriﾃｳn",
                ".joinednum-label-text": "N.ﾂｺ de participantes",
                ".more-button-text": "Ver mﾃ｡s"
              },
              my_friendcompetition_detailPageTexts: {
                "#title-text": "Resultados del torneo amistoso",
                "#subtitle1-text": "Informaciﾃｳn del torneo",
                "#sub_label1": "Descripciﾃｳn del torneo",
                "#sub_label2": "Anfitriﾃｳn",
                "#sub_label3": "Juegos",
                "#sub_label4": "Modalidad",
                "#sub_label5": "N.ﾂｺ de participantes",
                "#sub_label7": "Detalles del torneo",
                "#sub_label8": "Resultados del torneo",
                "#subtitle2-text": "Historial de combates"
              },
              friendcompetition_detailPageTexts: {
                "#title-text": "Detalles del torneo amistoso",
                "#subtitle1-text": "Informaciﾃｳn del torneo",
                "#sub_label1": "Descripciﾃｳn del torneo",
                "#sub_label2": "Anfitriﾃｳn",
                "#sub_label3": "Juegos",
                "#sub_label4": "Modalidad",
                "#sub_label5": "N.ﾂｺ de participantes",
                "#sub1_label13": "Mi clasificaciﾃｳn",
                "#sub1_label9": "Clasificaciﾃｳn de Entrenadores",
                "#sub1_label10": "Clasificaciﾃｳn de Pokﾃｩmon",
                "#regulationLink": "Reglas y consideraciones",
                "#eligiblePokemonLink": "Pokﾃｩmon permitidos"
              },
              rankmatch_detailPageTexts: {
                "#title-text": "Combates Clasificatorios",
                "#subtitle1-text": "Informaciﾃｳn de la temporada",
                "#sub_label2": "N.ﾂｺ de participantes",
                "#sub_label3": "Reglas y consideraciones",
                "#sub_label4": "Pokﾃｩmon permitidos",
                "#sub_label5": "Elegir un Pokﾃｩmon",
                "#sub_label6": "Filtrar",
                "#sub_label7": "Mi clasificaciﾃｳn",
                "#subtitle2-text": "Historial de combates",
                ".trainer-tab-text": "Clasificaciﾃｳn de Entrenadores",
                ".pokemon-tab-text": "Clasificaciﾃｳn de Pokﾃｩmon"
              },
              internetcompetition_listPageTexts: {
                "#title-text": "Torneos en Lﾃｭnea",
                "#sub_label1": "Torneos en Lﾃｭnea pasados",
                "#sub_label2": "Torneos anteriores",
                ".more-button-text": "Ver mﾃ｡s"
              },
              internetcompetition_detailPageTexts: {
                "#title-text": "Detalles del Torneo en Lﾃｭnea",
                "#subtitle1-text": "Informaciﾃｳn del torneo",
                "#sub1_label1": "Juegos",
                "#sub1_label2": "Reglas y consideraciones",
                "#sub1_label3": "Pokﾃｩmon permitidos",
                "#sub1_label4": "Descripciﾃｳn del torneo",
                "#sub1_label5": "N.ﾂｺ de participantes",
                "#sub1_label6": "Juegos",
                "#sub1_label7": "Modalidad",
                "#sub1_label8": "Duraciﾃｳn",
                "#sub1_label9": "Clasificaciﾃｳn de Entrenadores",
                "#sub1_label10": "Clasificaciﾃｳn de Pokﾃｩmon",
                "#sub1_label11": "Elegir un Pokﾃｩmon",
                "#sub1_label12": "Filtrar",
                "#sub1_label13": "Mi clasificaciﾃｳn"
              },
              battle_teamPageTexts: {
                "#title-text": "Equipo de Combate"
              },
              regulation_listPageTexts: {
                "#title-text": "Descarga de reglamentos"
              },
              regulation_pokelistPageTexts: {
                "#title-text": "Pokﾃｩmon permitidos"
              },
              event_calendar: {
                "#title-text": "Calendario de eventos",
                "#option-country": "Regiﾃｳn seleccionada",
                "#sunday": "DO",
                "#monday": "LU",
                "#tuesday": "MA",
                "#wednesday": "MI",
                "#thursday": "JU",
                "#friday": "VI",
                "#saturday": "SA"
              },
              rankmatch_pokemonranking_detailPageTexts: {
                "#title-text": "Combates Clasificatorios",
                "#subtitle1-text": "Estadﾃｭsticas del Pokﾃｩmon",
                ".battle-team-tab-text": "Datos",
                ".when-win-tab-text": "Victorias",
                ".when-lose-tab-text": "Derrotas",
                "kind-tab-battle-team": "Los 10 Pokﾃｩmon con los que mﾃ｡s forma Equipo de Combate",
                "kind-tab-battle-win": "Los 10 Pokﾃｩmon que ha derrotado mﾃ｡s veces",
                "kind-tab-battle-lose": "Los 10 Pokﾃｩmon que lo han debilitado mﾃ｡s veces",
                "kind-tab-battle-waza": "Movimientos",
                "kind-tab-battle-waza-win": "Los 10 movimientos que mﾃ｡s ha usado para ganar",
                "kind-tab-battle-waza-lose": "Los 10 movimientos con los que lo han debilitado mﾃ｡s veces",
                "kind-tab-battle-tokusei": "Habilidad",
                "kind-tab-battle-item": "Objeto",
                "kind-tab-battle-seikaku": "Naturaleza"
              },
              internetcompetition_pokemonranking_detail: {
                "#title-text": "Torneos en Lﾃｭnea",
                "#subtitle1-text": "Estadﾃｭsticas del Pokﾃｩmon",
                ".battle-team-tab-text": "Datos",
                ".when-win-tab-text": "Victorias",
                ".when-lose-tab-text": "Derrotas",
                "kind-tab-battle-team": "Los 10 Pokﾃｩmon con los que mﾃ｡s forma Equipo de Combate",
                "kind-tab-battle-win": "Los 10 Pokﾃｩmon que ha derrotado mﾃ｡s veces",
                "kind-tab-battle-lose": "Los 10 Pokﾃｩmon que lo han debilitado mﾃ｡s veces",
                "kind-tab-battle-waza": "Movimientos",
                "kind-tab-battle-waza-win": "Los 10 movimientos que mﾃ｡s ha usado para ganar",
                "kind-tab-battle-waza-lose": "Los 10 movimientos con los que lo han debilitado mﾃ｡s veces",
                "kind-tab-battle-tokusei": "Habilidad",
                "kind-tab-battle-item": "Objeto",
                "kind-tab-battle-seikaku": "Naturaleza"
              },
              friendcompetition_pokemonranking_detail: {
                "#title-text": "Torneos amistosos",
                "#subtitle1-text": "Estadﾃｭsticas del Pokﾃｩmon",
                ".battle-team-tab-text": "Datos",
                ".when-win-tab-text": "Victorias",
                ".when-lose-tab-text": "Derrotas",
                "kind-tab-battle-team": "Los 10 Pokﾃｩmon con los que mﾃ｡s forma Equipo de Combate",
                "kind-tab-battle-win": "Los 10 Pokﾃｩmon que ha derrotado mﾃ｡s veces",
                "kind-tab-battle-lose": "Los 10 Pokﾃｩmon que lo han debilitado mﾃ｡s veces",
                "kind-tab-battle-waza": "Movimientos",
                "kind-tab-battle-waza-win": "Los 10 movimientos que mﾃ｡s ha usado para ganar",
                "kind-tab-battle-waza-lose": "Los 10 movimientos con los que lo han debilitado mﾃ｡s veces",
                "kind-tab-battle-tokusei": "Habilidad",
                "kind-tab-battle-item": "Objeto",
                "kind-tab-battle-seikaku": "Naturaleza"
              }
            }, this.common = {
              ui_texts: {
                ".winIconText": "VICTORIA",
                ".loseIconText": "DERROTA",
                ".drawIconText": "EMPATE",
                ".joinedNumLabel": "",
                ".periodContainer>.label": "Duraciﾃｳn",
                ".rateLabelContainer>.label": "Puntos",
                competionRule: "Modalidad",
                ".prevButton>.labelContainer>.label": "10 anteriores",
                ".nextButton>.labelContainer>.label": "10 siguientes",
                ".rank-beginner-text": "Nivel Principiante",
                ".rank-monster-text": "Nivel Normal",
                ".rank-super-text": "Nivel Alto",
                ".rank-hyper-text": "Nivel Avanzado",
                ".rank-master-text": "Nivel Maestro",
                ".rental-label-text": "Equipo de Prﾃｩstamo",
                ".buttle-team-button-text": "Ver Equipo de Combate"
              },
              unit: {
                rank: "Puesto: %d",
                win: "Victorias: %d",
                lose: "Derrotas: %d",
                draw: "Empates: %d",
                "season-result": 'Puesto: %d <br /><span class="ranking-result-margin-right">Victorias: %d</span><span class="ranking-result-margin-right">Derrotas: %d</span>Empates: %d',
                "season-result2": '<span class="ranking-result-margin-right">Victorias: %d</span><span class="ranking-result-margin-right">Derrotas: %d</span>Empates: %d',
                "online-result": '<span class="ranking-result-margin-right">Victorias: %d</span><span class="ranking-result-margin-right">Derrotas: %d</span>Empates: %d',
                "friend-result": 'Puesto: %d<br /><span class="ranking-result-margin-right">Victorias: %d</span><span class="ranking-result-margin-right">Derrotas: %d</span>Empates: %d'
              },
              roms: {
                Sw: "Pokﾃｩmon Espada",
                Sh: "Pokﾃｩmon Escudo"
              },
              rule: {
                0: "Combates Individuales",
                1: "Combates Dobles"
              },
              nojoin: "No has participado",
              nowAggr: "Recuento en curso",
              country: {
                100: "ﾃ’rica",
                600: "Norteamﾃｩrica",
                601: "Canadﾃ｡",
                602: "Estados Unidos (norte)",
                603: "Estados Unidos (este)",
                604: "Estados Unidos (oeste)",
                605: "Estados Unidos (sur)",
                699: "Otros",
                700: "Latinoamﾃｩrica",
                701: "Chile",
                702: "Mﾃｩxico",
                703: "Brasil",
                704: "Argentina",
                705: "Bolivia",
                706: "Colombia",
                707: "Paraguay",
                708: "Perﾃｺ",
                709: "Ecuador",
                799: "Otros",
                800: "Oceanﾃｭa",
                801: "Australia",
                802: "Nueva Zelanda",
                899: "Otros",
                300: "Asia-Pacﾃｭfico",
                302: "China",
                303: "Hong Kong",
                304: "Japﾃｳn",
                305: "Corea",
                306: "Malasia",
                307: "Filipinas",
                308: "Singapur",
                309: "Taiwﾃ｡n",
                310: "Tailandia",
                399: "Otros",
                400: "Europa",
                401: "Austria",
                402: "Bﾃｩlgica",
                403: "Francia",
                404: "Alemania",
                405: "Irlanda",
                406: "Italia",
                407: "Holanda",
                408: "Portugal",
                409: "Espaﾃｱa",
                410: "Suiza",
                411: "Reino Unido",
                412: "Dinamarca",
                413: "Finlandia",
                414: "Noruega",
                415: "Suecia",
                416: "Polonia",
                499: "Otros",
                500: "Oriente Medio"
              },
              footerBackLinkLabel: {
                backLinkTop: "Datos de combate",
                backLinkInternetComp: "Torneos en Lﾃｭnea",
                backMyResult: "Mis resultados",
                backMyInternetComp: "Torneos en los que has participado",
                backLinkMyInternetCompDetail: "Resultados del Torneo en Lﾃｭnea",
                backLinkMyRankMatchDetail: "Resultados de los Combates Clasificatorios",
                backLinkMyFriendCompDetail: "Resultados del torneo amistoso",
                backLinkFriendCompList: "Torneos amistosos",
                backLinkRankBattle: "Combates Clasificatorios",
                backLinkFriendComp: "Torneos amistosos"
              },
              rankBattleRankingNoteDialog: {
                title: "ﾂ｡No se puede mostrar tu clasificaciﾃｳn!",
                note1: "Solo se muestran los 1000 primeros clasificados de las<br/>competiciones en curso.<br/>",
                note2: "Debido a que se tarda un tiempo en realizar todos los<br/>cﾃ｡lculos, es posible que la clasificaciﾃｳn que se muestra<br/>no estﾃｩ actualizada.<br/>",
                note3: "Vuelve a consultarla mﾃ｡s tarde."
              },
              dialogMsg: {
                ok: "Cerrar"
              }
            }, this.dex = {
              poke: ["Bulbasaur", "Ivysaur", "Venusaur", "Charmander", "Charmeleon", "Charizard", "Squirtle", "Wartortle", "Blastoise", "Caterpie", "Metapod", "Butterfree", "Weedle", "Kakuna", "Beedrill", "Pidgey", "Pidgeotto", "Pidgeot", "Rattata", "Raticate", "Spearow", "Fearow", "Ekans", "Arbok", "Pikachu", "Raichu", "Sandshrew", "Sandslash", "Nidoran笙", "Nidorina", "Nidoqueen", "Nidoran笙�", "Nidorino", "Nidoking", "Clefairy", "Clefable", "Vulpix", "Ninetales", "Jigglypuff", "Wigglytuff", "Zubat", "Golbat", "Oddish", "Gloom", "Vileplume", "Paras", "Parasect", "Venonat", "Venomoth", "Diglett", "Dugtrio", "Meowth", "Persian", "Psyduck", "Golduck", "Mankey", "Primeape", "Growlithe", "Arcanine", "Poliwag", "Poliwhirl", "Poliwrath", "Abra", "Kadabra", "Alakazam", "Machop", "Machoke", "Machamp", "Bellsprout", "Weepinbell", "Victreebel", "Tentacool", "Tentacruel", "Geodude", "Graveler", "Golem", "Ponyta", "Rapidash", "Slowpoke", "Slowbro", "Magnemite", "Magneton", "Farfetch'd", "Doduo", "Dodrio", "Seel", "Dewgong", "Grimer", "Muk", "Shellder", "Cloyster", "Gastly", "Haunter", "Gengar", "Onix", "Drowzee", "Hypno", "Krabby", "Kingler", "Voltorb", "Electrode", "Exeggcute", "Exeggutor", "Cubone", "Marowak", "Hitmonlee", "Hitmonchan", "Lickitung", "Koffing", "Weezing", "Rhyhorn", "Rhydon", "Chansey", "Tangela", "Kangaskhan", "Horsea", "Seadra", "Goldeen", "Seaking", "Staryu", "Starmie", "Mr. Mime", "Scyther", "Jynx", "Electabuzz", "Magmar", "Pinsir", "Tauros", "Magikarp", "Gyarados", "Lapras", "Ditto", "Eevee", "Vaporeon", "Jolteon", "Flareon", "Porygon", "Omanyte", "Omastar", "Kabuto", "Kabutops", "Aerodactyl", "Snorlax", "Articuno", "Zapdos", "Moltres", "Dratini", "Dragonair", "Dragonite", "Mewtwo", "Mew", "Chikorita", "Bayleef", "Meganium", "Cyndaquil", "Quilava", "Typhlosion", "Totodile", "Croconaw", "Feraligatr", "Sentret", "Furret", "Hoothoot", "Noctowl", "Ledyba", "Ledian", "Spinarak", "Ariados", "Crobat", "Chinchou", "Lanturn", "Pichu", "Cleffa", "Igglybuff", "Togepi", "Togetic", "Natu", "Xatu", "Mareep", "Flaaffy", "Ampharos", "Bellossom", "Marill", "Azumarill", "Sudowoodo", "Politoed", "Hoppip", "Skiploom", "Jumpluff", "Aipom", "Sunkern", "Sunflora", "Yanma", "Wooper", "Quagsire", "Espeon", "Umbreon", "Murkrow", "Slowking", "Misdreavus", "Unown", "Wobbuffet", "Girafarig", "Pineco", "Forretress", "Dunsparce", "Gligar", "Steelix", "Snubbull", "Granbull", "Qwilfish", "Scizor", "Shuckle", "Heracross", "Sneasel", "Teddiursa", "Ursaring", "Slugma", "Magcargo", "Swinub", "Piloswine", "Corsola", "Remoraid", "Octillery", "Delibird", "Mantine", "Skarmory", "Houndour", "Houndoom", "Kingdra", "Phanpy", "Donphan", "Porygon2", "Stantler", "Smeargle", "Tyrogue", "Hitmontop", "Smoochum", "Elekid", "Magby", "Miltank", "Blissey", "Raikou", "Entei", "Suicune", "Larvitar", "Pupitar", "Tyranitar", "Lugia", "Ho-Oh", "Celebi", "Treecko", "Grovyle", "Sceptile", "Torchic", "Combusken", "Blaziken", "Mudkip", "Marshtomp", "Swampert", "Poochyena", "Mightyena", "Zigzagoon", "Linoone", "Wurmple", "Silcoon", "Beautifly", "Cascoon", "Dustox", "Lotad", "Lombre", "Ludicolo", "Seedot", "Nuzleaf", "Shiftry", "Taillow", "Swellow", "Wingull", "Pelipper", "Ralts", "Kirlia", "Gardevoir", "Surskit", "Masquerain", "Shroomish", "Breloom", "Slakoth", "Vigoroth", "Slaking", "Nincada", "Ninjask", "Shedinja", "Whismur", "Loudred", "Exploud", "Makuhita", "Hariyama", "Azurill", "Nosepass", "Skitty", "Delcatty", "Sableye", "Mawile", "Aron", "Lairon", "Aggron", "Meditite", "Medicham", "Electrike", "Manectric", "Plusle", "Minun", "Volbeat", "Illumise", "Roselia", "Gulpin", "Swalot", "Carvanha", "Sharpedo", "Wailmer", "Wailord", "Numel", "Camerupt", "Torkoal", "Spoink", "Grumpig", "Spinda", "Trapinch", "Vibrava", "Flygon", "Cacnea", "Cacturne", "Swablu", "Altaria", "Zangoose", "Seviper", "Lunatone", "Solrock", "Barboach", "Whiscash", "Corphish", "Crawdaunt", "Baltoy", "Claydol", "Lileep", "Cradily", "Anorith", "Armaldo", "Feebas", "Milotic", "Castform", "Kecleon", "Shuppet", "Banette", "Duskull", "Dusclops", "Tropius", "Chimecho", "Absol", "Wynaut", "Snorunt", "Glalie", "Spheal", "Sealeo", "Walrein", "Clamperl", "Huntail", "Gorebyss", "Relicanth", "Luvdisc", "Bagon", "Shelgon", "Salamence", "Beldum", "Metang", "Metagross", "Regirock", "Regice", "Registeel", "Latias", "Latios", "Kyogre", "Groudon", "Rayquaza", "Jirachi", "Deoxys", "Turtwig", "Grotle", "Torterra", "Chimchar", "Monferno", "Infernape", "Piplup", "Prinplup", "Empoleon", "Starly", "Staravia", "Staraptor", "Bidoof", "Bibarel", "Kricketot", "Kricketune", "Shinx", "Luxio", "Luxray", "Budew", "Roserade", "Cranidos", "Rampardos", "Shieldon", "Bastiodon", "Burmy", "Wormadam", "Mothim", "Combee", "Vespiquen", "Pachirisu", "Buizel", "Floatzel", "Cherubi", "Cherrim", "Shellos", "Gastrodon", "Ambipom", "Drifloon", "Drifblim", "Buneary", "Lopunny", "Mismagius", "Honchkrow", "Glameow", "Purugly", "Chingling", "Stunky", "Skuntank", "Bronzor", "Bronzong", "Bonsly", "Mime Jr.", "Happiny", "Chatot", "Spiritomb", "Gible", "Gabite", "Garchomp", "Munchlax", "Riolu", "Lucario", "Hippopotas", "Hippowdon", "Skorupi", "Drapion", "Croagunk", "Toxicroak", "Carnivine", "Finneon", "Lumineon", "Mantyke", "Snover", "Abomasnow", "Weavile", "Magnezone", "Lickilicky", "Rhyperior", "Tangrowth", "Electivire", "Magmortar", "Togekiss", "Yanmega", "Leafeon", "Glaceon", "Gliscor", "Mamoswine", "Porygon-Z", "Gallade", "Probopass", "Dusknoir", "Froslass", "Rotom", "Uxie", "Mesprit", "Azelf", "Dialga", "Palkia", "Heatran", "Regigigas", "Giratina", "Cresselia", "Phione", "Manaphy", "Darkrai", "Shaymin", "Arceus", "Victini", "Snivy", "Servine", "Serperior", "Tepig", "Pignite", "Emboar", "Oshawott", "Dewott", "Samurott", "Patrat", "Watchog", "Lillipup", "Herdier", "Stoutland", "Purrloin", "Liepard", "Pansage", "Simisage", "Pansear", "Simisear", "Panpour", "Simipour", "Munna", "Musharna", "Pidove", "Tranquill", "Unfezant", "Blitzle", "Zebstrika", "Roggenrola", "Boldore", "Gigalith", "Woobat", "Swoobat", "Drilbur", "Excadrill", "Audino", "Timburr", "Gurdurr", "Conkeldurr", "Tympole", "Palpitoad", "Seismitoad", "Throh", "Sawk", "Sewaddle", "Swadloon", "Leavanny", "Venipede", "Whirlipede", "Scolipede", "Cottonee", "Whimsicott", "Petilil", "Lilligant", "Basculin", "Sandile", "Krokorok", "Krookodile", "Darumaka", "Darmanitan", "Maractus", "Dwebble", "Crustle", "Scraggy", "Scrafty", "Sigilyph", "Yamask", "Cofagrigus", "Tirtouga", "Carracosta", "Archen", "Archeops", "Trubbish", "Garbodor", "Zorua", "Zoroark", "Minccino", "Cinccino", "Gothita", "Gothorita", "Gothitelle", "Solosis", "Duosion", "Reuniclus", "Ducklett", "Swanna", "Vanillite", "Vanillish", "Vanilluxe", "Deerling", "Sawsbuck", "Emolga", "Karrablast", "Escavalier", "Foongus", "Amoonguss", "Frillish", "Jellicent", "Alomomola", "Joltik", "Galvantula", "Ferroseed", "Ferrothorn", "Klink", "Klang", "Klinklang", "Tynamo", "Eelektrik", "Eelektross", "Elgyem", "Beheeyem", "Litwick", "Lampent", "Chandelure", "Axew", "Fraxure", "Haxorus", "Cubchoo", "Beartic", "Cryogonal", "Shelmet", "Accelgor", "Stunfisk", "Mienfoo", "Mienshao", "Druddigon", "Golett", "Golurk", "Pawniard", "Bisharp", "Bouffalant", "Rufflet", "Braviary", "Vullaby", "Mandibuzz", "Heatmor", "Durant", "Deino", "Zweilous", "Hydreigon", "Larvesta", "Volcarona", "Cobalion", "Terrakion", "Virizion", "Tornadus", "Thundurus", "Reshiram", "Zekrom", "Landorus", "Kyurem", "Keldeo", "Meloetta", "Genesect", "Chespin", "Quilladin", "Chesnaught", "Fennekin", "Braixen", "Delphox", "Froakie", "Frogadier", "Greninja", "Bunnelby", "Diggersby", "Fletchling", "Fletchinder", "Talonflame", "Scatterbug", "Spewpa", "Vivillon", "Litleo", "Pyroar", "Flabﾃｩbﾃｩ", "Floette", "Florges", "Skiddo", "Gogoat", "Pancham", "Pangoro", "Furfrou", "Espurr", "Meowstic", "Honedge", "Doublade", "Aegislash", "Spritzee", "Aromatisse", "Swirlix", "Slurpuff", "Inkay", "Malamar", "Binacle", "Barbaracle", "Skrelp", "Dragalge", "Clauncher", "Clawitzer", "Helioptile", "Heliolisk", "Tyrunt", "Tyrantrum", "Amaura", "Aurorus", "Sylveon", "Hawlucha", "Dedenne", "Carbink", "Goomy", "Sliggoo", "Goodra", "Klefki", "Phantump", "Trevenant", "Pumpkaboo", "Gourgeist", "Bergmite", "Avalugg", "Noibat", "Noivern", "Xerneas", "Yveltal", "Zygarde", "Diancie", "Hoopa", "Volcanion", "Rowlet", "Dartrix", "Decidueye", "Litten", "Torracat", "Incineroar", "Popplio", "Brionne", "Primarina", "Pikipek", "Trumbeak", "Toucannon", "Yungoos", "Gumshoos", "Grubbin", "Charjabug", "Vikavolt", "Crabrawler", "Crabominable", "Oricorio", "Cutiefly", "Ribombee", "Rockruff", "Lycanroc", "Wishiwashi", "Mareanie", "Toxapex", "Mudbray", "Mudsdale", "Dewpider", "Araquanid", "Fomantis", "Lurantis", "Morelull", "Shiinotic", "Salandit", "Salazzle", "Stufful", "Bewear", "Bounsweet", "Steenee", "Tsareena", "Comfey", "Oranguru", "Passimian", "Wimpod", "Golisopod", "Sandygast", "Palossand", "Pyukumuku", "Cﾃｳdigo Cero", "Silvally", "Minior", "Komala", "Turtonator", "Togedemaru", "Mimikyu", "Bruxish", "Drampa", "Dhelmise", "Jangmo-o", "Hakamo-o", "Kommo-o", "Tapu Koko", "Tapu Lele", "Tapu Bulu", "Tapu Fini", "Cosmog", "Cosmoem", "Solgaleo", "Lunala", "Nihilego", "Buzzwole", "Pheromosa", "Xurkitree", "Celesteela", "Kartana", "Guzzlord", "Necrozma", "Magearna", "Marshadow", "Poipole", "Naganadel", "Stakataka", "Blacephalon", "Zeraora", "Meltan", "Melmetal", "Grookey", "Thwackey", "Rillaboom", "Scorbunny", "Raboot", "Cinderace", "Sobble", "Drizzile", "Inteleon", "Skwovet", "Greedent", "Rookidee", "Corvisquire", "Corviknight", "Blipbug", "Dottler", "Orbeetle", "Nickit", "Thievul", "Gossifleur", "Eldegoss", "Wooloo", "Dubwool", "Chewtle", "Drednaw", "Yamper", "Boltund", "Rolycoly", "Carkol", "Coalossal", "Applin", "Flapple", "Appletun", "Silicobra", "Sandaconda", "Cramorant", "Arrokuda", "Barraskewda", "Toxel", "Toxtricity", "Sizzlipede", "Centiskorch", "Clobbopus", "Grapploct", "Sinistea", "Polteageist", "Hatenna", "Hattrem", "Hatterene", "Impidimp", "Morgrem", "Grimmsnarl", "Obstagoon", "Perrserker", "Cursola", "Sirfetch'd", "Mr. Rime", "Runerigus", "Milcery", "Alcremie", "Falinks", "Pincurchin", "Snom", "Frosmoth", "Stonjourner", "Eiscue", "Indeedee", "Morpeko", "Cufant", "Copperajah", "Dracozolt", "Arctozolt", "Dracovish", "Arctovish", "Duraludon", "Dreepy", "Drakloak", "Dragapult", "Zacian", "Zamazenta", "Eternatus", "Kubfu", "Urshifu", "Zarude", "Regieleki", "Regidrago", "Glastrier", "Spectrier", "Calyrex", "Wyrdeer", "Kleavor", "Ursaluna", "Basculegion", "Sneasler", "Overqwil", "Enamorus", "Sprigatito", "Floragato", "Meowscarada", "Fuecoco", "Crocalor", "Skeledirge", "Quaxly", "Quaxwell", "Quaquaval", "Lechonk", "Oinkologne", "Tarountula", "Spidops", "Nymble", "Lokix", "Pawmi", "Pawmo", "Pawmot", "Tandemaus", "Maushold", "Fidough", "Dachsbun", "Smoliv", "Dolliv", "Arboliva", "Squawkabilly", "Nacli", "Naclstack", "Garganacl", "Charcadet", "Armarouge", "Ceruledge", "Tadbulb", "Bellibolt", "Wattrel", "Kilowattrel", "Maschiff", "Mabosstiff", "Shroodle", "Grafaiai", "Bramblin", "Brambleghast", "Toedscool", "Toedscruel", "Klawf", "Capsakid", "Scovillain", "Rellor", "Rabsca", "Flittle", "Espathra", "Tinkatink", "Tinkatuff", "Tinkaton", "Wiglett", "Wugtrio", "Bombirdier", "Finizen", "Palafin", "Varoom", "Revavroom", "Cyclizar", "Orthworm", "Glimmet", "Glimmora", "Greavard", "Houndstone", "Flamigo", "Cetoddle", "Cetitan", "Veluza", "Dondozo", "Tatsugiri", "Annihilape", "Clodsire", "Farigiraf", "Dudunsparce", "Kingambit", "Colmilargo", "Colagrito", "Furioseta", "Melenaleteo", "Reptalada", "Pelarena", "Ferrodada", "Ferrosaco", "Ferropalmas", "Ferrocuello", "Ferropolilla", "Ferropﾃｺas", "Frigibax", "Arctibax", "Baxcalibur", "Gimmighoul", "Gholdengo", "Wo-Chien", "Chien-Pao", "Ting-Lu", "Chi-Yu", "Bramaluna", "Ferropaladﾃｭn", "Koraidon", "Miraidon", "Ondulagua", "Ferroverdor", "Dipplin", "Poltchageist", "Sinistcha", "Okidogi", "Munkidori", "Fezandipiti", "Ogerpon"],
              pokeType: ["Normal", "Lucha", "Volador", "Veneno", "Tierra", "Roca", "Bicho", "Fantasma", "Acero", "Fuego", "Agua", "Planta", "Elﾃｩctrico", "Psﾃｭquico", "Hielo", "Dragﾃｳn", "Siniestro", "Hada"],
              waza: {
                1: "Destructor",
                2: "Golpe Kﾃ｡rate",
                3: "Doble Bofetﾃｳn",
                4: "Puﾃｱo Cometa",
                5: "Megapuﾃｱo",
                6: "Dﾃｭa de Pago",
                7: "Puﾃｱo Fuego",
                8: "Puﾃｱo Hielo",
                9: "Puﾃｱo Trueno",
                10: "Araﾃｱazo",
                11: "Agarre",
                12: "Guillotina",
                13: "Viento Cortante",
                14: "Danza Espada",
                15: "Corte",
                16: "Tornado",
                17: "Ataque Ala",
                18: "Remolino",
                19: "Vuelo",
                20: "Atadura",
                21: "Atizar",
                22: "Lﾃ｡tigo Cepa",
                23: "Pisotﾃｳn",
                24: "Doble Patada",
                25: "Megapatada",
                26: "Patada Salto",
                27: "Patada Giro",
                28: "Ataque Arena",
                29: "Golpe Cabeza",
                30: "Cornada",
                31: "Ataque Furia",
                32: "Perforador",
                33: "Placaje",
                34: "Golpe Cuerpo",
                35: "Constricciﾃｳn",
                36: "Derribo",
                37: "Saﾃｱa",
                38: "Doble Filo",
                39: "Lﾃ｡tigo",
                40: "Picotazo Veneno",
                41: "Doble Ataque",
                42: "Pin Misil",
                43: "Malicioso",
                44: "Mordisco",
                45: "Gruﾃｱido",
                46: "Rugido",
                47: "Canto",
                48: "Supersﾃｳnico",
                49: "Bomba Sﾃｳnica",
                50: "Anulaciﾃｳn",
                51: "ﾃ…ido",
                52: "Ascuas",
                53: "Lanzallamas",
                54: "Neblina",
                55: "Pistola Agua",
                56: "Hidrobomba",
                57: "Surf",
                58: "Rayo Hielo",
                59: "Ventisca",
                60: "Psicorrayo",
                61: "Rayo Burbuja",
                62: "Rayo Aurora",
                63: "Hiperrayo",
                64: "Picotazo",
                65: "Pico Taladro",
                66: "Sumisiﾃｳn",
                67: "Patada Baja",
                68: "Contraataque",
                69: "Sﾃｭsmico",
                70: "Fuerza",
                71: "Absorber",
                72: "Megaagotar",
                73: "Drenadoras",
                74: "Desarrollo",
                75: "Hoja Afilada",
                76: "Rayo Solar",
                77: "Polvo Veneno",
                78: "Paralizador",
                79: "Somnﾃｭfero",
                80: "Danza Pﾃｩtalo",
                81: "Disparo Demora",
                82: "Furia Dragﾃｳn",
                83: "Giro Fuego",
                84: "Impactrueno",
                85: "Rayo",
                86: "Onda Trueno",
                87: "Trueno",
                88: "Lanzarrocas",
                89: "Terremoto",
                90: "Fisura",
                91: "Excavar",
                92: "Tﾃｳxico",
                93: "Confusiﾃｳn",
                94: "Psﾃｭquico",
                95: "Hipnosis",
                96: "Meditaciﾃｳn",
                97: "Agilidad",
                98: "Ataque Rﾃ｡pido",
                99: "Furia",
                100: "Teletransporte",
                101: "Tinieblas",
                102: "Mimﾃｩtico",
                103: "Chirrido",
                104: "Doble Equipo",
                105: "Recuperaciﾃｳn",
                106: "Fortaleza",
                107: "Reducciﾃｳn",
                108: "Pantalla de Humo",
                109: "Rayo Confuso",
                110: "Refugio",
                111: "Rizo Defensa",
                112: "Barrera",
                113: "Pantalla de Luz",
                114: "Niebla",
                115: "Reflejo",
                116: "Foco Energﾃｭa",
                117: "Venganza",
                118: "Metrﾃｳnomo",
                119: "Espejo",
                120: "Autodestrucciﾃｳn",
                121: "Bomba Huevo",
                122: "Lengﾃｼetazo",
                123: "Poluciﾃｳn",
                124: "Residuos",
                125: "Hueso Palo",
                126: "Llamarada",
                127: "Cascada",
                128: "Tenaza",
                129: "Meteoros",
                130: "Cabezazo",
                131: "Clavo Caﾃｱﾃｳn",
                132: "Restricciﾃｳn",
                133: "Amnesia",
                134: "Kinﾃｩtico",
                135: "Ovocuraciﾃｳn",
                136: "Pat. Salto Alta",
                137: "Deslumbrar",
                138: "Comesueﾃｱos",
                139: "Gas Venenoso",
                140: "Bombardeo",
                141: "Chupavidas",
                142: "Beso Amoroso",
                143: "Ataque Aﾃｩreo",
                144: "Transformaciﾃｳn",
                145: "Burbuja",
                146: "Puﾃｱo Mareo",
                147: "Espora",
                148: "Destello",
                149: "Psicoonda",
                150: "Salpicadura",
                151: "Armadura ﾃ…ida",
                152: "Martillazo",
                153: "Explosiﾃｳn",
                154: "Golpes Furia",
                155: "Huesomerang",
                156: "Descanso",
                157: "Avalancha",
                158: "Hipercolmillo",
                159: "Afilar",
                160: "Conversiﾃｳn",
                161: "Triataque",
                162: "Superdiente",
                163: "Cuchillada",
                164: "Sustituto",
                165: "Forcejeo",
                166: "Esquema",
                167: "Triple Patada",
                168: "Ladrﾃｳn",
                169: "Telaraﾃｱa",
                170: "Telﾃｩpata",
                171: "Pesadilla",
                172: "Rueda Fuego",
                173: "Ronquido",
                174: "Maldiciﾃｳn",
                175: "Azote",
                176: "Conversiﾃｳn2",
                177: "Aerochorro",
                178: "Esporagodﾃｳn",
                179: "Inversiﾃｳn",
                180: "Rencor",
                181: "Nieve Polvo",
                182: "Protecciﾃｳn",
                183: "Ultrapuﾃｱo",
                184: "Cara Susto",
                185: "Finta",
                186: "Beso Dulce",
                187: "Tambor",
                188: "Bomba Lodo",
                189: "Bofetﾃｳn Lodo",
                190: "Pulpocaﾃｱﾃｳn",
                191: "Pﾃｺas",
                192: "Electrocaﾃｱﾃｳn",
                193: "Profecﾃｭa",
                194: "Mismo Destino",
                195: "Canto Mortal",
                196: "Viento Hielo",
                197: "Detecciﾃｳn",
                198: "Ataque ﾃ都eo",
                199: "Fijar Blanco",
                200: "Enfado",
                201: "Tormenta Arena",
                202: "Gigadrenado",
                203: "Aguante",
                204: "Encanto",
                205: "Rodar",
                206: "Falso Tortazo",
                207: "Contoneo",
                208: "Batido",
                209: "Chispa",
                210: "Corte Furia",
                211: "Ala de Acero",
                212: "Mal de Ojo",
                213: "Atracciﾃｳn",
                214: "Sonﾃ｡mbulo",
                215: "Cascabel Cura",
                216: "Retribuciﾃｳn",
                217: "Presente",
                218: "Frustraciﾃｳn",
                219: "Velo Sagrado",
                220: "Divide Dolor",
                221: "Fuego Sagrado",
                222: "Magnitud",
                223: "Puﾃｱo Dinﾃ｡mico",
                224: "Megacuerno",
                225: "Dragoaliento",
                226: "Relevo",
                227: "Otra Vez",
                228: "Persecuciﾃｳn",
                229: "Giro Rﾃ｡pido",
                230: "Dulce Aroma",
                231: "Cola Fﾃｩrrea",
                232: "Garra Metal",
                233: "Llave Vital",
                234: "Sol Matinal",
                235: "Sﾃｭntesis",
                236: "Luz Lunar",
                237: "Poder Oculto",
                238: "Tajo Cruzado",
                239: "Ciclﾃｳn",
                240: "Danza Lluvia",
                241: "Dﾃｭa Soleado",
                242: "Triturar",
                243: "Manto Espejo",
                244: "Autosugestiﾃｳn",
                245: "Veloc. Extrema",
                246: "Poder Pasado",
                247: "Bola Sombra",
                248: "Premoniciﾃｳn",
                249: "Golpe Roca",
                250: "Torbellino",
                251: "Paliza",
                252: "Sorpresa",
                253: "Alboroto",
                254: "Reserva",
                255: "Escupir",
                256: "Tragar",
                257: "Onda ﾃ紅nea",
                258: "Granizo",
                259: "Tormento",
                260: "Camelo",
                261: "Fuego Fatuo",
                262: "Legado",
                263: "Imagen",
                264: "Puﾃｱo Certero",
                265: "Estﾃｭmulo",
                266: "Seﾃｱuelo",
                267: "Adaptaciﾃｳn",
                268: "Carga",
                269: "Mofa",
                270: "Refuerzo",
                271: "Truco",
                272: "Imitaciﾃｳn",
                273: "Deseo",
                274: "Ayuda",
                275: "Arraigo",
                276: "Fuerza Bruta",
                277: "Capa Mﾃ｡gica",
                278: "Reciclaje",
                279: "Desquite",
                280: "Demoliciﾃｳn",
                281: "Bostezo",
                282: "Desarme",
                283: "Esfuerzo",
                284: "Estallido",
                285: "Intercambio",
                286: "Sellar",
                287: "Alivio",
                288: "Rabia",
                289: "Robo",
                290: "Daﾃｱo Secreto",
                291: "Buceo",
                292: "Empujﾃｳn",
                293: "Camuflaje",
                294: "Luminicola",
                295: "Resplandor",
                296: "Bola Neblina",
                297: "Danza Pluma",
                298: "Danza Caos",
                299: "Patada ﾃ紅nea",
                300: "Chapoteo Lodo",
                301: "Bola Hielo",
                302: "Brazo Pincho",
                303: "Relajo",
                304: "Vozarrﾃｳn",
                305: "Colmillo Veneno",
                306: "Garra Brutal",
                307: "Anillo ﾃ紅neo",
                308: "Hidrocaﾃｱﾃｳn",
                309: "Puﾃｱo Meteoro",
                310: "Impresionar",
                311: "Meteorobola",
                312: "Aromaterapia",
                313: "Llanto Falso",
                314: "Aire Afilado",
                315: "Sofoco",
                316: "Rastreo",
                317: "Tumba Rocas",
                318: "Viento Plata",
                319: "Eco Metﾃ｡lico",
                320: "Silbato",
                321: "Cosquillas",
                322: "Masa Cﾃｳsmica",
                323: "Salpicar",
                324: "Rayo Seﾃｱal",
                325: "Puﾃｱo Sombra",
                326: "Paranormal",
                327: "Gancho Alto",
                328: "Bucle Arena",
                329: "Frﾃｭo Polar",
                330: "Agua Lodosa",
                331: "Semilladora",
                332: "Golpe Aﾃｩreo",
                333: "Carﾃ｡mbano",
                334: "Defensa Fﾃｩrrea",
                335: "Bloqueo",
                336: "Aullido",
                337: "Garra Dragﾃｳn",
                338: "Planta Feroz",
                339: "Corpulencia",
                340: "Bote",
                341: "Disparo Lodo",
                342: "Cola Veneno",
                343: "Antojo",
                344: "Placaje Elﾃｩc",
                345: "Hoja Mﾃ｡gica",
                346: "Hidrochorro",
                347: "Paz Mental",
                348: "Hoja Aguda",
                349: "Danza Dragﾃｳn",
                350: "Pedrada",
                351: "Onda Voltio",
                352: "Hidropulso",
                353: "Deseo Oculto",
                354: "Psicoataque",
                355: "Respiro",
                356: "Gravedad",
                357: "Gran Ojo",
                358: "Espabila",
                359: "Machada",
                360: "Giro Bola",
                361: "Deseo Cura",
                362: "Salmuera",
                363: "Don Natural",
                364: "Amago",
                365: "Picoteo",
                366: "Viento Afﾃｭn",
                367: "Acupresiﾃｳn",
                368: "Represiﾃｳn Metal",
                369: "Ida y Vuelta",
                370: "A Bocajarro",
                371: "Vendetta",
                372: "Buena Baza",
                373: "Embargo",
                374: "Lanzamiento",
                375: "Psicocambio",
                376: "As Oculto",
                377: "Anticura",
                378: "Estrujﾃｳn",
                379: "Truco Fuerza",
                380: "Bilis",
                381: "Conjuro",
                382: "Yo Primero",
                383: "Copiﾃｳn",
                384: "Cambiafuerza",
                385: "Cambiadefensa",
                386: "Castigo",
                387: "ﾃ嗟tima Baza",
                388: "Abatidoras",
                389: "Golpe Bajo",
                390: "Pﾃｺas Tﾃｳxicas",
                391: "Cambiaalmas",
                392: "Acua Aro",
                393: "Levitﾃｳn",
                394: "Envite ﾃ紅neo",
                395: "Palmeo",
                396: "Esfera Aural",
                397: "Pulimento",
                398: "Puya Nociva",
                399: "Pulso Umbrﾃｭo",
                400: "Tajo Umbrﾃｭo",
                401: "Acua Cola",
                402: "Bomba Germen",
                403: "Tajo Aﾃｩreo",
                404: "Tijera X",
                405: "Zumbido",
                406: "Pulso Dragﾃｳn",
                407: "Carga Dragﾃｳn",
                408: "Joya de Luz",
                409: "Puﾃｱo Drenaje",
                410: "Onda Vacﾃｭo",
                411: "Onda Certera",
                412: "Energibola",
                413: "Pﾃ｡jaro Osado",
                414: "Tierra Viva",
                415: "Trapicheo",
                416: "Gigaimpacto",
                417: "Maquinaciﾃｳn",
                418: "Puﾃｱo Bala",
                419: "Alud",
                420: "Esquirla Helada",
                421: "Garra Umbrﾃｭa",
                422: "Colmillo Rayo",
                423: "Colmillo Hielo",
                424: "Colmillo ﾃ紅neo",
                425: "Sombra Vil",
                426: "Bomba Fango",
                427: "Psicocorte",
                428: "Cabezazo Zen",
                429: "Disparo Espejo",
                430: "Foco Resplandor",
                431: "Treparrocas",
                432: "Despejar",
                433: "Espacio Raro",
                434: "Cometa Draco",
                435: "Chispazo",
                436: "Humareda",
                437: "Lluevehojas",
                438: "Latigazo",
                439: "Romperrocas",
                440: "Veneno X",
                441: "Lanzamugre",
                442: "Cabeza de Hierro",
                443: "Bomba Imﾃ｡n",
                444: "Roca Afilada",
                445: "Seducciﾃｳn",
                446: "Trampa Rocas",
                447: "Hierba Lazo",
                448: "Chﾃ｡chara",
                449: "Sentencia",
                450: "Picadura",
                451: "Rayo Carga",
                452: "Mazazo",
                453: "Acua Jet",
                454: "Al Ataque",
                455: "A Defender",
                456: "Auxilio",
                457: "Testarazo",
                458: "Doble Golpe",
                459: "Distorsiﾃｳn",
                460: "Corte Vacﾃｭo",
                461: "Danza Lunar",
                462: "Agarrﾃｳn",
                463: "Lluvia ﾃ紅nea",
                464: "Brecha Negra",
                465: "Fulgor Semilla",
                466: "Viento Aciago",
                467: "Golpe Umbrﾃｭo",
                468: "Afilagarras",
                469: "Vasta Guardia",
                470: "Isoguardia",
                471: "Isofuerza",
                472: "Zona Extraﾃｱa",
                473: "Psicocarga",
                474: "Carga Tﾃｳxica",
                475: "Aligerar",
                476: "Polvo Ira",
                477: "Telequinesis",
                478: "Zona Mﾃ｡gica",
                479: "Antiaﾃｩreo",
                480: "Llave Corsﾃｩ",
                481: "Pirotecnia",
                482: "Onda Tﾃｳxica",
                483: "Danza Aleteo",
                484: "Cuerpo Pesado",
                485: "Sincrorruido",
                486: "Bola Voltio",
                487: "Empapar",
                488: "Nitrocarga",
                489: "Enrosque",
                490: "Puntapiﾃｩ",
                491: "Bomba ﾃ…ida",
                492: "Juego Sucio",
                493: "Onda Simple",
                494: "Danza Amiga",
                495: "Cede Paso",
                496: "Canon",
                497: "Eco Voz",
                498: "Guardia Baja",
                499: "Niebla Clara",
                500: "Poder Reserva",
                501: "Anticipo",
                502: "Cambio de Banda",
                503: "Escaldar",
                504: "Rompecoraza",
                505: "Pulso Cura",
                506: "Infortunio",
                507: "Caﾃｭda Libre",
                508: "Cambio de Marcha",
                509: "Llave Giro",
                510: "Calcinaciﾃｳn",
                511: "ﾃ嗟timo Lugar",
                512: "Acrﾃｳbata",
                513: "Clonatipo",
                514: "Represalia",
                515: "Sacrificio",
                516: "Ofrenda",
                517: "Infierno",
                518: "Voto Agua",
                519: "Voto Fuego",
                520: "Voto Planta",
                521: "Voltiocambio",
                522: "Estoicismo",
                523: "Terratemblor",
                524: "Vaho Gﾃｩlido",
                525: "Cola Dragﾃｳn",
                526: "Avivar",
                527: "Electrotela",
                528: "Voltio Cruel",
                529: "Taladradora",
                530: "Golpe Bis",
                531: "Arrumaco",
                532: "Asta Drenaje",
                533: "Espada Santa",
                534: "Concha Filo",
                535: "Golpe Calor",
                536: "Ciclﾃｳn de Hojas",
                537: "Rodillo de Pﾃｺas",
                538: "Rizo Algodﾃｳn",
                539: "Pulso Noche",
                540: "Onda Mental",
                541: "Plumerazo",
                542: "Vendaval",
                543: "Ariete",
                544: "Rueda Doble",
                545: "Bomba ﾃ紅nea",
                546: "Tecno Shock",
                547: "Canto Arcaico",
                548: "Sable Mﾃｭstico",
                549: "Mundo Gﾃｩlido",
                550: "Ataque Fulgor",
                551: "Llama Azul",
                552: "Danza Llama",
                553: "Rayo Gﾃｩlido",
                554: "Llama Gﾃｩlida",
                555: "Alarido",
                556: "Chuzos",
                557: "V de Fuego",
                558: "Llama Fusiﾃｳn",
                559: "Rayo Fusiﾃｳn",
                560: "Plancha Voladora",
                561: "Escudo Tatami",
                562: "Eructo",
                563: "Fertilizante",
                564: "Red Viscosa",
                565: "Aguijﾃｳn Letal",
                566: "Golpe Fantasma",
                567: "Halloween",
                568: "Rugido de Guerra",
                569: "Cortina Plasma",
                570: "Carga Parﾃ｡bola",
                571: "Condena Silvana",
                572: "Tormenta Floral",
                573: "Liofilizaciﾃｳn",
                574: "Voz Cautivadora",
                575: "ﾃ嗟tima Palabra",
                576: "Reversiﾃｳn",
                577: "Beso Drenaje",
                578: "Truco Defensa",
                579: "Defensa Floral",
                580: "Campo de Hierba",
                581: "Campo de Niebla",
                582: "Electrificaciﾃｳn",
                583: "Carantoﾃｱa",
                584: "Viento Feﾃｩrico",
                585: "Fuerza Lunar",
                586: "Estruendo",
                587: "Cerrojo Feﾃｩrico",
                588: "Escudo Real",
                589: "Camaraderﾃｭa",
                590: "Confidencia",
                591: "Torm. Diamantes",
                592: "Chorro de Vapor",
                593: "Paso Dimensional",
                594: "Shuriken de Agua",
                595: "Llama Embrujada",
                596: "Barrera Espinosa",
                597: "Niebla Aromﾃ｡tica",
                598: "Onda Anﾃｳmala",
                599: "Trampa Venenosa",
                600: "Polvo Explosivo",
                601: "Geocontrol",
                602: "Aura Magnﾃｩtica",
                603: "Paga Extra",
                604: "Campo Elﾃｩctrico",
                605: "Brillo Mﾃ｡gico",
                606: "Celebraciﾃｳn",
                607: "Manos Juntas",
                608: "Ojitos Tiernos",
                609: "Moflete Estﾃ｡tico",
                610: "Clemencia",
                611: "Acoso",
                612: "Puﾃｱo Incremento",
                613: "Ala Mortﾃｭfera",
                614: "Mil Flechas",
                615: "Mil Temblores",
                616: "Fuerza Telﾃｺrica",
                617: "Luz Aniquiladora",
                618: "Pulso Primigenio",
                619: "Filo del Abismo",
                620: "Ascenso Draco",
                621: "Cerco Dimensiﾃｳn",
                622: "Carrera Arrolladora",
                623: "Carrera Arrolladora",
                624: "Rﾃ｡faga Demoledora",
                625: "Rﾃ｡faga Demoledora",
                626: "Picado Supersﾃｳnico",
                627: "Picado Supersﾃｳnico",
                628: "Diluvio Corrosivo",
                629: "Diluvio Corrosivo",
                630: "Barrena Telﾃｺrica",
                631: "Barrena Telﾃｺrica",
                632: "Aplastamiento Gigalﾃｭtico",
                633: "Aplastamiento Gigalﾃｭtico",
                634: "Guadaﾃｱa Sedosa",
                635: "Guadaﾃｱa Sedosa",
                636: "Presa Espectral",
                637: "Presa Espectral",
                638: "Hﾃｩlice Trepanadora",
                639: "Hﾃｩlice Trepanadora",
                640: "Hecatombe Pﾃｭrica",
                641: "Hecatombe Pﾃｭrica",
                642: "Hidrovﾃｳrtice Abisal",
                643: "Hidrovﾃｳrtice Abisal",
                644: "Megatﾃｳn Floral",
                645: "Megatﾃｳn Floral",
                646: "Gigavoltio Destructor",
                647: "Gigavoltio Destructor",
                648: "Disruptor Psﾃｭquico",
                649: "Disruptor Psﾃｭquico",
                650: "Crioaliento Despiadado",
                651: "Crioaliento Despiadado",
                652: "Dracoaliento Devastador",
                653: "Dracoaliento Devastador",
                654: "Agujero Negro Aniquilador",
                655: "Agujero Negro Aniquilador",
                656: "Arrumaco Sideral",
                657: "Arrumaco Sideral",
                658: "Pikavoltio Letal",
                659: "Recogearena",
                660: "Escaramuza",
                661: "Bﾃｺnker",
                662: "Puntada Sombrﾃｭa",
                663: "Lariat Oscuro",
                664: "Aria Burbuja",
                665: "Martillo Hielo",
                666: "Cura Floral",
                667: "Fuerza Equina",
                668: "Absorbefuerza",
                669: "Cuchilla Solar",
                670: "Follaje",
                671: "Foco",
                672: "Hilo Venenoso",
                673: "Aguzar",
                674: "Piﾃｱﾃｳn Auxiliar",
                675: "Golpe Mordaza",
                676: "Bola de Polen",
                677: "Anclaje",
                678: "Campo Psﾃｭquico",
                679: "Plancha",
                680: "Lﾃ｡tigo ﾃ紅neo",
                681: "Chulerﾃｭa",
                682: "Llama Final",
                683: "Cambiavelocidad",
                684: "Cuerno Certero",
                685: "Purificaciﾃｳn",
                686: "Danza Despertar",
                687: "Nﾃｺcleo Castigo",
                688: "Patada Tropical",
                689: "Mandato",
                690: "Pico Caﾃｱﾃｳn",
                691: "Fragor Escamas",
                692: "Martillo Dragﾃｳn",
                693: "Giro Vil",
                694: "Velo Aurora",
                695: "Aluviﾃｳn de Flechas Sombrﾃｭas",
                696: "Hiperplancha Oscura",
                697: "Sinfonﾃｭa de la Diva Marina",
                698: "Cﾃｳlera del Guardiﾃ｡n",
                699: "Constelaciﾃｳn Robaalmas",
                700: "Surfeo Galvﾃ｡nico",
                701: "Arrojo Intempestivo",
                702: "Novena Potencia",
                703: "Supernova Original",
                704: "Coraza Trampa",
                705: "Caﾃｱﾃｳn Floral",
                706: "Psicocolmillo",
                707: "Pataleta",
                708: "Hueso Sombrﾃｭo",
                709: "Roca Veloz",
                710: "Hidroariete",
                711: "Lﾃ｡ser Prisma",
                712: "Robasombra",
                713: "Meteoimpacto",
                714: "Rayo Umbrﾃｭo",
                715: "Ojos Llorosos",
                716: "Electropunzada",
                717: "Furia Natural",
                718: "Multiataque",
                719: "Gigarrayo Fulminante",
                720: "Cabeza Sorpresa",
                721: "Puﾃｱos Plasma",
                722: "Gﾃｩiser Fotﾃｳnico",
                723: "Fotodestrucciﾃｳn Apocalﾃｭptica",
                724: "Embestida Solar",
                725: "Deflagraciﾃｳn Lunar",
                726: "Somanta Amistosa",
                727: "Tempestad Rocosa",
                728: "Estruendo Implacable",
                729: "Pikaturbo",
                730: "Salpikasurf",
                731: "Pikapicado",
                732: "Pikatormenta",
                733: "Vapodrenaje",
                734: "Joltioparﾃ｡lisis",
                735: "Flarembestida",
                736: "Espeaura",
                737: "Umbreozona",
                738: "Leafitobombas",
                739: "Glaceoprisma",
                740: "Sylveotornado",
                741: "Eevimpacto",
                742: "Ferropuﾃｱo Doble",
                743: "Maxibarrera",
                744: "Caﾃｱﾃｳn Dinamax",
                745: "Disparo Certero",
                746: "Presa Maxilar",
                747: "Atiborramiento",
                748: "Bastiﾃｳn Final",
                749: "Alquitranazo",
                750: "Polvo Mﾃ｡gico",
                751: "Dracoflechas",
                752: "Hora del Tﾃｩ",
                753: "Octopresa",
                754: "Electropico",
                755: "Branquibocado",
                756: "Cambio de Cancha",
                757: "Maxigniciﾃｳn",
                758: "Maxinsecto",
                759: "Maxitormenta",
                760: "Maxiataque",
                761: "Maxipuﾃｱo",
                762: "Maxiespectro",
                763: "Maxihelada",
                764: "Maxiﾃ｡cido",
                765: "Maxichorro",
                766: "Maxiciclﾃｳn",
                767: "Maxiestela",
                768: "Maxidraco",
                769: "Maxionda",
                770: "Maxilito",
                771: "Maxitemblor",
                772: "Maxisombra",
                773: "Maxiflora",
                774: "Maximetal",
                775: "Estruendo Escama",
                776: "Plancha Corporal",
                777: "Decoraciﾃｳn",
                778: "Baterﾃｭa Asalto",
                779: "Cepo",
                780: "Balﾃｳn ﾃ紅neo",
                781: "Tajo Supremo",
                782: "Embate Supremo",
                783: "Rueda Aural",
                784: "Vasto Impacto",
                785: "Punzada Rama",
                786: "Amplificador",
                787: "ﾃ…ido Mﾃ｡lico",
                788: "Fuerza G",
                789: "Choque Anﾃｭmico",
                790: "Cautivapor",
                791: "Gota Vital",
                792: "Obstrucciﾃｳn",
                793: "Irreverencia",
                794: "Asalto Estelar",
                795: "Rayo Infinito",
                796: "Metalﾃ｡ser",
                797: "Vasta Fuerza",
                798: "Allanador Fﾃｩrreo",
                799: "Rﾃ｡faga Escamas",
                800: "Rayo Meteﾃｳrico",
                801: "Moluscaﾃｱﾃｳn",
                802: "Bruma Explosiva",
                803: "Fitoimpulso",
                804: "Alto Voltaje",
                805: "Pulso de Campo",
                806: "Golpe Rastrero",
                807: "Envidia Ardiente",
                808: "Desahogo",
                809: "Poltergeist",
                810: "Gas Corrosivo",
                811: "Motivaciﾃｳn",
                812: "Viraje",
                813: "Triple Axel",
                814: "Ala Bis",
                815: "Arenas Ardientes",
                816: "Cura Selvﾃ｡tica",
                817: "Golpe Oscuro",
                818: "Azote Torrencial",
                819: "Electrojaula",
                820: "Dracoenergﾃｭa",
                821: "Mirada Heladora",
                822: "Furia Candente",
                823: "Patada Relﾃ｡mpago",
                824: "Lanza Glacial",
                825: "Orbes Espectro",
                826: "Conjuro Funesto",
                827: "Garra Nociva",
                828: "Asalto Barrera",
                829: "Cambiapoder",
                830: "Hachazo Pﾃｩtreo",
                831: "Ciclﾃｳn Primavera",
                832: "Poder Mﾃｭstico",
                833: "Erupciﾃｳn de Ira",
                834: "Envite Acuﾃ｡tico",
                835: "Clorofilﾃ｡ser",
                836: "Viento Carﾃ｡mbano",
                837: "Danza Triunfal",
                838: "Arremetida",
                839: "Mil Pﾃｺas Tﾃｳxicas",
                840: "Ala Aural",
                841: "Rencor Reprimido",
                842: "Retracciﾃｳn",
                843: "Triple Flecha",
                844: "Marcha Espectral",
                845: "Tajo Metralla",
                846: "Vendaval Gﾃｩlido",
                847: "Electormenta",
                848: "Simﾃｺn de Arena",
                849: "Plegaria Lunar",
                850: "Bﾃ｡lsamo Osado",
                851: "Teraexplosiﾃｳn",
                852: "Telatrampa",
                853: "Patada Hacha",
                854: "Homenaje Pﾃｳstumo",
                855: "Fotocolisiﾃｳn",
                856: "Oﾃｭdo Cocina",
                857: "Puﾃｱo Jet",
                858: "Extracto Picante",
                859: "Quemarrueda",
                860: "Proliferaciﾃｳn",
                861: "Pirueta Helada",
                862: "Asalto Espadﾃｳn",
                863: "Plegaria Vital",
                864: "Salazﾃｳn",
                865: "Triple Inmersiﾃｳn",
                866: "Giro Mortﾃｭfero",
                867: "Decalcomanﾃｭa",
                868: "Deslome",
                869: "Genufendiente",
                870: "Truco Floral",
                871: "Canto Ardiente",
                872: "Danza Acuﾃ｡tica",
                873: "Furia Taurina",
                874: "Fiebre Dorada",
                875: "Psicohojas",
                876: "Hidrovapor",
                877: "Calamidad",
                878: "Nitrochoque",
                879: "Electroderrape",
                880: "Autotomﾃｭa",
                881: "Frﾃｭa Acogida",
                882: "Limpieza General",
                883: "Paisaje Nevado",
                884: "Brinco",
                885: "Abrecaminos",
                886: "Agua Frﾃｭa",
                887: "Hipertaladro",
                888: "Lﾃ｡ser Doble",
                889: "Puﾃｱo Furia",
                890: "Caﾃｱﾃｳn Armadura",
                891: "Espada Lamento",
                892: "Electropalmas",
                893: "Martillo Colosal",
                894: "Resarcimiento",
                895: "Tajo Acuﾃ｡tico",
                896: "Pirochoque",
                897: "Ominochoque",
                898: "Ponzochoque",
                899: "Pugnachoque",
                900: "Feerichoque",
                901: "Luna Roja",
                902: "Caﾃｱﾃｳn Batidor",
                903: "Bomba Caramelo",
                904: "Garrote Liana"
              },
              tokusei: {
                1: "Hedor",
                2: "Llovizna",
                3: "Impulso",
                4: "Armadura Batalla",
                5: "Robustez",
                6: "Humedad",
                7: "Flexibilidad",
                8: "Velo Arena",
                9: "Elec. Estﾃ｡tica",
                10: "Absorbe Elec",
                11: "Absorbe Agua",
                12: "Despiste",
                13: "Aclimataciﾃｳn",
                14: "Ojo Compuesto",
                15: "Insomnio",
                16: "Cambio Color",
                17: "Inmunidad",
                18: "Absorbe Fuego",
                19: "Polvo Escudo",
                20: "Ritmo Propio",
                21: "Ventosas",
                22: "Intimidaciﾃｳn",
                23: "Sombra Trampa",
                24: "Piel Tosca",
                25: "Superguarda",
                26: "Levitaciﾃｳn",
                27: "Efecto Espora",
                28: "Sincronﾃｭa",
                29: "Cuerpo Puro",
                30: "Cura Natural",
                31: "Pararrayos",
                32: "Dicha",
                33: "Nado Rﾃ｡pido",
                34: "Clorofila",
                35: "Iluminaciﾃｳn",
                36: "Calco",
                37: "Potencia",
                38: "Punto Tﾃｳxico",
                39: "Fuerza Mental",
                40: "Escudo Magma",
                41: "Velo Agua",
                42: "Imﾃ｡n",
                43: "Insonorizar",
                44: "Cura Lluvia",
                45: "Chorro Arena",
                46: "Presiﾃｳn",
                47: "Sebo",
                48: "Madrugar",
                49: "Cuerpo Llama",
                50: "Fuga",
                51: "Vista Lince",
                52: "Corte Fuerte",
                53: "Recogida",
                54: "Pereza",
                55: "Entusiasmo",
                56: "Gran Encanto",
                57: "Mﾃ｡s",
                58: "Menos",
                59: "Predicciﾃｳn",
                60: "Viscosidad",
                61: "Mudar",
                62: "Agallas",
                63: "Escama Especial",
                64: "Viscosecreciﾃｳn",
                65: "Espesura",
                66: "Mar Llamas",
                67: "Torrente",
                68: "Enjambre",
                69: "Cabeza Roca",
                70: "Sequﾃｭa",
                71: "Trampa Arena",
                72: "Espﾃｭritu Vital",
                73: "Humo Blanco",
                74: "Energﾃｭa Pura",
                75: "Caparazﾃｳn",
                76: "Esclusa de Aire",
                77: "Tumbos",
                78: "Electromotor",
                79: "Rivalidad",
                80: "Impasible",
                81: "Manto Nﾃｭveo",
                82: "Gula",
                83: "Irascible",
                84: "Liviano",
                85: "Ignﾃｭfugo",
                86: "Simple",
                87: "Piel Seca",
                88: "Descarga",
                89: "Puﾃｱo Fﾃｩrreo",
                90: "Antﾃｭdoto",
                91: "Adaptable",
                92: "Encadenado",
                93: "Hidrataciﾃｳn",
                94: "Poder Solar",
                95: "Pies Rﾃ｡pidos",
                96: "Normalidad",
                97: "Francotirador",
                98: "Muro Mﾃ｡gico",
                99: "Indefenso",
                100: "Rezagado",
                101: "Experto",
                102: "Defensa Hoja",
                103: "Zoquete",
                104: "Rompemoldes",
                105: "Afortunado",
                106: "Detonaciﾃｳn",
                107: "Anticipaciﾃｳn",
                108: "Alerta",
                109: "Ignorante",
                110: "Cromolente",
                111: "Filtro",
                112: "Inicio Lento",
                113: "Intrﾃｩpido",
                114: "Colector",
                115: "Gﾃｩlido",
                116: "Roca Sﾃｳlida",
                117: "Nevada",
                118: "Recogemiel",
                119: "Cacheo",
                120: "Audaz",
                121: "Multitipo",
                122: "Don Floral",
                123: "Mal Sueﾃｱo",
                124: "Hurto",
                125: "Potencia Bruta",
                126: "Respondﾃｳn",
                127: "Nerviosismo",
                128: "Competitivo",
                129: "Flaqueza",
                130: "Cuerpo Maldito",
                131: "Alma Cura",
                132: "Compiescolta",
                133: "Armadura Frﾃ｡gil",
                134: "Metal Pesado",
                135: "Metal Liviano",
                136: "Multiescamas",
                137: "ﾃ肯petu Tﾃｳxico",
                138: "ﾃ肯petu Ardiente",
                139: "Cosecha",
                140: "Telepatﾃｭa",
                141: "Veleta",
                142: "Funda",
                143: "Toque Tﾃｳxico",
                144: "Regeneraciﾃｳn",
                145: "Sacapecho",
                146: "ﾃ肯petu Arena",
                147: "Piel Milagro",
                148: "Cﾃ｡lculo Final",
                149: "Ilusiﾃｳn",
                150: "Impostor",
                151: "Allanamiento",
                152: "Momia",
                153: "Autoestima",
                154: "Justiciero",
                155: "Cobardﾃｭa",
                156: "Espejo Mﾃ｡gico",
                157: "Herbﾃｭvoro",
                158: "Bromista",
                159: "Poder Arena",
                160: "Punta Acero",
                161: "Modo Daruma",
                162: "Tinovictoria",
                163: "Turbollama",
                164: "Terravoltaje",
                165: "Velo Aroma",
                166: "Velo Flor",
                167: "Carrillo",
                168: "Mutatipo",
                169: "Pelaje Recio",
                170: "Prestidigitador",
                171: "Antibalas",
                172: "Tenacidad",
                173: "Mandﾃｭbula Fuerte",
                174: "Piel Helada",
                175: "Velo Dulce",
                176: "Cambio Tﾃ｡ctico",
                177: "Alas Vendaval",
                178: "Megadisparador",
                179: "Manto Frondoso",
                180: "Simbiosis",
                181: "Garra Dura",
                182: "Piel Feﾃｩrica",
                183: "Baba",
                184: "Piel Celeste",
                185: "Amor Filial",
                186: "Aura Oscura",
                187: "Aura Feﾃｩrica",
                188: "Rompeaura",
                189: "Mar del Albor",
                190: "Tierra del Ocaso",
                191: "Rﾃ｡faga Delta",
                192: "Firmeza",
                193: "Huida",
                194: "Retirada",
                195: "Hidrorrefuerzo",
                196: "Ensaﾃｱamiento",
                197: "Escudo Limitado",
                198: "Vigilante",
                199: "Pompa",
                200: "Acero Templado",
                201: "Cﾃｳlera",
                202: "Quitanieves",
                203: "Remoto",
                204: "Voz Fluida",
                205: "Primer Auxilio",
                206: "Piel Elﾃｩctrica",
                207: "Cola Surf",
                208: "Banco",
                209: "Disfraz",
                210: "Fuerte Afecto",
                211: "Agrupamiento",
                212: "Corrosiﾃｳn",
                213: "Letargo Perenne",
                214: "Regia Presencia",
                215: "Revﾃｩs",
                216: "Pareja de Baile",
                217: "Baterﾃｭa",
                218: "Peluche",
                219: "Cuerpo Vﾃｭvido",
                220: "Corﾃ｡nima",
                221: "Rizos Rebeldes",
                222: "Receptor",
                223: "Reacciﾃｳn Quﾃｭmica",
                224: "Ultraimpulso",
                225: "Sistema Alfa",
                226: "Electrogﾃｩnesis",
                227: "Psicogﾃｩnesis",
                228: "Nebulogﾃｩnesis",
                229: "Herbogﾃｩnesis",
                230: "Guardia Metﾃ｡lica",
                231: "Guardia Espectro",
                232: "Armadura Prisma",
                233: "Fuerza Cerebral",
                234: "Espada Indﾃｳmita",
                235: "Escudo Recio",
                236: "Lﾃｭbero",
                237: "Recogebolas",
                238: "Pelusa",
                239: "Hﾃｩlice Caudal",
                240: "Coraza Reflejo",
                241: "Tragamisil",
                242: "Acﾃｩrrimo",
                243: "Combustible",
                244: "Punk Rock",
                245: "Expulsarena",
                246: "Escama de Hielo",
                247: "Maduraciﾃｳn",
                248: "Cara de Hielo",
                249: "Fuente Energﾃｭa",
                250: "Mimetismo",
                251: "Antibarrera",
                252: "Alma Acerada",
                253: "Cuerpo Mortal",
                254: "Alma Errante",
                255: "Monotema",
                256: "Gas Reactivo",
                257: "Velo Pastel",
                258: "Mutapetito",
                259: "Mano Rﾃ｡pida",
                260: "Puﾃｱo Invisible",
                261: "Medicina Extraﾃｱa",
                262: "Transistor",
                263: "Mandﾃｭbula Dragﾃｳn",
                264: "Relincho Blanco",
                265: "Relincho Negro",
                266: "Unidad Ecuestre",
                267: "Unidad Ecuestre",
                268: "Olor Persistente",
                269: "Disemillar",
                270: "Termoconversiﾃｳn",
                271: "Coraza Ira",
                272: "Sal Purificadora",
                273: "Cuerpo Horneado",
                274: "Surcavientos",
                275: "Perro Guardiﾃ｡n",
                276: "Transportarrocas",
                277: "Energﾃｭa Eﾃｳlica",
                278: "Cambio Heroico",
                279: "Comandar",
                280: "Dinamo",
                281: "Paleosﾃｭntesis",
                282: "Carga Cuark",
                283: "Cuerpo ﾃ「reo",
                284: "Caldero Debacle",
                285: "Espada Debacle",
                286: "Tablilla Debacle",
                287: "Abalorio Debacle",
                288: "Latido Oricalco",
                289: "Motor Hadrﾃｳnico",
                290: "Oportunista",
                291: "Rumia",
                292: "Cortante",
                293: "General Supremo",
                294: "Unﾃｭsono",
                295: "Capa Tﾃｳxica",
                296: "Cola Armadura",
                297: "Geofagia",
                298: "Poder Fﾃｺngico",
                299: "Hospitalidad",
                300: "Ojo Mental",
                301: "Evocarrecuerdos",
                302: "Evocarrecuerdos",
                303: "Evocarrecuerdos",
                304: "Evocarrecuerdos",
                305: "Cadena Tﾃｳxica",
                306: "Nﾃｩctar Dulce"
              },
              seikaku: {
                0: "Fuerte",
                1: "Huraﾃｱa",
                2: "Audaz",
                3: "Firme",
                4: "Pﾃｭcara",
                5: "Osada",
                6: "Dﾃｳcil",
                7: "Plﾃ｡cida",
                8: "Agitada",
                9: "Floja",
                10: "Miedosa",
                11: "Activa",
                12: "Seria",
                13: "Alegre",
                14: "Ingenua",
                15: "Modesta",
                16: "Afable",
                17: "Mansa",
                18: "Tﾃｭmida",
                19: "Alocada",
                20: "Serena",
                21: "Amable",
                22: "Grosera",
                23: "Cauta",
                24: "Rara"
              }
            }
          }
        };
        break;
      case 8:
        e = new class {
          constructor() {
            this.pages = {
              t_common: {
                "#regulation": "�一ｷ､�溢擽��",
                "#available_poke": "�ｬ�ｩ﨑� �� �壱株 尞ｬ�畷ｪｬ",
                "#trainer-tab-text": "孖ｸ�溢擽�� �ｭ墲ｹ",
                "#pokemon-tab-text": "尞ｬ�畷ｪｬ �ｭ墲ｹ",
                "#open": "�懍ｵ� ��",
                "#end": "��｣�",
                gathering: "�滝ｳ� ��",
                not_join: "�ｸ�ｸ�",
                not_join_battle: "�ｴ �ｰ寀�尖株 �ｸ�﨑們ｧ �喜葺�ｵ�壱共",
                not_join_tournament: "�ｴ �巐護乱�� �ｸ�﨑們ｧ �喜葺�ｵ�壱共",
                not_join_friendcompe: "﨑� �壱巡 �呱｣� �巐護乱<br>�ｸ�﨑� ��擽 ��慣�壱共",
                win: "WIN",
                lose: "LOSE",
                draw: "DRAW",
                rental: "�醐ヨ甯",
                rank_num: "%d��",
                win_num: "%d�ｹ",
                lose_num: "%d甯ｨ",
                draw_num: "%d�ｴ",
                ok: "OK",
                rulename1: "�懦復 ��搆",
                rulename2: "�ｸ�� �ｰ",
                rulename3: "嵓誤椨 �ｰ",
                rulename4: "�懦復 ��搆",
                rulename5: "�ｸ�� �ｰ",
                rulename6: "嵓誤椨 �ｰ",
                rulename7: "�懦復 ��搆",
                rulename8: "�ｸ�� �ｰ",
                rulename9: "嵓誤椨 �ｰ",
                rulename10: "�ｵ�� �ｰ1",
                rulename11: "�ｵ�� �ｰ2",
                rulename12: "�ｵ�� �ｰ1",
                rulename13: "�ｵ�� �ｰ2",
                rulename14: "�ｵ�� �ｰ3",
                outrange: "�護匣"
              },
              t_rankmatchPageTexts: {
                "#title-text": "�ｭ增ｬ�ｰ寀"
              },
              t_my_rankmatchPageTexts: {
                "#title-text": "�ｭ增ｬ�ｰ寀 �ｱ�� ��┷ �簿ｳｴ",
                "#rate_label": "�溢擽甯�"
              },
              t_pokemonrankingPageTexts: {
                "#title-text": "尞ｬ�畷ｪｬ ��┷ �簿ｳｴ",
                no: "No.",
                ".battle-team-tab-text": "��┷",
                ".when-win-tab-text": "�ｴ�ｼ�� ��",
                ".when-lose-tab-text": "�護揆 ��",
                "kind-tab-battle-team": "﨑ｨ�� �ｰ寀甯�� 尞ｬ﨑ｨ�� 尞ｬ�畷ｪｬ TOP 10",
                "kind-tab-battle-win": "�ｴ 尞ｬ�畷ｪｬ�ｴ �ｰ�ｬ�ｨ�ｰ 尞ｬ�畷ｪｬ TOP 10",
                "kind-tab-battle-lose": "�ｴ 尞ｬ�畷ｪｬ�� �ｰ�ｬ�ｨ�ｰ 尞ｬ�畷ｪｬ TOP 10",
                "kind-tab-battle-waza": "�ｰ��",
                "kind-tab-battle-waza-win": "�ｴ 尞ｬ�畷ｪｬ�ｴ ��劇�ｼ �ｰ�ｬ�ｨ�ｴ �� �ｬ�ｩ﨑� �ｰ�� TOP 10",
                "kind-tab-battle-waza-lose": "�ｴ 尞ｬ�畷ｪｬ�� �ｰ�ｬ�ｨ�ｰ �ｰ�� TOP 10",
                "kind-tab-battle-tokusei": "孖ｹ�ｱ",
                "kind-tab-battle-item": "��ｵｬ",
                "kind-tab-battle-seikaku": "�ｱ�ｩ",
                "kind-tab-battle-terastal": "奛誤攵�､夋逸ム��",
                atk: "�ｵ�ｩ",
                def: "�ｩ�ｴ",
                agi: "�､嵓ｼ��",
                spatk: "孖ｹ�俾ｳｵ�ｩ",
                spdef: "孖ｹ�俯ｰｩ�ｴ",
                hyphen: "��"
              },
              t_internetcompetitionPageTexts: {
                "#title-text": "�ｵ�� �巐�"
              },
              t_internetcompetition_detailPageTexts: {
                "#title-text": "�ｵ�� �巐� ��┷ �簿ｳｴ"
              },
              t_my_internetcompetition_detailPageTexts: {
                "#title-text": "�ｵ�� �巐� ��┷ �簿ｳｴ",
                "#rate_label": "�溢擽甯�",
                mydata_dialog_title: "�簿ｳｴ ��夋�",
                mydata_dialog_text: "嵓誤�溢擽�ｴ�� �簿ｳｴ�ｼ 嶹菩攤﨑罹共",
                mydata_dialog_btn1: "�懍怱",
                mydata_dialog_btn2: "�ｰ寀甯"
              },
              t_friendcompetitionPageTexts: {
                "#title-text": "�呱｣� �巐�"
              },
              t_my_friendcompetitionPageTexts: {
                "#title-text": "�呱｣� �巐�",
                ".organizer-label-text": "�ｼ�懍梵",
                ".result-label-text": "�ｱ��",
                ".battleteam-label-text": "�ｰ寀甯"
              },
              t_friendcompetition_detailPageTexts: {
                "#title-text": "�呱｣� �巐� ��┷ �簿ｳｴ"
              },
              t_my_friendcompetition_detailPageTexts: {
                "#title-text": "�呱｣� �巐� ��┷ �簿ｳｴ"
              },
              t_battle_teamPageTexts: {
                internetcompe: "�ｵ�� �巐� �ｰ寀甯",
                friendcompe: "�呱｣� �巐� �ｰ寀甯"
              },
              t_mydataselectPageTexts: {
                title_text_rankmatch: "�們攪 ����",
                title_text_internetcompe: "�ｵ�� �巐� ��┷ �簿ｳｴ",
                title_text_friendcompe: "�呱｣� �巐�",
                "#dataselect-text": "����揆 嶹菩攤﨑� ��･ �ｰ�ｴ奓ｰ�ｼ ��夋晨紛 �ｼ�ｭ�懍丶"
              },
              t_tournament_detailPageTexts: {
                "#title-text": "奝��壱ｨｼ孖ｸ �巐� ��┷ �簿ｳｴ",
                single_elimination: "�ｱ� �俯ｦｬ�ｸ�､�ｴ��",
                double_elimination: "�罷ｸ� �俯ｦｬ�ｸ�､�ｴ��",
                bestX: "Best %d",
                Xround: "%d�ｼ�ｴ��",
                semi_final: "��ｰ�ｹ",
                final: "�ｰ�ｹ��",
                round_winners: "WINNERS %d�ｼ�ｴ��",
                final_winners: "WINNERS %d�ｼ�ｴ��(FINAL)",
                round_losers: "LOSERS %d�ｼ�ｴ��",
                final_losers: "LOSERS %d�ｼ�ｴ��(FINAL)",
                grandfinal: "�ｰ�ｹ��(GRAND FINAL)",
                coming_soon: "Coming Soon!"
              },
              topPageTexts: {
                "#top-title-text": "TOP",
                "#top-mypage-text": "�們攪 ����",
                "#top-rankmatch-text": "�ｭ增ｬ�ｰ寀",
                "#top--internetcompe-text": "�ｸ奓ｰ�ｷ �巐�",
                "#top-regulation-text": "�ｰ尞ｬ �一ｷ､�溢擽��"
              },
              myresult_topPageTexts: {
                "#title-text": "�們攪 ����",
                "#rankmatch-text": "�ｭ增ｬ�ｰ寀",
                "#internetcompe-text": "�ｸ奓ｰ�ｷ �巐�",
                "#friendcompe-text": "�呱｣� �巐�"
              },
              myresult_romselectPageTexts: {
                "#title-text": "�們攪 ����",
                "#rankmatch-text": "�護桷 �醐売孖ｸ�ｨ�ｴ ��夋�"
              },
              myresult_rankmatchPageTexts: {
                "#title-text": "�ｭ增ｬ�ｰ寀 �ｱ�� ��┷ �簿ｳｴ",
                "#subtitle1-text": "�懍ｦ� �簿ｳｴ",
                "#sub1_label3": "�ｴ �懍ｦ護攪 ��┷ �簿ｳｴ 嶹菩攤",
                "#subtitle2-text": "�懍ｦ� �ｱ��",
                "#sub2_label1": "�ｱ�",
                "#sub2_label2": "�罷ｸ�",
                "#subtitle3-text": "�懋ｷｼ ��� �ｴ�･",
                "#sub3_label1": "�ｱ�",
                "#sub3_label2": "�罷ｸ�"
              },
              my_internetcompetition_listPageTexts: {
                "#title-text": "�ｸ奓ｰ�ｷ �巐� �ｼ��",
                "#subtitle1-text": "�ｸ� �巐� �ｼ��"
              },
              my_internetcompetition_detailPageTexts: {
                "#title-text": "�ｸ奓ｰ�ｷ �巐� �ｱ�� ��┷ �簿ｳｴ",
                "#subtitle1-text": "�巐� �簿ｳｴ",
                "#sub1_label1": "�ｬ�ｩ �護桷 �醐売孖ｸ�ｨ�ｴ",
                "#sub1_label2": "��� �ｰ",
                "#sub1_label3": "�ｸ��� ��",
                "#sub1_label5": "�ｴ �巐護攪 ��┷ �簿ｳｴ 嶹菩攤",
                "#sub1_label6": "�巐� �ｱ��",
                "#subtitle2-text": "��� �ｴ�･",
                "#sub2_label1": "�ｱ�",
                "#sub2_label2": "�罷ｸ�",
                "#subtitle3-text": "�懋ｷｼ ��� �ｴ�･",
                "#sub3_label1": "�ｱ�",
                "#sub3_label2": "�罷ｸ�"
              },
              friendcompetition_listPageTexts: {
                "#title-text": "�呱｣� �巐� �ｼ��",
                "#subtitle1-text": "�ｸ� �巐� �ｼ��",
                ".organizer-label-text": "�ｼ�� 孖ｸ�溢擽�� �ｴ��",
                ".joinednum-label-text": "�ｸ��� ��",
                ".more-button-text": "�� �ｴ�ｰ"
              },
              my_friendcompetition_detailPageTexts: {
                "#title-text": "�呱｣� �巐� �ｱ�� ��┷ �簿ｳｴ",
                "#subtitle1-text": "�巐� �簿ｳｴ",
                "#sub_label1": "�巐� �懍囈",
                "#sub_label2": "�ｼ�� 孖ｸ�溢擽�� �ｴ��",
                "#sub_label3": "�ｬ�ｩ �護桷 �醐売孖ｸ�ｨ�ｴ",
                "#sub_label4": "��� �ｰ",
                "#sub_label5": "�ｸ��� ��",
                "#sub_label7": "�ｴ �巐護攪 ��┷ �簿ｳｴ 嶹菩攤",
                "#sub_label8": "�巐� �ｱ��",
                "#subtitle2-text": "��� �ｴ�･"
              },
              friendcompetition_detailPageTexts: {
                "#title-text": "�呱｣� �巐� ��┷ �簿ｳｴ",
                "#subtitle1-text": "�巐� �簿ｳｴ",
                "#sub_label1": "�巐� �懍囈",
                "#sub_label2": "�ｼ�� 孖ｸ�溢擽�� �ｴ��",
                "#sub_label3": "�ｬ�ｩ �護桷 �醐売孖ｸ�ｨ�ｴ",
                "#sub_label4": "��� �ｰ",
                "#sub_label5": "�ｸ��� ��",
                "#sub1_label13": "�川侠�� �懍怱 嶹菩攤",
                "#sub1_label9": "孖ｸ�溢擽�� �ｭ墲ｹ",
                "#sub1_label10": "尞ｬ�畷ｪｬ �ｭ墲ｹ",
                "#regulationLink": "�卓囈 �ｬ﨑ｭ/�一ｷ､�溢擽��",
                "#eligiblePokemonLink": "�ｬ�ｩ﨑� �� �壱株 尞ｬ�畷ｪｬ"
              },
              rankmatch_detailPageTexts: {
                "#title-text": "�ｭ增ｬ�ｰ寀",
                "#subtitle1-text": "�懍ｦ� �簿ｳｴ",
                "#sub_label2": "�ｸ��� ��",
                "#sub_label3": "�卓囈 �ｬ﨑ｭ/�一ｷ､�溢擽��",
                "#sub_label4": "�ｬ�ｩ﨑� �� �壱株 尞ｬ�畷ｪｬ",
                "#sub_label5": "尞ｬ�畷ｪｬ ��夋�",
                "#sub_label6": "�罷�､�ｴ�ｰ",
                "#sub_label7": "�川侠�� �懍怱 嶹菩攤",
                "#subtitle2-text": "��� �ｴ�･",
                ".trainer-tab-text": "孖ｸ�溢擽�� �ｭ墲ｹ",
                ".pokemon-tab-text": "尞ｬ�畷ｪｬ �ｭ墲ｹ"
              },
              internetcompetition_listPageTexts: {
                "#title-text": "�ｸ奓ｰ�ｷ �巐�",
                "#sub_label1": "�ｼ�ｰ �ｸ奓ｰ�ｷ �巐� �ｼ��",
                "#sub_label2": "��一ｹ護ｧ �懍ｵ罹頗 �巐�",
                ".more-button-text": "�� �ｴ�ｰ"
              },
              internetcompetition_detailPageTexts: {
                "#title-text": "�ｸ奓ｰ�ｷ �巐� ��┷ �簿ｳｴ",
                "#subtitle1-text": "�巐� �簿ｳｴ",
                "#sub1_label1": "�ｬ�ｩ �護桷 �醐売孖ｸ�ｨ�ｴ",
                "#sub1_label2": "�卓囈 �ｬ﨑ｭ/�一ｷ､�溢擽��",
                "#sub1_label3": "�ｬ�ｩ﨑� �� �壱株 尞ｬ�畷ｪｬ",
                "#sub1_label4": "�巐� �懍囈",
                "#sub1_label5": "�ｸ��� ��",
                "#sub1_label6": "�ｬ�ｩ �護桷 �醐売孖ｸ�ｨ�ｴ",
                "#sub1_label7": "��� �ｰ",
                "#sub1_label8": "�懍ｵ� �ｰ��",
                "#sub1_label9": "孖ｸ�溢擽�� �ｭ墲ｹ",
                "#sub1_label10": "尞ｬ�畷ｪｬ �ｭ墲ｹ",
                "#sub1_label11": "尞ｬ�畷ｪｬ ��夋�",
                "#sub1_label12": "�罷�､�ｴ�ｰ",
                "#sub1_label13": "�川侠�� �懍怱 嶹菩攤"
              },
              battle_teamPageTexts: {
                "#title-text": "�ｰ寀甯�� 尞ｬ�畷ｪｬ"
              },
              regulation_listPageTexts: {
                "#title-text": "�ｰ尞ｬ �一ｷ､�溢擽��"
              },
              regulation_pokelistPageTexts: {
                "#title-text": "�ｬ�ｩ﨑� �� �壱株 尞ｬ�畷ｪｬ"
              },
              event_calendar: {
                "#title-text": "�ｴ�､孖ｸ �俯ｦｰ��",
                "#option-country": "岺懍亨 �卓攤 ��ｭ",
                "#sunday": "�ｼ",
                "#monday": "��",
                "#tuesday": "嶹�",
                "#wednesday": "��",
                "#thursday": "�ｩ",
                "#friday": "��",
                "#saturday": "奝�"
              },
              rankmatch_pokemonranking_detailPageTexts: {
                "#title-text": "�ｭ增ｬ�ｰ寀",
                "#subtitle1-text": "尞ｬ�畷ｪｬ ��┷ �簿ｳｴ",
                ".battle-team-tab-text": "��┷",
                ".when-win-tab-text": "�ｴ�ｼ�� ��",
                ".when-lose-tab-text": "�護揆 ��",
                "kind-tab-battle-team": "﨑ｨ�� �ｰ寀甯�� 尞ｬ﨑ｨ�� 尞ｬ�畷ｪｬ TOP 10",
                "kind-tab-battle-win": "�ｴ 尞ｬ�畷ｪｬ�ｴ �ｰ�ｬ�ｨ�ｰ 尞ｬ�畷ｪｬ TOP 10",
                "kind-tab-battle-lose": "�ｴ 尞ｬ�畷ｪｬ�� �ｰ�ｬ�ｨ�ｰ 尞ｬ�畷ｪｬ TOP 10",
                "kind-tab-battle-waza": "�ｰ��",
                "kind-tab-battle-waza-win": "�ｴ 尞ｬ�畷ｪｬ�ｴ ��劇�ｼ �ｰ�ｬ�ｨ�ｴ �� �ｬ�ｩ﨑� �ｰ�� TOP 10",
                "kind-tab-battle-waza-lose": "�ｴ 尞ｬ�畷ｪｬ�� �ｰ�ｬ�ｨ�ｰ �ｰ�� TOP 10",
                "kind-tab-battle-tokusei": "孖ｹ�ｱ",
                "kind-tab-battle-item": "��ｵｬ",
                "kind-tab-battle-seikaku": "�ｱ�ｩ"
              },
              internetcompetition_pokemonranking_detail: {
                "#title-text": "�ｸ奓ｰ�ｷ �巐�",
                "#subtitle1-text": "尞ｬ�畷ｪｬ ��┷ �簿ｳｴ",
                ".battle-team-tab-text": "��┷",
                ".when-win-tab-text": "�ｴ�ｼ�� ��",
                ".when-lose-tab-text": "�護揆 ��",
                "kind-tab-battle-team": "﨑ｨ�� �ｰ寀甯�� 尞ｬ﨑ｨ�� 尞ｬ�畷ｪｬ TOP 10",
                "kind-tab-battle-win": "�ｴ 尞ｬ�畷ｪｬ�ｴ �ｰ�ｬ�ｨ�ｰ 尞ｬ�畷ｪｬ TOP 10",
                "kind-tab-battle-lose": "�ｴ 尞ｬ�畷ｪｬ�� �ｰ�ｬ�ｨ�ｰ 尞ｬ�畷ｪｬ TOP 10",
                "kind-tab-battle-waza": "�ｰ��",
                "kind-tab-battle-waza-win": "�ｴ 尞ｬ�畷ｪｬ�ｴ ��劇�ｼ �ｰ�ｬ�ｨ�ｴ �� �ｬ�ｩ﨑� �ｰ�� TOP 10",
                "kind-tab-battle-waza-lose": "�ｴ 尞ｬ�畷ｪｬ�� �ｰ�ｬ�ｨ�ｰ �ｰ�� TOP 10",
                "kind-tab-battle-tokusei": "孖ｹ�ｱ",
                "kind-tab-battle-item": "��ｵｬ",
                "kind-tab-battle-seikaku": "�ｱ�ｩ"
              },
              friendcompetition_pokemonranking_detail: {
                "#title-text": "�呱｣� �巐�",
                "#subtitle1-text": "尞ｬ�畷ｪｬ ��┷ �簿ｳｴ",
                ".battle-team-tab-text": "��┷",
                ".when-win-tab-text": "�ｴ�ｼ�� ��",
                ".when-lose-tab-text": "�護揆 ��",
                "kind-tab-battle-team": "﨑ｨ�� �ｰ寀甯�� 尞ｬ﨑ｨ�� 尞ｬ�畷ｪｬ TOP 10",
                "kind-tab-battle-win": "�ｴ 尞ｬ�畷ｪｬ�ｴ �ｰ�ｬ�ｨ�ｰ 尞ｬ�畷ｪｬ TOP 10",
                "kind-tab-battle-lose": "�ｴ 尞ｬ�畷ｪｬ�� �ｰ�ｬ�ｨ�ｰ 尞ｬ�畷ｪｬ TOP 10",
                "kind-tab-battle-waza": "�ｰ��",
                "kind-tab-battle-waza-win": "�ｴ 尞ｬ�畷ｪｬ�ｴ ��劇�ｼ �ｰ�ｬ�ｨ�ｴ �� �ｬ�ｩ﨑� �ｰ�� TOP 10",
                "kind-tab-battle-waza-lose": "�ｴ 尞ｬ�畷ｪｬ�� �ｰ�ｬ�ｨ�ｰ �ｰ�� TOP 10",
                "kind-tab-battle-tokusei": "孖ｹ�ｱ",
                "kind-tab-battle-item": "��ｵｬ",
                "kind-tab-battle-seikaku": "�ｱ�ｩ"
              }
            }, this.common = {
              ui_texts: {
                ".winIconText": "WIN",
                ".loseIconText": "LOSE",
                ".drawIconText": "DRAW",
                ".joinedNumLabel": "��",
                ".periodContainer>.label": "�懍ｵ� �ｰ��",
                ".rateLabelContainer>.label": "�溢擽甯�",
                competionRule: "��� �ｰ",
                ".prevButton>.labelContainer>.label": "�ｴ�� 10�ｴ",
                ".nextButton>.labelContainer>.label": "�､�� 10�ｴ",
                ".rank-beginner-text": "��ｸｰ�一ｸ�",
                ".rank-monster-text": "�ｬ�､奓ｰ�ｼ��",
                ".rank-super-text": "�倆詐�ｼ��",
                ".rank-hyper-text": "﨑們擽寘ｼ�ｼ��",
                ".rank-master-text": "�溢侃奓ｰ�ｼ��",
                ".rental-label-text": "�醐ヨ甯",
                ".buttle-team-button-text": "�ｰ寀甯 岺懍亨"
              },
              unit: {
                rank: "%d��",
                win: "%d�ｹ",
                lose: "%d甯ｨ",
                draw: "%d�ｴ",
                "season-result": "%d�� %d�ｹ %d甯ｨ %d�ｴ",
                "season-result2": "%d�ｹ %d甯ｨ %d�ｴ",
                "online-result": "%d�ｹ %d甯ｨ %d�ｴ",
                "friend-result": "%d�� %d�ｹ %d甯ｨ %d�ｴ"
              },
              roms: {
                Sw: "尞ｬ�畷ｪｬ�､奓ｰ�誤糖",
                Sh: "尞ｬ�畷ｪｬ�､奓ｰ�､��"
              },
              rule: {
                0: "�ｱ�",
                1: "�罷ｸ�"
              },
              nojoin: "�ｸ�ｸ�",
              nowAggr: "�滝ｳ� ��",
              country: {
                100: "��売�ｬ�ｴ",
                600: "��符�罷ｦｬ�ｴ",
                601: "�尖ｘ�､",
                602: "�ｸ�ｭ ��ｶ",
                603: "�ｸ�ｭ �呱ｶ",
                604: "�ｸ�ｭ �罹ｶ",
                605: "�ｸ�ｭ �ｨ�",
                699: "�ｰ夋",
                700: "�ｼ寀ｴ ��ｩ罷ｦｬ�ｴ",
                701: "����",
                702: "�菩亨��",
                703: "�誤攵��",
                704: "��･ｴ嵭ｨ寀ｰ��",
                705: "�ｼ�ｬ��符",
                706: "�罹｡ｬ��符",
                707: "甯誤攵�ｼ�ｴ",
                708: "寬俯｣ｨ",
                709: "�川ｽｰ��･ｴ",
                799: "�ｰ夋",
                800: "�､�ｸ��笈��",
                801: "�､�､孖ｸ�溢攵�ｬ��",
                802: "�ｴ�壱棡��",
                899: "�ｰ夋",
                300: "��亨�� 夋懦初��",
                302: "�滝ｵｭ",
                303: "嶹作ｽｩ",
                304: "�ｼ�ｸ",
                305: "�﨑罹ｯｼ�ｭ",
                306: "�尖�溢擽�懍符",
                307: "﨑�ｦｬ﨑",
                308: "�ｱ�尞ｬ�ｴ",
                309: "���",
                310: "夋懋ｵｭ",
                399: "�ｰ夋",
                400: "���ｽ",
                401: "�､�､孖ｸ�ｬ��",
                402: "�ｨ�ｰ��",
                403: "嵓�梠�､",
                404: "��攵",
                405: "��攵�罹糖",
                406: "�ｴ夋壱ｦｬ��",
                407: "�､�罹梳��",
                408: "尞ｬ�ｴ妤ｬ��",
                409: "�､寬們攤",
                410: "�､��侃",
                411: "��ｵｭ",
                412: "�ｴ�逸〓",
                413: "﨑���",
                414: "�ｸ�ｴ�ｨ�ｴ",
                415: "�､�ｨ�ｴ",
                416: "尞ｴ���",
                499: "�ｰ夋",
                500: "�瀧徐"
              },
              footerBackLinkLabel: {
                backLinkTop: "TOP",
                backLinkInternetComp: "�ｸ奓ｰ�ｷ �巐�",
                backMyResult: "�們攪 ����",
                backMyInternetComp: "�ｸ� �巐� �ｼ��",
                backLinkMyInternetCompDetail: "�ｸ奓ｰ�ｷ �巐� �ｱ�� ��┷ �簿ｳｴ",
                backLinkMyRankMatchDetail: "�ｭ增ｬ�ｰ寀 �ｱ�� ��┷ �簿ｳｴ",
                backLinkMyFriendCompDetail: "�呱｣� �巐� �ｱ�� ��┷ �簿ｳｴ",
                backLinkFriendCompList: "�呱｣� �巐� �ｼ��",
                backLinkRankBattle: "�ｭ增ｬ�ｰ寀",
                backLinkFriendComp: "�呱｣� �巐�"
              },
              rankBattleRankingNoteDialog: {
                title: "�川侠�� �懍怱�ｼ 岺懍亨﨑們ｧ �ｻ嵂溢慣�壱共",
                note1: "�懍ｵ� �卓攤 �ｽ�ｰ, �ｭ墲ｹ� 1000��ｹ護ｧ 岺懍亨�ｩ�壱共.<br />",
                note2: "�ｭ墲ｹ �ｱ��� �滝ｳ� ��勦�� �ｰ�ｼ �ｦ�ｴ�� �� �溢愍�ｰ,<br />�､�� �懍怱� �､�ｼ �� �溢慣�壱共.<br />",
                note3: "���� �懋ｰ�揆 �専ｳ� �､�� 嶹菩攤﨑ｴ �ｼ�ｭ�懍丶."
              },
              dialogMsg: {
                ok: "�ｫ�罷共"
              }
            }, this.dex = {
              poke: ["�ｴ��紛�ｨ", "�ｴ��紛峵", "�ｴ��紛��", "甯護擽�ｬ", "�ｬ�尖糖", "�ｬ�尖ｪｽ", "�ｬ��ｰ", "�ｴ�壱ｶ�ｰ", "�ｰ��剳", "�戦┣嵓ｼ", "�ｨ�ｰ�ｰ", "��┣嵓�", "�肥ｶｩ�ｴ", "�ｱ�ｩ�ｴ", "��ｹｨ��", "�ｬ�ｬ", "嵓ｼ�､", "嵓ｼ�､妤ｬ", "�ｬ��", "�逸敢�ｼ", "�ｨ��ｰｸ", "�ｨ��糖�ｴ�ｰ", "��ｳｴ", "��ｳｴ增ｬ", "嵓ｼ�ｴ��", "�ｼ�ｴ��", "�ｨ�俯草�", "���", "�壱糖�ｰ笙", "�壱糖�ｬ��", "�壱糖塚ｸ", "�壱糖�ｰ笙�", "�壱糖�ｬ�ｸ", "�壱糖墲ｹ", "�川ｐ", "嵓ｽ��", "�晧侃奛護攵", "�們攤奛護攵", "岺ｸ�ｰ", "岺ｸ增ｬ�ｰ", "�ｼ��", "�ｨ��", "�罹ｲ�ｵｸ", "��ヨ�ｬ", "�ｼ嵓誤�溢亨��", "甯誤攵�､", "甯誤攵�ｹ孖ｸ", "�倆牽", "��ｘ�ｬ", "�緋ｷｸ�､", "�･孖ｸ�ｬ�､", "�們仍", "寬俯･ｴ�懍乖", "���ｼ甯誤黒", "�ｨ��", "�晨う", "�ｱ�川渥", "���", "�壱粕", "�懍ｱ呷擽", "�壱･呷ｱ呷擽", "�菩ｱ呷擽", "�川擽��", "�､�罷攵", "弡�曝", "�醐��ｬ", "�ｼ�｡�ｬ", "�ｴ�･�ｬ", "�ｨ�､嵓ｼ", "�ｰ����", "�ｰ���ｴ孖ｸ", "�簿�﨑ｴ", "��血�ｬ", "�ｬ�壱曙", "�ｰ�ｬ�ｬ", "�ｱ�ｬ�ｬ", "尞ｬ�逸ム", "���ｩ��", "�ｼ��", "�ｼ��梳", "�肥攵", "�溢牟�肥攵", "甯護丶�ｬ", "�尖草", "�戦敢�ｬ�､", "�ｬ�ｬ", "�ｬ�一ｳ､", "�逸鎖�ｴ", "�壱ｻ専ｸｰ", "��ｬ", "甯誤･ｴ�", "���､�､", "���ｰ�､孖ｸ", "甯ｬ奛", "�ｱ�､奝､", "�ｬ�ｬ嵓�", "�ｬ�ｬ寘ｼ", "增ｬ�ｩ", "墲ｹ增ｬ�ｩ", "�誤ｦｬ�ｬ�ｵ", "�尖ｳｼ", "��攵�ｬ", "�們亨", "夋母ｵｬ�ｬ", "奛�ｵｬ�ｬ", "�罹攵�誤ｪｬ", "嶹作��ｬ", "�ｴ�ｨ�ｸ", "�専ｰ�､", "�尖巡��､", "�肥ｹｴ�ｸ", "�罷ｿ誤ｦｬ", "�ｭ墲､", "�ｩ���ｬ", "�･�ｴ", "�俯糖�ｼ", "�罹糖�ｼ", "�們ｹ�", "�菩ｽ們ｹ�", "��ｰ�ｬ�ｬ", "��ｿ��､夋", "�溢桷�ｨ", "�､�ｼ增ｬ", "�ｨ�ｼ�ｼ", "�尖�壱ｸ�", "�一ｷｸ��", "�們ぎ�ｴ�", "��ム�懍侃", "�餓牟墲ｹ", "�ｸ�ｼ��侃", "�ｼ嵓�攵�､", "�被ム�ｽ", "�ｴ�護擽", "�､�ｸ��", "�ｬ嵓ｼ�ｬ��", "��､奓ｰ", "尞ｴ�ｬ�､", "�罷ｘ�ｴ孖ｸ", "�肥侃夋", "妤ｬ�ｬ", "妤ｬ�ｬ岺ｸ�､", "嵓���ｼ", "���誤ｳｴ", "嵓�ｦｬ�ｸ", "�ｬ��", "甯護擽�ｴ", "�ｸ�ｽ", "���ｽ", "�晤ｘ�ｽ", "�､��", "�､", "�們ｽ罷ｦｬ夋", "���ｴ�ｬ嵓�", "�緋ｰ�溢它", "�護ｼ�ｸ", "�一ｷｸ��ｸ", "�罷�溢擽��", "�ｬ��ｽ�", "�俯ｦｬ�護擽", "�･增ｬ�罹共�ｼ", "�ｬ�ｬ��", "�､�ｬ�ｬ", "��ｰ�", "�ｼ���", "�壱粕��", "�壱粕��", "寬們擽�", "��ｦｬ��巡�､", "增ｬ�罹ｱ�", "�壱攵�ｰ", "�懦╋", "嵓ｼ��", "��", "岺ｸ岺ｸ�ｰ", "奝��醐半", "奝��醐恭", "�､�ｴ寀ｰ", "�､�ｴ寀ｰ�､", "�罷ｦｬ嵓�", "�ｴ�｡�｡", "��｣｡", "��･ｴ��", "�壱ｦｴ", "�壱ｦｴ�ｬ", "�ｬ��ｨ", "�母ｵｬ�ｬ", "奝ｵ奝ｵ��", "�川ｽ�", "�懍���", "�川擽甯�", "﨑ｴ�溢ｸ�", "﨑ｴ�ｨ�ｸ", "�菩梵�ｬ", "�ｰ甯�", "��丶", "�尖ｸ護擽", "�罷椈墲､", "�壱｡懍垈", "�ｼ��せ", "�ｴ�ｰ��", "�壱�", "�溢梵�ｩ", "墲､��う", "嵓ｼ��", "�們ｽ�", "�ｸ����", "��ｼ�ｴ�ｰ", "�菩ｲ�奝､", "�罷｣ｨ", "�ｸ�瀧ｸ罷｣ｨ", "�ｨ�罷｣ｨ", "﨑ｫ�ｼ", "�ｨ�ｨ�", "嵭､�ｼ增ｬ�懍侃", "尞ｬ岺ｸ��", "�懍ｧ�ｰ", "��ｳｰ", "�一ｷｸ�一ｷｸ", "�一ｷｸ�ｴ�ｴ��", "�ｸ�ｸ�ｬ", "�緋ｾｸ�ｬ", "�肥げ嶸ｸ", "�晧牟", "�尞ｬ�ｴ�ｸ", "�罹ｦｬ��糖", "�醐ム�ｸ", "�ｴ�･�ｰ", "�ｸ��", "嵭ｬ�", "墲ｹ�罹攵", "�肥ｽ罷ｦｬ", "�罷ｦｬ��", "尞ｴ�ｬ�､2", "�ｸ�ｼ墲､", "�ｨ�誤巡", "�ｰ�ｨ墲､", "�ｴ尞ｬ�尖攵", "���ｼ", "�尖�逸う��", "�一ｷｸ��", "�夋ｱ增ｬ", "﨑ｴ嵓ｼ�溢侃", "�ｼ�ｴ��", "�､奛護擽", "�､�ｴ�､", "����攵�､", "�ｰ�ｰ�ｼ�､", "�一ｸｰ�ｼ�､", "�ｨ�ｰ��", "���餓｡ｰ", "�ｸ�壱ｹ�", "�俯ｬｴ��ｰ", "�俯ｬｴ�護擽", "�俯ｬｴ墲ｹ", "��ｰｨ�ｨ", "��ｹ們ｽ�", "�溢ｹ們ｽ�", "�ｼ�ｱ�ｴ", "�ｪ�ｱ�ｴ", "��ｱ�ｴ", "尞ｬ����", "�ｸ�ｼ�尖ｘ", "��ｸ�懋ｵｬ�ｬ", "��ｵｬ�ｬ", "�罹ｬｴ��", "�､�､", "�ｰ寀ｰ嵓誤攵�ｴ", "�ｴ�､�､", "��ｼ�ｼ", "�ｰ��ｪｬ", "�懦��､", "�懦血甯�", "�����", "�珠ヨ��", "�､夋ｱ�ｬ", "奛護攵��", "�､�壱｡�", "�壱ｪｨ�､", "甯ｨ�ｬ寘ｼ", "����､", "墲ｬ�ｬ��", "��肥譜", "��ｵｬ��", "��ｘ�ｩ", "��┗�ｬ", "��┗�ｨ", "�護揆��", "�罹ｰ罷｡�", "�護揆墲ｹ", "奝��瀧ｪｬ", "��擽�､增ｬ", "�作ｧ壱ｪｬ", "�語ｳ､�｡", "�ｸ�ｵ�｡", "尞ｭ�誤｣｡", "�逸〓夋�", "﨑俯ｦｬ��", "�ｨ�ｬ�ｬ", "�肥ｽ被血�､", "�尖ｘ��", "�ｸ�寀ｰ", "�懋ｹ誤ｯｸ", "��ｹ倆敢", "��ｴ�ｬ", "�ｱ��攵", "�ｴ�､�罹攵", "�緋ｰ��", "�緋ｰ�ｨ", "�ｬ�罷攵�ｴ", "�ｬ�罷ｳｼ孖ｸ", "嵓誤洳��", "�溢擽��", "�ｼ��敢", "�､�､��敢", "�懍�､�ｬ��", "�ｴ�鷺ｪｬ", "��ｽ�ｬ", "�､嵓�笈��", "�､增ｬ�溢符", "���們剳��", "���們剳", "�被ム", "尞ｭ夋", "�被┣�､", "嵓ｼ�ｸ�戦売", "嵓ｼ�ｸ墲ｹ", "�ｼ�ｨ�ｰ", "奝ｱ��", "��ｸ誤攵��", "嵓誤攵�ｴ�､", "���ｸ��", "�､���ｸ", "甯誤ｹ�ｽ�", "甯誤ｹ�ｽ罷ｦｬ", "�晝ｳ�", "�ｸ��詐", "�ｨ�倆�", "�罷｡�", "�ｸ�ｸ�ｬ", "�緋ｹ�", "��ｬ�ｰ", "��ｬ�･�ｰ", "�､�晝ｵｰ", "�戦���ｦｬ", "�ｴ��", "�ｴ�ｬ��", "����･�､", "��ｧ尖巡", "�逸恐��", "��懦恭", "�川侃岦�", "�壱ｦｬ�ｬ", "�ｴ�����", "�､增ｬ寬ｫ", "﨑ｴ�ｨ�ｽ", "�ｸ�ｼ�ｽ", "孖ｸ�懦半�ｰ�､", "�俯��", "�ｱ��", "�溢梵", "�一ｼｬ��", "�ｼ�語ｷ��", "��ｴ�溢丶", "�ｨ�溢丶", "�ｨ�ｴ�ｴ�", "��｣ｼ�ｽ", "嵭醐��ｼ", "��剄�･�ｴ", "�罹攵�ｸ", "�ｬ�瀧徐�ｴ", "��ｳｵ�ｴ", "�俾ｳ､", "�ｴ�誤共", "�被ヵ", "�被ヵ�ｬ", "�被ム�ｸ�懍侃", "�溢ｧ�ｽ", "�溢ｧ��擽�､", "�溢ｧ�､寀ｸ", "�ｼ寀ｰ��侃", "�ｼ寀ｰ�､�､", "��ｴ�､�", "�ｸ���", "�溢ｿ���", "��ｼ��", "奛護丶墲､�､", "�ｨ��ｰ", "�倆逐��ｰ", "奝����ｰ", "�一ｽ�渥�ｴ", "甯護擽�ｭ�ｴ", "�溢両�ｽ", "甯ｽ��ｦｬ", "甯ｽ夋懍梵", "��寬俯･ｴ孖ｸ", "�誤･ｴ�ｬ", "�誤･ｴ��糖", "�誤･ｴ嶸ｸ增ｬ", "��ｲ�笈", "��ｲ��", "��､�懋ｸｰ", "��､奝｡增ｬ", "�ｬ��〓", "�ｭ�懍丶", "�醐敢�ｼ", "�ｬ�ｽ�ｸ", "�懍ｦ壱�溢擽��", "�専ｰ罹巡�､", "�ｨ寬�糖", "�ｩ甯ｨ奝ｱ�､", "�罷ｦｬ奝ｱ�､", "��｡ｱ�ｩ�ｴ", "��｡ｱ�壱橋", "�俯ｩ肥攵", "�ｸ���ｦｬ", "��ｸ", "甯護ｹ俯ｦｬ�､", "�護擽�､", "嵓誤｡懍�､", "�ｴ�ｬ��", "�ｴ�ｬ�ｬ", "�晧ｧ壱ｬｴ", "孖ｸ�ｬ奝���", "�溏丙�ｴ�ｭ", "彧罷豆峵作�", "�･�､�ｼ�ｴ��", "�ｴ�ｴ�､", "�ｴ�ｴ�ｭ", "�ｴ�ｰ�溢ｧ�", "�逸〓�懍垈", "�們仍��", "�ｬ�･�ｴ", "�瀧蛤��", "�､�ｹ�｡", "�､�ｹ夋ｱ增ｬ", "�呱ｯｸ�ｬ", "�呰メ�ｰ", "�ｬ��", "彧雅ざ�ｴ", "﨑瀧ｳｵ", "寬俯攵寬�", "嶹緋ｰ簿曙", "�･��牟��", "﨑罹ｰ肥擽孖ｸ", "﨑懍ｹｴ�ｬ��侃", "�ｹ����", "�ｬ�､�ｴ", "�ｨ�ｴ�ｬ�､", "德逸小尞ｬ夋�､", "﨑俯ｧ壱処", "�､�懦半", "�罹椈嵓ｼ�ｨ", "�尖罰�ｬ�ｬ", "��ｰ懋ｵｴ", "�ｴ�､寀壱笈", "嶸母ｴ卓牟", "�､�､�ｼ�ｴ孖ｸ", "夋�醐ム", "�溢堂��", "�溢└��", "尞ｬ岺ｸ�壱攵", "�戦小�肥攵", "�ｴ�ｸ�ｨ孖ｸ", "�ｰ��罷ｿ誤ｦｬ", "�ｩ���ｼ�ｴ", "�尖�逸う��", "�一ｷｸ�壱ｲ�", "奝��醐う�､", "�緋ｰ�尖ｦｬ", "�ｬ嵓ｼ��", "��溢擽�懍符", "��ｼ�ｴ�ｨ", "�俯ｪｨ�ｸ�ｬ", "尞ｴ�ｬ�､Z", "�俯�溢擽��", "��被血�､", "�ｼ�川凰�ｴ�ｽ", "�溢流��", "�懦��ｴ", "��增ｬ��", "���ｼ�ｴ孖ｸ", "��ｷｸ��", "�肥符�ｨ�", "寬�ｸｰ��", "德壱糖�ｰ", "�溢ｧ�ｰ��､", "�ｰ�ｼ寀ｰ��", "增ｬ�溢┷�ｬ��", "嵓ｼ�､�､", "�壱ｘ嵓ｼ", "�､增ｬ�ｼ�ｴ", "�川擽�ｸ", "��･ｴ�ｸ�ｰ�､", "��〓寀ｰ��", "�ｼ�ｬ��摩", "�､��", "�､�罹共", "�懋ｾｸ�ｬ", "�ｨ�､�", "�ｼ�ｴ��", "�俯剣�ｴ", "�碕ｲ�尖ｹ�", "���", "�ｴ�ｴ��", "�ｴ�ｴ�ｸ", "�被��ｬ", "﨑俯魂�ｬ�ｴ", "�罷棡��", "�罷ｹ�Η", "�逸血�ｴ�､�､", "�ｼ�倆売", "�ｼ�倆う", "�肥丶嵓�", "�肥丶墲､", "�霊ｰｨ嵓�", "�霊ｰｨ墲､", "�ｽ��", "�ｽ�誤ｘ", "�ｩ�俾ｸｰ", "��奝���", "��从�懍垈", "��ｮ､��", "�罹ｸ誤攵�ｴ�ｴ", "�ｨ�ｴ", "�被敢�ｴ", "�ｰ��ｴ�ｴ�､", "�尖･ｴ�菩･�", "�俯ｰ菩･�", "�尖鵠��", "�ｰ�罹･�", "�､���", "�ｼ�嬢ｰｨ", "奝����ｨ", "�ｸ�ｴ�ｭ", "�呷ｱ呷擽", "�専ｹ誤ｹ�", "�尖ｹ�ｵｴ", "�們ｧ�ｸ", "夋�ｩ�", "�尖･ｴ�ｴ", "�尖･ｴ�､", "�ｨ��ｨｸ", "�壱粕�､", "弴��ｬ", "寬罹糖�ｼ", "�誤ｯｸ��", "�倆注", "�俯ｦｴ�ｬ", "�罹�壱粕�ｴ", "�ｰ�ｰ�們擽", "�罹�增ｬ", "��ｹ�･ｴ", "��ｹ�符�ｴ", "�ｬ�駕剩", "�壱ｹ�峡��", "�壱攵�ｴ��", "�護ざ�ｴ", "�被顕�ｬ�､", "�､�ｨ�ｭ", "�､�ｨ�ｰ��", "�ｬ�ｴ�ｬ", "�ｰ�､�溢侃", "�ｰ�､�溢ｹｸ", "嵓�｡懦��", "�滝ｳｨ�ｼ", "��ｼ�", "��ｼ�､�､", "�ｨ�餓擽", "�肥侃孖ｸ��", "�ｰ�懍符", "�ｰ�懍符增ｬ", "�俯攵�ｸ", "�俯攵�俯�", "���被Τ", "���罷ｳｴ�ｸ", "���罷ｪｨ���､", "���壱梳", "��", "��ｨ�ｨ�､", "�ｬ��ｴ�ｬ", "�､��ｘ", "�罷巨嵓�恐", "�罷巨�ｬ��", "�ｰ�罷巨�ｼ", "�ｬ����", "�罷攵����", "�尖ｪｽ�", "�ｱ�母ｳ､", "�壱ｰ罷･ｴ��", "�罹���堪", "��晤ｘ", "夋ｱ�ｸ�ｴ", "夋ｱ夋ｱ��", "�俯ｳｵ��", "甯護ｪｼ�･", "��斡�ｼ", "���罹糖", "�逸敢�ｹ", "�ｰ�ｴ�ｴ", "�ｰ�ｰ�ｴ�ｴ", "�ｰ�ｰ�ｰ�ｴ�ｴ", "��ｬ�ｴ", "��ｬ�ｴ", "��ｬ�被売", "�ｬ�ｸ��", "�ｰ增ｬ", "�溢ｼ罹ｯｸ", "�ｨ嵓�攵", "�ｹ�ｸ�ｼ", "奓ｰ���", "�｡�ｨ��", "�｡�､�ｼ�ｴ��", "�緋ｳ��ｸ", "妤ｰ���ｴ", "嵓�ｦｬ��､", "�ｼ�壱ｦｬ", "�ｴ��ｬ��", "�罷鵠", "��｡ｰ岺ｸ", "��｡ｰ��", "增ｬ�ｬ��", "�ｨ��梃", "�ｨ�ｨ�ｸ", "�尖ｧ晧ｹｼ", "�一ｰ�ｰｸ", "��売��", "�俯ｦｬ�･�ｴ", "�語ｸ", "�護ｰｨ�ｴ", "��棡���", "�､寀ｰ�ｨ", "��擽�､孖ｸ", "�ｨ�ｸ��", "�被陸��", "�ｼ�ｼ�罹椈", "嶹懦剩�ｴ��", "�溢ｹｴ�ｨ�､", "�罷ｰ罷･ｴ�ｨ", "奛誤攵墲､�ｨ", "��ｦｬ�肥乖", "奝��､�懍侃", "�ｼ孖ｸ�懍侃", "�溢亨�ｼ�ｴ", "�懦〓�罹ｬｴ", "�罹糖�懍侃", "增尖�壱ｬｴ", "��ｴ�肥丶", "�罷｡懍離夋", "�誤��ｸ增ｬ孖ｸ", "��ｹ俯ｧ壱｡�", "��ｹ俯ｳｴ�ｬ", "�誤ｦｬ���", "岺ｸ嶸ｸ�ｬ", "奛誤･ｴ��", "�逸少��", "�懋ｵｬ�壱･ｴ", "�懋ｵｴ�們棗", "�懋ｵｴ�護梵", "甯誤･ｴ��", "甯誤･ｴ奝�", "嶹肥ざ�ｬ��", "�逸剩�ｴ��", "甯護擽�ｴ��", "��擽�誤��", "��蔓��ｦｬ", "��ｹ�圸", "�溢丶�ｬ", "嶹肥両�溢丶", "嵓誤攵����", "嵓誤攵�｣奛�", "嵓誤攵�懍侃", "�肥擽增ｴ", "����孖ｸ", "甯川ｧｱ", "���､", "孖ｸ�ｬ�ｸ��", "�川侃寘ｼ", "�川丶�餓侃", "�ｨ�ｼ��", "�碕ｲ墲ｬ", "墲ｬ��ｴ��", "�溢§", "嵓��逸売寀ｰ�ｴ", "�俯｣ｸ寘ｼ嵓�", "�俯｣ｨ�ｼ", "�､��ｴ��", "�ｼ�ｼ�壱└��", "�ｰ�����", "�ｰ����ｰ�､", "�俯�一ｸｰ", "�罹椈��", "��ｲ�尞ｬ", "�罷｡懍侃奓ｰ", "�ｩ��ｦｬ墲､奛�", "�ｼ�壱巡�ｬ�尖糖", "寀ｰ���ｼ�､", "�ｬ���ｼ�､", "��ｧ壱｣ｨ�､", "��ｧ壱｣ｨ�ｴ�", "�倆半��", "�ｨ�ｨ��", "�ｰ�ｴ�､", "�罹ｦｬ��", "�ｸ��ｩ罷攵", "�ｸ��└�ｼ", "�ｸ��椈�､", "增ｴ�逸半", "�俯ｪｩ�ｹ", "��懦敢", "嶸ｸ�緋ｷ", "寬醐お�ｸ", "��牟��", "增ｬ�壱ｲ��ｴ�､", "�誤ｱ�", "�誤ｲ�", "�罹･ｴ�､��侃", "�ｴ�ｨ夋�ｴ", "���ｴ�ｰ", "�肥譜��", "弡�血", "�ｼ��溢乖", "�俯ｪｰ�ｼ�ｸ", "�ｼ�ｸ�､�懍垈", "�ｨ增ｬ�們擽寘ｼ", "�川丶��", "�川丶德逸敢", "�ｴ彧･�ｼ", "��ｦｬ�ｵ", "墲､�緋ｳｵ", "��ｦｬ�壱叶", "�菩ｽ緋ｵｬ�ｬ", "增ｬ�ｼ甯�", "�倣���ｬ", "��ｵｬ�､", "嶸菩ぎ�ｬ�､", "奓ｱ��ｩ�ｴ", "��ｧ�ｩ�ｴ", "妤ｬ�ｬ�誤�", "�､�ｰ���", "�ｨ�ｨ�ｨ��", "�､�肥ヨ", "�尖ｸ罷ｦｬ", "�尖ｦｬ�ｸ", "�罷ｩ作擽", "�ｨ��ｨ��", "�ｽ�ｴ�ｬ", "�罹ｧ溢ぎ�ｬ", "�肥亨�溢ぎ�ｬ", "�ｸ�罹ｘ�ｰ", "�誤ｧ壱糖", "�ｼ�ｰ�ｸ", "�ｨ��ｬｼ�ｰ�ｸ", "�罹梠��", "�ｼ�寀ｰ�､", "�尖ｧ溢活", "�溢��ｴ��", "�ｼ���", "�ｼ�ｴ孖ｸ", "尞ｬ�ｰ�ｰ", "�ｴ�専ｳｰ", "�ｬ�､��", "�ｬ�ｴ�ｬ��", "�ｬ�被ｸ", "增川符��", "﨑俯梠�ｰ夋�", "�ｴ�們渥�ｴ", "�ｬ�罹��", "�卓｣ｼ�ｴ�ｬ", "�ｨ�俾ｿ�", "�ｨ�們┳�ｴ�ｹ", "﨑ｴ�ｴ�ｰ", "夋��:��", "�､��粕", "�被��ｸ", "�尖ｧ尖攵", "尞ｭ�ｰ��侃", "奝��誤魂�壱｣ｨ", "�ｰ�ｼ增�", "�俾ｰ一ｸｰ", "﨑���｡ｱ", "夋夋��", "�罹梠�ｬ", "�罹梠���ｰ", "�罹梠���ｰ�ｰ", "�ｴ岺ｸ�ｬ�ｬ�ｭ", "�ｴ岺ｸ�俯ｹ�ｘ", "�ｴ岺ｸ�誤｣ｨ�ｨ", "�ｴ岺ｸ�川ｧ��", "�肥侃�ｨ�ｸ", "�肥侃�ｨ�", "�緋ｰ�溢丶", "�ｨ�們符�ｼ", "奛�ｹ�糖", "�､�罹ｶ�", "寬俯｡懍ｽ肥ｲｴ", "����ｩ", "��嶹緋ｵｬ�ｼ", "��擽����", "��享墲ｹ", "�､增ｬ�懍ｦ壱ｧ�", "�一ｸｰ��ｘ", "�溢Ζ��", "������", "��ｳ��ｩ", "�ｨ�｡�ｨ�｡", "�戦血甯｡", "�罹攵�､�ｼ", "�懦ヤ", "�罹ｩ被ヨ", "彧･�們渥", "��う�ｽ", "���ｴ夋", "�ｼ��笈", "�俯ｹ�昼", "�川擽�､��", "�ｸ�ｸ�ｰ", "��ｲ罷�溢乖", "�ｸ奛罷ｦｬ�溢乖", "夋尖ｦｬ�､", "�肥反�ｬ�､", "甯誤攵�ｬ", "甯醐〓�懍垈", "��ｨｸ�護丶", "�尖｣ｨ��誤��", "�壱諸�誤��", "�ｴ�ｬ��", "弡肥ｲ們垈", "尞ｭ�ｬ�ｼ�ｴ", "�ｬ�ｨ�ｴ", "�ｱ�罹ｪｨ�ｴ", "�ｰ�ｴ", "�ｰ�ｰ�ｴ", "�ｨ�ｼ��ｰ", "�一ｰ��ｰ", "�削血��", "寬�侃��", "夋�徐", "夋�ｰｨ�､", "�晨ヤ�ｰ", "�ｼ�ｬ�ｭ�誤��", "��嵓�｣｡", "�ｨ��倆伯", "�ｨ�俯ｱ", "�ｬ�､�ｴ�ｬ", "�ｽ�ｰ�", "�誤｡懋ｼｬ��", "�ｬ�們｡ｰ", "�ｼ�溢ｦ�", "�､孖ｸ�ｰ��", "夋懍垈��､", "�､夋懍垈��､", "�誤阜�ｴ�ｸ", "��､寘ｼ�､", "�ｰ�ｸ�ｨ", "尞ｬ孖ｸ�ｰ�､", "�ｸ��誤ｦｼ", "�川ｧ�誤ｦｼ", "�誤ｦｬ�ｴ��", "�罷｡ｱ��", "�俾ｲｨ�ｨ", "�､�ｱ奓ｸ", "��罹ｧ賀ｵｬ�ｬ", "�們擽墲ｹ", "�ｰ嶸ｸ�ｴ�､", "�ｽ甯誤ｘ�ｴ孖ｸ", "�溢桷��ｽ�", "�ｰ�､甯�", "�壱ｹ醐〓", "�逸恫﨑�", "��ｬ�ｴ", "�誤･ｴ�ｱ��", "��笈�ｸ�ｰ", "�ｨ�､�ｸ�ｰ", "�醐葎��", "�呰＄�ｴ", "�川昏�ｴ", "�ｨ�ｴ寬們ｽ�", "�ｼ�ｬ��", "��簿⊂�ｬ��", "甯護ｹ俯椈�､", "甯護ｹ俯･ｴ��", "�ｴ�俾ｳ､", "�ｴ�俯･ｴ��", "�尖桷�ｨ��", "�罹攵�ｰ", "�罹椈�ｰ��", "�罹椈寬�敢", "�川亨��", "�尖ｧ溢��夋", "�ｴ﨑罹共�ｴ�ｸ", "�俾ｳ���", "�ｰ�ｼ�､�､", "�尖｣ｨ��", "�溢ｧ�尖�逸う", "�溢ｧ�罹椈��", "�罷ｦｬ�戦小�､", "�溢擽�､尞ｬ�､", "��糖�餓侃", "����｡�", "�ｬ�溢梵�ｴ", "�､妤ｬ�ｰ", "��ｰ�ｬ��", "尞ｬ岺ｸ�逸〓", "�･�ｨ�罷｣ｨ", "�ｬ�誤｡懍侃", "�們丶﨑�", "�俯｡懦�", "�溢侃�ｴ��", "�ｨ��ｱｰ", "��惠�ｰ", "�ｼ�ｰ�罹ｳｸ", "�ｸ��侃", "��ｾｸ��", "�ｨ�ｴ�壱ｰ�", "�幎ｳｴ��", "寘ｼ崧ｨ��", "夋�懦斡�ｼ", "孖ｸ�倆半��", "�ｩ�誤囿�ｰ", "�卓侃�一ｷｸ", "���ｨ", "���ｨ孖ｸ", "���ｴ�ｨ孖ｸ", "�尖ｦｬ��", "甯誤ｰ�ｬ��", "���ｸｰ", "�肥垈�ｼ", "�ｸ�壱ｸ�", "�ｬ�ｬ�ｨ", "�ｬ�ｬ�ｴ��", "�罹ｹ�ｼｬ", "�����被敢", "�､夋懍�孖ｸ", "�罹｡懍�孖ｸ", "�ｴ�ｴ�ｸ", "�ｴ�罷ｘ�ｴ��", "甯誤攵�罷�溢擽��", "�壱ｘ��", "�誤ｦｬ�ｰ�ｬ", "�誤ｦｬ��", "�誤ｦｬ��〓", "�､�ｼ寀ｰ嵓�", "�逸半寀ｰ嵓�", "��ｭ壱･ｴ", "夋懋ｹ�ｵｬ�ｴ", "�ｸ岺ｸ�ｬ", "�ｵ岺ｸ�ｬ", "�､�逸紛", "�｡甯誤ｦｬ", "�壱ｲｼ��", "�｡�ｸ�ｴ", "�､�罷ｹ誤涓", "�ｬ�ｴ�ｰ", "���ｼ�ｴ�､", "﨑俯叶�ｼ�ｰ", "增ｴ�溢侃寘ｼ孖ｸ�ｼ", "�ｴ�ｬ�ｱ", "�ｼ�ｬ�ｱ", "�尖糖�ｬ�ｱ", "�罷共�ｸ�､", "�罷凶孖ｸ�ｬ�､", "�ｨ�ｬ��", "�ｨ�醐斧", "�醐斧�ｨ", "��ｴ�ｱ", "��ｴ�ｴ�ｸ", "�ｨ奝���", "�逸敢��", "�壱｡ｱ��", "墲ｬ�ｼ嵓誤｡罹･ｴ", "�晤ｧ晧擽", "�俯草�ｰ", "�ｬ�ｴ�碕ｳ�", "奓ｰ��ｳ���", "�ｰ�ｽ����", "���｣ｨ�ｬ", "�ｴ�ｨ�ｬ��", "�ｸ�ｬ�ｩ", "��ｹ�南渥", "奝��､", "墲､墲､��", "�ｸ������", "���ｰ�ｰｸ", "��劇﨑懍淀��", "�ｰ��ｰｬ�ｬ�ｬ", "�ｬ�們垓��┗", "���懍ｹ俯株�ｸ�ｬ", "��揆�ｰ�罷あ��", "�ｨ�倆┷��ｽ", "�ｴ���被ｴ", "�ｴ���ｴ�ｰ�ｬ", "�ｴ����", "�ｴ���ｸ�ｬ", "�ｴ����ｘ�ｩ", "�ｴ�����", "�罹笈�ｨ", "�罹笈��", "�罹巨�溢擽��", "�ｨ�ｼ�ｹ", "夋��専ｳ�", "�晧ｧ��", "甯護丶��", "�ｩ�ｨ", "��悛�ｴ", "���呷ｹ俯株�ｬ", "�ｴ���ｴ�ｸ", "�罷攵�ｴ��", "�ｸ�ｼ�ｴ��", "�ｽ�ｴ�俯株�ｼ�ｰ", "�ｴ���珠ヨ", "�ｼ�ｸ�ｴ", "�ｨ�ｰ�､", "�ｸ�ｰ�ｰ�ｨ", "�ｰ夋�ｬ", "�ｴ�ｼ弡�", "�ｰ�懍ｹ�", "�､�ｰ尞ｰ"],
              pokeType: ["�ｸ��", "�ｩ妤ｬ", "��哩", "��", "��", "�肥怱", "�誤��", "���､孖ｸ", "�菩ｲ�", "�一ｽ�", "�ｼ", "峵", "��ｸｰ", "�川侃寘ｼ", "�ｼ��", "�罹椈�､", "��", "寬們牟�ｬ"],
              waza: {
                1: "�餓ｹ俾ｸｰ",
                2: "夋懋ｶ誤胸��",
                3: "�ｰ�鷺ｺｨ�俾ｸｰ",
                4: "�ｰ�削死��",
                5: "�緋ｰ奝､寬��",
                6: "���卓擽�壱ｰ幀ｸｰ",
                7: "�一ｽ�死��",
                8: "�雅徐寬��",
                9: "�一ｰ懦死��",
                10: "﨑�塚ｴ�ｰ",
                11: "�晝ｸｰ",
                12: "���梵�ｴ�ｰ",
                13: "�ｼ�罷梃",
                14: "�ｼ�､",
                15: "峵���ｰ",
                16: "�罷梃�ｼ�ｼ墲､�ｰ",
                17: "���懍ｹ俾ｸｰ",
                18: "���､��ｦｬ�ｰ",
                19: "�ｵ�瀧あ�ｰ",
                20: "�ｰ�ｴ�ｰ",
                21: "德俾ｻ嬢ｹ俾ｸｰ",
                22: "�ｩ�ｴ��ｰ�",
                23: "�畷ｰ溲ｸｰ",
                24: "�尖ｲ溢ｰｨ�ｰ",
                25: "�緋ｰ奝､墲･",
                26: "�戦売墲･",
                27: "�誤�､�ｨ�ｰ",
                28: "�ｨ�俯ｿ誤ｦｬ�ｰ",
                29: "�菩ｹ俾ｸｰ",
                30: "�肥ｰ誤･ｴ�ｰ",
                31: "�一ｵｬ�誤･ｴ�ｰ",
                32: "�罷糖�ｴ",
                33: "�ｸ奝ｵ�菩ｹ俾ｸｰ",
                34: "��･ｴ�ｰ",
                35: "��･�川擽",
                36: "�護ｧ�",
                37: "�罹徐��ｬ�ｰ",
                38: "�ｴ甯川ぎ甯戦�增ｴ",
                39: "�ｬ�ｬ彧罷豆�ｰ",
                40: "��ｹｨ",
                41: "�罷ｸ罷笈�､",
                42: "�罷釜�ｸ�ｬ�ｼ",
                43: "�ｸ�､�ｴ�ｰ",
                44: "�ｼ�ｰ",
                45: "�ｸ�護��ｬ",
                46: "�ｸ��爺ｸｰ",
                47: "�ｸ�倆葺�ｰ",
                48: "�溢搆甯�",
                49: "�誤級��",
                50: "�ｬ�ｬ�ｶ�ｰ",
                51: "�ｩ﨑ｴ�｡",
                52: "�一ｽ�┷�",
                53: "嶹肥両�ｩ�ｬ",
                54: "彧ｰ�一ｰ�",
                55: "�ｼ�尞ｬ",
                56: "﨑們擽�罹｡懦詞嵓�",
                57: "甯誤巡夋�ｰ",
                58: "�雅徐��",
                59: "�壱ｳｴ�ｼ",
                60: "嶹們メ��",
                61: "�ｰ峵一ｴ卓│",
                62: "�､�罹攵��",
                63: "甯語ｴｴ�卓│",
                64: "�ｼ�ｰ",
                65: "巐護��ｶ�ｬ",
                66: "��･�俯ｰ被ｴ",
                67: "�壱共�ｬ�ｸ�ｰ",
                68: "�ｴ�ｴ奓ｰ",
                69: "��ｬ�們ｧ�ｰ",
                70: "�ｴ�･",
                71: "彧｡��",
                72: "�緋ｰ�罹�溢攤",
                73: "�ｨ�誤ｦｬ�ｰ",
                74: "�ｱ�･",
                75: "�狩あ��ｴ�ｰ",
                76: "�罷攵��",
                77: "��ｰ�ｨ",
                78: "��ｬ��ｨ",
                79: "�俯ｩｴ��ｨ",
                80: "��梹��侃",
                81: "�､�懋ｸｰ",
                82: "�ｩ�俯ｶ��",
                83: "巐護丶�ｬ�一ｽ�",
                84: "��ｸｰ�ｼ增ｬ",
                85: "10�誤ｳｼ孖ｸ",
                86: "��ｸｰ�川�甯�",
                87: "�一ｰ�",
                88: "�誤蜜�ｬ�ｰ",
                89: "���",
                90: "��ｰ�ｴ�ｰ",
                91: "�ｬ�削血�ｰ",
                92: "�ｹ��",
                93: "�ｼ�呱�･",
                94: "�ｬ�ｴ�被う�､�懍侃",
                95: "�罹ｩｴ��",
                96: "�緋ｰ尞ｬ��",
                97: "���作擽��",
                98: "��ｴ卓�嶹�",
                99: "���",
                100: "�懋ｰ�擽��",
                101: "�們擽孖ｸ嵭､��",
                102: "彧雅ざ�ｴ�ｰ",
                103: "�ｫ��誤ｦｬ",
                104: "�ｸ�ｼ�尖ｶ�侠",
                105: "HP巐誤ｳｵ",
                106: "�ｨ�ｨ﨑ｴ��ｰ",
                107: "�卓符��ｰ",
                108: "�ｰ��",
                109: "�ｴ��復��",
                110: "�作ｧ溢乱�ｨ�ｰ",
                111: "��〓�ｬ�ｰ",
                112: "�ｰ�ｬ�ｴ",
                113: "�幗攪�･��",
                114: "彧卓譜��",
                115: "�ｬ嵓誤�駕┣",
                116: "�ｰ�ｩ��",
                117: "�ｸ�ｰ",
                118: "�専ｰ�ｽ彧罷豆�ｰ",
                119: "�ｰ�ｼ﨑俾ｸｰ",
                120: "�戦少",
                121: "�醐少夋�",
                122: "﨑･�ｰ",
                123: "�､�ｨ�ｸ",
                124: "�､�ｼ�ｵ�ｩ",
                125: "�壱共��俾ｸｰ",
                126: "�壱劇�ｸ��",
                127: "尞ｭ尞ｬ�､�ｴ�ｰ",
                128: "�作ｧ壱⊂�ｰ�ｰ",
                129: "�､嵓ｼ�懍侃夋",
                130: "�懍ｼ畷ｰ菩ｹ俾ｸｰ",
                131: "��罹劇尞ｬ",
                132: "弴俾ｰ専ｸｰ",
                133: "�晝ｰ�唖",
                134: "�溲ｰ�ｽ弴俾ｸｰ",
                135: "�誤さ�ｰ",
                136: "�ｴ�珠ｰｨ�ｰ",
                137: "��溢ｴ壱ｦｬ",
                138: "�壱ｨｹ�ｰ",
                139: "��ｰ�､",
                140: "�ｬ�ｬ�們ｧ�ｰ",
                141: "彧｡嶸�",
                142: "��ｧ溢攪墲､�､",
                143: "�溢ヨ",
                144: "���",
                145: "�ｰ峵�",
                146: "�ｼ�ｼ寬��",
                147: "��┗尞ｬ��",
                148: "嵓誤椈��",
                149: "�ｬ�ｴ�肥岑�ｴ��",
                150: "孖�ｴ�､�ｴ�ｰ",
                151: "�ｹ�ｰ",
                152: "�滝ｲ醐紛�ｸ",
                153: "�尞ｭ��",
                154: "�一ｵｬ﨑�塚ｴ�ｰ",
                155: "�壱共���罷梠",
                156: "���専ｸｰ",
                157: "�､奝､�､��",
                158: "﨑�ざ�橄笈",
                159: "��ｧ�ｰ",
                160: "奛作侃��",
                161: "孖ｸ�ｼ�ｴ�ｴ夋�",
                162: "����們服��",
                163: "���ｴ��ｴ�ｰ",
                164: "�夋�罹徐",
                165: "�罹ｲ�則",
                166: "�､���",
                167: "孖ｸ�ｬ嵓醐ぇ",
                168: "��荘��",
                169: "�ｰ�ｸ��",
                170: "�溢搆�俯�",
                171: "��ｪｽ",
                172: "嶹肥両�被ｴ",
                173: "�緋ｳｨ�ｰ",
                174: "��ｼ",
                175: "�罷則�罷則",
                176: "奛作侃��2",
                177: "�川牟�罹ｸ罷攵�､孖ｸ",
                178: "�ｩ嶹被小��",
                179: "�ｰ�ｬ巐護�",
                180: "�戦復",
                181: "�溢矯�ｼ�ｰ",
                182: "�ｩ�ｴ",
                183: "�逸葺寬��",
                184: "��ｘ�肥名�ｴ",
                185: "�作流�誤ｦｬ�ｰ",
                186: "�懍ぎ�倆う�､",
                187: "�ｰ��",
                188: "�､�ｼ尞ｭ夋�",
                189: "��撕�誤ｦｬ�ｰ",
                190: "�尞ｬ�ｴ�ｸ尞ｬ",
                191: "�菩�簿ｿ誤ｦｬ�ｰ",
                192: "��梵尞ｬ",
                193: "�ｰ�ｫ�ｴ�ｴ�ｰ",
                194: "�ｸ�呱ｬｴ",
                195: "�ｸ�晧攪�ｸ��",
                196: "�ｼ�ｴ�呷捩�罷梃",
                197: "甯尖ｳ�",
                198: "�ｸ�ｬ��",
                199: "�晧乖",
                200: "�ｭ�ｰ",
                201: "�ｨ�俯ｰ罷梃",
                202: "�ｰ��罹�溢攤",
                203: "��恐�ｰ",
                204: "���尖ｶ�ｬ�ｰ",
                205: "�ｬ�ｴ�ｰ",
                206: "�ｼ�ｱ�俾ｸｰ",
                207: "�尖ざ�ｰ",
                208: "�ｰ���溢亨�ｰ",
                209: "�､甯醐〓",
                210: "�ｰ�作梵�ｴ�ｰ",
                211: "�菩ｲ�����",
                212: "���壱ｹ�",
                213: "嵭､�ｱ嵭､�ｱ",
                214: "���ｬ�",
                215: "�俯｣誤ｰｩ�ｸ",
                216: "�嶸懋ｰ夛ｸｰ",
                217: "嵓��溢��孖ｸ",
                218: "嶹被逐�ｴ",
                219: "����攪���",
                220: "��粕�俯��ｰ",
                221: "�ｱ�､�ｬ�ｴ�一ｽ�",
                222: "�､�ｸ�逸栢��",
                223: "尞ｭ�懦死��",
                224: "�緋ｰ嶸ｼ",
                225: "�ｩ�們葵�ｰ",
                226: "�ｰ奓ｴ奓ｰ��",
                227: "�呷ｽ罷･ｴ",
                228: "�ｰ�ｼ��誤ｦｬ�ｰ",
                229: "���作侃﨑",
                230: "�ｬ�､﨑懦箕�ｰ",
                231: "��擽�ｸ奛護攵",
                232: "�被ヨ增ｴ��",
                233: "�幗符�們ｧ�ｰ",
                234: "��ｹｨ嵂�ざ",
                235: "�啄鮒�ｱ",
                236: "�ｬ��",
                237: "���ｬ甯護寥",
                238: "增ｬ�懍侃��",
                239: "巐護丶�ｬ",
                240: "��ｰ罷攵�ｰ",
                241: "�護ｲｭ",
                242: "�ｨ�ｼ�ｴ��俾ｸｰ",
                243: "�ｸ�ｬ�被敢",
                244: "�専ｸｰ�肥亨",
                245: "����",
                246: "�川亨�倆椈",
                247: "���ｳｼ",
                248: "�ｸ�們��",
                249: "�肥怱�ｨ�ｰ",
                250: "�罷共巐護丶�ｬ",
                251: "�瀧卿�ｬ夋",
                252: "�作擽�ｰ",
                253: "�誤梳嵓ｼ�ｰ",
                254: "��ｶ倣葺�ｰ",
                255: "奝�﨑ｴ�ｴ�ｰ",
                256: "��ｽ",
                257: "�ｴ峵�",
                258: "�ｸ�ｼ�ｰ��",
                259: "孖ｸ��",
                260: "��緋ｸｰ�ｰ",
                261: "��ｹｨ��ｶ�",
                262: "�肥矛�們│�ｼ",
                263: "�晝ｸｰ",
                264: "德俾ｻ常死��",
                265: "�菩侠�ｨ�ｬ�ｰ",
                266: "���ｰ��",
                267: "�川硫�倆椈",
                268: "�ｩ��",
                269: "��ｰ�",
                270: "��垈�ｸ",
                271: "孖ｸ�ｭ",
                272: "�ｭ﨑�",
                273: "彧ｬ�晧ぎ﨑ｭ",
                274: "�ｰ��",
                275: "�誤ｦｬ�母ｸｰ",
                276: "��ｲｭ�懦椈",
                277: "�､��ｽ被敢",
                278: "�ｬ�ｬ�ｴ增ｴ",
                279: "�ｬ�､�",
                280: "�ｨ孖ｸ�ｬ�ｰ",
                281: "﨑倆宙",
                282: "夋�ｳ川��ｨ�ｬ�ｰ",
                283: "�ｽ�ｰ�ｴ�ｰ",
                284: "��剩",
                285: "�､墲ｬ�､��",
                286: "�餓攤",
                287: "�ｬ嵓��溢亨",
                288: "�尖�",
                289: "��懍ｱ�ｸｰ",
                290: "��ｰ�倆椈",
                291: "�､�ｴ��",
                292: "�尖ｰ罷凶�俾ｸｰ",
                293: "�ｴ嶸ｸ��",
                294: "�俯肌��",
                295: "�ｬ�､奓ｰ寘ｼ�",
                296: "�ｸ�､孖ｸ�ｼ",
                297: "��┷��侃",
                298: "彧罷豆彧罷豆��侃",
                299: "�罷�溢擽�逸ぇ",
                300: "彧呱��ｴ",
                301: "��擽�､�ｼ",
                302: "�罷釜甯�",
                303: "�護愍��半�ｰ�ｰ",
                304: "﨑們擽寘ｼ�ｴ�ｴ�､",
                305: "�ｹ��淀��",
                306: "�誤�溢擽增ｬ增ｴ��",
                307: "�罷攵�､孖ｸ��",
                308: "﨑們擽�罹｡懍ｺ尖�",
                309: "�罷ｩｧ寬��",
                310: "��倆う�ｰ",
                311: "�ｨ�罷ｳｼ",
                312: "��｡罹ｧ逸��ｼ嵓ｼ",
                313: "�ｰ�南垪��",
                314: "�川牟�､奓ｰ",
                315: "�､��梭孖ｸ",
                316: "��ヨ�ｬ��",
                317: "�肥��餓攤",
                318: "��幎ｰ罷梃",
                319: "�溢���",
                320: "峵嵓ｼ�ｬ",
                321: "��ｧ�ｴ�ｰ",
                322: "�肥侃�ｹ甯護寥",
                323: "﨑ｴ�們侃甯護垈甯�",
                324: "�懋ｷｸ�尖ｹ�",
                325: "���死��",
                326: "��奝ｵ�･",
                327: "�､�ｴ�ｴ�ｴ寘ｼ",
                328: "�ｨ�們ｧ�･",
                329: "�壱劇��巡",
                330: "夋�･�",
                331: "�ｨ�ｰ���",
                332: "�罹ｹ�ｰ倆劍",
                333: "���罹ｦ�ｹｨ",
                334: "���ｽ",
                335: "�罷｡�",
                336: "��ｬ�爺ｸｰ",
                337: "�罹椈�､增ｴ��",
                338: "﨑俯糖嵓誤棡孖ｸ",
                339: "�醐〓��",
                340: "�ｰ�ｴ�､�ｴ�ｰ",
                341: "�ｸ�懍�",
                342: "尞ｬ�ｴ�醐��ｼ",
                343: "夋尖ざ�ｰ",
                344: "�ｼ孖ｸ夋懦�",
                345: "�､��ｬ�ｬ嵓�",
                346: "�ｼ��ｴ",
                347: "��メ",
                348: "�ｬ嵓�ｸ罷�溢擽��",
                349: "�ｩ�們ｶ､",
                350: "�晤ｸ罷攵�､孖ｸ",
                351: "��ｲｩ甯�",
                352: "�ｼ�倆血��",
                353: "甯誤ｩｸ�們���",
                354: "�ｬ�ｴ�罷ｶ�､孖ｸ",
                355: "���懍荻�ｰ",
                356: "�瀧�･",
                357: "�ｸ�ｼ增ｴ��擽",
                358: "���ｨ��ｨ�俾ｸｰ",
                359: "�被紛�ｸ",
                360: "�川擽�罹ｳｼ",
                361: "�們悛�護寳",
                362: "�語ｸ壱ｬｼ",
                363: "�川硫�們捩嶸�",
                364: "寬們攤孖ｸ",
                365: "�ｼ��劇�ｰ",
                366: "�懦注",
                367: "�ｽ嶸溢ｰ誤･ｴ�ｰ",
                368: "�被ヨ��侃孖ｸ",
                369: "��奓ｴ",
                370: "�ｸ甯護擽孖ｸ",
                371: "�ｴ�ｵ",
                372: "�ｹ��ｳ德一ｸｰ",
                373: "�溢��",
                374: "�ｴ�們ｧ�ｰ",
                375: "�ｬ�ｴ�肥亨嵓�敢",
                376: "�溢ｧ�餓��ｨ",
                377: "巐誤ｳｵ�餓攤",
                378: "�川牟�懋ｸｰ",
                379: "甯護寥孖ｸ�ｭ",
                380: "��複",
                381: "�ｼ��",
                382: "���ｨ",
                383: "彧雅ざ��擽",
                384: "甯護寥�､��",
                385: "��懍侃��",
                386: "嶸ｼ�ｴ�ｰ",
                387: "��棗�俯ｬｴ�ｰ",
                388: "���ｼ�ｨ",
                389: "�ｰ�ｵ",
                390: "��封��",
                391: "﨑倆敢�､��",
                392: "��ｿ���ｧ�",
                393: "��梵���",
                394: "嵓誤�溢牟�罹攵�ｴ��",
                395: "�懋ｲｽ",
                396: "甯誤徐夋�",
                397: "�晧ｻ､孖ｸ",
                398: "��ｰ誤･ｴ�ｰ",
                399: "��攪甯誤徐",
                400: "�懍ｧ晤ｲ��ｰ",
                401: "��ｿ�����ｼ",
                402: "�ｨ尞ｭ夋�",
                403: "�川牟�ｬ�們亨",
                404: "�懍�增ｬ�懍侃",
                405: "�誤�溢攪�ｼ�ｨ�菩�",
                406: "�ｩ�倆血��",
                407: "�罹椈�､�､�ｴ��",
                408: "甯護寥�ｬ",
                409: "�罹�溢攤寬��",
                410: "��ｳｵ甯�",
                411: "�ｰ﨑ｩ�ｬ�ｬ",
                412: "�尖ц��ｼ",
                413: "�誤�溢擽�誤ｲ�糖",
                414: "���倆椈",
                415: "�緋ｿ肥ｹ俾ｸｰ",
                416: "�ｰ���見孖ｸ",
                417: "�們●�誤ｪｨ",
                418: "�壱ｦｿ寬��",
                419: "�溢ぎ夋�",
                420: "�ｼ�誤ｭ餓ｹ�",
                421: "������",
                422: "�一ｰ懍淀��",
                423: "�ｼ�護淀��",
                424: "�一ｽ�淀��",
                425: "�ｼ�ｵ",
                426: "��撕尞ｭ夋�",
                427: "�ｬ�ｴ�肥ｻ､奓ｰ",
                428: "�ｬ�川攪�菩ｹ俾ｸｰ",
                429: "�ｸ�ｬ�ｷ",
                430: "�ｬ�､奓ｰ�尖�",
                431: "�晨��ｼ��",
                432: "�一ｰ懍�懋ｱｰ",
                433: "孖ｸ�ｭ�ｸ",
                434: "�ｩ�ｱ�ｰ",
                435: "�ｩ��",
                436: "��硫",
                437: "�ｬ嵓�侃奝ｰ",
                438: "甯護寥弴ｩ",
                439: "�肥�尞ｬ",
                440: "增ｬ�懍侃尞ｬ�ｴ��",
                441: "�肥侃孖ｸ�逸敢",
                442: "��擽�ｸ嵭､��",
                443: "�一ｷｸ�ｷ��",
                444: "�､奝､�川ｧ",
                445: "��嶸ｹ",
                446: "�､奛肥侃��",
                447: "峵�ｶ�ｰ",
                448: "�俯共",
                449: "�ｬ甯川攪�餓ｹ�",
                450: "�誤�壱ｨｹ�ｰ",
                451: "�ｨ���",
                452: "�ｰ�懦紛�ｸ",
                453: "��ｿ����懦敢",
                454: "�ｵ�ｩ��ｹ",
                455: "�ｩ�ｴ��ｹ",
                456: "巐誤ｳｵ��ｹ",
                457: "�瀧あ�菩ｹ俾ｸｰ",
                458: "�罷ｸ肥牟夋�",
                459: "�懋ｰ�攪尞ｬ巐ｨ",
                460: "�ｵ���壱卿",
                461: "�溢柑�ｬ�､",
                462: "�ｵ�ｬ��",
                463: "�一ｷｸ�溢侃奝ｰ",
                464: "�､增ｬ嶹",
                465: "�罹糖嵓誤�溢牟",
                466: "�ｴ��復�罷梃",
                467: "���共�ｴ��",
                468: "�戦��一ｸｰ",
                469: "��ｴ�懋ｰ��",
                470: "��懍��ｴ",
                471: "甯護寥�ｰ�ｴ",
                472: "�尖鵠�ｸ",
                473: "�ｬ�ｴ�肥�增ｬ",
                474: "���溢�增ｬ",
                475: "�罷粕寘ｼ�",
                476: "�����ｨ",
                477: "奛罷�逸う�､�懍侃",
                478: "�､��｣ｸ",
                479: "�ｨ�ｴ�ｨ�ｬ�ｰ",
                480: "��牟弡�ｦｬ�ｰ",
                481: "�一ｽ�橿�ｰ�ｰ",
                482: "�､�ｼ�ｨ�ｴ��",
                483: "�俯ｹ�ｶ､",
                484: "嵭､��ｴ�ｲ�",
                485: "�ｱ增ｬ�罹��ｴ��",
                486: "�ｼ�駕敢�ｭ�ｼ",
                487: "�ｼ�縄ｸｰ",
                488: "�逸敢�懍ｰｨ�",
                489: "�ｬ�ｬ寀�ｰ",
                490: "�懦ぇ",
                491: "���罹糖��",
                492: "�作桷��",
                493: "�ｬ嵓誤ｹ�",
                494: "�呱｣誤ｧ誤豆�ｰ",
                495: "�ｹ���ｼ�",
                496: "�誤ｦｼ�ｸ��",
                497: "�川ｽ罷ｳｴ�ｴ�､",
                498: "�ｼ�溢幣��",
                499: "增ｴ�ｬ�ｴ�､�ｨ�ｸ",
                500: "�ｴ�懍侃孖ｸ甯護寥",
                501: "甯ｨ�､孖ｸ���",
                502: "�ｬ�ｴ�懍ｲｴ�ｸ�",
                503: "�ｴ夋�",
                504: "�作ｧ一ｹｨ�ｰ",
                505: "�們悛甯誤徐",
                506: "�卓メ�ｨ��",
                507: "嵓�ｦｬ尞ｴ",
                508: "�ｰ�ｴ�ｴ�ｸ�",
                509: "�ｰ��､�俾ｸｰ",
                510: "�逸��ｰ�ｰ",
                511: "�懍��ｸ�ｨ�ｰ",
                512: "��增ｬ�ｬ��",
                513: "�ｸ�ｬ夋��",
                514: "�川��夛ｸｰ",
                515: "�ｩ�ｨ�ｸ�ｰ",
                516: "�ｰ嵓�敢甯ｨ�､",
                517: "�ｰ�･",
                518: "�ｼ�俯ｧｹ�ｸ",
                519: "�一ｽ�攪�ｹ�ｸ",
                520: "峵�俯ｧｹ�ｸ",
                521: "�ｼ孖ｸ�ｴ�ｸ�",
                522: "�誤�溢攪�﨑ｭ",
                523: "��ｳ��ｴ�ｰ",
                524: "�ｼ�護葵�ｰ",
                525: "�罹椈�､奛護攵",
                526: "��ｰ�",
                527: "�ｼ�駕敢�ｭ�､孖ｸ",
                528: "��ｼ�罹ｳｼ孖ｸ",
                529: "�罹ｦｴ�ｼ�ｴ��",
                530: "�罷ｸ肥ｴ�",
                531: "﨑倆敢�､夋ｬ嵓�",
                532: "�ｰ�懦仂",
                533: "�ｱ�､�ｬ�ｴ�ｼ",
                534: "�ｸ�罷�溢擽��",
                535: "德逸敢�､夋ｬ嵓�",
                536: "�ｸ�們侃�ｹ��",
                537: "﨑俯糖�､�ｬ",
                538: "�被款���",
                539: "�們擽孖ｸ��侃孖ｸ",
                540: "�ｬ�ｴ�罷ｸ誤�溢擽增ｬ",
                541: "�､��売�ｨ�俾ｸｰ",
                542: "尞ｭ峵�",
                543: "��売�罹ｸ誤�溢擽增ｬ",
                544: "�ｰ�ｴ�護�",
                545: "嶹肥両夋�",
                546: "奛醐〓�ｸ��侃奓ｰ",
                547: "�幎���",
                548: "����攪�ｼ",
                549: "�ｼ�ｴ�呷捩�ｸ��",
                550: "�語ｲｩ",
                551: "岺ｸ�ｸ�一ｽ�",
                552: "�一ｽ�ｶ､",
                553: "嵓�ｦｬ�壱ｳｼ孖ｸ",
                554: "�罹糖嵓誤�溢牟",
                555: "�被〓��寃",
                556: "���罹ｦ�蜜�ｬ�ｰ",
                557: "V�罹ц�溢擽孖ｸ",
                558: "增ｬ�懍侃嵓誤�溢桷",
                559: "增ｬ�懍侃�ｬ��",
                560: "嵓誤攵�駕売�溢侃",
                561: "�壱｣ｻ�罷凶�ｸ�誤ｧ賀ｸｰ",
                562: "孖ｸ�ｼ",
                563: "�ｼ�ｬ�ｰ",
                564: "�溢��∴��└孖ｸ",
                565: "�溢ｧ�餓攵�ｨ",
                566: "���､孖ｸ�､�ｴ��",
                567: "﨑ｼ�ｬ��",
                568: "��ｴ�爺ｸｰ",
                569: "嵓誤攵�､�溢Ζ��",
                570: "甯誤攵�ｼ�ｼ�ｨ�",
                571: "�ｲ�們��ｼ",
                572: "��ｳｴ�ｼ",
                573: "嵓�ｦｬ�壱糖�ｼ�ｴ",
                574: "�ｨ�鷺ｳｴ�ｴ�､",
                575: "�雅ｧ尖ざ�賀ｸｰ",
                576: "�､�卓牟�殊ｸｰ",
                577: "�罹�溢攤墲､�､",
                578: "孖ｸ�ｭ���",
                579: "嵓誤攵�語ｰ��",
                580: "�ｸ�們侃﨑�糖",
                581: "�ｸ�､孖ｸ﨑�糖",
                582: "�｡��",
                583: "�俾ｷｼ�ｰ�ｬ�ｰ",
                584: "�肥�菩攪�罷梃",
                585: "�ｸ尞ｬ�､",
                586: "尞ｭ�醐血",
                587: "寬們牟�ｬ��",
                588: "墲ｹ�､��",
                589: "�懦紛��ｰ",
                590: "��ｰ�ｴ�ｼ�ｰ",
                591: "�､�ｴ��侃奝ｰ",
                592: "�､甯��侃孖ｸ",
                593: "�ｴ�ｨ�戦凰",
                594: "�ｼ�俯ｦｬ�",
                595: "�､��ｬ嵓誤�溢桷",
                596: "�壱豆���",
                597: "��｡罹ｧ壱ｯｸ�､孖ｸ",
                598: "�ｴ��血",
                599: "���逸敢�ｩ",
                600: "��ｧ�",
                601: "��､�ｨ孖ｸ�､",
                602: "�専ｸｰ�･�ｰ��",
                603: "﨑ｴ嵓ｼ夋��",
                604: "�ｼ�駕敢�ｭ﨑�糖",
                605: "�､��ｬ�､�ｸ",
                606: "�倣葺",
                607: "�川乱�川棕�ｰ",
                608: "�壱｡ｱ�壱｡ｱ�壱徐��",
                609: "�ｼ���ｶ��",
                610: "��胸德溢��川｣ｼ�ｰ",
                611: "�賀ｲｨ�呟ｸｰ",
                612: "�ｸ�懍垈寬��",
                613: "�ｰ�､��",
                614: "�ｬ�ｰ��糖����",
                615: "�ｬ�ｰ��糖�ｨ�ｴ��",
                616: "�ｸ�ｼ�ｴ�懦小�､",
                617: "甯誤ｩｸ�俯ｹ�",
                618: "�ｼ�川攪甯誤徐",
                619: "�ｨ���們ｹｼ",
                620: "嶹罷｣｡�川��",
                621: "�ｴ�ｨ�尖洳��",
                622: "�ｸ孖ｸ�ｼ��懍牟夋�",
                623: "�ｸ孖ｸ�ｼ��懍牟夋�",
                624: "���･�ｴ�碕ｲｩ�ｬ��",
                625: "���･�ｴ�碕ｲｩ�ｬ��",
                626: "甯護擽�尖共�ｴ�醐��們亨",
                627: "甯護擽�尖共�ｴ�醐��們亨",
                628: "���罹糖尞ｬ�ｴ�誤莫�ｬ孖ｸ",
                629: "���罹糖尞ｬ�ｴ�誤莫�ｬ孖ｸ",
                630: "�ｼ�ｴ�簿棡�懍丶��",
                631: "�ｼ�ｴ�簿棡�懍丶��",
                632: "�肥ｦ溢濫�懦抄",
                633: "�肥ｦ溢濫�懦抄",
                634: "�壱劇尞ｬ�晨嚮��ｰｸ",
                635: "�壱劇尞ｬ�晨嚮��ｰｸ",
                636: "�ｴ﨑懍部�ｼ�懍攪���ｸ",
                637: "�ｴ﨑懍部�ｼ�懍攪���ｸ",
                638: "�溢對�們│�ｰ�ｩ",
                639: "�溢對�們│�ｰ�ｩ",
                640: "�､�ｴ�ｴ�ｹ峵嵓誤�溢桷",
                641: "�､�ｴ�ｴ�ｹ峵嵓誤�溢桷",
                642: "�逸詐��ｿ�����､�ｴ��",
                643: "�逸詐��ｿ�����､�ｴ��",
                644: "�罷｣ｸ�､�ｸ�卓侃孖ｸ�ｼ",
                645: "�罷｣ｸ�､�ｸ�卓侃孖ｸ�ｼ",
                646: "�､甯醐せ�ｰ��ｼ孖ｸ",
                647: "�､甯醐せ�ｰ��ｼ孖ｸ",
                648: "�･�罹ｩ溢ぎ�ｴ�誤�溢擽�､",
                649: "�･�罹ｩ溢ぎ�ｴ�誤�溢擽�､",
                650: "�溢擽�菩ｧ�､嵓�ｦｬ��",
                651: "�溢擽�菩ｧ�､嵓�ｦｬ��",
                652: "�ｼ寀ｰ�肥擽孖ｸ�罹椈�､��",
                653: "�ｼ寀ｰ�肥擽孖ｸ�罹椈�､��",
                654: "�罷棘嶹�ｴ增ｴ�ｽ�､",
                655: "�罷棘嶹�ｴ增ｴ�ｽ�､",
                656: "�ｬ�罷ｦｬ�､夋��見孖ｸ",
                657: "�ｬ�罷ｦｬ�､夋��見孖ｸ",
                658: "﨑�ざ嵓ｼ�ｴ��",
                659: "�ｨ�俯ｪｨ�ｼ�ｰ",
                660: "�誤ｘ�尖ｧ溢梵",
                661: "奝��們ｹｴ",
                662: "�ｸ�ｼ�専ｿｰ�､�ｰ",
                663: "DD�俯ｦｬ�ｴ孖ｸ",
                664: "�ｼ�ｰ峵溢符�ｬ��",
                665: "��擽�､﨑ｴ�ｸ",
                666: "嵓誤攵�醐梵",
                667: "10�誤ｧ壱�･",
                668: "德倆擅��",
                669: "�罷攵�罷�溢擽��",
                670: "�俯ｭ�梹",
                671: "�､尞ｬ孖ｸ�ｼ�ｴ孖ｸ",
                672: "��共",
                673: "�壱ｯｼ﨑ｴ��ｰ",
                674: "�ｴ�懍侃孖ｸ�ｰ�ｴ",
                675: "��･�誤･ｴ�ｰ",
                676: "��ｰ�ｨ�ｽ�ｨ",
                677: "�ｵ�､�ｷ",
                678: "�ｬ�ｴ�被符��",
                679: "�､�ｼ�､�ｰ",
                680: "�一ｽ�ｱ�ｰ�",
                681: "�ｰ�ｴ�､�ｴ�ｰ",
                682: "�溢ぎ�ｴ�ｰ",
                683: "�､嵓ｼ�懍侃��",
                684: "�､�逸敢嶸ｼ",
                685: "�倣剩",
                686: "���ｬ��侃",
                687: "�肥牟寘ｼ�溢�",
                688: "孖ｸ�懦半�ｬ墲･",
                689: "�弴�",
                690: "��ｬ�尖�",
                691: "�､��ｼ�ｸ�ｴ��",
                692: "�罹椈�､﨑ｴ�ｸ",
                693: "�ｸ�ｨ�醐恫�尖･ｴ�ｰ",
                694: "�､�罹攵���ｼ",
                695: "���腹�懍垈�溢侃孖ｸ�ｼ�ｴ增ｬ",
                696: "﨑們擽寘ｼ�､增ｬ增ｬ�ｬ��",
                697: "�罷共�們峡尞ｬ��",
                698: "�誤｡罹攵�們�嶸ｸ��",
                699: "���ｱ夋逸仂奣ｴ",
                700: "�ｼ�ｴ孖ｸ�晧�嵓�攵�ｴ��",
                701: "��峡�俾ｳｵ�ｩ",
                702: "�們攤�ｴ�ｼ��､孖ｸ",
                703: "�､�ｬ��ｦ溢活寘ｼ�ｸ��",
                704: "孖ｸ�ｩ�ｸ",
                705: "嵓誤｢ｰ�ｴ�尖�",
                706: "�ｬ�ｴ�被舷",
                707: "��物�俯ｰ懋ｵｬ�ｴ�ｰ",
                708: "���ｳｸ",
                709: "�｡���",
                710: "��ｿ���ｸ誤�溢擽增ｬ",
                711: "嵓�ｦｬ�俯�溢擽�",
                712: "���侃寀ｸ",
                713: "�被��､�罹攵�ｴ��",
                714: "����溢擽",
                715: "�壱ｬｼ�ｸ��ｷｸ��",
                716: "�誤ｦｬ�ｬ�ｰ�罷伐��",
                717: "�川硫�俯ｶ��",
                718: "�寀ｰ�ｴ夋�",
                719: "1000�誤ｳｼ孖ｸ",
                720: "�懍ｧ晨陸��",
                721: "嵓誤攵�､�逸半�､孖ｸ",
                722: "尞ｬ奝､��ｴ�",
                723: "﨑俯釜����ｰ�罷ｩｸ�晧攪��",
                724: "���､�ｸ�､�､��",
                725: "�ｸ�ｼ�ｴ孖ｸ�罷椈�､奓ｰ",
                726: "妤ｬ�･妤ｬ�･嵓��誤糖夋��",
                727: "�溢擽�肥名�川ｧ�､奝ｰ",
                728: "�誤�溢擽�菩��ｸ��敢",
                729: "甯護ｰ醐血�護複�",
                730: "�ｸ�ｩ�ｸ�ｩ�懦舞",
                731: "�･�､�･�､尞ｴ",
                732: "嵓ｼ�ｴ嵓ｼ�ｴ�ｬ��",
                733: "�晧���ｸ�",
                734: "�誤ｦｿ�誤ｦｿ�ｼ��",
                735: "�ｴ��ｴ���",
                736: "�ｸ�ｸ�､�ｼ",
                737: "��ｷｸ��ｷｸ�ｴ",
                738: "�･�･��ｲ�",
                739: "��ｽ�売�懍侃孖ｸ",
                740: "�們ｧ晤ｰ們ｧ晧侃奝ｰ",
                741: "�護擽�護擽�誤�溢擽增ｬ",
                742: "�罷ｸ被死��",
                743: "�､�ｴ��",
                744: "�､�ｴ�･�､尞ｬ",
                745: "�ｸ�､�橲梭�ｰ",
                746: "�ｼ����恐�ｰ",
                747: "�ｼ��晤┘�ｰ",
                748: "�ｰ�們攪��",
                749: "夋�ｴ�ｷ",
                750: "�壱ｲ母ｰ�ｨ",
                751: "�罹椈�､����",
                752: "�､�ｼ巐�",
                753: "�ｸ�ｴ�ｳ德一ｸｰ",
                754: "��ｲｩ��ｬ",
                755: "��ｰ�ｸ�ｼ�ｰ",
                756: "�被敢�ｴ�ｸ�",
                757: "�､�ｴ��",
                758: "�､�ｴ��",
                759: "�､�ｴ�ｬ��",
                760: "�､�ｴ�ｴ夋�",
                761: "�､�ｴ�逸�",
                762: "�､�ｴ﨑��懍垈",
                763: "�､�ｴ��擽�､",
                764: "�､�ｴ���罹糖",
                765: "�､�ｴ�､孖ｸ�ｼ",
                766: "�､�ｴ�懦敢",
                767: "�､�ｴ寬們牟�ｬ",
                768: "�､�ｴ�罹攵�ｰ",
                769: "�､�ｴ�ｬ�ｴ��",
                770: "�､�ｴ��",
                771: "�､�ｴ�ｴ�､",
                772: "�､�ｴ��〓",
                773: "�､�ｴ�ｸ�們侃",
                774: "�､�ｴ�､寀ｸ",
                775: "�護垪��敢",
                776: "�罷粕嵓��溢侃",
                777: "�ｰ�罷�溢擽��",
                778: "�罹涵�ｴ夋�",
                779: "�滝ｲ誤梱",
                780: "嶹肥両�ｼ",
                781: "�ｰ�們ｰｸ",
                782: "�ｰ�倆ヤ",
                783: "�､�ｼ弴�",
                784: "��ｴ�罹ｸ誤�溢擽�､",
                785: "���誤･ｴ�ｰ",
                786: "�､��糖�ｼ�ｴ��",
                787: "�ｬ�ｼ�ｰ",
                788: "G�倆椈",
                789: "�護垪增ｬ�們亨",
                790: "�尖鵠�､甯",
                791: "�晤ｪ�攪�ｼ�ｩ�ｸ",
                792: "�罷｡懦せ",
                793: "�ｬ��攪�誤･ｴ�ｰ",
                794: "�､夋�ｴ�､孖ｸ",
                795: "�ｴ﨑罹共�ｴ��",
                796: "���懋ｴ卓│",
                797: "��ｴ�懦小�､",
                798: "��擽�ｸ�､�ｬ",
                799: "�､��ｼ�ｷ",
                800: "�被��､��",
                801: "�ｸ�肥ｦ�",
                802: "�ｸ�､孖ｸ��侃孖ｸ",
                803: "�ｸ�們侃�ｬ�ｼ�ｴ��",
                804: "�ｼ�ｴ�簿ｳｼ孖ｸ",
                805: "���倆血��",
                806: "��慣﨑俯株�ｼ�ｩ",
                807: "�逸握�俯ｶ一ｽ�",
                808: "��逐�ｴ",
                809: "尞ｴ奓ｰ��ｴ�､孖ｸ",
                810: "��晝ｰ�､",
                811: "�肥ｹｭ",
                812: "塚ｵ奓ｴ",
                813: "孖ｸ�ｬ嵓護腐�",
                814: "�罷ｸ肥恙",
                815: "�ｴ�ｬ�俯劇�",
                816: "�母ｸ德�",
                817: "�被搗�倣ム",
                818: "�俯･們硫夋",
                819: "�ｬ�被売�ｬ��",
                820: "�罹椈�､�尖ц�",
                821: "�ｼ�ｴ�呱株�懍│",
                822: "夋�､�ｴ�罷ｶ��",
                823: "�罹則�ｨ�ｰ",
                824: "�罷ｦｬ�尖糖�懍侃",
                825: "��侃孖ｸ��ｹ�敢",
                826: "�ｬ�ｩ﨑懍｣ｼ�ｸ",
                827: "寬們擽夋逸���",
                828: "�ｰ�ｬ�ｴ�ｬ��",
                829: "甯護寥�懦売孖ｸ",
                830: "�肥��｡�､",
                831: "��攪尞ｭ峵�",
                832: "����攪德�",
                833: "��ｩ��",
                834: "�ｨ�ｴ�醐�增ｴ",
                835: "增ｴ�罹｡罹ｸ罷攵�､孖ｸ",
                836: "�呷げ�罷梃",
                837: "�ｹ�ｬ�們ｶ､",
                838: "�､�ｴ�幀ｸｰ",
                839: "��ｹｨ�罹ｰ�",
                840: "�､�ｼ��",
                841: "�懍ｶ肥ｧ﨑�",
                842: "�作┳",
                843: "3�ｰ嶹肥ざ",
                844: "�ｱ��ｼ嵂�",
                845: "��ｲ�懍､啄血",
                846: "�ｬ�罷梃尞ｭ峵�",
                847: "�一ｰ懦少峵�",
                848: "�ｴ�ｬ�倆少峵�",
                849: "�溢柑�ｬ�俾ｸｰ��",
                850: "�誤�溢擽�護ｰｨ�",
                851: "奛誤攵��侃孖ｸ",
                852: "�､�壱糖孖ｸ�ｩ",
                853: "�懋ｿ溢ｹ們ｰ碕ｸｰ",
                854: "�ｱ��",
                855: "�ｨ�ｸ�們ｽ罹ｦｬ��",
                856: "﨑懦倹�ｴ�ｰ",
                857: "�懦敢寬��",
                858: "﨑俯ｰ罷└�懍卵�ｰ�､",
                859: "弴��､﨑",
                860: "�作ｰ鷺ｲ��ｰ",
                861: "��擽�､�､嵓ｼ��",
                862: "���語ｲｩ",
                863: "巐護��俾ｸｰ��",
                864: "�語ｸ溢�溢擽",
                865: "孖ｸ�ｬ嵓誤共�ｴ��",
                866: "墲ｬ�ｬ�､﨑",
                867: "���ｴ�ｸ�ｬ�ｰ",
                868: "�懍ざ�殊ｸｰ",
                869: "��ｰ�ｰｸ",
                870: "孖ｸ�ｭ嵓誤攵��",
                871: "嵓誤�溢牟�｡",
                872: "��ｿ���侃奛�",
                873: "�溢擽�簿ｶ�",
                874: "�ｨ�罹洳��",
                875: "�ｬ�ｴ�罷ｸ罷�溢擽��",
                876: "﨑們擽�罹｡懍侃甯",
                877: "�ｴ夋�､孖ｸ�懦半",
                878: "�｡��誤�溢擽增ｬ",
                879: "�ｼ�ｴ孖ｸ�晤糖�ｼ�ｴ��",
                880: "�ｬ�ｬ�尖･ｴ�ｰ",
                881: "�ｰ��ｰ懋ｷｸ",
                882: "�簿ｦｬ�簿処",
                883: "�､�ｽ",
                884: "�ｬ�､�､�ｰ",
                885: "�懍ｲ呰葺�ｰ",
                886: "�ｬ�ｼ�ｼ�ｹ�ｰ",
                887: "﨑們擽寘ｼ�罹ｦｴ",
                888: "孖ｸ�壱ｹ�",
                889: "����們｣ｼ�ｹ",
                890: "��ｨｸ�尖�",
                891: "�尖��們ｹｼ",
                892: "��ｴ卓訣�ｩ",
                893: "�ｰ�﨑ｴ�ｸ",
                894: "�呟ｰ夥搆",
                895: "��ｿ���ｻ､奓ｰ",
                896: "�溢複�",
                897: "�､增ｬ�｡�",
                898: "尞ｬ�ｴ�護複�",
                899: "甯護擽孖ｸ�｡�",
                900: "�､��ｬ�｡�",
                901: "�罷洳�罹ｬｸ",
                902: "弴們��恫��小",
                903: "�罹淇��",
                904: "�ｩ�ｴ�ｩ�晧擽"
              },
              tokusei: {
                1: "��ｷｨ",
                2: "�罷ｹ�",
                3: "���",
                4: "��握�ｴ�･",
                5: "�ｹ�ｨ�ｸ",
                6: "�ｵ�ｰ",
                7: "���ｰ",
                8: "�ｨ�們葵�ｰ",
                9: "�菩��ｸｰ",
                10: "�菩��",
                11: "���",
                12: "�緋ｰ�",
                13: "���ｨ���",
                14: "�ｵ��",
                15: "�壱ｩｴ",
                16: "���",
                17: "�ｴ�ｭ",
                18: "夋�､�ｴ�罷ｶ一ｽ�",
                19: "�ｸ��",
                20: "�溢擽寬們擽�､",
                21: "彧｡��",
                22: "���",
                23: "�ｸ�ｼ�尖ｰ溲ｸｰ",
                24: "�護ｹ�﨑懦半�",
                25: "�一ｰ�ｬ�俯ｶ��",
                26: "���",
                27: "尞ｬ��",
                28: "�ｱ增ｬ��",
                29: "增ｴ�ｬ�ｴ�罷粕",
                30: "�川硫巐誤ｳｵ",
                31: "嵓ｼ�ｰ�ｨ",
                32: "﨑俯釜�們捩��",
                33: "�ｱ�ｱ",
                34: "�ｽ�晧�",
                35: "�懋ｴ�",
                36: "孖ｸ�溢擽�､",
                37: "�懦葺�･�ｬ",
                38: "��ｰ��",
                39: "�菩侠�･",
                40: "�一ｷｸ�溢攪�ｴ�･",
                41: "�們攪���ｼ",
                42: "�尖�･",
                43: "�ｩ��",
                44: "�野捩�卓亨",
                45: "�ｨ�俯あ�ｼ",
                46: "嵓��溢�",
                47: "�専ｺｼ�ｴ��ｩ",
                48: "�ｼ�碕ｸｰ��",
                49: "�一ｽ�ｪｸ",
                50: "��｣ｼ",
                51: "���ｴ�懍垓��",
                52: "�ｴ�･�滝ｲ�",
                53: "嵓ｽ��",
                54: "�護愍��",
                55: "�們囎",
                56: "嵭､�ｱ嵭､�ｱ�罷粕",
                57: "嵓誤洳�､",
                58: "�溢擽�溢侃",
                59: "�ｰ��血",
                60: "�川ｰｩ",
                61: "夋逸半",
                62: "�ｼ�ｱ",
                63: "�ｴ��復��釜",
                64: "﨑ｴ�川複",
                65: "�ｬ��",
                66: "�ｹ嶹�",
                67: "�雅･�",
                68: "�誤�溢攪�誤ｦｼ",
                69: "�誤ｨｸ�ｬ",
                70: "���",
                71: "�罹ｯｸ��･",
                72: "�俾ｸｰ�卓桝",
                73: "﨑們摩�ｰ�ｰ",
                74: "�懍�﨑懦椈",
                75: "�ｰ���ｰ卓亶",
                76: "�川牟��",
                77: "�溢ｧ�専ｱｸ��",
                78: "��ｸｰ�肥ｧ�",
                79: "妤ｬ��峡",
                80: "�一ｵｴ�俯ｧ溢搆",
                81: "�溢葵�ｰ",
                82: "�ｹ�ｴ",
                83: "����俾ｲｽ嶸�",
                84: "�｡��",
                85: "�ｴ�ｴ",
                86: "�ｨ��",
                87: "�ｴ�ｰ嵓ｼ�",
                88: "�､�ｴ�罹糖",
                89: "���ｼ�ｹ",
                90: "尞ｬ�ｴ�醐梵",
                91: "��搗�･",
                92: "�､墲ｬ��〓",
                93: "�餓ｴ雅ｰ罷粕",
                94: "��甯護寥",
                95: "�鷺ｳｴ",
                96: "�ｸ�川侃墲ｨ",
                97: "�､�們擽寘ｼ",
                98: "�､��ｰ��",
                99: "�ｸ���",
                100: "�懋ｰ�ｲ語ｸｰ",
                101: "奛醐〓�溢�",
                102: "�ｬ嵓�ｰ��",
                103: "�懦握��",
                104: "寀�ｨ�ｰ",
                105: "��ｴ",
                106: "��尞ｭ",
                107: "��利�溢ｧ",
                108: "�溢ｧ�ｽ",
                109: "�懍ｧ�",
                110: "�餓譜�ｽ",
                111: "﨑�┣",
                112: "�ｬ�懍侃夋孖ｸ",
                113: "�ｰ�ｱ",
                114: "�溢､瀧ｬｼ",
                115: "��擽�､�罷粕",
                116: "﨑俯糖��",
                117: "�逸詐�ｨ�ｬ�ｰ",
                118: "��ｨ�ｼ�ｰ",
                119: "奝ｵ�ｰ",
                120: "�ｴ甯川ぎ甯�",
                121: "�寀ｰ夋��",
                122: "嵓誤攵�語ｸｰ嵓�敢",
                123: "�們擽孖ｸ�肥牟",
                124: "�們●�尖ｲ�ｦ�",
                125: "�ｰ�ｩ�､��",
                126: "�ｬ���ｸ�ｬ�ｰ",
                127: "�ｴ�･��",
                128: "�､�ｰ",
                129: "�ｴ�ｰ�･",
                130: "��ｼ�幗捩�罷粕",
                131: "�們悛�俯ｧ溢搆",
                132: "嵓��誤糖���",
                133: "�ｨ�ｴ��ｰ卓亶",
                134: "嵭､��ｩ被ヨ",
                135: "�ｼ�ｴ孖ｸ�被ヨ",
                136: "�寀ｰ�､��ｼ",
                137: "��少�ｼ",
                138: "�ｴ尞ｭ�ｼ",
                139: "�倆剳",
                140: "奛罷�逸血��",
                141: "��菩氈�ｴ",
                142: "�ｩ��",
                143: "���",
                144: "�ｬ�晤�･",
                145: "�峵�ｰ��ｴ",
                146: "�ｨ�倆陸�俾ｸｰ",
                147: "�ｸ�ｼ增ｴ�､墲ｨ",
                148: "���尖攵�ｴ��",
                149: "�ｼ�ｨ��",
                150: "�ｴ��",
                151: "寀溢ヨ尞ｬ�ｩ",
                152: "�ｸ�ｼ",
                153: "�専ｸｰ�ｼ��",
                154: "�菩攪�俯ｧ溢搆",
                155: "�ｼ��",
                156: "�､��ｯｸ�ｬ",
                157: "�溢享",
                158: "�縄ｶゎ捩�溢搆",
                159: "�ｨ�們攪德�",
                160: "�����",
                161: "�ｬ�壱ｪｨ��",
                162: "�ｹ�ｬ�俯ｳ�",
                163: "奓ｰ�ｴ�罷�溢擽��",
                164: "奛誤攵�ｼ寀ｰ�",
                165: "��｡罹ｧ壱ｲ��ｼ",
                166: "嵓誤攵�誤ｲ��ｼ",
                167: "�ｼ�ｼ�ｸ��",
                168: "�嶹們梵�ｬ",
                169: "寘ｼ�被敢",
                170: "�､���",
                171: "�ｩ夋�",
                172: "�ｹ�ｰ",
                173: "�ｹ�ｨ�ｬ奓ｱ",
                174: "嵓�ｦｬ�溢侃墲ｨ",
                175: "�､��敢���ｼ",
                176: "�ｰ寀�､��ｹ�",
                177: "�逸注����",
                178: "�緋ｰ�ｰ��",
                179: "峵�ｨ嵓ｼ",
                180: "�ｵ��",
                181: "�ｨ�ｨ﨑罹ｰ懦�",
                182: "寬們牟�ｬ�､墲ｨ",
                183: "�ｸ�壱ｯｸ��",
                184: "�､�ｴ�ｴ�､墲ｨ",
                185: "��川悛��",
                186: "�､增ｬ�､�ｼ",
                187: "寬們牟�ｬ�､�ｼ",
                188: "�､�ｼ�誤�溢擽增ｬ",
                189: "�懍梠�俯ｰ罷共",
                190: "�晧攪��",
                191: "�ｸ夋�､孖ｸ�ｼ",
                192: "��ｬ�･",
                193: "��ｧ晨��ｸ",
                194: "��ｸｰ巐醐半",
                195: "�ｸ�母ｾｸ�母ｵｳ�ｰ",
                196: "�ｴ��復嵂雅徐",
                197: "�ｬ�駆共��",
                198: "���ｵ",
                199: "�倆小",
                200: "�菩ｲ����ｬ",
                201: "�罹∴",
                202: "�溢ｹ們垈�ｰ",
                203: "�専ｲｩ",
                204: "�餓ｴ雅ｳｴ�ｴ�､",
                205: "德尖ｧ�亨嵓�敢",
                206: "�ｼ�駕敢�ｭ�､墲ｨ",
                207: "�懦舞奛護攵",
                208: "�ｴ�ｰ",
                209: "夋�",
                210: "����嶹�",
                211: "�､�懍ｲｴ�ｸ�",
                212: "���",
                213: "�壱劇�一ｹｸ",
                214: "�ｬ�菩攪��淀",
                215: "�ｴ�ｩ�ｼ��ｶ�",
                216: "�ｴ彧ｬ",
                217: "�ｰ奓ｰ�ｬ",
                218: "�ｵ�ｬ�ｵ�ｬ",
                219: "��ｹ�糖�罷粕",
                220: "�護垪﨑倆敢",
                221: "�ｬ�ｬ嵭､�ｴ",
                222: "�ｬ�罹ｲ�",
                223: "嶹被蕗�倆椈",
                224: "��侃孖ｸ��､孖ｸ",
                225: "AR�懍侃奛�",
                226: "�ｼ�駕敢�ｭ�肥擽�､",
                227: "�ｬ�ｴ�罷ｩ肥擽�､",
                228: "�ｸ�､孖ｸ�肥擽�､",
                229: "�ｸ�們侃�肥擽�､",
                230: "�被ヨ嵓�｡懦�孖ｸ",
                231: "�､寬呰┣���",
                232: "嵓�ｦｬ�們符�ｸ",
                233: "�誤�溢攤尞ｬ�､",
                234: "�溢囈�俾ｲ",
                235: "�一ｵｴ�俯ｰｩ甯ｨ",
                236: "�ｬ����",
                237: "�ｼ�碕ｸｰ",
                238: "�懦┷",
                239: "�､增ｬ�ｨ��尖洳�ｸ",
                240: "�ｸ�ｬ��ｨｸ",
                241: "�ｸ��懋ｿ�ｽ�ｸ�ｬ�ｼ",
                242: "�ｳ�ｴ﨑懍侠��",
                243: "�晝ｸｰ�ｰ�",
                244: "寬啄〓��",
                245: "�ｨ�俯ｿ懋ｸｰ",
                246: "�ｼ�護攤��",
                247: "�呷┳",
                248: "��擽�､寬們擽�､",
                249: "甯護寥�､尞ｿ",
                250: "�倆�",
                251: "�ｰ�ｬ�ｴ嵓�ｦｬ",
                252: "�菩ｲ��菩侠",
                253: "�ｸ�晧攪�罷粕",
                254: "����株��仂",
                255: "�ｴ��ｧ�ｽ",
                256: "嶹被蕗�嶹緋ｰ�､",
                257: "甯護侃奛罷ｲ��ｼ",
                258: "�ｬ�ｴ�ｵ�､��ｹ�",
                259: "塚ｵ�罹｡�",
                260: "�ｴ�ｴ��危株�ｼ�ｹ",
                261: "�ｰ�倆復�ｽ",
                262: "孖ｸ�懍ｧ�､奓ｰ",
                263: "�ｩ�倆┳",
                264: "�ｱ�們垪��",
                265: "彧卓攪�ｸ��",
                266: "嶸ｼ�ｰ�ｼ�ｴ",
                267: "嶸ｼ�ｰ�ｼ�ｴ",
                268: "��懍ｧ�危株嵂･�ｰ",
                269: "�們ｹ俯株�ｨ",
                270: "�ｴ�戦劍",
                271: "����俾ｻ作ｧ�",
                272: "�倣剩�們���",
                273: "�ｸ�����ｰ罷粕",
                274: "�罷梃夋�ｰ",
                275: "甯護��ｬ",
                276: "�肥怱�俯･ｴ�ｰ",
                277: "峵鷺�･�懍��",
                278: "�溢擽寀ｰ�ｴ�ｸ�",
                279: "�ｬ�ｹ夋�",
                280: "��ｸｰ�罹ｰ緋ｾｸ�ｰ",
                281: "���嶹懍┳",
                282: "�ｼ增ｬ�ｨ�",
                283: "嶹ｩ�壱ｪｸ",
                284: "�ｬ�呷攪�ｸ��",
                285: "�ｬ�呷攪�",
                286: "�ｬ�呷攪�ｩ��",
                287: "�ｬ�呷攪�ｬ�ｬ",
                288: "��剄�幀ｳ���",
                289: "﨑俯糖���肥ｧ�",
                290: "寬ｸ�ｹ",
                291: "�們ヨ���",
                292: "�壱ｦｬ﨑ｨ",
                293: "�晤劇�･",
                294: "嶸卓硫",
                295: "��ｹ們棗",
                296: "奛護攵��ｨｸ",
                297: "彧呱ｨｹ�ｰ",
                298: "���ｬ�倆椈",
                299: "���",
                300: "�ｬ��",
                301: "�溢メ妤ｬ��",
                302: "�溢メ妤ｬ��",
                303: "�溢メ妤ｬ��",
                304: "�溢メ妤ｬ��",
                305: "��ぎ�ｬ",
                306: "�尖ｯｸ�懍垓�"
              },
              seikaku: {
                0: "�ｸ�･",
                1: "�ｸ�懍它",
                2: "�ｩ��",
                3: "����",
                4: "�懋ｵｬ��擽",
                5: "��ｴ",
                6: "�ｨ��",
                7: "�ｴ�ｬ夋懦初",
                8: "�･�懋ｾｸ�ｬ�ｰ",
                9: "�尖梠",
                10: "��氈�ｴ",
                11: "�ｱ��",
                12: "�ｱ�､",
                13: "��梠",
                14: "�懍ｧ����",
                15: "�ｰ�ｬ",
                16: "�們��",
                17: "�餓��",
                18: "�們､作搆",
                19: "�罹��",
                20: "�ｨ��",
                21: "�護��",
                22: "�ｴ�ｩ",
                23: "����",
                24: "���"
              }
            }
          }
        };
        break;
      case 9:
        e = new class {
          constructor() {
            this.pages = {
              t_common: {
                "#regulation": "蟇ｹ謌倩ｧ��",
                "#available_poke": "蜿ｯ菴ｿ逕ｨ逧�ｮ晏庄譴ｦ",
                "#trainer-tab-text": "隶ｭ扈�ｮｶ謗定｡梧ｦ�",
                "#pokemon-tab-text": "螳晏庄譴ｦ謗定｡梧ｦ�",
                "#open": "荳ｾ蜉樔ｸｭ",
                "#end": "蟾ｲ扈捺據",
                gathering: "扈溯ｮ｡荳ｭ",
                not_join: "譛ｪ蜿りｵ�",
                not_join_battle: "譛ｪ蜿ょ刈豁､蟇ｹ謌倥�",
                not_join_tournament: "譛ｪ蜿ょ刈豁､螟ｧ襍�",
                not_join_friendcompe: "蟆壽悴蜿ょ刈霑�ｼ吩ｼｴ螟ｧ襍帙�",
                win: "WIN",
                lose: "LOSE",
                draw: "DRAW",
                rental: "遘溽畑髦滉ｼ�",
                rank_num: "隨ｬ%d蜷�",
                win_num: "%d閭�",
                lose_num: "%d雍�",
                draw_num: "%d蟷ｳ",
                ok: "�ｯ�ｫ",
                rulename1: "譌�髯仙宛",
                rulename2: "譎ｮ騾夊ｧ��",
                rulename3: "蜿鈴剞隗��",
                rulename4: "譌�髯仙宛",
                rulename5: "譎ｮ騾夊ｧ��",
                rulename6: "蜿鈴剞隗��",
                rulename7: "譌�髯仙宛",
                rulename8: "譎ｮ騾夊ｧ��",
                rulename9: "蜿鈴剞隗��",
                rulename10: "螳俶婿隗����",
                rulename11: "螳俶婿隗����",
                rulename12: "螳俶婿隗����",
                rulename13: "螳俶婿隗����",
                rulename14: "螳俶婿隗����",
                outrange: "譛ｪ荳頑ｦ�"
              },
              t_rankmatchPageTexts: {
                "#title-text": "郤ｧ蛻ｫ蟇ｹ謌�"
              },
              t_my_rankmatchPageTexts: {
                "#title-text": "郤ｧ蛻ｫ蟇ｹ謌俶�扈ｩ隸ｦ諠�",
                "#rate_label": "遘ｯ蛻�"
              },
              t_pokemonrankingPageTexts: {
                "#title-text": "螳晏庄譴ｦ隸ｦ扈�ｿ｡諱ｯ",
                no: "No.",
                ".battle-team-tab-text": "隸ｦ諠�",
                ".when-win-tab-text": "謇灘貞ｯｹ謇区慮",
                ".when-lose-tab-text": "陲ｫ蟇ｹ謇区遠蛟呈慮",
                "kind-tab-battle-team": "荳襍ｷ豺ｻ蜉�蛻ｰ蟇ｹ謌倬弌莨咲噪螳晏庄譴ｦTOP10",
                "kind-tab-battle-win": "霑吝宵螳晏庄譴ｦ謇灘堤噪螳晏庄譴ｦTOP10",
                "kind-tab-battle-lose": "謇灘定ｿ吝宵螳晏庄譴ｦ逧�ｮ晏庄譴ｦTOP10",
                "kind-tab-battle-waza": "諡帛ｼ�",
                "kind-tab-battle-waza-win": "霑吝宵螳晏庄譴ｦ謇灘貞ｯｹ謇区慮謇逕ｨ逧�魚蠑週OP10",
                "kind-tab-battle-waza-lose": "蟇ｹ謇区遠蛟定ｿ吝宵螳晏庄譴ｦ譌ｶ謇逕ｨ逧�魚蠑週OP10",
                "kind-tab-battle-tokusei": "迚ｹ諤ｧ",
                "kind-tab-battle-item": "驕灘�",
                "kind-tab-battle-seikaku": "諤ｧ譬ｼ",
                "kind-tab-battle-terastal": "螟ｪ譎ｶ螻樊ｧ",
                atk: "謾ｻ蜃ｻ",
                def: "髦ｲ蠕｡",
                agi: "騾溷ｺｦ",
                spatk: "迚ｹ謾ｻ",
                spdef: "迚ｹ髦ｲ",
                hyphen: "��"
              },
              t_internetcompetitionPageTexts: {
                "#title-text": "螳俶婿螟ｧ襍�"
              },
              t_internetcompetition_detailPageTexts: {
                "#title-text": "螳俶婿螟ｧ襍幄ｯｦ諠�"
              },
              t_my_internetcompetition_detailPageTexts: {
                "#title-text": "螳俶婿螟ｧ襍幄ｯｦ諠�",
                "#rate_label": "遘ｯ蛻�",
                mydata_dialog_title: "騾画叫菫｡諱ｯ",
                mydata_dialog_text: "譟･逵狗自螳ｶ菫｡諱ｯ",
                mydata_dialog_btn1: "謗貞錐",
                mydata_dialog_btn2: "蟇ｹ謌倬弌莨�"
              },
              t_friendcompetitionPageTexts: {
                "#title-text": "莨吩ｼｴ螟ｧ襍�"
              },
              t_my_friendcompetitionPageTexts: {
                "#title-text": "莨吩ｼｴ螟ｧ襍�",
                ".organizer-label-text": "荳ｻ蜉樊婿",
                ".result-label-text": "謌千ｻｩ",
                ".battleteam-label-text": "蟇ｹ謌倬弌莨�"
              },
              t_friendcompetition_detailPageTexts: {
                "#title-text": "莨吩ｼｴ螟ｧ襍幄ｯｦ諠�"
              },
              t_my_friendcompetition_detailPageTexts: {
                "#title-text": "莨吩ｼｴ螟ｧ襍幄ｯｦ諠�"
              },
              t_battle_teamPageTexts: {
                internetcompe: "螳俶婿螟ｧ襍帛ｯｹ謌倬弌莨�",
                friendcompe: "莨吩ｼｴ螟ｧ襍帛ｯｹ謌倬弌莨�"
              },
              t_mydataselectPageTexts: {
                title_text_rankmatch: "謌醍噪謌千ｻｩ",
                title_text_internetcompe: "螳俶婿螟ｧ襍幄ｯｦ諠�",
                title_text_friendcompe: "莨吩ｼｴ螟ｧ襍�",
                "#dataselect-text": "隸ｷ騾画叫諠ｳ隕∵衍逵区�扈ｩ逧�ｿ晏ｭ俶焚謐ｮ縲�"
              },
              t_tournament_detailPageTexts: {
                "#title-text": "髞ｦ譬�ｵ幄ｯｦ諠�",
                single_elimination: "蜊戊ｴ･豺俶ｱｰ蛻ｶ",
                double_elimination: "蜿瑚ｴ･豺俶ｱｰ蛻ｶ",
                bestX: "%d蠑ｺ",
                Xround: "隨ｬ%d霓ｮ蟇ｹ謌�",
                semi_final: "蜃��閭懈�",
                final: "蜀ｳ閭懈�",
                round_winners: "閭懆�ｻ� 隨ｬ%d霓ｮ蟇ｹ謌�",
                final_winners: "閭懆�ｻ� 隨ｬ%d霓ｮ蟇ｹ謌假ｼ亥�襍幢ｼ�",
                round_losers: "雍･閠�ｻ� 隨ｬ%d霓ｮ蟇ｹ謌�",
                final_losers: "雍･閠�ｻ� 隨ｬ%d霓ｮ蟇ｹ謌假ｼ亥�襍幢ｼ�",
                grandfinal: "蜀ｳ閭懈��域ｻ蜀ｳ襍幢ｼ�",
                coming_soon: "Coming Soon!"
              },
              topPageTexts: {
                "#top-title-text": "鬥夜｡ｵ",
                "#top-mypage-text": "謌醍噪謌千ｻｩ",
                "#top-rankmatch-text": "郤ｧ蛻ｫ蟇ｹ謌�",
                "#top--internetcompe-text": "莠定＃鄂大､ｧ襍�",
                "#top-regulation-text": "螳俶婿蟇ｹ謌倩ｧ��"
              },
              myresult_topPageTexts: {
                "#title-text": "謌醍噪謌千ｻｩ",
                "#rankmatch-text": "郤ｧ蛻ｫ蟇ｹ謌�",
                "#internetcompe-text": "莠定＃鄂大､ｧ襍�",
                "#friendcompe-text": "莨吩ｼｴ螟ｧ襍�"
              },
              myresult_romselectPageTexts: {
                "#title-text": "謌醍噪謌千ｻｩ",
                "#rankmatch-text": "騾画叫貂ｸ謌剰ｽｯ莉ｶ"
              },
              myresult_rankmatchPageTexts: {
                "#title-text": "郤ｧ蛻ｫ蟇ｹ謌俶�扈ｩ隸ｦ諠�",
                "#subtitle1-text": "襍帛ｭ｣菫｡諱ｯ",
                "#sub1_label3": "譟･逵区ｭ､襍帛ｭ｣隸ｦ諠�",
                "#subtitle2-text": "襍帛ｭ｣謌千ｻｩ",
                "#sub2_label1": "蜊墓遠",
                "#sub2_label2": "蜿梧遠",
                "#subtitle3-text": "譛霑醍噪蟇ｹ謌倩ｮｰ蠖�",
                "#sub3_label1": "蜊墓遠",
                "#sub3_label2": "蜿梧遠"
              },
              my_internetcompetition_listPageTexts: {
                "#title-text": "莠定＃鄂大､ｧ襍帑ｸ隗�",
                "#subtitle1-text": "螟ｧ襍帛盾蜉�隶ｰ蠖穂ｸ隗�"
              },
              my_internetcompetition_detailPageTexts: {
                "#title-text": "莠定＃鄂大､ｧ襍帶�扈ｩ隸ｦ諠�",
                "#subtitle1-text": "螟ｧ襍帑ｿ｡諱ｯ",
                "#sub1_label1": "謇逕ｨ貂ｸ謌剰ｽｯ莉ｶ",
                "#sub1_label2": "蟇ｹ謌倩ｧ��",
                "#sub1_label3": "蜿りｵ帑ｺｺ謨ｰ",
                "#sub1_label5": "譟･逵区ｭ､螟ｧ襍幄ｯｦ諠�",
                "#sub1_label6": "螟ｧ襍帶�扈ｩ",
                "#subtitle2-text": "蟇ｹ謌倩ｮｰ蠖�",
                "#sub2_label1": "蜊墓遠",
                "#sub2_label2": "蜿梧遠",
                "#subtitle3-text": "譛霑醍噪蟇ｹ謌倩ｮｰ蠖�",
                "#sub3_label1": "蜊墓遠",
                "#sub3_label2": "蜿梧遠"
              },
              friendcompetition_listPageTexts: {
                "#title-text": "莨吩ｼｴ螟ｧ襍帑ｸ隗�",
                "#subtitle1-text": "螟ｧ襍帛盾蜉�隶ｰ蠖穂ｸ隗�",
                ".organizer-label-text": "荳ｻ蜉櫁ｮｭ扈�ｮｶ蜷�",
                ".joinednum-label-text": "蜿りｵ帑ｺｺ謨ｰ",
                ".more-button-text": "譟･逵区峩螟�"
              },
              my_friendcompetition_detailPageTexts: {
                "#title-text": "莨吩ｼｴ螟ｧ襍帶�扈ｩ隸ｦ諠�",
                "#subtitle1-text": "螟ｧ襍帑ｿ｡諱ｯ",
                "#sub_label1": "螟ｧ襍帶ｦりｦ�",
                "#sub_label2": "荳ｻ蜉櫁ｮｭ扈�ｮｶ蜷�",
                "#sub_label3": "謇逕ｨ貂ｸ謌剰ｽｯ莉ｶ",
                "#sub_label4": "蟇ｹ謌倩ｧ��",
                "#sub_label5": "蜿りｵ帑ｺｺ謨ｰ",
                "#sub_label7": "譟･逵区ｭ､螟ｧ襍幄ｯｦ諠�",
                "#sub_label8": "螟ｧ襍帶�扈ｩ",
                "#subtitle2-text": "蟇ｹ謌倩ｮｰ蠖�"
              },
              friendcompetition_detailPageTexts: {
                "#title-text": "莨吩ｼｴ螟ｧ襍幄ｯｦ諠�",
                "#subtitle1-text": "螟ｧ襍帑ｿ｡諱ｯ",
                "#sub_label1": "螟ｧ襍帶ｦりｦ�",
                "#sub_label2": "荳ｻ蜉櫁ｮｭ扈�ｮｶ蜷�",
                "#sub_label3": "謇逕ｨ貂ｸ謌剰ｽｯ莉ｶ",
                "#sub_label4": "蟇ｹ謌倩ｧ��",
                "#sub_label5": "蜿りｵ帑ｺｺ謨ｰ",
                "#sub1_label13": "譟･逵玖�蟾ｱ逧�賜蜷�",
                "#sub1_label9": "隶ｭ扈�ｮｶ謗定｡梧ｦ�",
                "#sub1_label10": "螳晏庄譴ｦ謗定｡梧ｦ�",
                "#regulationLink": "驥崎ｦ∽ｺ矩｡ｹ/隗��",
                "#eligiblePokemonLink": "蜿ｯ菴ｿ逕ｨ逧�ｮ晏庄譴ｦ"
              },
              rankmatch_detailPageTexts: {
                "#title-text": "郤ｧ蛻ｫ蟇ｹ謌�",
                "#subtitle1-text": "襍帛ｭ｣菫｡諱ｯ",
                "#sub_label2": "蜿りｵ帑ｺｺ謨ｰ",
                "#sub_label3": "驥崎ｦ∽ｺ矩｡ｹ/隗��",
                "#sub_label4": "蜿ｯ菴ｿ逕ｨ逧�ｮ晏庄譴ｦ",
                "#sub_label5": "騾画叫螳晏庄譴ｦ",
                "#sub_label6": "遲幃�",
                "#sub_label7": "譟･逵玖�蟾ｱ逧�賜蜷�",
                "#subtitle2-text": "蟇ｹ謌倩ｮｰ蠖�",
                ".trainer-tab-text": "隶ｭ扈�ｮｶ謗定｡梧ｦ�",
                ".pokemon-tab-text": "螳晏庄譴ｦ謗定｡梧ｦ�"
              },
              internetcompetition_listPageTexts: {
                "#title-text": "莠定＃鄂大､ｧ襍�",
                "#sub_label1": "蜑榊ｾ霑�悉逧�ｺ定＃鄂大､ｧ襍帑ｸ隗�",
                "#sub_label2": "閾ｳ莉贋ｸｺ豁｢荳ｾ蜉樒噪螟ｧ襍�",
                ".more-button-text": "譟･逵区峩螟�"
              },
              internetcompetition_detailPageTexts: {
                "#title-text": "莠定＃鄂大､ｧ襍幄ｯｦ諠�",
                "#subtitle1-text": "螟ｧ襍帑ｿ｡諱ｯ",
                "#sub1_label1": "謇逕ｨ貂ｸ謌剰ｽｯ莉ｶ",
                "#sub1_label2": "驥崎ｦ∽ｺ矩｡ｹ/隗��",
                "#sub1_label3": "蜿ｯ菴ｿ逕ｨ逧�ｮ晏庄譴ｦ",
                "#sub1_label4": "螟ｧ襍帶ｦりｦ�",
                "#sub1_label5": "蜿りｵ帑ｺｺ謨ｰ",
                "#sub1_label6": "謇逕ｨ貂ｸ謌剰ｽｯ莉ｶ",
                "#sub1_label7": "蟇ｹ謌倩ｧ��",
                "#sub1_label8": "荳ｾ蜉樊悄髣ｴ",
                "#sub1_label9": "隶ｭ扈�ｮｶ謗定｡梧ｦ�",
                "#sub1_label10": "螳晏庄譴ｦ謗定｡梧ｦ�",
                "#sub1_label11": "騾画叫螳晏庄譴ｦ",
                "#sub1_label12": "遲幃�",
                "#sub1_label13": "譟･逵玖�蟾ｱ逧�賜蜷�"
              },
              battle_teamPageTexts: {
                "#title-text": "蟇ｹ謌倬弌莨咲噪螳晏庄譴ｦ"
              },
              regulation_listPageTexts: {
                "#title-text": "螳俶婿蟇ｹ謌倩ｧ��"
              },
              regulation_pokelistPageTexts: {
                "#title-text": "蜿ｯ菴ｿ逕ｨ逧�ｮ晏庄譴ｦ"
              },
              event_calendar: {
                "#title-text": "豢ｻ蜉ｨ譌･蜴�",
                "#option-country": "謇譏ｾ遉ｺ逧�慍蛹ｺ",
                "#sunday": "譌･",
                "#monday": "荳",
                "#tuesday": "莠�",
                "#wednesday": "荳�",
                "#thursday": "蝗�",
                "#friday": "莠�",
                "#saturday": "蜈ｭ"
              },
              rankmatch_pokemonranking_detailPageTexts: {
                "#title-text": "郤ｧ蛻ｫ蟇ｹ謌�",
                "#subtitle1-text": "螳晏庄譴ｦ隸ｦ扈�ｿ｡諱ｯ",
                ".battle-team-tab-text": "隸ｦ諠�",
                ".when-win-tab-text": "謇灘貞ｯｹ謇区慮",
                ".when-lose-tab-text": "陲ｫ蟇ｹ謇区遠蛟呈慮",
                "kind-tab-battle-team": "荳襍ｷ豺ｻ蜉�蛻ｰ蟇ｹ謌倬弌莨咲噪螳晏庄譴ｦTOP10",
                "kind-tab-battle-win": "霑吝宵螳晏庄譴ｦ謇灘堤噪螳晏庄譴ｦTOP10",
                "kind-tab-battle-lose": "謇灘定ｿ吝宵螳晏庄譴ｦ逧�ｮ晏庄譴ｦTOP10",
                "kind-tab-battle-waza": "諡帛ｼ�",
                "kind-tab-battle-waza-win": "霑吝宵螳晏庄譴ｦ謇灘貞ｯｹ謇区慮謇逕ｨ逧�魚蠑週OP10",
                "kind-tab-battle-waza-lose": "蟇ｹ謇区遠蛟定ｿ吝宵螳晏庄譴ｦ譌ｶ謇逕ｨ逧�魚蠑週OP10",
                "kind-tab-battle-tokusei": "迚ｹ諤ｧ",
                "kind-tab-battle-item": "驕灘�",
                "kind-tab-battle-seikaku": "諤ｧ譬ｼ"
              },
              internetcompetition_pokemonranking_detail: {
                "#title-text": "莠定＃鄂大､ｧ襍�",
                "#subtitle1-text": "螳晏庄譴ｦ隸ｦ扈�ｿ｡諱ｯ",
                ".battle-team-tab-text": "隸ｦ諠�",
                ".when-win-tab-text": "謇灘貞ｯｹ謇区慮",
                ".when-lose-tab-text": "陲ｫ蟇ｹ謇区遠蛟呈慮",
                "kind-tab-battle-team": "荳襍ｷ豺ｻ蜉�蛻ｰ蟇ｹ謌倬弌莨咲噪螳晏庄譴ｦTOP10",
                "kind-tab-battle-win": "霑吝宵螳晏庄譴ｦ謇灘堤噪螳晏庄譴ｦTOP10",
                "kind-tab-battle-lose": "謇灘定ｿ吝宵螳晏庄譴ｦ逧�ｮ晏庄譴ｦTOP10",
                "kind-tab-battle-waza": "諡帛ｼ�",
                "kind-tab-battle-waza-win": "霑吝宵螳晏庄譴ｦ謇灘貞ｯｹ謇区慮謇逕ｨ逧�魚蠑週OP10",
                "kind-tab-battle-waza-lose": "蟇ｹ謇区遠蛟定ｿ吝宵螳晏庄譴ｦ譌ｶ謇逕ｨ逧�魚蠑週OP10",
                "kind-tab-battle-tokusei": "迚ｹ諤ｧ",
                "kind-tab-battle-item": "驕灘�",
                "kind-tab-battle-seikaku": "諤ｧ譬ｼ"
              },
              friendcompetition_pokemonranking_detail: {
                "#title-text": "莨吩ｼｴ螟ｧ襍�",
                "#subtitle1-text": "螳晏庄譴ｦ隸ｦ扈�ｿ｡諱ｯ",
                ".battle-team-tab-text": "隸ｦ諠�",
                ".when-win-tab-text": "謇灘貞ｯｹ謇区慮",
                ".when-lose-tab-text": "陲ｫ蟇ｹ謇区遠蛟呈慮",
                "kind-tab-battle-team": "荳襍ｷ豺ｻ蜉�蛻ｰ蟇ｹ謌倬弌莨咲噪螳晏庄譴ｦTOP10",
                "kind-tab-battle-win": "霑吝宵螳晏庄譴ｦ謇灘堤噪螳晏庄譴ｦTOP10",
                "kind-tab-battle-lose": "謇灘定ｿ吝宵螳晏庄譴ｦ逧�ｮ晏庄譴ｦTOP10",
                "kind-tab-battle-waza": "諡帛ｼ�",
                "kind-tab-battle-waza-win": "霑吝宵螳晏庄譴ｦ謇灘貞ｯｹ謇区慮謇逕ｨ逧�魚蠑週OP10",
                "kind-tab-battle-waza-lose": "蟇ｹ謇区遠蛟定ｿ吝宵螳晏庄譴ｦ譌ｶ謇逕ｨ逧�魚蠑週OP10",
                "kind-tab-battle-tokusei": "迚ｹ諤ｧ",
                "kind-tab-battle-item": "驕灘�",
                "kind-tab-battle-seikaku": "諤ｧ譬ｼ"
              }
            }, this.common = {
              ui_texts: {
                ".winIconText": "WIN",
                ".loseIconText": "LOSE",
                ".drawIconText": "DRAW",
                ".joinedNumLabel": "莠ｺ",
                ".periodContainer>.label": "荳ｾ蜉樊悄髣ｴ",
                ".rateLabelContainer>.label": "遘ｯ蛻�",
                competionRule: "蟇ｹ謌倩ｧ��",
                ".prevButton>.labelContainer>.label": "蜑�10譚｡",
                ".nextButton>.labelContainer>.label": "蜷�10譚｡",
                ".rank-beginner-text": "譁ｰ謇狗ｺｧ",
                ".rank-monster-text": "邊ｾ轣ｵ逅�ｺｧ",
                ".rank-super-text": "雜�ｺｧ逅�ｺｧ",
                ".rank-hyper-text": "鬮倡ｺｧ逅�ｺｧ",
                ".rank-master-text": "螟ｧ蟶育帥郤ｧ",
                ".rental-label-text": "遘溽畑髦滉ｼ�",
                ".buttle-team-button-text": "譏ｾ遉ｺ蟇ｹ謌倬弌莨�"
              },
              unit: {
                rank: "隨ｬ%d蜷�",
                win: "%d閭�",
                lose: "%d雍�",
                draw: "%d蟷ｳ",
                "season-result": "隨ｬ%d蜷� %d閭� %d雍� %d蟷ｳ",
                "season-result2": "%d閭� %d雍� %d蟷ｳ",
                "online-result": "%d閭� %d雍� %d蟷ｳ",
                "friend-result": "隨ｬ%d蜷� %d閭� %d雍� %d蟷ｳ"
              },
              roms: {
                Sw: "螳晏庄譴ｦ 蜑�",
                Sh: "螳晏庄譴ｦ 逶ｾ"
              },
              rule: {
                0: "蜊墓遠",
                1: "蜿梧遠"
              },
              nojoin: "譛ｪ蜿りｵ�",
              nowAggr: "扈溯ｮ｡荳ｭ",
              country: {
                100: "髱樊ｴｲ",
                600: "蛹礼ｾ取ｴｲ",
                601: "蜉�諡ｿ螟ｧ",
                602: "鄒主茜蝮壼粋莨怜嵜蛹鈴Κ",
                603: "鄒主茜蝮壼粋莨怜嵜荳憺Κ",
                604: "鄒主茜蝮壼粋莨怜嵜隘ｿ驛ｨ",
                605: "鄒主茜蝮壼粋莨怜嵜蜊鈴Κ",
                699: "蜈ｶ莉�",
                700: "諡我ｸ∫ｾ取ｴｲ",
                701: "譎ｺ蛻ｩ",
                702: "蠅ｨ隘ｿ蜩･",
                703: "蟾ｴ隘ｿ",
                704: "髦ｿ譬ｹ蟒ｷ",
                705: "邇ｻ蛻ｩ扈ｴ莠�",
                706: "蜩･莨ｦ豈比ｺ�",
                707: "蟾ｴ諡牙惆",
                708: "遘倬ｲ�",
                709: "蜴�糖螟壼ｰ�",
                799: "蜈ｶ莉�",
                800: "螟ｧ豢区ｴｲ",
                801: "貔ｳ螟ｧ蛻ｩ莠�",
                802: "譁ｰ隘ｿ蜈ｰ",
                899: "蜈ｶ莉�",
                300: "莠壼､ｪ蝨ｰ蛹ｺ",
                302: "荳ｭ蝗ｽ螟ｧ髯�",
                303: "鬥呎ｸｯ",
                304: "譌･譛ｬ",
                305: "髻ｩ蝗ｽ",
                306: "鬩ｬ譚･隘ｿ莠�",
                307: "闖ｲ蠕句ｮｾ",
                308: "譁ｰ蜉�蝮｡",
                309: "蜿ｰ貉ｾ",
                310: "豕ｰ蝗ｽ",
                399: "蜈ｶ莉�",
                400: "谺ｧ豢ｲ",
                401: "螂･蝨ｰ蛻ｩ",
                402: "豈泌茜譌ｶ",
                403: "豕募嵜",
                404: "蠕ｷ蝗ｽ",
                405: "辷ｱ蟆泌�",
                406: "諢丞､ｧ蛻ｩ",
                407: "闕ｷ蜈ｰ",
                408: "闡｡關�甥",
                409: "隘ｿ迴ｭ迚�",
                410: "迹槫｣ｫ",
                411: "闍ｱ蝗ｽ",
                412: "荳ｹ鮗ｦ",
                413: "闃ｬ蜈ｰ",
                414: "謖ｪ螽�",
                415: "迹槫�",
                416: "豕｢蜈ｰ",
                499: "蜈ｶ莉�",
                500: "荳ｭ荳懷慍蛹ｺ"
              },
              footerBackLinkLabel: {
                backLinkTop: "鬥夜｡ｵ",
                backLinkInternetComp: "莠定＃鄂大､ｧ襍�",
                backMyResult: "謌醍噪謌千ｻｩ",
                backMyInternetComp: "螟ｧ襍帛盾蜉�隶ｰ蠖穂ｸ隗�",
                backLinkMyInternetCompDetail: "莠定＃鄂大､ｧ襍帶�扈ｩ隸ｦ諠�",
                backLinkMyRankMatchDetail: "郤ｧ蛻ｫ蟇ｹ謌俶�扈ｩ隸ｦ諠�",
                backLinkMyFriendCompDetail: "莨吩ｼｴ螟ｧ襍帶�扈ｩ隸ｦ諠�",
                backLinkFriendCompList: "莨吩ｼｴ螟ｧ襍帑ｸ隗�",
                backLinkRankBattle: "郤ｧ蛻ｫ蟇ｹ謌�",
                backLinkFriendComp: "莨吩ｼｴ螟ｧ襍�"
              },
              rankBattleRankingNoteDialog: {
                title: "譌�豕墓仞遉ｺ閾ｪ蟾ｱ逧�賜蜷阪�",
                note1: "荳ｾ蜉樔ｸｭ逧�賜陦梧ｦ懷ｰ�ｼ壽仞遉ｺ蛻ｰ1000蜷堺ｸｺ豁｢逧�賜蜷阪�<br />",
                note2: "謗定｡梧ｦ懃噪譖ｴ譁ｰ蜿ｯ閭ｽ莨壼屏扈溯ｮ｡諠��莠ｧ逕溷ｻｶ霑滂ｼ�<br />譏ｾ遉ｺ蜀�ｮｹ蜿ｯ閭ｽ荳主ｮ樣刔謗貞錐譛画園荳榊酔縲�<br />",
                note3: "隸ｷ霑�ｸ谿ｵ譌ｶ髣ｴ蜷主�遑ｮ隶､荳谺｡縲�"
              },
              dialogMsg: {
                ok: "蜈ｳ髣ｭ"
              }
            }, this.dex = {
              poke: ["螯呵尸遘榊ｭ�", "螯呵尸闕�", "螯呵尸闃ｱ", "蟆冗↓鮴�", "轣ｫ諱宣ｾ�", "蝟ｷ轣ｫ鮴�", "譚ｰ蟆ｼ鮴�", "蜊｡蜥ｪ鮴�", "豌ｴ邂ｭ鮴�", "扈ｿ豈幄勠", "體∫抜陋ｹ", "蟾ｴ螟ｧ陜ｶ", "迢ｬ隗定勠", "體∝｣ｳ陋ｹ", "螟ｧ髓郁怩", "豕｢豕｢", "豈疲ｯ秘ｸ�", "螟ｧ豈秘ｸ�", "蟆乗級霎ｾ", "諡芽ｾｾ", "辜磯它", "螟ｧ蝌ｴ髮", "髦ｿ譟剰寐", "髦ｿ譟乗ｪ", "逧ｮ蜊｡荳�", "髮ｷ荳�", "遨ｿ螻ｱ鮠�", "遨ｿ螻ｱ邇�", "蟆ｼ螟壼�", "蟆ｼ螟壼ｨ�", "蟆ｼ螟壼錘", "蟆ｼ螟壽恬", "蟆ｼ螟壼鴨隸ｺ", "蟆ｼ螟夂視", "逧ｮ逧ｮ", "逧ｮ蜿ｯ隘ｿ", "蜈ｭ蟆ｾ", "荵晏ｰｾ", "閭紋ｸ�", "閭門庄荳�", "雜�浹陜�", "螟ｧ蝌ｴ陜�", "襍ｰ霍ｯ闕�", "閾ｭ閾ｭ闃ｱ", "髴ｸ邇玖干", "豢ｾ諡画民", "豢ｾ諡画民迚ｹ", "豈帷帥", "鞫ｩ魎∬崟", "蝨ｰ鮠�", "荳牙慍鮠�", "蝟ｵ蝟ｵ", "迪ｫ閠∝､ｧ", "蜿ｯ霎ｾ鮑ｭ", "蜩･霎ｾ鮑ｭ", "迪ｴ諤ｪ", "轣ｫ證ｴ迪ｴ", "蜊｡闥ら距", "鬟朱溽距", "陏企ｦ呵搆陏ｪ", "陏企ｦ吝菅", "陏企ｦ呎ｳｳ螢ｫ", "蜃ｯ隘ｿ", "蜍�渕諡�", "閭｡蝨ｰ", "閻募鴨", "雎ｪ蜉�", "諤ｪ蜉�", "蝟�少闃ｽ", "蜿｣蜻�干", "螟ｧ鬟溯干", "邇帷鎗豌ｴ豈�", "豈貞絢豌ｴ豈�", "蟆乗教遏ｳ", "髫�嚀遏ｳ", "髫�嚀蟯ｩ", "蟆冗↓鬩ｬ", "辜育┣鬩ｬ", "蜻�漕蜈ｽ", "蜻�｣ｳ蜈ｽ", "蟆冗｣∵ｪ", "荳牙粋荳逎∵ｪ", "螟ｧ闡ｱ鮑ｭ", "蝌溷弌", "蝌溷弌蛻ｩ", "蟆乗ｵｷ迢ｮ", "逋ｽ豬ｷ迢ｮ", "閾ｭ豕･", "閾ｭ閾ｭ豕･", "螟ｧ闊瑚ｴ�", "蛻ｺ逕ｲ雍�", "鬯ｼ譁ｯ", "鬯ｼ譁ｯ騾�", "閠ｿ鬯ｼ", "螟ｧ蟯ｩ陋�", "蛯ｬ逵�雋�", "蠑墓｢ｦ雋倅ｺｺ", "螟ｧ髓ｳ陝ｹ", "蟾ｨ髓ｳ陝ｹ", "髴ｹ髮ｳ逕ｵ逅�", "鬘ｽ逧ｮ髮ｷ蠑ｹ", "陋玖寞", "讀ｰ陋区��", "蜊｡諡牙今諡�", "蝌主沸蝌主沸", "鬟櫁�驛�", "蠢ｫ諡ｳ驛�", "螟ｧ闊悟､ｴ", "逑ｦ譁ｯ蠑ｹ", "蜿悟ｼｹ逑ｦ譁ｯ", "迢ｬ隗堤橿迚�", "髓ｻ隗堤橿蜈ｽ", "蜷牙茜陋�", "阡楢陸諤ｪ", "陲句�", "蠅ｨ豬ｷ鬩ｬ", "豬ｷ蛻ｺ鮴�", "隗帝≡魍ｼ", "驥鷹ｱｼ邇�", "豬ｷ譏滓弌", "螳晉浹豬ｷ譏�", "鬲泌｢吩ｺｺ蛛ｶ", "鬟槫､ｩ陞ｳ陞�", "霑ｷ蜚�ｧ�", "逕ｵ蜃ｻ蜈ｽ", "鮑ｭ蝌ｴ轣ｫ蜈ｽ", "蜃ｯ鄂玲民", "閧ｯ豕ｰ鄂�", "魎､魍ｼ邇�", "證ｴ魎､鮴�", "諡画勸諡画民", "逋ｾ蜿俶ｪ", "莨雁ｸ�", "豌ｴ莨雁ｸ�", "髮ｷ莨雁ｸ�", "轣ｫ莨雁ｸ�", "螟夊ｾｹ蜈ｽ", "闖顔浹蜈ｽ", "螟壼絢闖顔浹蜈ｽ", "蛹也浹逶�", "髟ｰ蛻逶�", "蛹也浹鄙ｼ鮴�", "蜊｡豈泌�", "諤･蜀ｻ鮑�", "髣ｪ逕ｵ鮑�", "轣ｫ辟ｰ鮑�", "霑ｷ菴�鮴�", "蜩亥�鮴�", "蠢ｫ鮴�", "雜�｢ｦ", "譴ｦ蟷ｻ", "闖願拷蜿ｶ", "譛域｡ょ掌", "螟ｧ遶ｺ闡ｵ", "轣ｫ逅�ｼ�", "轣ｫ蟯ｩ鮠�", "轣ｫ證ｴ蜈ｽ", "蟆城髪魑�", "闢晞ｳ�", "螟ｧ蜉幃ｳ�", "蟆ｾ遶�", "螟ｧ蟆ｾ遶�", "蜥募瀦", "迪ｫ螟ｴ螟憺ｹｰ", "闃ｭ逑｢陌ｫ", "螳臥討陌ｫ", "蝨�ｸ晁屁", "髦ｿ蛻ｩ螟壽民", "蜿牙ｭ苓擒", "轣ｯ隨ｼ魍ｼ", "逕ｵ轣ｯ諤ｪ", "逧ｮ荳�", "逧ｮ螳晏ｮ�", "螳晏ｮ昜ｸ�", "豕｢蜈区ｯ�", "豕｢蜈句渕蜿､", "螟ｩ辟ｶ髮", "螟ｩ辟ｶ鮑�", "蜥ｩ蛻ｩ鄒�", "闌ｸ闌ｸ鄒�", "逕ｵ鮴�", "鄒惹ｸｽ闃ｱ", "邇帛鴨髴ｲ", "邇帛鴨髴ｲ荳ｽ", "譬第燕諤ｪ", "陏企ｦ呵尸逧�", "豈ｽ蟄占拷", "豈ｽ蟄占干", "豈ｽ蟄先｣�", "髟ｿ蟆ｾ諤ｪ謇�", "蜷第律遘榊ｭ�", "蜷第律闃ｱ諤ｪ", "陷ｻ陷ｻ陷�", "荵梧ｳ｢", "豐ｼ邇�", "螟ｪ髦ｳ莨雁ｸ�", "譛井ｺｮ莨雁ｸ�", "鮟第囓鮑ｦ", "蜻�漕邇�", "譴ｦ螯�", "譛ｪ遏･蝗ｾ閻ｾ", "譫懃┯鄙�", "鮗帝ｺ溷･�", "讎帶棡逅�", "菴帷ヨ謇俶民", "蝨滄ｾ吝ｼ溷ｼ�", "螟ｩ陜�", "螟ｧ髓｢陋�", "蟶�ｲ�", "蟶�ｲ∫嚊", "蜊�宙魍ｼ", "蟾ｨ髓ｳ陞ｳ陞�", "螢ｶ螢ｶ", "襍ｫ諡牙�鄂玲民", "迢�級", "辭雁ｮ晏ｮ�", "蝨亥怦辭�", "辭泌ｲｩ陌ｫ", "辭泌ｲｩ陷礼央", "蟆丞ｱｱ迪ｪ", "髟ｿ豈帷謙", "螟ｪ髦ｳ迴顔霜", "體∫ぐ魍ｼ", "遶�魍ｼ譯ｶ", "菫｡菴ｿ鮑�", "蟾ｨ鄙�｣樣ｱｼ", "逶皮抜鮑�", "謌ｴ魎∵ｯ�", "鮟鷹ｲ∝刈", "蛻ｺ鮴咏視", "蟆丞ｰ剰ｱ｡", "鬘ｿ逕ｲ", "螟夊ｾｹ蜈ｽ�貞梛", "諠願ｧ帝ｹｿ", "蝗ｾ蝗ｾ迥ｬ", "譌�逡丞ｰ丞ｭ�", "謌倩�驛�", "霑ｷ蜚�ｨ�", "逕ｵ蜃ｻ諤ｪ", "鮑ｭ蝌ｴ螳晏ｮ�", "螟ｧ螂ｶ鄂�", "蟷ｸ遖剰寞", "髮ｷ蜈ｬ", "轤主ｸ�", "豌ｴ蜷�", "蟷ｼ蝓ｺ諡画民", "豐吝渕諡画民", "迴ｭ蝓ｺ諡画民", "豢帛･�ｺ�", "蜃､邇�", "譌ｶ諡画ｯ�", "譛ｨ螳亥ｮｫ", "譽ｮ譫苓悋陷ｴ", "陷･陷ｴ邇�", "轣ｫ遞夐ｸ｡", "蜉帛｣ｮ鮑｡", "轣ｫ辟ｰ鮑｡", "豌ｴ霍�ｱｼ", "豐ｼ霍�ｱｼ", "蟾ｨ豐ｼ諤ｪ", "蝨溽蕎迥ｬ", "螟ｧ迢ｼ迥ｬ", "陋�ｺｹ辭�", "逶ｴ蜀ｲ辭�", "蛻ｺ蟆ｾ陌ｫ", "逕ｲ螢ｳ闌ｧ", "迢ｩ迪主�陜ｶ", "逶ｾ逕ｲ闌ｧ", "豈堤ｲ芽崟", "闔ｲ蜿ｶ遶･蟄�", "闔ｲ蟶ｽ蟆冗ｫ･", "荵仙､ｩ豐ｳ遶･", "讖｡螳樊棡", "髟ｿ鮠ｻ蜿ｶ", "迢｡迪ｾ螟ｩ迢�", "蛯ｲ鬪ｨ辯�", "螟ｧ邇狗√", "髟ｿ鄙�ｸ･", "螟ｧ蝌ｴ鮑･", "諡蛾ｲ∵級荳�", "螂�ｲ∬脂螳�", "豐吝･域愀", "貅懈ｺ懃ｳ也帥", "髮ｨ鄙�崟", "陂題�闖�", "譁礼ｬ�闖�", "諛剃ｺｺ迯ｭ", "霑�勘迪ｿ", "隸ｷ蛛�視", "蝨溷ｱ�ｿ榊｣ｫ", "體�擇蠢崎�", "閼ｱ螢ｳ蠢崎�", "蜥募ｦ槫ｦ�", "蜷ｼ辷�ｼｹ", "辷�浹諤ｪ", "蟷穂ｸ句鴨螢ｫ", "體∵詞蜉帛｣ｫ", "髴ｲ蜉帑ｸｽ", "譛晏圏鮠ｻ", "蜷大ｰｾ蝟ｵ", "莨倬寉迪ｫ", "蜍ｾ鬲ら愍", "螟ｧ蝌ｴ螽�", "蜿ｯ蜿ｯ螟壽級", "蜿ｯ螟壽級", "豕｢螢ｫ蜿ｯ螟壽級", "邇帶ｲ咎ぅ", "諱ｰ髮ｷ蟋�", "關ｽ髮ｷ蜈ｽ", "髮ｷ逕ｵ蜈ｽ", "豁｣逕ｵ諡肴牛", "雍溽鳩諡肴牛", "逕ｵ關､陌ｫ", "逕懃莫關､", "豈定塙阮�", "貅ｶ鬟溷�", "蜷樣｣溷�", "蛻ｩ迚咎ｱｼ", "蟾ｨ迚咎ｲｨ", "蜷ｼ蜷ｼ魎ｸ", "蜷ｼ魎ｸ邇�", "蜻�↓鬩ｼ", "蝟ｷ轣ｫ鬩ｼ", "辣､轤ｭ鮴�", "霍ｳ霍ｳ迪ｪ", "蝎怜剽迪ｪ", "譎�刄譁�", "螟ｧ鬚夊噤", "雜�浹豕｢蟷ｼ陌ｫ", "豐呎ｼ�陷ｻ陷�", "蛻ｺ逅�ｻ吩ｺｺ謗�", "譴ｦ豁御ｻ吩ｺｺ謗�", "髱堤ｻｵ鮑�", "荳�､暮搨鮑�", "迪ｫ鮠ｬ譁ｩ", "鬣ｭ蛹呵寐", "譛育浹", "螟ｪ髦ｳ蟯ｩ", "豕･豕･魑�", "魎ｶ魍ｼ邇�", "鮴呵卆蟆丞�", "體∬椡鮴呵卆", "螟ｩ遘､蛛ｶ", "蠢ｵ蜉帛悄蛛ｶ", "隗ｦ謇狗卆蜷�", "鞫�ｯｮ逋ｾ蜷�", "螟ｪ蜿､鄒ｽ陌ｫ", "螟ｪ蜿､逶皮抜", "荳台ｸ鷹ｱｼ", "鄒守ｺｳ譁ｯ", "鬟俶ｵｮ豕｡豕｡", "蜿倬嚼鮴�", "諤ｨ蠖ｱ螽�ｨ�", "隸�鋳螽�ｨ�", "螟懷ｷ｡轣ｵ", "蠖ｷ蠕ｨ螟懃�", "辜ｭ蟶ｦ鮴�", "鬟朱塔體�", "髦ｿ蜍�｢ｭ魎�", "蟆乗棡辟ｶ", "髮ｪ遶･蟄�", "蜀ｰ鬯ｼ謚､", "豬ｷ雎ｹ逅�", "豬ｷ鬲皮彊", "蟶晉甥豬ｷ迢ｮ", "迴咲匠雍�", "迪取桝魍ｼ", "讓ｱ闃ｱ魍ｼ", "蜿､遨ｺ譽倬ｱｼ", "辷ｱ蠢�ｱｼ", "螳晁ｴ晞ｾ�", "逕ｲ螢ｳ鮴�", "證ｴ鬟樣ｾ�", "體∝淘體�", "驥大ｱ樊ｪ", "蟾ｨ驥第ｪ", "髮ｷ蜷画ｴ帛�", "髮ｷ蜷芽伽譁ｯ", "髮ｷ蜷画民螂�ｲ�", "諡牙ｸ昜ｺ壽民", "諡牙ｸ晄ｬｧ譁ｯ", "逶匁ｬｧ蜊｡", "蝗ｺ諡牙､�", "辜育ｩｺ蝮�", "蝓ｺ諡臥･�", "莉｣谺ｧ螂�ｸ梧民", "闕芽距鮴�", "譬第棊鮴�", "蝨溷床鮴�", "蟆冗↓辟ｰ迪ｴ", "迪帷↓迪ｴ", "辜育┣迪ｴ", "豕｢蜉�譖ｼ", "豕｢逧�ｭ�", "蟶晉視諡ｿ豕｢", "蟋��蜆ｿ", "蟋��鮑�", "蟋��鮖ｰ", "螟ｧ迚咏矯", "螟ｧ蟆ｾ迢ｸ", "蝨�ｳ募ｸ�", "髻ｳ邂ｱ陝", "蟆冗賢諤ｪ", "蜍貞�迪ｫ", "莨ｦ逅ｴ迪ｫ", "蜷ｫ鄒櫁京", "鄂嶺ｸ晞峭譛ｵ", "螟ｴ逶夜ｾ�", "謌俶ｧ碁ｾ�", "逶ｾ逕ｲ鮴�", "謚､蝓朱ｾ�", "扈楢拷蜆ｿ", "扈楢拷雍ｵ螯�", "扈�｣ｫ陋ｾ", "荳芽惧陷�", "陷ょ･ｳ邇�", "蟶募･�茜蜈ｹ", "豕ｳ蝨磯ｼｬ", "豬ｮ貎憺ｼｬ", "讓ｱ闃ｱ螳�", "讓ｱ闃ｱ蜆ｿ", "譌�螢ｳ豬ｷ蜈�", "豬ｷ蜈泌�", "蜿悟ｰｾ諤ｪ謇�", "鬟倬｣倡帥", "髫城｣守帥", "蜊ｷ蜊ｷ閠ｳ", "髟ｿ閠ｳ蜈�", "譴ｦ螯夜ｭ�", "荵碁ｸｦ螟ｴ螟ｴ", "鬲�鴨蝟ｵ", "荳懈命蝟ｵ", "體�筒蜩�", "閾ｭ鮠ｬ蝎�", "蝮ｦ蜈玖�鮠ｬ", "體憺復諤ｪ", "髱帝糖髓�", "逶�燕諤ｪ", "鬲泌ｰｼ蟆ｼ", "蟆冗ｦ剰寞", "閨貞飭鮑�", "闃ｱ蟯ｩ諤ｪ", "蝨�刎魎ｨ", "蟆也甥髯�ｲｨ", "辜亥町髯�ｲｨ", "蟆丞今豈泌�", "蛻ｩ谺ｧ霍ｯ", "霍ｯ蜊｡蛻ｩ谺ｧ", "豐呎ｲｳ鬩ｬ", "豐ｳ鬩ｬ蜈ｽ", "髓ｳ蟆ｾ陜�", "鮴咏視陜�", "荳崎憶陋�", "豈帝ｪｷ陋�", "蟆也甥隨ｼ", "闕ｧ蜈蛾ｱｼ", "髴楢匯魍ｼ", "蟆冗帥鬟樣ｱｼ", "髮ｪ隨�諤ｪ", "證ｴ髮ｪ邇�", "邇帷泣諡�", "閾ｪ辷�｣∵ｪ", "螟ｧ闊瑚�", "雜�抜迢ら橿", "蟾ｨ阡楢陸", "逕ｵ蜃ｻ鬲泌�", "鮑ｭ蝌ｴ轤主�", "豕｢蜈句渕譁ｯ", "霑懷商蟾ｨ陷�", "蜿ｶ莨雁ｸ�", "蜀ｰ莨雁ｸ�", "螟ｩ陜守視", "雎｡迚咏謙", "螟夊ｾｹ蜈ｽ荵吝梛", "濶ｾ霍ｯ髮ｷ譛ｵ", "螟ｧ譛晏圏鮠ｻ", "鮟大､憺ｭ皮�", "髮ｪ螯門･ｳ", "豢帶汚蟋�", "逕ｱ蜈句ｸ�", "濶ｾ蟋�茜螟�", "莠壼�隸ｺ蟋�", "蟶晉甥蜊｢蜊｡", "蟶戊ｷｯ螂�ｺ�", "蟶ｭ螟夊統諱ｩ", "髮ｷ蜷牙･�今譁ｯ", "鬪第級蟶晉ｺｳ", "蜈矩峭濶ｲ蛻ｩ莠�", "髴乗ｬｧ郤ｳ", "邇帷ｺｳ髴�", "霎ｾ蜈玖竺莨�", "隹｢邀ｳ", "髦ｿ蟆泌ｮ呎民", "豈泌�謠仙ｰｼ", "阯､阯､陋�", "髱定陸陋�", "蜷帑ｸｻ陋�", "證匁囑迪ｪ", "轤堤ｒ迪ｪ", "轤取ｭｦ邇�", "豌ｴ豌ｴ迯ｭ", "蜿悟�荳ｸ", "螟ｧ蜑鷹ｬｼ", "謗｢謗｢鮠�", "豁･蜩ｨ鮠�", "蟆冗ｺｦ蜈�", "蜩育ｺｦ蜈�", "髟ｿ豈帷距", "謇呈焔迪ｫ", "驟ｷ雎ｹ", "闃ｱ讀ｰ迪ｴ", "闃ｱ讀ｰ迪ｿ", "辷�ｦ咏原", "辷�ｦ咏諺", "蜀ｷ豌ｴ迪ｴ", "蜀ｷ豌ｴ迪ｿ", "鬟滓｢ｦ譴ｦ", "譴ｦ譴ｦ陏", "雎�ｱ�ｸｽ", "蜥募瀦鮑ｽ", "鬮伜ご髮蛾ｸ｡", "譁第桝鬩ｬ", "髮ｷ逕ｵ譁鷹ｩｬ", "遏ｳ荳ｸ蟄�", "蝨ｰ蟷泌ｲｩ", "蠎槫ｲｩ諤ｪ", "貊壽ｻ夊撕陜�", "蠢�撕陜�", "陞ｺ髓牙慍鮠�", "鮴吝､ｴ蝨ｰ鮠�", "蟾ｮ荳榊､壼ｨ�ｨ�", "謳ｬ霑仙ｰ丞権", "體�ｪｨ蝨滉ｺｺ", "菫ｮ蟒ｺ閠∝権", "蝨�搆陏ｪ", "闢晁淦陷�", "陝ｾ陷咲視", "謚墓藻鬯ｼ", "謇灘�鬯ｼ", "陌ｫ螳晏桁", "螳晏桁闌ｧ", "菫晏ｧ�勠", "逋ｾ雜ｳ陷郁團", "霓ｦ霓ｮ逅�", "陷郁團邇�", "譛ｨ譽臥帥", "鬟主ｦ也ｲｾ", "逋ｾ蜷域�ｹ螽�ｨ�", "陬吝�蟆丞ｧ�", "驥手岼魎磯ｱｼ", "鮟醍愍魑�", "豺ｷ豺ｷ魑�", "豬∵ｰ馴ｳ�", "轣ｫ郤｢荳榊堤ｿ�", "霎ｾ鞫ｩ迢堤拠", "豐咎塔莉吩ｺｺ謗�", "遏ｳ螻�淹", "蟯ｩ谿ｿ螻�淹", "貊第ｻ大ｰ丞ｭ�", "螟ｴ蟾ｾ豺ｷ豺ｷ", "雎｡蠕�ｸ�", "蜩ｭ蜩ｭ髱｢蜈ｷ", "霑ｭ螟ｱ譽ｺ", "蜴溽尠豬ｷ鮴�", "閧矩ｪｨ豬ｷ鮴�", "蟋狗･門ｰ城ｸ�", "蟋狗･門､ｧ鮑�", "遐ｴ遐ｴ陲�", "轣ｰ蟆伜ｱｱ", "邏｢鄂嶺ｺ�", "邏｢鄂嶺ｺ壼�", "豕｡豐ｫ譬鈴ｼ�", "螂�ｯｺ譬鈴ｼ�", "蜩･蠕ｷ螳晏ｮ�", "蜩･蠕ｷ蟆冗ｫ･", "蜩･蠕ｷ蟆丞ｧ�", "蜊募嵯扈��逅�", "蜿悟嵯扈��逅�", "莠ｺ騾�扈��蜊ｵ", "鮑ｭ螳晏ｮ�", "闊槫､ｩ鮖�", "霑ｷ菴�蜀ｰ", "螟壼､壼�", "蜿悟榊､壼､壼�", "蝗帛ｭ｣鮖ｿ", "關瑚歓鮖ｿ", "逕ｵ鬟樣ｼ�", "逶也尠陌ｫ", "鬪大｣ｫ陷礼央", "蜩主操逅�順", "雍･髴ｲ逅�順", "霓ｻ鬟倬｣�", "閭門弌蝌�", "菫晏ｧ�崗豕｢", "逕ｵ逕ｵ陌ｫ", "逕ｵ陷倩屁", "遘榊ｭ宣刀逅�", "蝮壽棡蜩鷹塔", "鮨ｿ霓ｮ蜆ｿ", "鮨ｿ霓ｮ扈�", "鮨ｿ霓ｮ諤ｪ", "鮗ｻ鮗ｻ蟆城ｱｼ", "鮗ｻ鮗ｻ魑�", "鮗ｻ鮗ｻ魑鈴ｱｼ邇�", "蟆冗�諤ｪ", "螟ｧ螳�ｪ", "辜帛�轣ｵ", "轣ｯ轣ｫ蟷ｽ轣ｵ", "豌ｴ譎ｶ轣ｯ轣ｫ轣ｵ", "迚咏甥", "譁ｧ迚咎ｾ�", "蜿梧密謌倬ｾ�", "蝟ｷ蝴冗�", "蜀ｻ蜴溽�", "蜃�菴暮妛闃ｱ", "蟆丞亢陷�", "謨乗差陌ｫ", "豕･蟾ｴ魍ｼ", "蜉溷､ｫ鮠ｬ", "蟶育宛鮠ｬ", "襍､髱｢鮴�", "豕･蛛ｶ蟆丈ｺｺ", "豕･蛛ｶ蟾ｨ莠ｺ", "鬩ｹ蛻蟆丞�", "蜉域湊蜿ｸ莉､", "辷�ず螟ｴ豌ｴ迚�", "豈帛､ｴ蟆城ｹｰ", "蜍�｣ｫ髮�ｹｰ", "遘�ｹｰ荳ｫ螟ｴ", "遘�ｹｰ螽�", "辭碑噤蜈ｽ", "體∬噤", "蜊暮ｦ夜ｾ�", "蜿碁ｦ匁垓鮴�", "荳蛾ｦ匁�鮴�", "辯�Ι陌ｫ", "轣ｫ逾櫁崟", "蜍ｾ蟶戊ｷｯ鄙�", "莉｣諡牙渕鄙�", "豈募鴨蜷臥ｿ�", "鮴吝差莠�", "髮ｷ逕ｵ莠�", "闔ｱ蟶梧級蟋�", "謐ｷ蜈狗ｽ怜ｧ�", "蝨溷慍莠�", "驟矩峭蟋�", "蜃ｯ霍ｯ霑ｪ谺ｧ", "鄒取ｴ幄ｶ蝪�", "逶冶ｯｺ襍帛�迚ｹ", "蜩亥鴨譬�", "閭冶ヶ蜩亥鴨", "蟶�㈹蜊｡髫�", "轣ｫ迢千矯", "髟ｿ蟆ｾ轣ｫ迢�", "螯也↓郤｢迢�", "蜻ｱ蜻ｱ豕｡陋�", "蜻ｱ螟ｴ陋�", "逕ｲ雍ｺ蠢崎尸", "謗俶侍蜈�", "謗伜慍蜈�", "蟆冗ｮｭ髮", "轣ｫ邂ｭ髮", "辜育ｮｭ鮖ｰ", "邊芽攜陌ｫ", "邊芽攜陋ｹ", "蠖ｩ邊芽攜", "蟆冗彊迢ｮ", "轣ｫ轤守彊", "闃ｱ闢楢涛", "闃ｱ蜿ｶ闥�", "闃ｱ豢∝､ｫ莠ｺ", "蝮宣ｪ大ｰ冗ｾ�", "蝮宣ｪ大ｱｱ鄒�", "鬘ｽ逧ｮ辭顔賢", "髴ｸ驕鍋�迪ｫ", "螟壻ｸｽ邀ｳ莠�", "螯吝矛", "雜��螯吝矛", "迢ｬ蜑鷹椈", "蜿悟苑髷�", "蝮夂崟蜑第ｪ", "邊蛾ｦ咎ｦ�", "闃ｳ鬥咏ｲｾ", "扈ｵ扈ｵ豕｡闃�", "閭也莫螯ｮ", "螂ｽ蝠ｦ魍ｿ", "荵瑚ｴｼ邇�", "鮴溯�閼�", "鮴溯ｶｳ蟾ｨ體�", "蝙�档阯ｻ", "豈定僚鮴�", "體∬№譫ｪ陌ｾ", "髓｢轤ｮ閾り卆", "莨樒鳩陷･", "蜈臥鳩莨櫁悋", "螳晏ｮ晄垓鮴�", "諤ｪ鬚夐ｾ�", "蜀ｰ髮ｪ鮴�", "蜀ｰ髮ｪ蟾ｨ鮴�", "莉吝ｭ蝉ｼ雁ｸ�", "鞫碑ｧ帝ｹｰ莠ｺ", "蜥壼丁鮠�", "蟆冗｢朱捗", "鮟城ｻ丞ｮ�", "鮟冗ｾ主�", "鮟冗ｾ朱ｾ�", "髓･蝨亥�", "蟆乗惠轣ｵ", "譛ｽ譛ｨ螯�", "蜊礼糖邊ｾ", "蜊礼糖諤ｪ莠ｺ", "蜀ｰ螳�", "蜀ｰ蟯ｩ諤ｪ", "蝸｡陜�", "髻ｳ豕｢鮴�", "蜩ｲ蟆泌ｰｼ莠壽民", "莨願｣ｴ蟆泌｡泌ｰ�", "蝓ｺ譬ｼ蟆泌ｾｷ", "闥ょｮ牙ｸ�", "閭｡蟶�", "豕｢蟆泌�蟆ｼ諱ｩ", "譛ｨ譛ｨ譫ｭ", "謚慕ｾｽ譫ｭ", "迢吝ｰ��第椚", "轣ｫ譁大矛", "轤守Ο蝟ｵ", "轤ｽ辟ｰ蜥�動陌�", "逅�帥豬ｷ迢ｮ", "闃ｱ貍ｾ豬ｷ迢ｮ", "隘ｿ迢ｮ豬ｷ螢ｬ", "蟆冗ｬ��", "蝟�少蝠�ｸ�", "體ｳ蝌ｴ螟ｧ鮑�", "迪ｫ鮠ｬ蟆�", "迪ｫ鮠ｬ謗｢髟ｿ", "蠑ｺ鬚夐ｸ｡豈崎勠", "陌ｫ逕ｵ螳�", "髞ｹ蜀懃ぐ陌ｫ", "螂ｽ閭懆淹", "螂ｽ閭懈ｯ幄淹", "闃ｱ闊樣ｸ�", "關瑚匳", "陜ｶ扈楢酔陌ｻ", "蟯ｩ迢礼距", "鬯�ｲｩ迢ｼ莠ｺ", "蠑ｱ荳�ｱｼ", "螂ｽ蝮乗弌", "雜�搶譏�", "豕･鬩ｴ莉�", "驥肴ｳ･謖ｽ鬩ｬ", "貊ｴ陋�", "貊ｴ陋幃愃", "莨ｪ陞ｳ闕�", "蜈ｰ陞ｳ闃ｱ", "逹｡逹｡闖�", "轣ｯ鄂ｩ螟懆順", "螟懃尢轣ｫ陷･", "辟ｰ蜷手悋", "遶･蛛ｶ辭�", "遨ｿ逹辭�", "逕懃ｫｹ遶ｹ", "逕懆�螯ｮ", "逕懷�鄒主錘", "闃ｱ逍礼識邇ｯ", "譎ｺ謖･迪ｩ", "謚墓執迪ｴ", "閭�ｰ剰勠", "蜈ｷ逕ｲ豁ｦ閠�", "豐吩ｸ伜ｨ�", "蝎ｬ豐吝�｡辷ｷ", "諡ｳ豬ｷ蜿�", "螻樊ｧ�夂ｩｺ", "體ｶ莨ｴ謌伜�", "蟆城勣譏�", "譬第桾蟆ｾ辭�", "辷�┣鮴溷�", "謇俶�蠕ｷ邇帛ｰ�", "隹懈供荳�", "逎ｨ迚吝ｽｩ逧ｮ魍ｼ", "閠∫ｿ�ｾ�", "遐ｴ遐ｴ闊ｵ霓ｮ", "蠢�ｳ槫ｮ�", "魑樒抜鮴�", "譚門ｰｾ魑樒抜鮴�", "蜊｡迺槭�鮑｣鮑｣", "蜊｡迺槭�陜ｶ陜ｶ", "蜊｡迺槭�蜩槫到", "蜊｡迺槭�魑埼ｳ�", "遘第民闔ｫ蜿､", "遘第民闔ｫ蟋�", "邏｢蟆碑ｿｦ髮ｷ谺ｧ", "髴ｲ螂磯寉諡�", "陌壼誓莨雁ｾｷ", "辷�ｌ陏�", "雍ｹ豢帷ｾ手桙", "逕ｵ譚滓惠", "體∫↓霎牙､�", "郤ｸ蠕｡蜑�", "諱ｶ鬟溷､ｧ邇�", "螂亥�豢帛�邇�", "邇帶惻髮�ｨ�", "邇帛､丞､�", "豈定ｴ晄ｯ�", "蝗幃｢夐宙鮴�", "蝙堤｣顔浹", "遐ｰ螟ｴ蟆丈ｸ�", "謐ｷ諡牙･･諡�", "鄒主ｽ募擱", "鄒主ｽ墓｢�｡�", "謨ｲ髻ｳ迪ｴ", "蝠ｪ蜥夂原", "霓ｰ謫る≡蛻夂見", "轤主�蜆ｿ", "閻ｾ雹ｴ蟆丞ｰ�", "髣ｪ辟ｰ邇狗煙", "豕ｪ逵ｼ陷･", "蜿俶ｶｩ陷･", "蜊�擇驕ｿ蠖ｹ", "雍ｪ蠢��鈴ｼ�", "阯城･ｱ譬鈴ｼ�", "遞壼ｱｱ髮", "闢晞ｸｦ", "髓｢體�鮑ｦ", "邏｢萓ｦ陌ｫ", "螟ｩ鄂ｩ陌ｫ", "莉･谺ｧ霍ｯ譎ｮ", "迢｡蟆冗巨", "迪ｾ螟ｧ迢�", "蟷ｼ譽画｣�", "逋ｽ闢ｬ闢ｬ", "豈幄ｾｫ鄒�", "豈帶ｯ幄ｧ堤ｾ�", "蜥ｬ蜥ｬ鮴�", "證ｴ蝎ｬ鮴�", "譚･逕ｵ豎ｪ", "騾千鳩迥ｬ", "蟆冗く莉�", "螟ｧ轤ｭ霓ｦ", "蟾ｨ轤ｭ螻ｱ", "蝠�棡陌ｫ", "闍ｹ陬ｹ鮴�", "荳ｰ陷憺ｾ�", "豐吝桁陋�", "豐呵楴陝�", "蜿､譛磯ｸ�", "蛻ｺ譴ｭ魍ｼ", "謌ｽ譁怜ｰ匁｢ｭ", "逕ｵ髻ｳ蟀ｴ", "鬚､蠑ｦ陜ｾ陞�", "辜ｧ轣ｫ陏｣", "辟夂┣陏｣", "諡ｳ諡ｳ陋ｸ", "蜈ｫ辷ｪ豁ｦ蟶�", "譚･謔ｲ闌ｶ", "諤匁晏｣ｶ", "霑ｷ蟶�脂蟋�", "謠仙ｸ�脂蟋�", "蟶�脂蟋�ｸｩ", "謐｣陋句ｰ丞ｦ�", "隸亥溌鬲�", "髟ｿ豈帛ｷｨ鬲�", "蝣ｵ諡ｦ辭�", "蝟ｵ螟ｴ逶ｮ", "鬲皮�迴顔霜", "闡ｱ貂ｸ蜈ｵ", "雕丞�莠ｺ蛛ｶ", "霑ｭ螟ｱ譚ｿ", "蟆丈ｻ吝･ｶ", "髴懷･ｶ莉�", "蛻鈴亰蜈ｵ", "蝠ｪ蝴捺ｵｷ閭�", "髮ｪ蜷櫁勠", "髮ｪ扈定崟", "蟾ｨ遏ｳ荳�", "蜀ｰ遐碁ｹ�", "辷ｱ邂｡萓�", "闔ｫ魎∬ｴ晏庄", "體懆ｱ｡", "螟ｧ邇矩糖雎｡", "髮ｷ鮑滄ｾ�", "髮ｷ鮑滓ｵｷ蜈ｽ", "魑�ｱｼ鮴�", "魑�ｱｼ豬ｷ蜈ｽ", "體晞弔鮴�", "螟夐ｾ呎｢�･ｿ莠�", "螟夐ｾ吝･�", "螟夐ｾ吝ｷｴ魎∵汚", "闍榊桃", "阯冗寺辟ｶ迚ｹ", "譌�譫∵ｱｰ驍｣", "辭雁ｾ貞ｼ�", "豁ｦ驕鍋�蟶�", "關ｨ謌ｮ蠕ｷ", "髮ｷ蜷芽伽蜍貞･�", "髮ｷ蜷蛾梼諡画�", "髮ｪ證ｴ鬩ｬ", "轣ｵ蟷ｽ鬩ｬ", "阨ｾ蜀�邇�", "隸｡隗帝ｹｿ", "蜉域密陞ｳ陞�", "譛域怦辭�", "蟷ｽ蟆ｾ邇�ｱｼ", "螟ｧ迢�級", "荳�宙魍ｼ", "逵ｷ諱倶ｺ�", "譁ｰ蜿ｶ蝟ｵ", "闥り弊蝟ｵ", "鬲泌ｹｻ蛛�擇蝟ｵ", "蜻�↓魑�", "轤咏Ν魑�", "鬪ｨ郤ｹ蟾ｨ螢ｰ魑�", "豸ｦ豌ｴ鮑ｭ", "豸瑚ｷ�ｸｭ", "迢よｬ｢豬ｪ闊樣ｸｭ", "辷ｱ蜷�ｱ�", "鬟倬ｦ呵ｱ�", "蝗｢迴�陋�", "謫埼匚陋�", "雎�沂陝", "辜郁�陜�", "蟶�卿", "蟶�悄諡ｨ", "蟾ｴ蟶�悄諡ｨ", "荳蟇ｹ鮠�", "荳螳ｶ鮠�", "迢嶺ｻ泌桁", "鮗ｻ闃ｱ迥ｬ", "霑ｷ菴�闃�", "螂･蛻ｩ郤ｽ", "螂･蛻ｩ逑ｦ", "諤帝ｹｦ蜩･", "逶千浹螳�", "逶千浹蝙�", "逶千浹蟾ｨ轣ｵ", "轤ｭ蟆丈ｾ�", "郤｢闔ｲ體�鬪�", "闍咲ｎ蛻�ｬｼ", "蜈芽坎莉�", "逕ｵ閧夊尸", "逕ｵ豬ｷ辯�", "螟ｧ逕ｵ豬ｷ辯�", "蛛ｶ蜿ｫ迯�", "迯呈蕗辷ｶ", "貊区ｱ�ｼｹ", "豸よ��ｮ｢", "郤ｳ蝎ｬ闕�", "諤也ｺｳ蝎ｬ闕�", "蜴滄㍽豌ｴ豈�", "髯�慍豌ｴ豈�", "豈帛ｴ冶淹", "辜ｭ霎｣螽�", "迢�霎｣讀�", "陌ｫ貊壽ｳ･", "陌ｫ逕ｲ蝨｣", "鬟倬｣倬寶", "雜��濶ｳ鮑ｵ", "蟆城判蛹�", "蟾ｧ髞ｻ蛹�", "蟾ｨ髞ｻ蛹�", "豬ｷ蝨ｰ鮠�", "荳画ｵｷ蝨ｰ鮠�", "荳狗浹鮑�", "豕｢譎ｮ豬ｷ雎�", "豬ｷ雎壻ｾ�", "蝎鈴嚀髫�", "譎ｮ髫�嚀蟋�", "鞫ｩ謇倩悋", "諡匁許陏�", "譎ｶ蜈芽歓", "譎ｶ蜈芽干", "蠅謎ｻ皮距", "蠅捺荻迥ｬ", "郛�郤｢鮖､", "襍ｰ魎ｸ", "豬ｩ螟ｧ魎ｸ", "霓ｻ霄ｫ魑�", "蜷�西髴ｸ", "邀ｳ遶矩ｾ�", "蠑�ｸ也原", "蝨溽視", "螂�ｺ帝ｺ�", "蝨滄ｾ呵鰍闃�", "莉��蟆��", "髮�ｼ溽甥", "蜷ｼ蜿ｫ蟆ｾ", "迪帶�闖�", "謖ｯ鄙ｼ蜿�", "辷ｬ蝨ｰ鄙�", "豐咎刀逧ｮ", "體∬ｾ呵ｿｹ", "體∝桁陲ｱ", "體∬№閹", "體∬�鬚�", "體∵ｯ定崟", "體∬号譽�", "蜃芽ш鮴�", "蜀ｻ閼企ｾ�", "謌溯ш鮴�", "邏｢雍｢轣ｵ", "襍帛ｯ瑚ｱｪ", "蜿､邂陷�", "蜿､蜑題ｱｹ", "蜿､鮠朱ｹｿ", "蜿､邇蛾ｱｼ", "霓ｰ鮑｣譛�", "體∵ｭｦ閠�", "謨�拠鬘ｿ", "蟇�拠鬘ｿ", "豕｢闕｡豌ｴ", "體∵桝蜿ｶ", "陬ｹ陷懆勠", "譁ｯ鬲碑幻", "譚･謔ｲ邊苓幻", "螟溯ｵ樒距", "諢ｿ蠅樒諺", "蜷蛾實鮑｡", "蜴�ｯ｡讀ｪ"],
              pokeType: ["荳闊ｬ", "譬ｼ譁�", "鬟櫁｡�", "豈�", "蝨ｰ髱｢", "蟯ｩ遏ｳ", "陌ｫ", "蟷ｽ轣ｵ", "髓｢", "轣ｫ", "豌ｴ", "闕�", "逕ｵ", "雜��蜉�", "蜀ｰ", "鮴�", "諱ｶ", "螯也ｲｾ"],
              waza: {
                1: "諡榊�",
                2: "遨ｺ謇句活",
                3: "霑樒識蟾ｴ謗�",
                4: "霑樒ｻｭ諡ｳ",
                5: "逋ｾ荳�勢驥肴教",
                6: "閨壼ｮ晏粥",
                7: "轣ｫ辟ｰ諡ｳ",
                8: "蜀ｰ蜀ｻ諡ｳ",
                9: "髮ｷ逕ｵ諡ｳ",
                10: "謚�",
                11: "螟ｹ菴�",
                12: "譫∬誠髓ｳ",
                13: "譌矩｣主�",
                14: "蜑題�",
                15: "螻�粋蜉�",
                16: "襍ｷ鬟�",
                17: "鄙��謾ｻ蜃ｻ",
                18: "蜷ｹ鬟�",
                19: "鬟樒ｿ�",
                20: "扈醍ｴｧ",
                21: "鞫疲遠",
                22: "阯､髷ｭ",
                23: "雕ｩ雕�",
                24: "莠瑚ｿ櫁ｸ｢",
                25: "逋ｾ荳�勢驥崎ｸ｢",
                26: "鬟櫁ｸ｢",
                27: "蝗樊雷雕｢",
                28: "豕ｼ豐�",
                29: "螟ｴ髞､",
                30: "隗呈寵",
                31: "荵ｱ蜃ｻ",
                32: "隗帝捗",
                33: "謦槫�",
                34: "豕ｰ螻ｱ蜴矩｡ｶ",
                35: "邏ｧ譚�",
                36: "迪帶寵",
                37: "螟ｧ髣ｹ荳逡ｪ",
                38: "闊崎ｺｫ蜀ｲ謦�",
                39: "鞫�ｰｾ蟾ｴ",
                40: "豈帝宙",
                41: "蜿碁宙",
                42: "鬟槫ｼｹ髓�",
                43: "迸ｪ逵ｼ",
                44: "蜥ｬ菴�",
                45: "蜿ｫ螢ｰ",
                46: "蜷ｼ蜿ｫ",
                47: "蜚ｱ豁�",
                48: "雜�浹豕｢",
                49: "髻ｳ辷�",
                50: "螳夊ｺｫ豕�",
                51: "貅ｶ隗｣豸ｲ",
                52: "轣ｫ闃ｱ",
                53: "蝟ｷ蟆�↓辟ｰ",
                54: "逋ｽ髮ｾ",
                55: "豌ｴ譫ｪ",
                56: "豌ｴ轤ｮ",
                57: "蜀ｲ豬ｪ",
                58: "蜀ｰ蜀ｻ蜈画據",
                59: "證ｴ鬟朱妛",
                60: "蟷ｻ雎｡蜈臥ｺｿ",
                61: "豕｡豐ｫ蜈臥ｺｿ",
                62: "譫∝�譚�",
                63: "遐ｴ蝮丞�郤ｿ",
                64: "蝠�",
                65: "蝠�捗",
                66: "豺ｱ貂顔ｿｻ貊�",
                67: "雕｢蛟�",
                68: "蜿悟榊･芽ｿ�",
                69: "蝨ｰ逅�ｸ頑兜",
                70: "諤ｪ蜉�",
                71: "蜷ｸ蜿�",
                72: "雜�ｺｧ蜷ｸ蜿�",
                73: "蟇�函遘榊ｭ�",
                74: "逕滄柄",
                75: "鬟槫掌蠢ｫ蛻",
                76: "譌･蜈画據",
                77: "豈堤ｲ�",
                78: "鮗ｻ逞ｹ邊�",
                79: "蛯ｬ逵�邊�",
                80: "闃ｱ逑｣闊�",
                81: "蜷蝉ｸ�",
                82: "鮴吩ｹ区�",
                83: "轣ｫ辟ｰ譌区ｶ｡",
                84: "逕ｵ蜃ｻ",
                85: "蜊∽ｸ�ｼ冗音",
                86: "逕ｵ逎∵ｳ｢",
                87: "謇馴峭",
                88: "關ｽ遏ｳ",
                89: "蝨ｰ髴�",
                90: "蝨ｰ陬�",
                91: "謖匁ｴ�",
                92: "蜑ｧ豈�",
                93: "蠢ｵ蜉�",
                94: "邊ｾ逾槫ｼｺ蠢ｵ",
                95: "蛯ｬ逵�譛ｯ",
                96: "迹應ｼｽ蟋ｿ蜉ｿ",
                97: "鬮倬溽ｧｻ蜉ｨ",
                98: "逕ｵ蜈我ｸ髣ｪ",
                99: "諢､諤�",
                100: "迸ｬ髣ｴ遘ｻ蜉ｨ",
                101: "鮟大､憺ｭ泌ｽｱ",
                102: "讓｡莉ｿ",
                103: "蛻ｺ閠ｳ螢ｰ",
                104: "蠖ｱ蟄仙�霄ｫ",
                105: "閾ｪ謌大�逕�",
                106: "蜿倡｡ｬ",
                107: "蜿伜ｰ�",
                108: "辜溷ｹ�",
                109: "螂�ｼゆｹ句�",
                110: "郛ｩ蜈･螢ｳ荳ｭ",
                111: "蜿伜怕",
                112: "螻城囿",
                113: "蜈牙｢�",
                114: "鮟鷹崟",
                115: "蜿榊ｰ�｣�",
                116: "閨壽ｰ�",
                117: "蠢崎�",
                118: "謖･謖�",
                119: "鮖ｦ鮖牙ｭｦ闊�",
                120: "邇臥浹菫ｱ遒�",
                121: "轤ｸ陋�",
                122: "闊瑚�",
                123: "豬企崟",
                124: "豎｡豕･謾ｻ蜃ｻ",
                125: "鬪ｨ譽�",
                126: "螟ｧ蟄礼�轤�",
                127: "謾轢�",
                128: "雍晏｣ｳ螟ｹ蜃ｻ",
                129: "鬮倬滓弌譏�",
                130: "轣ｫ邂ｭ螟ｴ髞､",
                131: "蟆門絢蜉�蜀懃ぐ",
                132: "郛�扈�",
                133: "迸ｬ髣ｴ螟ｱ蠢�",
                134: "謚伜ｼｯ豎､蛹�",
                135: "逕溯寞",
                136: "鬟櫁�雕｢",
                137: "螟ｧ陋�棯逵ｼ",
                138: "鬟滓｢ｦ",
                139: "豈堤逃譁ｯ",
                140: "謚慕帥",
                141: "豎ｲ蜿�",
                142: "諱ｶ鬲比ｹ句製",
                143: "逾樣ｸ溽憲蜃ｻ",
                144: "蜿倩ｺｫ",
                145: "豕｡豐ｫ",
                146: "霑ｷ譏乗教",
                147: "陂題順蟄｢蟄�",
                148: "髣ｪ蜈�",
                149: "邊ｾ逾樊ｳ｢",
                150: "霍�ｵｷ",
                151: "貅ｶ蛹�",
                152: "陝ｹ髓ｳ髞､",
                153: "螟ｧ辷�ず",
                154: "荵ｱ謚�",
                155: "鬪ｨ螟ｴ蝗槫鴨髟�",
                156: "逹｡隗�",
                157: "蟯ｩ蟠ｩ",
                158: "扈育ｻ馴葎迚�",
                159: "譽ｱ隗貞喧",
                160: "郤ｹ逅�",
                161: "荳蛾㍾謾ｻ蜃ｻ",
                162: "諢､諤帝葎迚�",
                163: "蜉亥ｼ",
                164: "譖ｿ霄ｫ",
                165: "謖｣謇�",
                166: "蜀咏函",
                167: "荳芽ｿ櫁ｸ｢",
                168: "蟆丞�",
                169: "陋帷ｽ�",
                170: "蠢�ｹ狗愍",
                171: "諱ｶ譴ｦ",
                172: "轣ｫ辟ｰ霓ｮ",
                173: "謇馴ｼｾ",
                174: "蜥呈惘",
                175: "謚鍋汲",
                176: "郤ｹ逅�ｼ�",
                177: "豌疲雷謾ｻ蜃ｻ",
                178: "譽牙ｭ｢蟄�",
                179: "扈晏､�｢逕�",
                180: "諤ｨ諱ｨ",
                181: "扈�妛",
                182: "螳井ｽ�",
                183: "髻ｳ騾滓教",
                184: "蜿ｯ諤暮擇蟄�",
                185: "蜃ｺ螂�ｸ蜃ｻ",
                186: "螟ｩ菴ｿ荵句製",
                187: "閻ｹ鮠�",
                188: "豎｡豕･轤ｸ蠑ｹ",
                189: "謗ｷ豕･",
                190: "遶�魍ｼ譯ｶ轤ｮ",
                191: "謦定廠",
                192: "逕ｵ逎∫ぐ",
                193: "隸��ｴ",
                194: "蜷悟多",
                195: "扈育ч荵区ｭ�",
                196: "蜀ｰ蜀ｻ荵矩｣�",
                197: "逵狗ｩｿ",
                198: "鬪ｨ譽剃ｹｱ謇�",
                199: "髞∝ｮ�",
                200: "騾�ｳ�",
                201: "豐呎垓",
                202: "扈域栫蜷ｸ蜿�",
                203: "謖ｺ菴�",
                204: "謦貞ｨ�",
                205: "貊壼勘",
                206: "轤ｹ蛻ｰ荳ｺ豁｢",
                207: "陌壼ｼ�螢ｰ蜉ｿ",
                208: "蝟晉央螂ｶ",
                209: "逕ｵ蜈�",
                210: "霑樊湊",
                211: "髓｢鄙ｼ",
                212: "鮟題牡逶ｮ蜈�",
                213: "霑ｷ莠ｺ",
                214: "譴ｦ隸�",
                215: "豐ｻ諢磯塔螢ｰ",
                216: "謚･諱ｩ",
                217: "遉ｼ迚ｩ",
                218: "霑∵�",
                219: "逾樒ｧ伜ｮ域侃",
                220: "蛻�球逞帶･�",
                221: "逾槫悒荵狗↓",
                222: "髴�ｺｧ",
                223: "辷�｣よ教",
                224: "雜�ｺｧ隗貞�",
                225: "鮴呎�",
                226: "謗･譽�",
                227: "蜀肴擂荳谺｡",
                228: "霑ｽ謇�",
                229: "鬮倬滓雷霓ｬ",
                230: "逕懃莫鬥呎ｰ�",
                231: "體∝ｰｾ",
                232: "驥大ｱ樒穐",
                233: "蛟溷鴨鞫�",
                234: "譎ｨ蜈�",
                235: "蜈牙粋菴懃畑",
                236: "譛亥�",
                237: "隗蛾�蜉幃㍼",
                238: "蜊∝ｭ怜活",
                239: "鮴吝差鬟�",
                240: "豎る岑",
                241: "螟ｧ譎ｴ螟ｩ",
                242: "蜥ｬ遒�",
                243: "髟憺擇蜿榊ｰ�",
                244: "閾ｪ謌第囓遉ｺ",
                245: "逾樣�",
                246: "蜴溷ｧ倶ｹ句鴨",
                247: "證怜ｽｱ逅�",
                248: "鬚�衍譛ｪ譚･",
                249: "遒主ｲｩ",
                250: "貎ｮ譌�",
                251: "蝗ｴ謾ｻ",
                252: "蜃ｻ謗悟･�｢ｭ",
                253: "蜷ｵ髣ｹ",
                254: "闢�鴨",
                255: "蝟ｷ蜃ｺ",
                256: "蜷樔ｸ�",
                257: "辜ｭ鬟�",
                258: "蜀ｰ髮ｹ",
                259: "譌�逅�叙髣ｹ",
                260: "蜷ｹ謐ｧ",
                261: "逎ｷ轣ｫ",
                262: "荳ｴ蛻ｫ遉ｼ迚ｩ",
                263: "遑ｬ謦�",
                264: "逵滓ｰ疲教",
                265: "貂��",
                266: "逵区�蝌�",
                267: "閾ｪ辟ｶ荵句鴨",
                268: "蜈�鳩",
                269: "謖題｡�",
                270: "蟶ｮ蜉ｩ",
                271: "謌乗ｳ�",
                272: "謇ｮ貍�",
                273: "逾域�",
                274: "蛟溷勧",
                275: "謇取�ｹ",
                276: "陋ｮ蜉�",
                277: "鬲疲ｳ募渚蟆�",
                278: "蝗樊噺蛻ｩ逕ｨ",
                279: "謚･螟�",
                280: "蜉育逃",
                281: "蜩域ｬ�",
                282: "諡崎誠",
                283: "陋ｮ蟷ｲ",
                284: "蝟ｷ轣ｫ",
                285: "迚ｹ諤ｧ莠呈困",
                286: "蟆∝魂",
                287: "辟慕┯荳譁ｰ",
                288: "諤ｨ蠢ｵ",
                289: "蛹紋ｸｺ蟾ｱ逕ｨ",
                290: "遘伜ｯ�ｹ句鴨",
                291: "貎懈ｰｴ",
                292: "迪帶耳",
                293: "菫晄侃濶ｲ",
                294: "關､轣ｫ",
                295: "豢∝〝蜈芽樺",
                296: "阮�崟逅�",
                297: "鄒ｽ豈幄�",
                298: "鞫�刄闊�",
                299: "轣ｫ辟ｰ雕｢",
                300: "邇ｩ豕･蟾ｴ",
                301: "蜀ｰ逅�",
                302: "蟆門絢閾�",
                303: "蛛ｷ諛�",
                304: "蟾ｨ螢ｰ",
                305: "蜑ｧ豈堤甥",
                306: "謦戊｣ら穐",
                307: "辷�ず辜育┣",
                308: "蜉�蜀懈ｰｴ轤ｮ",
                309: "蠖玲弌諡ｳ",
                310: "諠雁嵩",
                311: "豌碑ｱ｡逅�",
                312: "闃ｳ鬥呎ｲｻ逍�",
                313: "蛛�働",
                314: "遨ｺ豌泌茜蛻�",
                315: "霑�Ο",
                316: "豌泌袖萓ｦ豬�",
                317: "蟯ｩ遏ｳ蟆�煤",
                318: "體ｶ濶ｲ譌矩｣�",
                319: "驥大ｱ樣浹",
                320: "闕臥ｬ�",
                321: "謖�逞�",
                322: "螳�ｮ吝鴨驥�",
                323: "蝟ｷ豌ｴ",
                324: "菫｡蜿ｷ蜈画據",
                325: "證怜ｽｱ諡ｳ",
                326: "逾樣壼鴨",
                327: "蜀ｲ螟ｩ諡ｳ",
                328: "豬∵ｲ呎ｷｱ貂�",
                329: "扈晏ｯｹ髮ｶ蠎ｦ",
                330: "豬頑ｵ�",
                331: "遘榊ｭ先惻蜈ｳ譫ｪ",
                332: "辯戊ｿ�",
                333: "蜀ｰ髞･",
                334: "體∝｣�",
                335: "謖｡霍ｯ",
                336: "髟ｿ蝴�",
                337: "鮴咏穐",
                338: "逍ｯ迢よ､咲黄",
                339: "蛛･鄒�",
                340: "蠑ｹ霍ｳ",
                341: "豕･蟾ｴ蟆��",
                342: "豈貞ｰｾ",
                343: "貂ｴ譛�",
                344: "莨冗音謾ｻ蜃ｻ",
                345: "鬲疲ｳ募掌",
                346: "邇ｩ豌ｴ",
                347: "蜀･諠ｳ",
                348: "蜿ｶ蛻�",
                349: "鮴吩ｹ玖�",
                350: "蟯ｩ遏ｳ辷��",
                351: "逕ｵ蜃ｻ豕｢",
                352: "豌ｴ荵区ｳ｢蜉ｨ",
                353: "遐ｴ轣ｭ荵区�",
                354: "邊ｾ逾樒ｪ∬ｿ�",
                355: "鄒ｽ譬�",
                356: "驥榊鴨",
                357: "螂�ｿｹ荵狗愍",
                358: "蜚､驢貞ｷｴ謗�",
                359: "閾る筈",
                360: "髯陞ｺ逅�",
                361: "豐ｻ諢井ｹ区�",
                362: "逶先ｰｴ",
                363: "閾ｪ辟ｶ荵区←",
                364: "菴ｯ謾ｻ",
                365: "蝠�｣�",
                366: "鬘ｺ鬟�",
                367: "轤ｹ遨ｴ",
                368: "驥大ｱ樒�轤ｸ",
                369: "諤･騾滓釜霑�",
                370: "霑題ｺｫ謌�",
                371: "莉･迚呵ｿ倡甥",
                372: "諱ｶ諢剰ｿｽ蜃ｻ",
                373: "譟･蟆�",
                374: "謚墓執",
                375: "邊ｾ逾櫁ｽｬ遘ｻ",
                376: "邇狗煙",
                377: "蝗槫､榊ｰ�煤",
                378: "扈樒ｴｧ",
                379: "蜉幃㍼謌乗ｳ�",
                380: "閭�ｶｲ",
                381: "蟷ｸ霑仙鋳隸ｭ",
                382: "謚｢蜈井ｸ豁･",
                383: "莉ｿ謨�",
                384: "蜉幃㍼莠呈困",
                385: "髦ｲ螳井ｺ呈困",
                386: "諠ｩ鄂�",
                387: "迴崎酪",
                388: "辜ｦ諱ｼ遘榊ｭ�",
                389: "遯∬｢ｭ",
                390: "豈定廠",
                391: "蠢��莠呈困",
                392: "豌ｴ豬∫識",
                393: "逕ｵ逎�｣俶ｵｮ",
                394: "髣ｪ辟ｰ蜀ｲ髞�",
                395: "蜿大幹",
                396: "豕｢蟇ｼ蠑ｹ",
                397: "蟯ｩ遏ｳ謇鍋｣ｨ",
                398: "豈貞�",
                399: "諱ｶ荵区ｳ｢蜉ｨ",
                400: "證苓｢ｭ隕∝ｮｳ",
                401: "豌ｴ豬∝ｰｾ",
                402: "遘榊ｭ千ず蠑ｹ",
                403: "遨ｺ豌比ｹ句�",
                404: "蜊∝ｭ怜岡",
                405: "陌ｫ鮑｣",
                406: "鮴吩ｹ区ｳ｢蜉ｨ",
                407: "鮴吩ｹ倶ｿｯ蜀ｲ",
                408: "蜉幃㍼螳晉浹",
                409: "蜷ｸ蜿匁教",
                410: "逵溽ｩｺ豕｢",
                411: "逵滓ｰ泌ｼｹ",
                412: "閭ｽ驥冗帥",
                413: "蜍�ｸ溽憲謾ｻ",
                414: "螟ｧ蝨ｰ荵句鴨",
                415: "謗牙桁",
                416: "扈域栫蜀ｲ蜃ｻ",
                417: "隸｡隶｡",
                418: "蟄仙ｼｹ諡ｳ",
                419: "髮ｪ蟠ｩ",
                420: "蜀ｰ遐ｾ",
                421: "證怜ｽｱ辷ｪ",
                422: "髮ｷ逕ｵ迚�",
                423: "蜀ｰ蜀ｻ迚�",
                424: "轣ｫ辟ｰ迚�",
                425: "蠖ｱ蟄仙�陲ｭ",
                426: "豕･蟾ｴ轤ｸ蠑ｹ",
                427: "邊ｾ逾槫茜蛻�",
                428: "諢丞ｿｵ螟ｴ髞､",
                429: "髟懷�蟆��",
                430: "蜉�蜀懷�轤ｮ",
                431: "謾蟯ｩ",
                432: "貂�勁豬馴崟",
                433: "謌乗ｳ慕ｩｺ髣ｴ",
                434: "豬∵弌鄒､",
                435: "謾ｾ逕ｵ",
                436: "蝟ｷ辜�",
                437: "鬟槫掌鬟取垓",
                438: "蠑ｺ蜉幃椚謇�",
                439: "蟯ｩ遏ｳ轤ｮ",
                440: "蜊∝ｭ玲ｯ貞�",
                441: "蝙�慇蟆��",
                442: "體∝､ｴ",
                443: "逎�刀轤ｸ蠑ｹ",
                444: "蟆也浹謾ｻ蜃ｻ",
                445: "隸ｱ諠�",
                446: "髫仙ｽ｢蟯ｩ",
                447: "謇楢拷扈�",
                448: "蝟句幕荳堺ｼ�",
                449: "蛻ｶ陬∝�遐ｾ",
                450: "陌ｫ蜥ｬ",
                451: "蜈�鳩蜈画據",
                452: "譛ｨ讒�",
                453: "豌ｴ豬∝鵡蟆�",
                454: "謾ｻ蜃ｻ謖�ｻ､",
                455: "髦ｲ蠕｡謖�ｻ､",
                456: "蝗槫､肴欠莉､",
                457: "蜿悟�螟ｴ髞､",
                458: "莠瑚ｿ槫�",
                459: "譌ｶ蜈牙中蜩ｮ",
                460: "莠夂ｩｺ陬よ湊",
                461: "譁ｰ譛郁�",
                462: "謐冗｢�",
                463: "辭泌ｲｩ鬟取垓",
                464: "證鈴ｻ第ｴ�",
                465: "遘榊ｭ宣略蜈�",
                466: "螂�ｼゆｹ矩｣�",
                467: "證怜ｽｱ貎懆｢ｭ",
                468: "逎ｨ辷ｪ",
                469: "蟷ｿ蝓滄亟螳�",
                470: "髦ｲ螳亥ｹｳ蛻�",
                471: "蜉幃㍼蟷ｳ蛻�",
                472: "螂�ｦ咏ｩｺ髣ｴ",
                473: "邊ｾ逾槫�蜃ｻ",
                474: "豈呈ｶｲ蜀ｲ蜃ｻ",
                475: "霄ｫ菴楢ｽｻ驥丞喧",
                476: "諢､諤堤ｲ�",
                477: "諢丞ｿｵ遘ｻ迚ｩ",
                478: "鬲疲ｳ慕ｩｺ髣ｴ",
                479: "蜃ｻ關ｽ",
                480: "螻ｱ蟯壽藻",
                481: "辜育┣貅�ｰ�",
                482: "豎｡豕･豕｢",
                483: "陜ｶ闊�",
                484: "驥咲｣��謦�",
                485: "蜷梧ｭ･蟷ｲ謇ｰ",
                486: "逕ｵ逅�",
                487: "豬ｸ豌ｴ",
                488: "闢��辟ｰ陲ｭ",
                489: "逶倩惺",
                490: "荳狗尨雕｢",
                491: "驟ｸ豸ｲ轤ｸ蠑ｹ",
                492: "遘ｻ闃ｱ謗･譛ｨ",
                493: "蜊慕ｺｯ蜈画據",
                494: "謇ｾ莨吩ｼｴ",
                495: "謔ｨ蜈郁ｯｷ",
                496: "霓ｮ蜚ｱ",
                497: "蝗槫｣ｰ",
                498: "騾先ｭ･蜃ｻ遐ｴ",
                499: "貂�勁荵狗Α",
                500: "霎�勧蜉幃㍼",
                501: "蠢ｫ騾滄亟螳�",
                502: "莠､謐｢蝨ｺ蝨ｰ",
                503: "辜ｭ豌ｴ",
                504: "遐ｴ螢ｳ",
                505: "豐ｻ諢域ｳ｢蜉ｨ",
                506: "逾ｸ荳榊黒陦�",
                507: "閾ｪ逕ｱ關ｽ菴�",
                508: "謐｢譯｣",
                509: "蟾ｴ謚�",
                510: "辜ｧ蜃",
                511: "蟒ｶ蜷�",
                512: "譚よ橿",
                513: "髟憺擇螻樊ｧ",
                514: "謚･莉�",
                515: "謳丞多",
                516: "莨�騾堤､ｼ迚ｩ",
                517: "辜育↓豺ｱ貂�",
                518: "豌ｴ荵玖ｪ鍋ｺｦ",
                519: "轣ｫ荵玖ｪ鍋ｺｦ",
                520: "闕我ｹ玖ｪ鍋ｺｦ",
                521: "莨冗音譖ｿ謐｢",
                522: "陌ｫ荵区慣謚�",
                523: "驥崎ｸ�",
                524: "蜀ｰ諱ｯ",
                525: "鮴吝ｰｾ",
                526: "閾ｪ謌第ｿ蜉ｱ",
                527: "逕ｵ鄂�",
                528: "逍ｯ迢ゆｼ冗音",
                529: "逶ｴ蜀ｲ髓ｻ",
                530: "莠瑚ｿ槫活",
                531: "辷ｱ蠢�魂遶�",
                532: "譛ｨ隗�",
                533: "蝨｣蜑�",
                534: "雍晏｣ｳ蛻�",
                535: "鬮俶ｸｩ驥榊視",
                536: "髱定拷謳�旧蝎ｨ",
                537: "逍ｯ迢よｻ壼視",
                538: "譽芽干髦ｲ螳�",
                539: "證鈴ｻ醍�遐ｴ",
                540: "邊ｾ逾槫�遐ｴ",
                541: "謇ｫ蟆ｾ諡肴遠",
                542: "證ｴ鬟�",
                543: "辷�ず螟ｴ遯∝�",
                544: "鮨ｿ霓ｮ鬟樒尨",
                545: "轣ｫ辟ｰ蠑ｹ",
                546: "鬮倡ｧ第橿蜈臥ぐ",
                547: "蜿､閠∽ｹ区ｭ�",
                548: "逾樒ｧ倅ｹ句苑",
                549: "蜀ｰ蟆∽ｸ也阜",
                550: "髮ｷ蜃ｻ",
                551: "髱堤┣",
                552: "轣ｫ荵玖�",
                553: "蜀ｰ蜀ｻ莨冗音",
                554: "譫∝ｯ貞�辟ｰ",
                555: "螟ｧ螢ｰ蜥�動",
                556: "蜀ｰ譟ｱ蝮�蜃ｻ",
                557: "�ｶ辜ｭ辟ｰ",
                558: "莠､髞咏↓辟ｰ",
                559: "莠､髞咎略逕ｵ",
                560: "鬟櫁ｺｫ驥榊視",
                561: "謗讎ｻ讎ｻ邀ｳ",
                562: "謇灘理",
                563: "閠募慍",
                564: "鮟城ｻ冗ｽ�",
                565: "閾ｴ蜻ｽ髓亥絢",
                566: "貎懃�螂�｢ｭ",
                567: "荳�悒螟�",
                568: "謌伜西",
                569: "遲臥ｦｻ蟄先ｵｴ",
                570: "謚帷黄髱｢蜈�鳩",
                571: "譽ｮ譫怜鋳譛ｯ",
                572: "關ｽ闍ｱ郛､郤ｷ",
                573: "蜀ｷ蜀ｻ蟷ｲ辯･",
                574: "鬲�ヱ荵句｣ｰ",
                575: "謚帑ｸ狗侠隸�",
                576: "鬚�蛟�",
                577: "蜷ｸ蜿紋ｹ句製",
                578: "謌乗ｳ暮亟螳�",
                579: "魎懆干髦ｲ螳�",
                580: "髱定拷蝨ｺ蝨ｰ",
                581: "阮�崟蝨ｺ蝨ｰ",
                582: "霎鍋鳩",
                583: "螫蛾了",
                584: "螯也ｲｾ荵矩｣�",
                585: "譛井ｺｮ荵句鴨",
                586: "辷�浹豕｢",
                587: "螯也ｲｾ荵矩煤",
                588: "邇玖�崟迚�",
                589: "蜥檎擱逶ｸ螟�",
                590: "蟇�ｯｭ",
                591: "髓ｻ遏ｳ鬟取垓",
                592: "闥ｸ豎ｽ辷�ず",
                593: "蠑よｬ｡蜈�ｴ�",
                594: "鬟樊ｰｴ謇矩㈹蜑�",
                595: "鬲疲ｳ慕↓辟ｰ",
                596: "蟆門絢髦ｲ螳�",
                597: "闃ｳ鬥呵埋髮ｾ",
                598: "諤ｪ蠑ら鳩豕｢",
                599: "豈呈ｶｲ髯ｷ髦ｱ",
                600: "邊牙ｰ�",
                601: "螟ｧ蝨ｰ謗梧而",
                602: "逎∝惻謫肴而",
                603: "谺｢荵先慮蜈�",
                604: "逕ｵ豌泌惻蝨ｰ",
                605: "鬲疲ｳ暮略閠",
                606: "蠎�･�",
                607: "迚ｵ謇�",
                608: "蝨�楜",
                609: "雹ｭ雹ｭ閼ｸ鬚�",
                610: "謇倶ｸ狗蕗諠�",
                611: "郤�郛�荳堺ｼ�",
                612: "蠅槫ｼｺ諡ｳ",
                613: "蠖貞､ｩ荵狗ｿｼ",
                614: "蜊�ｮｭ鮨仙書",
                615: "蜊�ｳ｢豼闕｡",
                616: "螟ｧ蝨ｰ逾槫鴨",
                617: "遐ｴ轣ｭ荵句�",
                618: "譬ｹ貅先ｳ｢蜉ｨ",
                619: "譁ｭ蟠紋ｹ句苑",
                620: "逕ｻ鮴咏せ逹�",
                621: "蠑よｬ｡蜈�憲謾ｻ",
                622: "遨ｶ譫∵裏謨悟､ｧ蜀ｲ謦�",
                623: "遨ｶ譫∵裏謨悟､ｧ蜀ｲ謦�",
                624: "蜈ｨ蜉帶裏蜿梧ｿ辜域教",
                625: "蜈ｨ蜉帶裏蜿梧ｿ辜域教",
                626: "譫�滉ｿｯ蜀ｲ霓ｰ辜域寵",
                627: "譫�滉ｿｯ蜀ｲ霓ｰ辜域寵",
                628: "蠑ｺ驟ｸ蜑ｧ豈堤�扈晞岑",
                629: "蠑ｺ驟ｸ蜑ｧ豈堤�扈晞岑",
                630: "蝨ｰ髫�丙螟ｩ螟ｧ扈育ｻ�",
                631: "蝨ｰ髫�丙螟ｩ螟ｧ扈育ｻ�",
                632: "豈∝､ｩ轣ｭ蝨ｰ蟾ｨ蟯ｩ蝮�",
                633: "豈∝､ｩ轣ｭ蝨ｰ蟾ｨ蟯ｩ蝮�",
                634: "扈晏ｯｹ謐暮｣溷屓譌区湊",
                635: "扈晏ｯｹ謐暮｣溷屓譌区湊",
                636: "譌�蟆ｽ證怜､應ｹ玖ｯｱ諠�",
                637: "譌�蟆ｽ證怜､應ｹ玖ｯｱ諠�",
                638: "雜�ｻ晁楴譌玖ｿ槫�",
                639: "雜�ｻ晁楴譌玖ｿ槫�",
                640: "雜�ｼｺ譫�剞辷�┣蠑ｹ",
                641: "雜�ｼｺ譫�剞辷�┣蠑ｹ",
                642: "雜�ｺｧ豌ｴ豬∝､ｧ貍ｩ豸｡",
                643: "雜�ｺｧ豌ｴ豬∝､ｧ貍ｩ豸｡",
                644: "扈夂モ郛､郤ｷ闃ｱ諤呈叛",
                645: "扈夂モ郛､郤ｷ闃ｱ諤呈叛",
                646: "扈域栫莨冗音迢る峭髣ｪ",
                647: "扈域栫莨冗音迢る峭髣ｪ",
                648: "閾ｳ鬮倡ｲｾ逾樒�ｴ蝮乗ｳ｢",
                649: "閾ｳ鬮倡ｲｾ逾樒�ｴ蝮乗ｳ｢",
                650: "豼迢ょ､ｧ蝨ｰ荳�㈹蜀ｰ",
                651: "豼迢ょ､ｧ蝨ｰ荳�㈹蜀ｰ",
                652: "遨ｶ譫∝ｷｨ鮴咎怫螟ｩ蝨ｰ",
                653: "遨ｶ譫∝ｷｨ鮴咎怫螟ｩ蝨ｰ",
                654: "鮟第ｴ槫裾蝎ｬ荳�黄轣ｭ",
                655: "鮟第ｴ槫裾蝎ｬ荳�黄轣ｭ",
                656: "蜿ｯ辷ｱ譏滓弌鬟槫､ｩ謦�",
                657: "蜿ｯ辷ｱ譏滓弌鬟槫､ｩ謦�",
                658: "逧ｮ蜊｡逧ｮ蜊｡蠢�捩蜃ｻ",
                659: "髮�ｲ�",
                660: "霑主､ｴ荳蜃ｻ",
                661: "遒牙�｡",
                662: "郛晏ｽｱ",
                663: "�､�､驥大鏡閾�",
                664: "豕｡蠖ｱ逧�衷蜿ｹ隹�",
                665: "蜀ｰ髞､",
                666: "闃ｱ逍�",
                667: "蜊∽ｸ�ｩｬ蜉�",
                668: "蜷ｸ蜿門鴨驥�",
                669: "譌･蜈牙�",
                670: "譬大掌",
                671: "閨壼�轣ｯ",
                672: "豈剃ｸ�",
                673: "逎ｨ遐ｺ",
                674: "霎�勧鮨ｿ霓ｮ",
                675: "豺ｱ貂顔ｪ∝絢",
                676: "闃ｱ邊牙屬",
                677: "謗ｷ髞�",
                678: "邊ｾ逾槫惻蝨ｰ",
                679: "迪帶苑",
                680: "轣ｫ辟ｰ髷ｭ",
                681: "蝴｣蠑�",
                682: "辯�ｰｽ",
                683: "騾溷ｺｦ莠呈困",
                684: "菫ｮ髟ｿ荵玖ｧ�",
                685: "蜃蛹�",
                686: "隗蛾�荵玖�",
                687: "譬ｸ蠢�Λ鄂夊�",
                688: "辜ｭ蟶ｦ雕｢",
                689: "蜿ｷ莉､",
                690: "鮑溷亢蜉�蜀懃ぐ",
                691: "魑樒援蝎ｪ髻ｳ",
                692: "鮴咎筈",
                693: "迢り�謖･謇�",
                694: "譫∝�蟷�",
                695: "驕ｮ螟ｩ阡ｽ譌･證怜ｽｱ邂ｭ",
                696: "譫∵�鬟櫁ｷ�ｲ臥｢主�",
                697: "豬ｷ逾槫ｺ�ｸ･莠､蜩堺ｹ�",
                698: "蟾ｨ莠ｺ蜊ｫ螢ｫ繝ｻ髦ｿ鄂玲級",
                699: "荳�弌螟ｺ鬲り�",
                700: "鬩ｾ髮ｷ鬩ｭ逕ｵ謌丞�豬ｪ",
                701: "隶､逵溯ｵｷ譚･螟ｧ辷��",
                702: "荵晏ｽｩ蜊�克鮨占★鬘ｶ",
                703: "襍ｷ貅占ｶ�眠譏溷､ｧ辷�ず",
                704: "髯ｷ髦ｱ逕ｲ螢ｳ",
                705: "闃ｱ譛ｵ蜉�蜀懃ぐ",
                706: "邊ｾ逾樔ｹ狗甥",
                707: "霍ｺ閼�",
                708: "證怜ｽｱ荵矩ｪｨ",
                709: "蜀ｲ蟯ｩ",
                710: "豌ｴ豬∬｣ら�ｴ",
                711: "譽ｱ髟憺墳蟆�",
                712: "證怜ｽｱ蛛ｷ逶�",
                713: "豬∵弌髣ｪ蜀ｲ",
                714: "證怜ｽｱ荵句�",
                715: "豕ｪ逵ｼ豎ｪ豎ｪ",
                716: "鮗ｻ鮗ｻ蛻ｺ蛻ｺ",
                717: "閾ｪ辟ｶ荵区�",
                718: "螟壼ｱ樊ｧ謾ｻ蜃ｻ",
                719: "蜊�ｸ�ｼ冗音",
                720: "諠顔�螟ｧ螟ｴ",
                721: "遲臥ｦｻ蟄宣略逕ｵ諡ｳ",
                722: "蜈牙ｭ仙鵡豸�",
                723: "辟壼､ｩ轣ｭ荳也た蜈臥�",
                724: "譌･蜈牙屓譌倶ｸ玖牛遨ｹ",
                725: "譛亥克鬟樊ｺ�誠轣ｵ髴�",
                726: "莠ｲ蟇�裏髣ｴ螟ｧ荵ｱ謠�",
                727: "迢ｼ蝠ｸ遏ｳ迚咎｣馴｣取垓",
                728: "轤ｽ鬲らΟ闊樒ヨ髻ｳ辷�",
                729: "逕ｵ逕ｵ蜉�騾�",
                730: "貊疲ｻ泌�豬ｪ",
                731: "鬟倬｣伜擒關ｽ",
                732: "髣ｪ髣ｪ髮ｷ蜈�",
                733: "豢ｻ豢ｻ豌疲ｳ｡",
                734: "鮗ｻ鮗ｻ逕ｵ蜃ｻ",
                735: "辭顔�轣ｫ辷�",
                736: "蜩怜痘豌泌惻",
                737: "蝮丞搶鬚�沺",
                738: "闌∬戟轤ｸ蠑ｹ",
                739: "蜀ｰ蜀ｰ髴懷�",
                740: "莠ｮ莠ｮ鬟取垓",
                741: "遐ｰ遐ｰ蜃ｻ遐ｴ",
                742: "髓｢諡ｳ蜿悟�",
                743: "譫∝ｷｨ髦ｲ螢�",
                744: "譫∝ｷｨ轤ｮ",
                745: "迢吝�",
                746: "邏ｧ蜥ｬ荳肴叛",
                747: "螟ｧ蠢ｫ譛ｵ鬚�",
                748: "閭梧ｰｴ荳謌�",
                749: "豐･髱貞ｰ��",
                750: "鬲疲ｳ慕ｲ�",
                751: "鮴咏ｮｭ",
                752: "闌ｶ莨�",
                753: "陋ｸ蝗ｺ",
                754: "逕ｵ蝟�",
                755: "魑�町",
                756: "謐｢蝨ｺ",
                757: "譫∝ｷｨ轣ｫ辷�",
                758: "譫∝ｷｨ陌ｫ陋�",
                759: "譫∝ｷｨ髣ｪ逕ｵ",
                760: "譫∝ｷｨ謾ｻ蜃ｻ",
                761: "譫∝ｷｨ諡ｳ譁�",
                762: "譫∝ｷｨ蟷ｽ鬲�",
                763: "譫∝ｷｨ蟇貞�",
                764: "譫∝ｷｨ驟ｸ豈�",
                765: "譫∝ｷｨ豌ｴ豬�",
                766: "譫∝ｷｨ鬟槫�",
                767: "譫∝ｷｨ螯也ｲｾ",
                768: "譫∝ｷｨ鮴咎ｪ�",
                769: "譫∝ｷｨ雜��",
                770: "譫∝ｷｨ蟯ｩ遏ｳ",
                771: "譫∝ｷｨ螟ｧ蝨ｰ",
                772: "譫∝ｷｨ諱ｶ髴ｸ",
                773: "譫∝ｷｨ闕牙次",
                774: "譫∝ｷｨ髓｢體�",
                775: "鬲り�辜磯浹辷�",
                776: "謇大�",
                777: "陬�･ｰ",
                778: "鮠灘�",
                779: "謐募�螟ｹ",
                780: "轣ｫ辟ｰ逅�",
                781: "蟾ｨ蜈ｽ譁ｩ",
                782: "蟾ｨ蜈ｽ蠑ｹ",
                783: "豌泌惻霓ｮ",
                784: "蟷ｿ蝓溽�ｴ蝮�",
                785: "譛ｨ譫晉ｪ∝絢",
                786: "遐ｴ髻ｳ",
                787: "闍ｹ譫憺�",
                788: "荳�怏蠑募鴨",
                789: "轣ｵ鬲ょ�蜃ｻ",
                790: "逾槫･�頂豎ｽ",
                791: "逕溷多豌ｴ貊ｴ",
                792: "諡ｦ蝣ｵ",
                793: "蛛�ｷｪ逵滓寵",
                794: "豬∵弌遯∝�",
                795: "譌�譫∝�譚�",
                796: "體∬ｹ��郤ｿ",
                797: "蟷ｿ蝓滓�蜉�",
                798: "體∵ｻ夊ｽｮ",
                799: "魑槫ｰ�",
                800: "豬∵弌蜈画據",
                801: "閾りｴ晄ｭｦ蝎ｨ",
                802: "阮�崟轤ｸ陬�",
                803: "髱定拷貊第｢ｯ",
                804: "逕ｵ蜉帑ｸ雁合",
                805: "螟ｧ蝨ｰ豕｢蜉ｨ",
                806: "辷ｬ蜃ｻ",
                807: "螯堤↓",
                808: "豕�└",
                809: "轣ｵ鬪�",
                810: "閻占噫豌比ｽ�",
                811: "謖�ｯｼ",
                812: "蠢ｫ騾滓釜霑�",
                813: "荳画雷蜃ｻ",
                814: "蜿檎ｿｼ",
                815: "辜ｭ豐吝､ｧ蝨ｰ",
                816: "荳帶棊豐ｻ逍�",
                817: "證怜�蠑ｺ蜃ｻ",
                818: "豌ｴ豬∬ｿ樊遠",
                819: "髮ｷ逕ｵ蝗夂ｬｼ",
                820: "蟾ｨ鮴吝ｨ∬�",
                821: "蜀ｰ蜀ｷ隗�ｺｿ",
                822: "諤堤↓荳ｭ辜ｧ",
                823: "髮ｷ鮑｣雹ｴ蜃ｻ",
                824: "髮ｪ遏�",
                825: "譏溽｢�",
                826: "隸｡蠑ょ鋳隸ｭ",
                827: "蜈句多辷ｪ",
                828: "螻城囿迪帶判",
                829: "蜉幃㍼霓ｬ謐｢",
                830: "蟯ｩ譁ｧ",
                831: "髦ｳ譏･鬟取垓",
                832: "逾樒ｧ倅ｹ句鴨",
                833: "螟ｧ諢､諷ｨ",
                834: "豕｢蜉ｨ蜀ｲ",
                835: "蜿ｶ扈ｿ辷�怫",
                836: "蜀ｰ螻ｱ鬟�",
                837: "閭懷茜荵玖�",
                838: "遯�｣樒憲謇�",
                839: "豈貞鴻髓�",
                840: "豌泌惻荵狗ｿｼ",
                841: "蜀､蜀､逶ｸ謚･",
                842: "髣ｭ蜈ｳ",
                843: "荳芽ｿ樒ｮｭ",
                844: "鄒､鬲比ｹｱ闊�",
                845: "遘伜苑繝ｻ蜊�㍾豸�",
                846: "譫ｯ蜿ｶ鬟取垓",
                847: "鮑｣髮ｷ鬟取垓",
                848: "辜ｭ豐咎｣取垓",
                849: "譁ｰ譛育･育･ｷ",
                850: "蜍�ｰ泌｡ｫ蜈�",
                851: "螟ｪ譎ｶ辷�書",
                852: "郤ｿ髦ｱ",
                853: "荳句視雕｢",
                854: "謇ｫ蠅�",
                855: "逅牙�蜀ｲ豼",
                856: "荳願除",
                857: "蝟ｷ蟆�教",
                858: "霎｣讀堤ｲｾ蜊�",
                859: "逍ｾ騾溯ｽｬ霓ｮ",
                860: "鮠�謨ｰ蜆ｿ",
                861: "蜀ｰ譌�",
                862: "蟾ｨ蜑醍ｪ∝�",
                863: "螟咲函逾育･ｷ",
                864: "逶占�",
                865: "荳芽ｿ樣捗",
                866: "譎ｶ蜈芽ｽｬ霓ｬ",
                867: "謠冗ｻ�",
                868: "逕ｩ閧�",
                869: "莉��",
                870: "蜊�序荳�干",
                871: "髣ｪ辟ｰ鬮俶ｭ�",
                872: "豬∵ｰｴ譌玖�",
                873: "諤堤央",
                874: "豺倬≡貎ｮ",
                875: "邊ｾ逾槫苑",
                876: "豌ｴ闥ｸ豌�",
                877: "螟ｧ轣ｾ髫ｾ",
                878: "蜈ｨ蠑迪帶寵",
                879: "髣ｪ逕ｵ迪帛�",
                880: "譁ｭ蟆ｾ",
                881: "蜀ｷ隨題ｯ�",
                882: "螟ｧ謇ｫ髯､",
                883: "髮ｪ譎ｯ",
                884: "陌ｫ謇�",
                885: "襍ｷ闕�",
                886: "豕ｼ蜀ｷ豌ｴ",
                887: "蠑ｺ蜉幃捗",
                888: "蜿悟�譚�",
                889: "諢､諤剃ｹ区教",
                890: "體�蜀懃ぐ",
                891: "謔泌ｿｵ蜑�",
                892: "逕ｵ蜈牙曙蜃ｻ",
                893: "蟾ｨ蜉幃筈",
                894: "螟堺ｻ�",
                895: "豌ｴ豕｢蛻",
                896: "轣ｼ辜ｭ證ｴ蜀ｲ",
                897: "鮟第囓證ｴ蜀ｲ",
                898: "蜑ｧ豈呈垓蜀ｲ",
                899: "譬ｼ譁玲垓蜀ｲ",
                900: "鬲疲ｳ墓垓蜀ｲ",
                901: "陦譛�",
                902: "蛻ｷ蛻ｷ闌ｶ轤ｮ",
                903: "邉匁ｵ�ず蠑ｹ",
                904: "譽倩陸譽�"
              },
              tokusei: {
                1: "諱ｶ閾ｭ",
                2: "髯埼岑",
                3: "蜉�騾�",
                4: "謌俶沫逶皮抜",
                5: "扈灘ｮ�",
                6: "貉ｿ豌�",
                7: "譟碑ｽｯ",
                8: "豐咎嚼",
                9: "髱咏鳩",
                10: "闢�鳩",
                11: "蛯ｨ豌ｴ",
                12: "霑滄喋",
                13: "譌�蜈ｳ螟ｩ豌�",
                14: "螟咲愍",
                15: "荳咲悛",
                16: "蜿倩牡",
                17: "蜈咲稔",
                18: "蠑慕↓",
                19: "魑樒ｲ�",
                20: "謌題｡梧�邏�",
                21: "蜷ｸ逶�",
                22: "螽∝嵩",
                23: "雕ｩ蠖ｱ",
                24: "邊礼ｳ咏坩閧､",
                25: "逾槫･�ｮ域侃",
                26: "鬟俶ｵｮ",
                27: "蟄｢蟄�",
                28: "蜷梧ｭ･",
                29: "諱貞〝荵玖ｺｯ",
                30: "閾ｪ辟ｶ蝗槫､�",
                31: "驕ｿ髮ｷ髓�",
                32: "螟ｩ諱ｩ",
                33: "謔�貂ｸ閾ｪ螯�",
                34: "蜿ｶ扈ｿ邏�",
                35: "蜿大�",
                36: "螟榊宛",
                37: "螟ｧ蜉帛｣ｫ",
                38: "豈貞絢",
                39: "邊ｾ逾槫鴨",
                40: "辭泌ｲｩ體�逕ｲ",
                41: "豌ｴ蟷�",
                42: "逎∝鴨",
                43: "髫秘浹",
                44: "髮ｨ逶�",
                45: "謇ｬ豐�",
                46: "蜴玖ｿｫ諢�",
                47: "蜴夊р閧ｪ",
                48: "譌ｩ襍ｷ",
                49: "轣ｫ辟ｰ荵玖ｺｯ",
                50: "騾�ｷ�",
                51: "髞仙茜逶ｮ蜈�",
                52: "諤ｪ蜉幃諜",
                53: "謐｡諡ｾ",
                54: "諛呈Σ",
                55: "豢ｻ蜉�",
                56: "霑ｷ莠ｺ荵玖ｺｯ",
                57: "豁｣逕ｵ",
                58: "雍溽鳩",
                59: "髦ｴ譎ｴ荳榊ｮ�",
                60: "鮟冗捩",
                61: "陷慕坩",
                62: "豈�鴨",
                63: "逾槫･�ｳ樒援",
                64: "豎｡豕･豬�",
                65: "闌ら屁",
                66: "迪帷↓",
                67: "豼豬�",
                68: "陌ｫ荵矩｢�─",
                69: "蝮夂｡ｬ閼題｢�",
                70: "譌･辣ｧ",
                71: "豐咏ｩｴ",
                72: "蟷ｲ蜉ｲ",
                73: "逋ｽ濶ｲ辜滄崟",
                74: "迹應ｼｽ荵句鴨",
                75: "遑ｬ螢ｳ逶皮抜",
                76: "豌秘虜",
                77: "雹定ｷ�",
                78: "逕ｵ豌泌ｼ墓梼",
                79: "譁嶺ｺ牙ｿ�",
                80: "荳榊ｱ井ｹ句ｿ�",
                81: "髮ｪ髫�",
                82: "雍ｪ蜷�ｬｼ",
                83: "諢､諤堤ｩｴ菴�",
                84: "霓ｻ陬�",
                85: "閠千Ο",
                86: "蜊慕ｺｯ",
                87: "蟷ｲ辯･逧ｮ閧､",
                88: "荳玖ｽｽ",
                89: "體∵教",
                90: "豈堤沫",
                91: "騾ょｺ泌鴨",
                92: "霑樒ｻｭ謾ｻ蜃ｻ",
                93: "貉ｿ豸ｦ荵玖ｺｯ",
                94: "螟ｪ髦ｳ荵句鴨",
                95: "鬟樊ｯ幄�",
                96: "荳闊ｬ逧ｮ閧､",
                97: "迢吝�謇�",
                98: "鬲疲ｳ暮亟螳�",
                99: "譌�髦ｲ螳�",
                100: "諷｢蜃ｺ",
                101: "謚譛ｯ鬮俶焔",
                102: "蜿ｶ蟄宣亟螳�",
                103: "隨ｨ諡�",
                104: "遐ｴ譬ｼ",
                105: "雜�ｹｸ霑�",
                106: "隸ｱ辷�",
                107: "蜊ｱ髯ｩ鬚�衍",
                108: "鬚�衍譴ｦ",
                109: "郤ｯ譛ｴ",
                110: "譛芽牡逵ｼ髟�",
                111: "霑�ｻ､",
                112: "諷｢蜷ｯ蜉ｨ",
                113: "閭�㍼",
                114: "蠑墓ｰｴ",
                115: "蜀ｰ蜀ｻ荵玖ｺｯ",
                116: "蝮夂｡ｬ蟯ｩ遏ｳ",
                117: "髯埼妛",
                118: "驥�惧",
                119: "蟇溯ｧ�",
                120: "闊崎ｺｫ",
                121: "螟壼ｱ樊ｧ",
                122: "闃ｱ荵狗､ｼ",
                123: "譴ｦ鬲�",
                124: "鬘ｺ謇狗卸鄒�",
                125: "蠑ｺ陦�",
                126: "蜚ｱ蜿崎ｰ�",
                127: "邏ｧ蠑�諢�",
                128: "荳肴恪霎�",
                129: "霓ｯ蠑ｱ",
                130: "蜥呈惘荵玖ｺｯ",
                131: "豐ｻ諢井ｹ句ｿ�",
                132: "蜿区ュ髦ｲ螳�",
                133: "遒手｣る蕩逕ｲ",
                134: "驥埼≡螻�",
                135: "霓ｻ驥大ｱ�",
                136: "螟夐㍾魑樒援",
                137: "荳ｭ豈呈ｿ蜊�",
                138: "蜿礼Ο豼蜊�",
                139: "謾ｶ闔ｷ",
                140: "蠢��諢溷ｺ�",
                141: "蠢�ュ荳榊ｮ�",
                142: "髦ｲ蟆�",
                143: "豈呈焔",
                144: "蜀咲函蜉�",
                145: "蛛･螢ｮ閭ｸ閧�",
                146: "諡ｨ豐�",
                147: "螂�ｿｹ逧ｮ閧､",
                148: "蛻�梵",
                149: "蟷ｻ隗�",
                150: "蜿倩ｺｫ閠�",
                151: "遨ｿ騾�",
                152: "譛ｨ荵�ｼ�",
                153: "閾ｪ菫｡霑�ｺｦ",
                154: "豁｣荵我ｹ句ｿ�",
                155: "閭�ｯ",
                156: "鬲疲ｳ暮復",
                157: "鬟溯拷",
                158: "諱ｶ菴懷鴬荵句ｿ�",
                159: "豐吩ｹ句鴨",
                160: "體∝絢",
                161: "霎ｾ鞫ｩ讓｡蠑�",
                162: "閭懷茜荵区弌",
                163: "豸｡霓ｮ轣ｫ辟ｰ",
                164: "蜈�ｺｧ逕ｵ蜴�",
                165: "闃ｳ鬥吝ｹ�",
                166: "闃ｱ蟷�",
                167: "鬚雁寢",
                168: "蜿伜ｹｻ閾ｪ螯�",
                169: "豈帷坩螟ｧ陦｣",
                170: "鬲疲惘蟶�",
                171: "髦ｲ蠑ｹ",
                172: "螂ｽ閭�",
                173: "蠑ｺ螢ｮ荵矩｢�",
                174: "蜀ｰ蜀ｻ逧ｮ閧､",
                175: "逕懷ｹ�",
                176: "謌俶沫蛻�困",
                177: "逍ｾ鬟惹ｹ狗ｿｼ",
                178: "雜�ｺｧ蜿大ｰ�勣",
                179: "闕我ｹ区ｯ帷坩",
                180: "蜈ｱ逕�",
                181: "遑ｬ辷ｪ",
                182: "螯也ｲｾ逧ｮ閧､",
                183: "鮟乗ｻ�",
                184: "鬟櫁｡檎坩閧､",
                185: "莠ｲ蟄千鯵",
                186: "證鈴ｻ第ｰ泌惻",
                187: "螯也ｲｾ豌泌惻",
                188: "豌泌惻遐ｴ蝮�",
                189: "蟋区ｺ蝉ｹ区ｵｷ",
                190: "扈育ｻ謎ｹ句慍",
                191: "蠕ｷ蟆泌｡疲ｰ疲ｵ�",
                192: "謖∽ｹ�鴨",
                193: "霍�ｷ�ｬｲ騾�",
                194: "蜊ｱ髯ｩ蝗樣∩",
                195: "驕�ｰｴ蜃晏崋",
                196: "荳堺ｻ∽ｸ堺ｹ�",
                197: "逡碁剞逶ｾ螢ｳ",
                198: "雹ｲ螳�",
                199: "豌ｴ豕｡",
                200: "髓｢閭ｽ蜉幄�",
                201: "諤堤↓蜀ｲ螟ｩ",
                202: "諡ｨ髮ｪ",
                203: "霑憺囈",
                204: "貉ｿ豸ｦ荵句｣ｰ",
                205: "蜈郁｡梧ｲｻ逍�",
                206: "逕ｵ豌皮坩閧､",
                207: "蜀ｲ豬ｪ荵句ｰｾ",
                208: "魍ｼ鄒､",
                209: "逕ｻ逧ｮ",
                210: "迚ｵ扈雁序霄ｫ",
                211: "鄒､閨壼序蠖｢",
                212: "閻占噫",
                213: "扈晏ｯｹ逹｡逵�",
                214: "螂ｳ邇狗噪螽∽ｸ･",
                215: "鬟槫�逧��蝨ｨ迚ｩ",
                216: "闊櫁�",
                217: "闢�鳩豎�",
                218: "豈幄減闌ｸ",
                219: "魎懆乙荵玖ｺｯ",
                220: "鬲ょｿ�",
                221: "蜊ｷ蜿�",
                222: "謗･逅�焔",
                223: "蛹門ｭｦ荵句鴨",
                224: "蠑ょ�謠仙合",
                225: "�｡�ｲ邉ｻ扈�",
                226: "逕ｵ豌泌宛騾�閠�",
                227: "邊ｾ逾槫宛騾�閠�",
                228: "阮�崟蛻ｶ騾�閠�",
                229: "髱定拷蛻ｶ騾�閠�",
                230: "驥大ｱ樣亟謚､",
                231: "蟷ｻ蠖ｱ髦ｲ螳�",
                232: "譽ｱ髟懆｣�抜",
                233: "閼第�ｸ荵句鴨",
                234: "荳肴権荵句苑",
                235: "荳榊ｱ井ｹ狗崟",
                236: "閾ｪ逕ｱ閠�",
                237: "謐｡逅�",
                238: "譽臥ｵｮ",
                239: "陞ｺ譌句ｰｾ魑�",
                240: "髟懃抜",
                241: "荳蜿｣蟇ｼ蠑ｹ",
                242: "蝮壽ｯ�",
                243: "闥ｸ豎ｽ譛ｺ",
                244: "蠎槫�鞫�ｻ�",
                245: "蜷先ｲ�",
                246: "蜀ｰ魑樒ｲ�",
                247: "辭滓�",
                248: "扈灘�螟ｴ",
                249: "閭ｽ驥冗せ",
                250: "諡滓�",
                251: "髯､髫�",
                252: "髓｢荵区э蠢�",
                253: "轣ｭ莠｡荵玖ｺｯ",
                254: "貂ｸ鬲�",
                255: "荳迪ｩ荳諢�",
                256: "蛹門ｭｦ蜿伜喧豌比ｽ�",
                257: "邊牙ｽｩ謚､蟷�",
                258: "鬣ｱ莠�処鬣ｿ",
                259: "騾溷�",
                260: "譌�蠖｢諡ｳ",
                261: "諤ｪ闕ｯ",
                262: "逕ｵ譎ｶ菴�",
                263: "鮴咎｢�",
                264: "闍咲區蝌ｶ鮑｣",
                265: "貍�ｻ大亳鮑｣",
                266: "莠ｺ鬩ｬ荳菴�",
                267: "莠ｺ鬩ｬ荳菴�",
                268: "逕ｩ荳肴脂逧�ｰ泌袖",
                269: "謗牙�遘榊ｭ�",
                270: "辜ｭ莠､謐｢",
                271: "諢､諤堤抜螢ｳ",
                272: "豢∝〝荵狗寳",
                273: "辟ｦ鬥吩ｹ玖ｺｯ",
                274: "荵倬｣�",
                275: "逵矩葎迥ｬ",
                276: "謳ｬ蟯ｩ",
                277: "鬟主鴨蜿醍鳩",
                278: "蜈ｨ閭ｽ蜿倩ｺｫ",
                279: "蜿大捷譁ｽ莉､",
                280: "逕ｵ蜉幄ｽｬ謐｢",
                281: "蜿､莉｣豢ｻ諤ｧ",
                282: "螟ｸ蜈句�閭ｽ",
                283: "鮟�≡荵玖ｺｯ",
                284: "轣ｾ逾ｸ荵矩ｼ�",
                285: "轣ｾ逾ｸ荵句苑",
                286: "轣ｾ逾ｸ荵狗ｮ",
                287: "轣ｾ逾ｸ荵狗脂",
                288: "扈ｯ郤｢閼牙勘",
                289: "蠑ｺ蟄仙ｼ墓梼",
                290: "霍滄｣�",
                291: "蜿榊�",
                292: "髞矩柏",
                293: "螟ｧ蟆�",
                294: "蜷悟床蜈ｱ貍�",
                295: "豈呈ｻ｡蝨ｰ",
                296: "蟆ｾ逕ｲ",
                297: "鬟溷悄",
                298: "闖御ｸ昜ｹ句鴨",
                299: "谺ｾ蠕�",
                300: "蠢�愍",
                301: "髱｢蠖ｱ霎画丐",
                302: "髱｢蠖ｱ霎画丐",
                303: "髱｢蠖ｱ霎画丐",
                304: "髱｢蠖ｱ霎画丐",
                305: "豈帝煤體ｾ",
                306: "逕倬愆荵玖惧"
              },
              seikaku: {
                0: "蜍､螂�",
                1: "諤募ｯょｯ�",
                2: "蜍�覆",
                3: "蝗ｺ謇ｧ",
                4: "鬘ｽ逧ｮ",
                5: "螟ｧ閭�",
                6: "蝮ｦ邇�",
                7: "謔�髣ｲ",
                8: "豺俶ｰ�",
                9: "荵仙､ｩ",
                10: "閭�ｰ�",
                11: "諤･霄�",
                12: "隶､逵�",
                13: "辷ｽ譛�",
                14: "螟ｩ逵�",
                15: "蜀�副",
                16: "諷｢蜷槫裾",
                17: "蜀ｷ髱�",
                18: "螳ｳ鄒�",
                19: "鬩ｬ陌�",
                20: "貂ｩ蜥�",
                21: "貂ｩ鬘ｺ",
                22: "閾ｪ螟ｧ",
                23: "諷朱㍾",
                24: "豬ｮ霄�"
              }
            }
          }
        };
        break;
      case 10:
        e = new class {
          constructor() {
            this.pages = {
              t_common: {
                "#regulation": "蟆肴芦隕丞援",
                "#available_poke": "蜿ｯ菴ｿ逕ｨ逧�ｯｶ蜿ｯ螟｢",
                "#trainer-tab-text": "險鍋ｷｴ螳ｶ謗定｡梧ｦ�",
                "#pokemon-tab-text": "蟇ｶ蜿ｯ螟｢謗定｡梧ｦ�",
                "#open": "闊芽ｾｦ荳ｭ",
                "#end": "蟾ｲ邨先據",
                gathering: "邨ｱ險井ｸｭ",
                not_join: "譛ｪ蜿�刈",
                not_join_battle: "譛ｪ蜿�刈豁､蟆肴芦縲�",
                not_join_tournament: "譛ｪ蜿�刈豁､螟ｧ雉ｽ",
                not_join_friendcompe: "蟆壽悴蜿�刈驕主､･莨ｴ螟ｧ雉ｽ縲�",
                win: "WIN",
                lose: "LOSE",
                draw: "DRAW",
                rental: "遘溽畑髫贋ｼ�",
                rank_num: "隨ｬ%d蜷�",
                win_num: "%d蜍�",
                lose_num: "%d謨�",
                draw_num: "%d蟷ｳ謇�",
                ok: "�ｯ�ｫ",
                rulename1: "辟｡髯仙宛",
                rulename2: "譎ｮ騾夊ｦ丞援",
                rulename3: "蜿鈴剞隕丞援",
                rulename4: "辟｡髯仙宛",
                rulename5: "譎ｮ騾夊ｦ丞援",
                rulename6: "蜿鈴剞隕丞援",
                rulename7: "辟｡髯仙宛",
                rulename8: "譎ｮ騾夊ｦ丞援",
                rulename9: "蜿鈴剞隕丞援",
                rulename10: "螳俶婿隕丞援��",
                rulename11: "螳俶婿隕丞援��",
                rulename12: "螳俶婿隕丞援��",
                rulename13: "螳俶婿隕丞援��",
                rulename14: "螳俶婿隕丞援��",
                outrange: "譛ｪ荳頑ｦ�"
              },
              t_rankmatchPageTexts: {
                "#title-text": "邏壼挨蟆肴芦"
              },
              t_my_rankmatchPageTexts: {
                "#title-text": "邏壼挨蟆肴芦謌千ｸｾ隧ｳ邏ｰ雉�ｨ�",
                "#rate_label": "遨榊�"
              },
              t_pokemonrankingPageTexts: {
                "#title-text": "蟇ｶ蜿ｯ螟｢隧ｳ邏ｰ雉�ｨ�",
                no: "No.",
                ".battle-team-tab-text": "隧ｳ邏ｰ雉�ｨ�",
                ".when-win-tab-text": "謇灘貞ｰ肴焔譎�",
                ".when-lose-tab-text": "陲ｫ蟆肴焔謇灘呈凾",
                "kind-tab-battle-team": "荳襍ｷ蜉�蜈･蟆肴芦髫贋ｼ咲噪蟇ｶ蜿ｯ螟｢TOP10",
                "kind-tab-battle-win": "騾咎埆蟇ｶ蜿ｯ螟｢謇灘堤噪蟇ｶ蜿ｯ螟｢TOP10",
                "kind-tab-battle-lose": "謇灘帝咎埆蟇ｶ蜿ｯ螟｢逧�ｯｶ蜿ｯ螟｢TOP10",
                "kind-tab-battle-waza": "諡帛ｼ�",
                "kind-tab-battle-waza-win": "騾咎埆蟇ｶ蜿ｯ螟｢謇灘貞ｰ肴焔譎ゆｽｿ逕ｨ逧�魚蠑週OP10",
                "kind-tab-battle-waza-lose": "蟆肴焔謇灘帝咎埆蟇ｶ蜿ｯ螟｢譎ゆｽｿ逕ｨ逧�魚蠑週OP10",
                "kind-tab-battle-tokusei": "迚ｹ諤ｧ",
                "kind-tab-battle-item": "驕灘�",
                "kind-tab-battle-seikaku": "諤ｧ譬ｼ",
                "kind-tab-battle-terastal": "螟ｪ譎ｶ螻ｬ諤ｧ",
                atk: "謾ｻ謫�",
                def: "髦ｲ遖ｦ",
                agi: "騾溷ｺｦ",
                spatk: "迚ｹ謾ｻ",
                spdef: "迚ｹ髦ｲ",
                hyphen: "��"
              },
              t_internetcompetitionPageTexts: {
                "#title-text": "螳俶婿螟ｧ雉ｽ"
              },
              t_internetcompetition_detailPageTexts: {
                "#title-text": "螳俶婿螟ｧ雉ｽ隧ｳ邏ｰ雉�ｨ�"
              },
              t_my_internetcompetition_detailPageTexts: {
                "#title-text": "螳俶婿螟ｧ雉ｽ隧ｳ邏ｰ雉�ｨ�",
                "#rate_label": "遨榊�",
                mydata_dialog_title: "驕ｸ謫�ｳ�ｨ�",
                mydata_dialog_text: "譟･逵狗自螳ｶ雉�ｨ�",
                mydata_dialog_btn1: "蜷肴ｬ｡",
                mydata_dialog_btn2: "蟆肴芦髫贋ｼ�"
              },
              t_friendcompetitionPageTexts: {
                "#title-text": "螟･莨ｴ螟ｧ雉ｽ"
              },
              t_my_friendcompetitionPageTexts: {
                "#title-text": "螟･莨ｴ螟ｧ雉ｽ",
                ".organizer-label-text": "荳ｻ霎ｦ閠�",
                ".result-label-text": "謌千ｸｾ",
                ".battleteam-label-text": "蟆肴芦髫贋ｼ�"
              },
              t_friendcompetition_detailPageTexts: {
                "#title-text": "螟･莨ｴ螟ｧ雉ｽ隧ｳ邏ｰ雉�ｨ�"
              },
              t_my_friendcompetition_detailPageTexts: {
                "#title-text": "螟･莨ｴ螟ｧ雉ｽ隧ｳ邏ｰ雉�ｨ�"
              },
              t_battle_teamPageTexts: {
                internetcompe: "螳俶婿螟ｧ雉ｽ蟆肴芦髫贋ｼ�",
                friendcompe: "螟･莨ｴ螟ｧ雉ｽ蟆肴芦髫贋ｼ�"
              },
              t_mydataselectPageTexts: {
                title_text_rankmatch: "謌醍噪謌千ｸｾ",
                title_text_internetcompe: "螳俶婿螟ｧ雉ｽ隧ｳ邏ｰ雉�ｨ�",
                title_text_friendcompe: "螟･莨ｴ螟ｧ雉ｽ",
                "#dataselect-text": "隲矩∈謫�Φ隕∵衍逵区�邵ｾ逧�┫蟄倩ｳ�侭縲�"
              },
              t_tournament_detailPageTexts: {
                "#title-text": "骭ｦ讓呵ｳｽ隧ｳ邏ｰ雉�ｨ�",
                single_elimination: "蝟ｮ謨玲ｷ俶ｱｰ蛻ｶ",
                double_elimination: "髮呎風豺俶ｱｰ蛻ｶ",
                bestX: "Best %d",
                Xround: "隨ｬ%d霈ｪ蟆肴芦",
                semi_final: "貅匁ｱｺ雉ｽ",
                final: "豎ｺ雉ｽ",
                round_winners: "WINNERS 隨ｬ%d霈ｪ蟆肴芦",
                final_winners: "WINNERS 隨ｬ%d霈ｪ蟆肴芦 ��FINAL��",
                round_losers: "LOSERS 隨ｬ%d霈ｪ蟆肴芦",
                final_losers: "LOSERS 隨ｬ%d霈ｪ蟆肴芦 ��FINAL��",
                grandfinal: "豎ｺ雉ｽ��GRAND FINAL��",
                coming_soon: "Coming Soon!"
              },
              topPageTexts: {
                "#top-title-text": "鬥夜��",
                "#top-mypage-text": "謌醍噪謌千ｸｾ",
                "#top-rankmatch-text": "邏壼挨蟆肴芦",
                "#top--internetcompe-text": "邯ｲ霍ｯ螟ｧ雉ｽ",
                "#top-regulation-text": "螳俶婿蟆肴芦隕丞援"
              },
              myresult_topPageTexts: {
                "#title-text": "謌醍噪謌千ｸｾ",
                "#rankmatch-text": "邏壼挨蟆肴芦",
                "#internetcompe-text": "邯ｲ霍ｯ螟ｧ雉ｽ",
                "#friendcompe-text": "螟･莨ｴ螟ｧ雉ｽ"
              },
              myresult_romselectPageTexts: {
                "#title-text": "謌醍噪謌千ｸｾ",
                "#rankmatch-text": "驕頑梓霆滄ｫ秘∈謫�"
              },
              myresult_rankmatchPageTexts: {
                "#title-text": "邏壼挨蟆肴芦謌千ｸｾ隧ｳ邏ｰ雉�ｨ�",
                "#subtitle1-text": "雉ｽ蟄｣雉�ｨ�",
                "#sub1_label3": "譟･逵区ｭ､雉ｽ蟄｣隧ｳ邏ｰ雉�ｨ�",
                "#subtitle2-text": "雉ｽ蟄｣謌千ｸｾ",
                "#sub2_label1": "蝟ｮ謇�",
                "#sub2_label2": "髮呎遠",
                "#subtitle3-text": "譛霑醍噪蟆肴芦邏骭�",
                "#sub3_label1": "蝟ｮ謇�",
                "#sub3_label2": "髮呎遠"
              },
              my_internetcompetition_listPageTexts: {
                "#title-text": "邯ｲ霍ｯ螟ｧ雉ｽ荳隕ｽ",
                "#subtitle1-text": "蜿�刈螟ｧ雉ｽ荳隕ｽ"
              },
              my_internetcompetition_detailPageTexts: {
                "#title-text": "邯ｲ霍ｯ螟ｧ雉ｽ謌千ｸｾ隧ｳ邏ｰ雉�ｨ�",
                "#subtitle1-text": "螟ｧ雉ｽ雉�ｨ�",
                "#sub1_label1": "菴ｿ逕ｨ逧�♀謌ｲ霆滄ｫ�",
                "#sub1_label2": "蟆肴芦隕丞援",
                "#sub1_label3": "蜿�ｳｽ閠�ｺｺ謨ｸ",
                "#sub1_label5": "譟･逵区ｭ､螟ｧ雉ｽ隧ｳ邏ｰ雉�ｨ�",
                "#sub1_label6": "螟ｧ雉ｽ謌千ｸｾ",
                "#subtitle2-text": "蟆肴芦邏骭�",
                "#sub2_label1": "蝟ｮ謇�",
                "#sub2_label2": "髮呎遠",
                "#subtitle3-text": "譛霑醍噪蟆肴芦邏骭�",
                "#sub3_label1": "蝟ｮ謇�",
                "#sub3_label2": "髮呎遠"
              },
              friendcompetition_listPageTexts: {
                "#title-text": "螟･莨ｴ螟ｧ雉ｽ荳隕ｽ",
                "#subtitle1-text": "蜿�刈螟ｧ雉ｽ荳隕ｽ",
                ".organizer-label-text": "荳ｻ霎ｦ險鍋ｷｴ螳ｶ蜷�",
                ".joinednum-label-text": "蜿�ｳｽ閠�ｺｺ謨ｸ",
                ".more-button-text": "譟･逵区峩螟�"
              },
              my_friendcompetition_detailPageTexts: {
                "#title-text": "螟･莨ｴ螟ｧ雉ｽ謌千ｸｾ隧ｳ邏ｰ雉�ｨ�",
                "#subtitle1-text": "螟ｧ雉ｽ雉�ｨ�",
                "#sub_label1": "螟ｧ雉ｽ讎りｦ�",
                "#sub_label2": "荳ｻ霎ｦ險鍋ｷｴ螳ｶ蜷�",
                "#sub_label3": "菴ｿ逕ｨ逧�♀謌ｲ霆滄ｫ�",
                "#sub_label4": "蟆肴芦隕丞援",
                "#sub_label5": "蜿�ｳｽ閠�ｺｺ謨ｸ",
                "#sub_label7": "譟･逵区ｭ､螟ｧ雉ｽ隧ｳ邏ｰ雉�ｨ�",
                "#sub_label8": "螟ｧ雉ｽ謌千ｸｾ",
                "#subtitle2-text": "蟆肴芦邏骭�"
              },
              friendcompetition_detailPageTexts: {
                "#title-text": "螟･莨ｴ螟ｧ雉ｽ隧ｳ邏ｰ雉�ｨ�",
                "#subtitle1-text": "螟ｧ雉ｽ雉�ｨ�",
                "#sub_label1": "螟ｧ雉ｽ讎りｦ�",
                "#sub_label2": "荳ｻ霎ｦ險鍋ｷｴ螳ｶ蜷�",
                "#sub_label3": "菴ｿ逕ｨ逧�♀謌ｲ霆滄ｫ�",
                "#sub_label4": "蟆肴芦隕丞援",
                "#sub_label5": "蜿�ｳｽ閠�ｺｺ謨ｸ",
                "#sub1_label13": "譟･逵玖�蟾ｱ逧�錐谺｡",
                "#sub1_label9": "險鍋ｷｴ螳ｶ謗定｡梧ｦ�",
                "#sub1_label10": "蟇ｶ蜿ｯ螟｢謗定｡梧ｦ�",
                "#regulationLink": "驥崎ｦ∽ｺ矩��ｼ丞ｰ肴芦隕丞援",
                "#eligiblePokemonLink": "蜿ｯ菴ｿ逕ｨ逧�ｯｶ蜿ｯ螟｢"
              },
              rankmatch_detailPageTexts: {
                "#title-text": "邏壼挨蟆肴芦",
                "#subtitle1-text": "雉ｽ蟄｣雉�ｨ�",
                "#sub_label2": "蜿�ｳｽ閠�ｺｺ謨ｸ",
                "#sub_label3": "驥崎ｦ∽ｺ矩��ｼ丞ｰ肴芦隕丞援",
                "#sub_label4": "蜿ｯ菴ｿ逕ｨ逧�ｯｶ蜿ｯ螟｢",
                "#sub_label5": "驕ｸ謫�ｯｶ蜿ｯ螟｢",
                "#sub_label6": "遽ｩ驕ｸ",
                "#sub_label7": "譟･逵玖�蟾ｱ逧�錐谺｡",
                "#subtitle2-text": "蟆肴芦邏骭�",
                ".trainer-tab-text": "險鍋ｷｴ螳ｶ謗定｡梧ｦ�",
                ".pokemon-tab-text": "蟇ｶ蜿ｯ螟｢謗定｡梧ｦ�"
              },
              internetcompetition_listPageTexts: {
                "#title-text": "邯ｲ霍ｯ螟ｧ雉ｽ",
                "#sub_label1": "蜑榊ｾ驕主悉逧�ｶｲ霍ｯ螟ｧ雉ｽ荳隕ｽ",
                "#sub_label2": "逶ｮ蜑咲ぜ豁｢譖ｾ闊芽ｾｦ逧�､ｧ雉ｽ",
                ".more-button-text": "譟･逵区峩螟�"
              },
              internetcompetition_detailPageTexts: {
                "#title-text": "邯ｲ霍ｯ螟ｧ雉ｽ隧ｳ邏ｰ雉�ｨ�",
                "#subtitle1-text": "螟ｧ雉ｽ雉�ｨ�",
                "#sub1_label1": "菴ｿ逕ｨ逧�♀謌ｲ霆滄ｫ�",
                "#sub1_label2": "驥崎ｦ∽ｺ矩��ｼ丞ｰ肴芦隕丞援",
                "#sub1_label3": "蜿ｯ菴ｿ逕ｨ逧�ｯｶ蜿ｯ螟｢",
                "#sub1_label4": "螟ｧ雉ｽ讎りｦ�",
                "#sub1_label5": "蜿�ｳｽ閠�ｺｺ謨ｸ",
                "#sub1_label6": "菴ｿ逕ｨ逧�♀謌ｲ霆滄ｫ�",
                "#sub1_label7": "蟆肴芦隕丞援",
                "#sub1_label8": "闊芽ｾｦ譛滄俣",
                "#sub1_label9": "險鍋ｷｴ螳ｶ謗定｡梧ｦ�",
                "#sub1_label10": "蟇ｶ蜿ｯ螟｢謗定｡梧ｦ�",
                "#sub1_label11": "驕ｸ謫�ｯｶ蜿ｯ螟｢",
                "#sub1_label12": "遽ｩ驕ｸ",
                "#sub1_label13": "譟･逵玖�蟾ｱ逧�錐谺｡"
              },
              battle_teamPageTexts: {
                "#title-text": "蟆肴芦髫贋ｼ咲噪蟇ｶ蜿ｯ螟｢"
              },
              regulation_listPageTexts: {
                "#title-text": "螳俶婿蟆肴芦隕丞援"
              },
              regulation_pokelistPageTexts: {
                "#title-text": "蜿ｯ菴ｿ逕ｨ逧�ｯｶ蜿ｯ螟｢"
              },
              event_calendar: {
                "#title-text": "豢ｻ蜍戊｡御ｺ区寔",
                "#option-country": "逶ｮ蜑埼｡ｯ遉ｺ逧�項蝓�",
                "#sunday": "譌･",
                "#monday": "荳",
                "#tuesday": "莠�",
                "#wednesday": "荳�",
                "#thursday": "蝗�",
                "#friday": "莠�",
                "#saturday": "蜈ｭ"
              },
              rankmatch_pokemonranking_detailPageTexts: {
                "#title-text": "邏壼挨蟆肴芦",
                "#subtitle1-text": "蟇ｶ蜿ｯ螟｢隧ｳ邏ｰ雉�ｨ�",
                ".battle-team-tab-text": "隧ｳ邏ｰ雉�ｨ�",
                ".when-win-tab-text": "謇灘貞ｰ肴焔譎�",
                ".when-lose-tab-text": "陲ｫ蟆肴焔謇灘呈凾",
                "kind-tab-battle-team": "荳襍ｷ蜉�蜈･蟆肴芦髫贋ｼ咲噪蟇ｶ蜿ｯ螟｢TOP10",
                "kind-tab-battle-win": "騾咎埆蟇ｶ蜿ｯ螟｢謇灘堤噪蟇ｶ蜿ｯ螟｢TOP10",
                "kind-tab-battle-lose": "謇灘帝咎埆蟇ｶ蜿ｯ螟｢逧�ｯｶ蜿ｯ螟｢TOP10",
                "kind-tab-battle-waza": "諡帛ｼ�",
                "kind-tab-battle-waza-win": "騾咎埆蟇ｶ蜿ｯ螟｢謇灘貞ｰ肴焔譎ゆｽｿ逕ｨ逧�魚蠑週OP10",
                "kind-tab-battle-waza-lose": "蟆肴焔謇灘帝咎埆蟇ｶ蜿ｯ螟｢譎ゆｽｿ逕ｨ逧�魚蠑週OP10",
                "kind-tab-battle-tokusei": "迚ｹ諤ｧ",
                "kind-tab-battle-item": "驕灘�",
                "kind-tab-battle-seikaku": "諤ｧ譬ｼ"
              },
              internetcompetition_pokemonranking_detail: {
                "#title-text": "邯ｲ霍ｯ螟ｧ雉ｽ",
                "#subtitle1-text": "蟇ｶ蜿ｯ螟｢隧ｳ邏ｰ雉�ｨ�",
                ".battle-team-tab-text": "隧ｳ邏ｰ雉�ｨ�",
                ".when-win-tab-text": "謇灘貞ｰ肴焔譎�",
                ".when-lose-tab-text": "陲ｫ蟆肴焔謇灘呈凾",
                "kind-tab-battle-team": "荳襍ｷ蜉�蜈･蟆肴芦髫贋ｼ咲噪蟇ｶ蜿ｯ螟｢TOP10",
                "kind-tab-battle-win": "騾咎埆蟇ｶ蜿ｯ螟｢謇灘堤噪蟇ｶ蜿ｯ螟｢TOP10",
                "kind-tab-battle-lose": "謇灘帝咎埆蟇ｶ蜿ｯ螟｢逧�ｯｶ蜿ｯ螟｢TOP10",
                "kind-tab-battle-waza": "諡帛ｼ�",
                "kind-tab-battle-waza-win": "騾咎埆蟇ｶ蜿ｯ螟｢謇灘貞ｰ肴焔譎ゆｽｿ逕ｨ逧�魚蠑週OP10",
                "kind-tab-battle-waza-lose": "蟆肴焔謇灘帝咎埆蟇ｶ蜿ｯ螟｢譎ゆｽｿ逕ｨ逧�魚蠑週OP10",
                "kind-tab-battle-tokusei": "迚ｹ諤ｧ",
                "kind-tab-battle-item": "驕灘�",
                "kind-tab-battle-seikaku": "諤ｧ譬ｼ"
              },
              friendcompetition_pokemonranking_detail: {
                "#title-text": "螟･莨ｴ螟ｧ雉ｽ",
                "#subtitle1-text": "蟇ｶ蜿ｯ螟｢隧ｳ邏ｰ雉�ｨ�",
                ".battle-team-tab-text": "隧ｳ邏ｰ雉�ｨ�",
                ".when-win-tab-text": "謇灘貞ｰ肴焔譎�",
                ".when-lose-tab-text": "陲ｫ蟆肴焔謇灘呈凾",
                "kind-tab-battle-team": "荳襍ｷ蜉�蜈･蟆肴芦髫贋ｼ咲噪蟇ｶ蜿ｯ螟｢TOP10",
                "kind-tab-battle-win": "騾咎埆蟇ｶ蜿ｯ螟｢謇灘堤噪蟇ｶ蜿ｯ螟｢TOP10",
                "kind-tab-battle-lose": "謇灘帝咎埆蟇ｶ蜿ｯ螟｢逧�ｯｶ蜿ｯ螟｢TOP10",
                "kind-tab-battle-waza": "諡帛ｼ�",
                "kind-tab-battle-waza-win": "騾咎埆蟇ｶ蜿ｯ螟｢謇灘貞ｰ肴焔譎ゆｽｿ逕ｨ逧�魚蠑週OP10",
                "kind-tab-battle-waza-lose": "蟆肴焔謇灘帝咎埆蟇ｶ蜿ｯ螟｢譎ゆｽｿ逕ｨ逧�魚蠑週OP10",
                "kind-tab-battle-tokusei": "迚ｹ諤ｧ",
                "kind-tab-battle-item": "驕灘�",
                "kind-tab-battle-seikaku": "諤ｧ譬ｼ"
              }
            }, this.common = {
              ui_texts: {
                ".winIconText": "WIN",
                ".loseIconText": "LOSE",
                ".drawIconText": "DRAW",
                ".joinedNumLabel": "莠ｺ",
                ".periodContainer>.label": "闊芽ｾｦ譛滄俣",
                ".rateLabelContainer>.label": "遨榊�",
                competionRule: "蟆肴芦隕丞援",
                ".prevButton>.labelContainer>.label": "蜑�10鬆�",
                ".nextButton>.labelContainer>.label": "蠕�10鬆�",
                ".rank-beginner-text": "譁ｰ謇狗ｴ�",
                ".rank-monster-text": "邊ｾ髱育帥邏�",
                ".rank-super-text": "雜�ｴ夂帥邏�",
                ".rank-hyper-text": "鬮倡ｴ夂帥邏�",
                ".rank-master-text": "螟ｧ蟶ｫ逅�ｴ�",
                ".rental-label-text": "遘溽畑髫贋ｼ�",
                ".buttle-team-button-text": "鬘ｯ遉ｺ蟆肴芦髫贋ｼ�"
              },
              unit: {
                rank: "隨ｬ%d蜷�",
                win: "%d蜍�",
                lose: "%d謨�",
                draw: "%d蟷ｳ謇�",
                "season-result": "隨ｬ%d蜷� %d蜍� %d謨� %d蟷ｳ謇�",
                "season-result2": "%d蜍� %d謨� %d蟷ｳ謇�",
                "online-result": "%d蜍� %d謨� %d蟷ｳ謇�",
                "friend-result": "隨ｬ%d蜷� %d蜍� %d謨� %d蟷ｳ謇�"
              },
              roms: {
                Sw: "蟇ｶ蜿ｯ螟｢ 蜉�",
                Sh: "蟇ｶ蜿ｯ螟｢ 逶ｾ"
              },
              rule: {
                0: "蝟ｮ謇�",
                1: "髮呎遠"
              },
              nojoin: "譛ｪ蜿�刈",
              nowAggr: "邨ｱ險井ｸｭ",
              country: {
                100: "髱樊ｴｲ",
                600: "蛹礼ｾ取ｴｲ",
                601: "蜉�諡ｿ螟ｧ",
                602: "鄒主恚蛹鈴Κ",
                603: "鄒主恚譚ｱ驛ｨ",
                604: "鄒主恚隘ｿ驛ｨ",
                605: "鄒主恚蜊鈴Κ",
                699: "蜈ｶ莉�",
                700: "諡我ｸ∫ｾ取ｴｲ",
                701: "譎ｺ蛻ｩ",
                702: "蠅ｨ隘ｿ蜩･",
                703: "蟾ｴ隘ｿ",
                704: "髦ｿ譬ｹ蟒ｷ",
                705: "邇ｻ蛻ｩ邯ｭ莠�",
                706: "蜩･蛟ｫ豈比ｺ�",
                707: "蟾ｴ諡牙惆",
                708: "遘倬ｭｯ",
                709: "蜴�糖螟�",
                799: "蜈ｶ莉�",
                800: "螟ｧ豢区ｴｲ",
                801: "貔ｳ螟ｧ蛻ｩ莠�",
                802: "邏占･ｿ陂ｭ",
                899: "蜈ｶ莉�",
                300: "莠槫､ｪ蝨ｰ蜊",
                302: "荳ｭ蝨句､ｧ髯ｸ",
                303: "鬥呎ｸｯ",
                304: "譌･譛ｬ",
                305: "髻灘恚",
                306: "鬥ｬ萓�･ｿ莠�",
                307: "闖ｲ蠕玖ｳ�",
                308: "譁ｰ蜉�蝮｡",
                309: "蜿ｰ轣｣",
                310: "豕ｰ蝨�",
                399: "蜈ｶ莉�",
                400: "豁先ｴｲ",
                401: "螂ｧ蝨ｰ蛻ｩ",
                402: "豈泌茜譎�",
                403: "豕募恚",
                404: "蠕ｷ蝨�",
                405: "諢帷粟陂ｭ",
                406: "鄒ｩ螟ｧ蛻ｩ",
                407: "闕ｷ陂ｭ",
                408: "闡｡關�甥",
                409: "隘ｿ迴ｭ迚�",
                410: "迹槫｣ｫ",
                411: "闍ｱ蝨�",
                412: "荳ｹ鮗･",
                413: "闃ｬ陂ｭ",
                414: "謖ｪ螽�",
                415: "迹槫�",
                416: "豕｢陂ｭ",
                499: "蜈ｶ莉�",
                500: "荳ｭ譚ｱ蝨ｰ蜊"
              },
              footerBackLinkLabel: {
                backLinkTop: "TOP",
                backLinkInternetComp: "邯ｲ霍ｯ螟ｧ雉ｽ",
                backMyResult: "謌醍噪謌千ｸｾ",
                backMyInternetComp: "蜿�刈螟ｧ雉ｽ荳隕ｽ",
                backLinkMyInternetCompDetail: "邯ｲ霍ｯ螟ｧ雉ｽ謌千ｸｾ隧ｳ邏ｰ雉�ｨ�",
                backLinkMyRankMatchDetail: "邏壼挨蟆肴芦謌千ｸｾ隧ｳ邏ｰ雉�ｨ�",
                backLinkMyFriendCompDetail: "螟･莨ｴ螟ｧ雉ｽ謌千ｸｾ隧ｳ邏ｰ雉�ｨ�",
                backLinkFriendCompList: "螟･莨ｴ螟ｧ雉ｽ荳隕ｽ",
                backLinkRankBattle: "邏壼挨蟆肴芦",
                backLinkFriendComp: "螟･莨ｴ螟ｧ雉ｽ"
              },
              rankBattleRankingNoteDialog: {
                title: "辟｡豕暮｡ｯ遉ｺ閾ｪ蟾ｱ逧�賜蜷阪�",
                note1: "闊芽ｾｦ荳ｭ逧�賜陦梧ｦ懷ｰ�怎鬘ｯ遉ｺ蛻ｰ隨ｬ1000蜷咲ぜ豁｢逧�賜蜷阪�<br />",
                note2: "謗定｡梧ｦ懃噪譖ｴ譁ｰ蜿ｯ閭ｽ蝗�轤ｺ邨ｱ險育朽豕∬梧怏蟒ｶ驕ｲ��<br />蝗�豁､鬘ｯ遉ｺ蜈ｧ螳ｹ蜿ｯ閭ｽ譛��蟇ｦ髫帶賜蜷堺ｸ榊酔縲�<br />",
                note3: "隲矩℃荳谿ｵ譎る俣蠕悟�谺｡遒ｺ隱阪�"
              },
              dialogMsg: {
                ok: "髣憺哩"
              }
            }, this.dex = {
              poke: ["螯呵尸遞ｮ蟄�", "螯呵尸闕�", "螯呵尸闃ｱ", "蟆冗↓鮴�", "轣ｫ諱宣ｾ�", "蝎ｴ轣ｫ鮴�", "蛯大ｰｼ鮴�", "蜊｡蜥ｪ鮴�", "豌ｴ邂ｭ鮴�", "邯�豈幄浚", "髏ｵ逕ｲ陋ｹ", "蟾ｴ螟ｧ陜ｶ", "迯ｨ隗定浚", "髏ｵ谿ｼ陋ｹ", "螟ｧ驥晁怩", "豕｢豕｢", "豈疲ｯ秘ｳ･", "螟ｧ豈秘ｳ･", "蟆乗級驕�", "諡蛾＃", "辜磯它", "螟ｧ蝌ｴ髮", "髦ｿ譟剰寐", "髦ｿ譟乗ｪ", "逧ｮ蜊｡荳�", "髮ｷ荳�", "遨ｿ螻ｱ鮠�", "遨ｿ螻ｱ邇�", "蟆ｼ螟夊亊", "蟆ｼ螟壼ｨ�", "蟆ｼ螟壼錘", "蟆ｼ螟壽恬", "蟆ｼ螟壼鴨隲ｾ", "蟆ｼ螟夂視", "逧ｮ逧ｮ", "逧ｮ蜿ｯ隘ｿ", "蜈ｭ蟆ｾ", "荵晏ｰｾ", "閭紋ｸ�", "閭門庄荳�", "雜�浹陜�", "螟ｧ蝌ｴ陜�", "襍ｰ霍ｯ闕�", "閾ｭ閾ｭ闃ｱ", "髴ｸ邇玖干", "豢ｾ諡画民", "豢ｾ諡画民迚ｹ", "豈帷帥", "鞫ｩ鬲ｯ陋ｾ", "蝨ｰ鮠�", "荳牙慍鮠�", "蝟ｵ蝟ｵ", "雋楢∝､ｧ", "蜿ｯ驕秘ｴｨ", "蜩･驕秘ｴｨ", "迪ｴ諤ｪ", "轣ｫ辷�原", "蜊｡闥ら距", "鬚ｨ騾溽距", "陏企ｦ呵搆陏ｪ", "陏企ｦ吝菅", "陏企ｦ呎ｳｳ螢ｫ", "蜃ｱ隘ｿ", "蜍�渕諡�", "閭｡蝨ｰ", "閻募鴨", "雎ｪ蜉�", "諤ｪ蜉�", "蝟�少闃ｽ", "蜿｣蜻�干", "螟ｧ鬟溯干", "迹ｪ迹呎ｰｴ豈�", "豈貞絢豌ｴ豈�", "蟆乗教遏ｳ", "髫�嚀遏ｳ", "髫�嚀蟯ｩ", "蟆冗↓鬥ｬ", "辜育┣鬥ｬ", "蜻�漕迯ｸ", "蜻�ｮｼ迯ｸ", "蟆冗｣∵ｪ", "荳牙粋荳逎∵ｪ", "螟ｧ阡･魘ｨ", "蝌溷弌", "蝌溷弌蛻ｩ", "蟆乗ｵｷ迯�", "逋ｽ豬ｷ迯�", "閾ｭ豕･", "閾ｭ閾ｭ豕･", "螟ｧ闊瑚ｲ�", "蛻ｺ逕ｲ雋�", "鬯ｼ譁ｯ", "鬯ｼ譁ｯ騾�", "閠ｿ鬯ｼ", "螟ｧ蟯ｩ陋�", "蛯ｬ逵�雋�", "蠑募､｢雋倅ｺｺ", "螟ｧ驩苓淹", "蟾ｨ驩苓淹", "髴ｹ髱る崕逅�", "鬆醍坩髮ｷ蠖�", "陋玖寞", "讀ｰ陋区ｨｹ", "蜊｡諡牙今諡�", "蝌主沸蝌主沸", "鬟幄�驛�", "蠢ｫ諡ｳ驛�", "螟ｧ闊碁�ｭ", "逑ｦ譁ｯ蠖�", "髮吝ｽ育逃譁ｯ", "迯ｨ隗堤橿迚�", "髑ｽ隗堤橿迯ｸ", "蜷牙茜陋�", "阡楢陸諤ｪ", "陲狗査", "蠅ｨ豬ｷ鬥ｬ", "豬ｷ蛻ｺ鮴�", "隗帝≡鬲�", "驥鷹ｭ夂視", "豬ｷ譏滓弌", "蟇ｶ遏ｳ豬ｷ譏�", "鬲皮掩莠ｺ蛛ｶ", "鬟帛､ｩ陞ｳ陞�", "霑ｷ蜚�ｧ�", "髮ｻ謫顔査", "魘ｨ蝌ｴ轣ｫ迯ｸ", "蜃ｱ鄒�民", "閧ｯ豕ｰ鄒�", "魃蛾ｭ夂視", "證ｴ魃蛾ｾ�", "諡画勸諡画民", "逋ｾ隶頑ｪ", "莨雁ｸ�", "豌ｴ莨雁ｸ�", "髮ｷ莨雁ｸ�", "轣ｫ莨雁ｸ�", "螟夐ｊ迯ｸ", "闖顔浹迯ｸ", "螟壼絢闖顔浹迯ｸ", "蛹也浹逶�", "髏ｮ蛻逶�", "蛹也浹鄙ｼ鮴�", "蜊｡豈皮査", "諤･蜃埼ｳ･", "髢�崕魑･", "轣ｫ辟ｰ魑･", "霑ｷ菴�鮴�", "蜩亥�鮴�", "蠢ｫ鮴�", "雜�､｢", "螟｢蟷ｻ", "闖願拷闡�", "譛域｡り痩", "螟ｧ遶ｺ闡ｵ", "轣ｫ逅�ｼ�", "轣ｫ蟯ｩ鮠�", "轣ｫ辷�査", "蟆城矯魍ｷ", "阯埼ｱｷ", "螟ｧ蜉幃ｱｷ", "蟆ｾ遶�", "螟ｧ蟆ｾ遶�", "蜥募瀦", "雋馴�ｭ螟憺ｷｹ", "闃ｭ逑｢陝ｲ", "螳臥討陝ｲ", "蝨鍋ｵｲ陋�", "髦ｿ蛻ｩ螟壽民", "蜿牙ｭ苓擒", "辯育ｱ�鬲�", "髮ｻ辯域ｪ", "逧ｮ荳�", "逧ｮ蟇ｶ蟇ｶ", "蟇ｶ蟇ｶ荳�", "豕｢蜈区ｯ�", "豕｢蜈句渕蜿､", "螟ｩ辟ｶ髮", "螟ｩ辟ｶ魑･", "蜥ｩ蛻ｩ鄒�", "闌ｸ闌ｸ鄒�", "髮ｻ鮴�", "鄒朱ｺ苓干", "迹ｪ蜉幃愆", "迹ｪ蜉幃愆鮗�", "讓ｹ謇肴ｪ", "陏企ｦ呵尸逧�", "豈ｽ蟄占拷", "豈ｽ蟄占干", "豈ｽ蟄先｣�", "髟ｷ蟆ｾ諤ｪ謇�", "蜷第律遞ｮ蟄�", "蜷第律闃ｱ諤ｪ", "陷ｻ陷ｻ陷�", "辜乗ｳ｢", "豐ｼ邇�", "螟ｪ髯ｽ莨雁ｸ�", "譛井ｺｮ莨雁ｸ�", "鮟第囓魘�", "蜻�漕邇�", "螟｢螯�", "譛ｪ遏･蝨夜ｨｰ", "譫懃┯鄙�", "鮗帝ｺ溷･�", "讎帶棡逅�", "菴帷ヨ謇俶民", "蝨滄ｾ榊ｼ溷ｼ�", "螟ｩ陟�", "螟ｧ驪ｼ陋�", "蟶�ｭｯ", "蟶�ｭｯ逧�", "蜊��鬲�", "蟾ｨ驩苓楜陞�", "螢ｺ螢ｺ", "襍ｫ諡牙�鄒�民", "迢�級", "辭雁ｯｶ蟇ｶ", "蝨亥怦辭�", "辭泌ｲｩ陝ｲ", "辭泌ｲｩ陜ｸ迚�", "蟆丞ｱｱ雎ｬ", "髟ｷ豈幄ｱｬ", "螟ｪ髯ｽ迴顔霜", "髏ｵ轤ｮ鬲�", "遶�鬲壽｡ｶ", "菫｡菴ｿ魑･", "蟾ｨ鄙�｣幃ｭ�", "逶皮抜魑･", "謌ｴ鬲ｯ豈�", "鮟鷹ｭｯ蜉�", "蛻ｺ鮴咲視", "蟆丞ｰ剰ｱ｡", "鬆鍋抜", "螟夐ｊ迯ｸ竇｡", "鬩夊ｧ帝ｹｿ", "蝨門恂迥ｬ", "辟｡逡丞ｰ丞ｭ�", "謌ｰ闊樣ヮ", "霑ｷ蜚�ｨ�", "髮ｻ謫頑ｪ", "魘ｨ蝌ｴ蟇ｶ蟇ｶ", "螟ｧ螂ｶ鄂�", "蟷ｸ遖剰寞", "髮ｷ蜈ｬ", "轤主ｸ�", "豌ｴ蜷�", "蟷ｼ蝓ｺ諡画民", "豐吝渕諡画民", "迴ｭ蝓ｺ諡画民", "豢帛･�ｺ�", "魑ｳ邇�", "譎よ級豈�", "譛ｨ螳亥ｮｮ", "譽ｮ譫苓悋陷ｴ", "陷･陷ｴ邇�", "轣ｫ遞夐屓", "蜉帛｣ｯ髮�", "轣ｫ辟ｰ髮�", "豌ｴ霄埼ｭ�", "豐ｼ霄埼ｭ�", "蟾ｨ豐ｼ諤ｪ", "蝨溽蕎迥ｬ", "螟ｧ迢ｼ迥ｬ", "陋�ｴ狗�", "逶ｴ陦晉�", "蛻ｺ蟆ｾ陝ｲ", "逕ｲ谿ｼ郢ｭ", "迢ｩ迯ｵ魑ｳ陜ｶ", "逶ｾ逕ｲ郢ｭ", "豈堤ｲ芽崟", "闢ｮ闡臥ｫ･蟄�", "闢ｮ蟶ｽ蟆冗ｫ･", "讓ょ､ｩ豐ｳ遶･", "讖｡蟇ｦ譫�", "髟ｷ鮠ｻ闡�", "迢｡迪ｾ螟ｩ迢�", "蛯ｲ鬪ｨ辯�", "螟ｧ邇狗√", "髟ｷ鄙�ｷ�", "螟ｧ蝌ｴ鮃�", "諡蛾ｭｯ諡臥ｵｲ", "螂�ｭｯ闔牙ｮ�", "豐吝･域愀", "貅懈ｺ懃ｳ也帥", "髮ｨ鄙�崟", "陂題�闖�", "譁礼ｬ�闖�", "諛ｶ莠ｺ迯ｺ", "驕主虚迪ｿ", "隲句∞邇�", "蝨溷ｱ�ｿ榊｣ｫ", "髏ｵ髱｢蠢崎�", "閼ｫ谿ｼ蠢崎�", "蜥募ｦ槫ｦ�", "蜷ｼ辷�ｽ�", "辷�浹諤ｪ", "蟷穂ｸ句鴨螢ｫ", "髏ｵ謗悟鴨螢ｫ", "髴ｲ蜉幃ｺ�", "譛晏圏鮠ｻ", "蜷大ｰｾ蝟ｵ", "蜆ｪ髮�ｲ�", "蜍ｾ鬲ら愍", "螟ｧ蝌ｴ螽�", "蜿ｯ蜿ｯ螟壽級", "蜿ｯ螟壽級", "豕｢螢ｫ蜿ｯ螟壽級", "迹ｪ豐咎ぅ", "諱ｰ髮ｷ蟋�", "關ｽ髮ｷ迯ｸ", "髮ｷ髮ｻ迯ｸ", "豁｣髮ｻ諡肴牛", "雋�髮ｻ諡肴牛", "髮ｻ陞｢陝ｲ", "逕懃莫陞｢", "豈定又阮�", "貅ｶ鬟溽査", "蜷樣｣溽査", "蛻ｩ迚咎ｭ�", "蟾ｨ迚咎ｯ�", "蜷ｼ蜷ｼ魃ｨ", "蜷ｼ魃ｨ邇�", "蜻�↓鬧�", "蝎ｴ轣ｫ鬧�", "辣､轤ｭ鮴�", "霍ｳ霍ｳ雎ｬ", "蝎怜剽雎ｬ", "譎�刄譁�", "螟ｧ鬘手渊", "雜�浹豕｢蟷ｼ陝ｲ", "豐呎ｼ�陷ｻ陷�", "蛻ｺ逅�ｻ吩ｺｺ謗�", "螟｢豁御ｻ吩ｺｺ謗�", "髱堤ｶｿ魑･", "荳�､暮搨魑･", "雋馴ｼｬ譁ｬ", "鬟ｯ蛹呵寐", "譛育浹", "螟ｪ髯ｽ蟯ｩ", "豕･豕･魏�", "魃ｰ鬲夂視", "鮴崎擱蟆丞�", "髏ｵ陞ｯ鮴崎擱", "螟ｩ遘､蛛ｶ", "蠢ｵ蜉帛悄蛛ｶ", "隗ｸ謇狗卆蜷�", "謳也ｱ�卆蜷�", "螟ｪ蜿､鄒ｽ陝ｲ", "螟ｪ蜿､逶皮抜", "驢憺�鬲�", "鄒守ｴ肴民", "鬟�ｵｮ豕｡豕｡", "隶企坡鮴�", "諤ｨ蠖ｱ螽�ｨ�", "隧帛鋳螽�ｨ�", "螟懷ｷ｡髱�", "蠖ｷ蠕ｨ螟憺揶", "辭ｱ蟶ｶ鮴�", "鬚ｨ驤ｴ驤ｴ", "髦ｿ蜍�｢ｭ鬲ｯ", "蟆乗棡辟ｶ", "髮ｪ遶･蟄�", "蜀ｰ鬯ｼ隴ｷ", "豬ｷ雎ｹ逅�", "豬ｷ鬲皮劫", "蟶晉甥豬ｷ迯�", "迴咲匠雋�", "迯ｵ譁鷹ｭ�", "讚ｻ闃ｱ鬲�", "蜿､遨ｺ譽倬ｭ�", "諢帛ｿ�ｭ�", "蟇ｶ雋晞ｾ�", "逕ｲ谿ｼ鮴�", "證ｴ鬟幃ｾ�", "髏ｵ蝠樣斡", "驥大ｱｬ諤ｪ", "蟾ｨ驥第ｪ", "髮ｷ蜷画ｴ帛�", "髮ｷ蜷芽伽譁ｯ", "髮ｷ蜷画民螂�ｭｯ", "諡牙ｸ昜ｺ樊民", "諡牙ｸ晄ｭ先民", "闢区ｭ仙今", "蝗ｺ諡牙､�", "辜育ｩｺ蝮�", "蝓ｺ諡臥･�", "莉｣豁仙･�ｸ梧民", "闕芽距鮴�", "讓ｹ譫鈴ｾ�", "蝨溷床鮴�", "蟆冗↓辟ｰ迪ｴ", "迪帷↓迪ｴ", "辜育┣迪ｴ", "豕｢蜉�譖ｼ", "豕｢逧�ｭ�", "蟶晉視諡ｿ豕｢", "蟋��蜈�", "蟋��魑･", "蟋��鮃ｹ", "螟ｧ迚咏矯", "螟ｧ蟆ｾ迢ｸ", "蝨捺ｳ募ｸｫ", "髻ｳ邂ｱ陝", "蟆剰ｲ捺ｪ", "蜍貞�雋�", "蛟ｫ逅ｴ雋�", "蜷ｫ鄒櫁京", "鄒�ｵｲ髮ｷ譛ｵ", "鬆ｭ闢矩ｾ�", "謌ｰ讒碁ｾ�", "逶ｾ逕ｲ鮴�", "隴ｷ蝓朱ｾ�", "邨占拷蜈�", "邨占拷雋ｴ蟀ｦ", "邏ｳ螢ｫ陋ｾ", "荳芽惧陷�", "陷ょ･ｳ邇�", "蟶募･�茜闌ｲ", "豕ｳ蝨磯ｼｬ", "豬ｮ貎幃ｼｬ", "讚ｻ闃ｱ蟇ｶ", "讚ｻ闃ｱ蜈�", "辟｡谿ｼ豬ｷ蜈�", "豬ｷ蜈皮査", "髮吝ｰｾ諤ｪ謇�", "鬟�｣�帥", "髫ｨ鬚ｨ逅�", "謐ｲ謐ｲ閠ｳ", "髟ｷ閠ｳ蜈�", "螟｢螯夜ｭ�", "辜城ｴ蛾�ｭ鬆ｭ", "鬲�鴨蝟ｵ", "譚ｱ譁ｽ蝟ｵ", "驤ｴ髏ｺ髻ｿ", "閾ｭ鮠ｬ蝎�", "蝮ｦ蜈玖�鮠ｬ", "驫�升諤ｪ", "髱帝喝髏�", "逶�燕諤ｪ", "鬲泌ｰｼ蟆ｼ", "蟆冗ｦ剰寞", "閨貞飭魑･", "闃ｱ蟯ｩ諤ｪ", "蝨馴匣魃�", "蟆也甥髯ｸ魃�", "辜亥町髯ｸ魃�", "蟆丞今豈皮査", "蛻ｩ豁占ｷｯ", "霍ｯ蜊｡蛻ｩ豁�", "豐呎ｲｳ鬥ｬ", "豐ｳ鬥ｬ迯ｸ", "驩怜ｰｾ陟�", "鮴咲視陟�", "荳崎憶陋�", "豈帝ｪｷ陋�", "蟆也甥邀�", "陞｢蜈蛾ｭ�", "髴楢匯鬲�", "蟆冗帥鬟幃ｭ�", "髮ｪ隨�諤ｪ", "證ｴ髮ｪ邇�", "迹ｪ迢�級", "閾ｪ辷�｣∵ｪ", "螟ｧ闊瑚�", "雜�抜迢ら橿", "蟾ｨ阡楢陸", "髮ｻ謫企ｭ皮査", "魘ｨ蝌ｴ轤守査", "豕｢蜈句渕譁ｯ", "驕�蜿､蟾ｨ陷�", "闡我ｼ雁ｸ�", "蜀ｰ莨雁ｸ�", "螟ｩ陟咲視", "雎｡迚呵ｱｬ", "螟夐ｊ迯ｸ�ｺ", "濶ｾ霍ｯ髮ｷ譛ｵ", "螟ｧ譛晏圏鮠ｻ", "鮟大､憺ｭ秘揶", "髮ｪ螯門･ｳ", "豢帶汚蟋�", "逕ｱ蜈句ｸ�", "濶ｾ蟋�茜螟�", "莠槫�隲ｾ蟋�", "蟶晉甥逶ｧ蜊｡", "蟶戊ｷｯ螂�ｺ�", "蟶ｭ螟夊絡諱ｩ", "髮ｷ蜷牙･�今譁ｯ", "鬨取級蟶晉ｴ�", "蜈矩峭濶ｲ蛻ｩ莠�", "髴乗ｭ千ｴ�", "迹ｪ邏埼恟", "驕泌�關贋ｼ�", "隰晉ｱｳ", "髦ｿ辷ｾ螳呎民", "豈泌�謠仙ｰｼ", "阯､阯､陋�", "髱定陸陋�", "蜷帑ｸｻ陋�", "證匁囑雎ｬ", "轤堤ｒ雎ｬ", "轤取ｭｦ邇�", "豌ｴ豌ｴ迯ｺ", "髮吝�荳ｸ", "螟ｧ蜉埼ｬｼ", "謗｢謗｢鮠�", "豁･蜩ｨ鮠�", "蟆冗ｴ��", "蜩育ｴ��", "髟ｷ豈帷距", "謇呈焔雋�", "驟ｷ雎ｹ", "闃ｱ讀ｰ迪ｴ", "闃ｱ讀ｰ迪ｿ", "辷�ｦ咏原", "辷�ｦ咏諺", "蜀ｷ豌ｴ迪ｴ", "蜀ｷ豌ｴ迪ｿ", "鬟溷､｢螟｢", "螟｢螟｢陜�", "雎�ｱ�ｴｿ", "蜥募瀦魘ｿ", "鬮伜ご髮蛾屓", "譁第桝鬥ｬ", "髮ｷ髮ｻ譁鷹ｦｬ", "遏ｳ荳ｸ蟄�", "蝨ｰ蟷泌ｲｩ", "鮴仙ｲｩ諤ｪ", "貊ｾ貊ｾ陜呵擒", "蠢�撕陜�", "陞ｺ驥伜慍鮠�", "鮴埼�ｭ蝨ｰ鮠�", "蟾ｮ荳榊､壼ｨ�ｨ�", "謳ｬ驕句ｰ丞権", "髏ｵ鬪ｨ蝨滉ｺｺ", "菫ｮ蟒ｺ閠∝権", "蝨楢搆陏ｪ", "阯崎淦陷�", "陝ｾ陷咲視", "謚墓藻鬯ｼ", "謇捺投鬯ｼ", "陝ｲ蟇ｶ蛹�", "蟇ｶ蛹�ｹｭ", "菫晄ｯ崎浚", "逋ｾ雜ｳ陷郁團", "霆願ｼｪ豈ｬ", "陷郁團邇�", "譛ｨ譽臥帥", "鬚ｨ螯也ｲｾ", "逋ｾ蜷域�ｹ螽�ｨ�", "陬吝�蟆丞ｧ�", "驥手�ｻ魍ｸ鬲�", "鮟醍愍魍ｷ", "豺ｷ豺ｷ魍ｷ", "豬∵ｰ馴ｱｷ", "轣ｫ邏�ｸ榊堤ｿ�", "驕疲束迢堤拠", "豐咎斡莉吩ｺｺ謗�", "遏ｳ螻�淹", "蟯ｩ谿ｿ螻�淹", "貊第ｻ大ｰ丞ｭ�", "鬆ｭ蟾ｾ豺ｷ豺ｷ", "雎｡蠕ｵ魑･", "蜩ｭ蜩ｭ髱｢蜈ｷ", "豁ｻ逾樊｣ｺ", "蜴溯搭豬ｷ鮴�", "閧矩ｪｨ豬ｷ鮴�", "蟋狗･門ｰ城ｳ･", "蟋狗･門､ｧ魑･", "遐ｴ遐ｴ陲�", "轣ｰ蝪ｵ螻ｱ", "邏｢鄒�ｺ�", "邏｢鄒�ｺ槫�", "豕｡豐ｫ譬鈴ｼ�", "螂�ｫｾ譬鈴ｼ�", "蜩･蠕ｷ蟇ｶ蟇ｶ", "蜩･蠕ｷ蟆冗ｫ･", "蜩･蠕ｷ蟆丞ｧ�", "蝟ｮ蜊ｵ邏ｰ閭樒帥", "髮吝嵯邏ｰ閭樒帥", "莠ｺ騾�邏ｰ閭槫嵯", "魘ｨ蟇ｶ蟇ｶ", "闊槫､ｩ魴�", "霑ｷ菴�蜀ｰ", "螟壼､壼�", "髮吝榊､壼､壼�", "蝗帛ｭ｣鮖ｿ", "關瑚歓鮖ｿ", "髮ｻ鬟幃ｼ�", "闢玖搭陝ｲ", "鬨主｣ｫ陜ｸ迚�", "蜩主操逅�順", "謨鈴愆逅�順", "霈暮｣�｣�", "閭門弌蝌�", "菫晄ｯ肴崗豕｢", "髮ｻ髮ｻ陝ｲ", "髮ｻ陷倩屁", "遞ｮ蟄宣牲逅�", "蝣�棡蝠樣斡", "鮨定ｼｪ蜈�", "鮨定ｼｪ邨�", "鮨定ｼｪ諤ｪ", "鮗ｻ鮗ｻ蟆城ｭ�", "鮗ｻ鮗ｻ魏ｻ", "鮗ｻ鮗ｻ魏ｻ鬲夂視", "蟆冗�諤ｪ", "螟ｧ螳�ｪ", "辯ｭ蜈蛾揶", "辯育↓蟷ｽ髱�", "豌ｴ譎ｶ辯育↓髱�", "迚咏甥", "譁ｧ迚咎ｾ�", "髮呎密謌ｰ鮴�", "蝎ｴ蝴冗�", "蜃榊次辭�", "蟷ｾ菴暮妛闃ｱ", "蟆丞亢陜ｸ", "謨乗差陝ｲ", "豕･蟾ｴ鬲�", "蜉溷､ｫ鮠ｬ", "蟶ｫ辷ｶ鮠ｬ", "襍､髱｢鮴�", "豕･蛛ｶ蟆丈ｺｺ", "豕･蛛ｶ蟾ｨ莠ｺ", "鬧貞�蟆丞�", "蜉域脈蜿ｸ莉､", "辷�ず鬆ｭ豌ｴ迚�", "豈幃�ｭ蟆城ｷｹ", "蜍�｣ｫ髮�ｷｹ", "遖ｿ鮃ｹ荳ｫ鬆ｭ", "遖ｿ鮃ｹ螽�", "辭碑渊迯ｸ", "髏ｵ陝ｻ", "蝟ｮ鬥夜ｾ�", "髮咎ｦ匁垓鮴�", "荳蛾ｦ匁Γ鮴�", "辯�∫陝ｲ", "轣ｫ逾櫁崟", "蜍ｾ蟶戊ｷｯ鄙�", "莉｣諡牙渕鄙�", "逡｢蜉帛翠鄙�", "鮴肴佐髮ｲ", "髮ｷ髮ｻ髮ｲ", "關雁ｸ梧級蟋�", "謐ｷ蜈狗ｾ�ｧ�", "蝨溷慍髮ｲ", "驟矩峭蟋�", "蜃ｱ霍ｯ霑ｪ豁�", "鄒取ｴ幄ｶ蝪�", "闢玖ｫｾ雉ｽ蜈狗音", "蜩亥鴨譬�", "閭冶ヶ蜩亥鴨", "蟶�㈹蜊｡髫�", "轣ｫ迢千矯", "髟ｷ蟆ｾ轣ｫ迢�", "螯也↓邏�巨", "蜻ｱ蜻ｱ豕｡陋�", "蜻ｱ鬆ｭ陋�", "逕ｲ雉蠢崎尸", "謗俶侍蜈�", "謗伜慍蜈�", "蟆冗ｮｭ髮", "轣ｫ邂ｭ髮", "辜育ｮｭ鮃ｹ", "邊芽攜陝ｲ", "邊芽攜陋ｹ", "蠖ｩ邊芽攜", "蟆冗劫迯�", "轣ｫ轤守劫", "闃ｱ闢楢涛", "闃ｱ闡芽窒", "闃ｱ貎泌､ｫ莠ｺ", "蝮宣ｨ主ｰ冗ｾ�", "蝮宣ｨ主ｱｱ鄒�", "鬆醍坩辭願ｲ�", "豬∵ｰ鍋�雋�", "螟夐ｺ礼ｱｳ莠�", "螯吝矛", "雜��螯吝矛", "迯ｨ蜉埼椈", "髮吝轄髷�", "蝣�崟蜉肴ｪ", "邊蛾ｦ咎ｦ�", "闃ｳ鬥咏ｲｾ", "邯ｿ邯ｿ豕｡闃�", "閭也莫螯ｮ", "螂ｽ蝠ｦ鬲ｷ", "辜剰ｳ顔視", "鮴懆�閻ｳ", "鮴懆ｶｳ蟾ｨ骼ｧ", "蝙�档阯ｻ", "豈定僚鮴�", "髏ｵ閾よｧ崎擱", "驪ｼ轤ｮ閾り擱", "蛯倬崕陷･", "蜈蛾崕蛯倩悋", "蟇ｶ蟇ｶ證ｴ鮴�", "諤ｪ鬘朱ｾ�", "蜀ｰ髮ｪ鮴�", "蜀ｰ髮ｪ蟾ｨ鮴�", "莉吝ｭ蝉ｼ雁ｸ�", "鞫碑ｧ帝ｷｹ莠ｺ", "蜥壼丁鮠�", "蟆冗｢朱多", "鮟城ｻ丞ｯｶ", "鮟冗ｾ主�", "鮟冗ｾ朱ｾ�", "髑ｰ蝨亥�", "蟆乗惠髱�", "譛ｽ譛ｨ螯�", "蜊礼糖邊ｾ", "蜊礼糖諤ｪ莠ｺ", "蜀ｰ蟇ｶ", "蜀ｰ蟯ｩ諤ｪ", "蝸｡陜�", "髻ｳ豕｢鮴�", "蜩ｲ辷ｾ蟆ｼ莠樊民", "莨願｣ｴ辷ｾ蝪皮粟", "蝓ｺ譬ｼ辷ｾ蠕ｷ", "闥ょｮ牙ｸ�", "閭｡蟶�", "豕｢辷ｾ蜃ｱ蟆ｼ諱ｩ", "譛ｨ譛ｨ譴�", "謚慕ｾｽ譴�", "迢吝ｰ�ｨｹ譴�", "轣ｫ譁大矛", "轤守�蝟ｵ", "辭ｾ辟ｰ蜥�動陌�", "逅�帥豬ｷ迯�", "闃ｱ貍ｾ豬ｷ迯�", "隘ｿ迯�ｵｷ螢ｬ", "蟆冗ｯ､蜈�", "蝟�少蝠�ｳ･", "驫�亢螟ｧ魑･", "雋馴ｼｬ蟆�", "雋馴ｼｬ謗｢髟ｷ", "蠑ｷ鬘朱屓豈崎浚", "陝ｲ髮ｻ蟇ｶ", "骰ｬ霎ｲ轤ｮ陝ｲ", "螂ｽ蜍晁淹", "螂ｽ蜍晄ｯ幄淹", "闃ｱ闊樣ｳ･", "關瑚匳", "陜ｶ邨占酔陌ｻ", "蟯ｩ迢礼距", "鬯�ｲｩ迢ｼ莠ｺ", "蠑ｱ荳�ｭ�", "螂ｽ螢樊弌", "雜�｣樊弌", "豕･鬩｢莉�", "驥肴ｳ･謖ｽ鬥ｬ", "貊ｴ陋�", "貊ｴ陋幃愃", "蛛ｽ陞ｳ闕�", "陂ｭ陞ｳ闃ｱ", "逹｡逹｡闖�", "辯育ｽｩ螟懆順", "螟懃屆轣ｫ陷･", "辟ｰ蜷手悋", "遶･蛛ｶ辭�", "遨ｿ闡礼�", "逕懃ｫｹ遶ｹ", "逕懆�螯ｮ", "逕懷�鄒主錘", "闃ｱ逋ら腸迺ｰ", "譎ｺ謠ｮ迪ｩ", "謚墓憧迪ｴ", "閹ｽ蟆剰浚", "蜈ｷ逕ｲ豁ｦ閠�", "豐吩ｸ伜ｨ�", "蝎ｬ豐吝�｡辷ｺ", "諡ｳ豬ｷ蜿�", "螻ｬ諤ｧ�夂ｩｺ", "驫莨ｴ謌ｰ迯ｸ", "蟆城囎譏�", "讓ｹ譫募ｰｾ辭�", "辷�┣鮴懃査", "謇俶�蠕ｷ迹ｪ辷ｾ", "隰取闘�ｱ", "逎ｨ迚吝ｽｩ逧ｮ鬲�", "閠∫ｿ�ｾ�", "遐ｴ遐ｴ闊ｵ霈ｪ", "蠢�ｱ怜ｯｶ", "魍礼抜鮴�", "譚門ｰｾ魍礼抜鮴�", "蜊｡迺槭�魑ｴ魑ｴ", "蜊｡迺槭�陜ｶ陜ｶ", "蜊｡迺槭�蜩槫到", "蜊｡迺槭�魏ｭ魏ｭ", "遘第民闔ｫ蜿､", "遘第民闔ｫ蟋�", "邏｢辷ｾ霑ｦ髮ｷ豁�", "髴ｲ螂磯寉諡�", "陌帛誓莨雁ｾｷ", "辷�ｌ陏�", "雋ｻ豢帷ｾ手桙", "髮ｻ譚滓惠", "髏ｵ轣ｫ霈晏､�", "邏吝ｾ｡蜉�", "諠｡鬟溷､ｧ邇�", "螂亥�豢幄鹸迹ｪ", "迹ｪ讖滄寉螽�", "迹ｪ螟丞､�", "豈定ｲ晄ｯ�", "蝗幃｡朱�鮴�", "螢倡｣顔浹", "遐ｰ鬆ｭ蟆丈ｸ�", "謐ｷ諡牙･ｧ諡�", "鄒朱隙蝮ｦ", "鄒朱隙譴�｡�", "謨ｲ髻ｳ迪ｴ", "蝠ｪ蜥夂原", "霓滓唐驥大央迪ｩ", "轤主�蜈�", "鬨ｰ雹ｴ蟆丞ｰ�", "髢�┣邇狗煙", "豺夂愍陷･", "隶頑ｾ陷･", "蜊�擇驕ｿ蠖ｹ", "雋ｪ蠢��鈴ｼ�", "阯城｣ｽ譬鈴ｼ�", "遞壼ｱｱ髮", "阯埼ｴ�", "驪ｼ骼ｧ魘�", "邏｢蛛ｵ陝ｲ", "螟ｩ鄂ｩ陝ｲ", "莉･豁占ｷｯ譎ｮ", "蛛ｷ蜈堤巨", "迢仙､ｧ逶�", "蟷ｼ譽画｣�", "逋ｽ闢ｬ闢ｬ", "豈幄ｾｮ鄒�", "豈帶ｯ幄ｧ堤ｾ�", "蜥ｬ蜥ｬ鮴�", "證ｴ蝎ｬ鮴�", "萓�崕豎ｪ", "騾宣崕迥ｬ", "蟆冗く莉�", "螟ｧ轤ｭ霆�", "蟾ｨ轤ｭ螻ｱ", "蝠�棡陝ｲ", "陂玖｣ｹ鮴�", "雎占惧鮴�", "豐吝桁陋�", "豐呵楴陝�", "蜿､譛磯ｳ･", "蛻ｺ譴ｭ鬲�", "謌ｽ譁怜ｰ匁｢ｭ", "豈帝崕螫ｰ", "鬘ｫ蠑ｦ陟題梭", "辯堤↓陏｣", "辟夂┣陏｣", "諡ｳ諡ｳ陋ｸ", "蜈ｫ辷ｪ豁ｦ蟶ｫ", "萓�ご闌ｶ", "諤匁晏｣ｺ", "霑ｷ蟶�脂蟋�", "謠仙ｸ�脂蟋�", "蟶�脂蟋�ｺｫ", "謳苓寞蟆丞ｦ�", "隧仙溌鬲�", "髟ｷ豈帛ｷｨ鬲�", "蝣ｵ謾皮�", "蝟ｵ鬆ｭ逶ｮ", "鬲秘揶迴顔霜", "阡･驕雁�", "雕丞�莠ｺ蛛ｶ", "豁ｻ逾樊攸", "蟆丈ｻ吝･ｶ", "髴懷･ｶ莉�", "蛻鈴劵蜈ｵ", "蝠ｪ蝴捺ｵｷ閹ｽ", "髮ｪ蜷櫁浚", "髮ｪ邨ｨ陋ｾ", "蟾ｨ遏ｳ荳�", "蜀ｰ遐碁ｵ�", "諢帷ｮ｡萓�", "闔ｫ鬲ｯ雋晏庄", "驫�ｱ｡", "螟ｧ邇矩喝雎｡", "髮ｷ魑･鮴�", "髮ｷ魑･豬ｷ迯ｸ", "魏馴ｭ夐ｾ�", "魏馴ｭ壽ｵｷ迯ｸ", "驪�蕎鮴�", "螟夐ｾ肴｢�･ｿ莠�", "螟夐ｾ榊･�", "螟夐ｾ榊ｷｴ鬲ｯ謇�", "闥ｼ髻ｿ", "阯冗測辟ｶ迚ｹ", "辟｡讌ｵ豎ｰ驍｣", "辭雁ｾ貞ｼ�", "豁ｦ驕鍋�蟶ｫ", "阮ｩ謌ｮ蠕ｷ", "髮ｷ蜷芽伽蜍貞･�", "髮ｷ蜷蛾精諡画�", "髮ｪ證ｴ鬥ｬ", "髱亥ｹｽ鬥ｬ", "阨ｾ蜀�邇�", "隧ｭ隗帝ｹｿ", "蜉域密陞ｳ陞�", "譛域怦辭�", "蟷ｽ蟆ｾ邇�ｭ�", "螟ｧ迢�級", "關ｬ驥晞ｭ�", "逵ｷ謌髮ｲ", "譁ｰ闡牙矛", "闥り弊蝟ｵ", "鬲泌ｹｻ蛛�擇蝟ｵ", "蜻�↓魍ｷ", "轤咏⊿魍ｷ", "鬪ｨ邏句ｷｨ閨ｲ魍ｷ", "貎､豌ｴ魘ｨ", "貉ｧ霄埼ｴｨ", "迢よｭ｡豬ｪ闊樣ｴｨ", "諢帛帥雎�", "鬟�ｦ呵ｱ�", "蝨倡匠陋�", "謫埼匚陋�", "雎�沂陝", "辜郁�陜�", "蟶�徴", "蟶�悄謦･", "蟾ｴ蟶�悄謦･", "荳蟆埼ｼ�", "荳螳ｶ鮠�", "迢嶺ｻ泌桁", "鮗ｻ闃ｱ迥ｬ", "霑ｷ菴�闃�", "螂ｧ蛻ｩ邏�", "螂ｧ蛻ｩ逑ｦ", "諤帝ｸ壼踏", "鮖ｽ遏ｳ蟇ｶ", "鮖ｽ遏ｳ螢�", "鮖ｽ遏ｳ蟾ｨ髱�", "轤ｭ蟆丈ｾ�", "邏�動骼ｧ鬨�", "闥ｼ轤主�鬯ｼ", "蜈芽坎莉�", "髮ｻ閧夊尸", "髮ｻ豬ｷ辯�", "螟ｧ髮ｻ豬ｷ辯�", "蛛ｶ蜿ｫ迯�", "迯呈蕗辷ｶ", "貊区ｱ�ｼｴ", "蝪玲ｨ吝ｮ｢", "邏榊勳闕�", "諤也ｴ榊勳闕�", "蜴滄㍽豌ｴ豈�", "髯ｸ蝨ｰ豌ｴ豈�", "豈帛ｴ冶淹", "辭ｱ霎｣螽�", "迢�霎｣讀�", "陝ｲ貊ｾ豕･", "陝ｲ逕ｲ閨�", "鬟�｣�屁", "雜��雎秘ｴ�", "蟆城惚蛹�", "蟾ｧ骰帛権", "蟾ｨ骰帛権", "豬ｷ蝨ｰ鮠�", "荳画ｵｷ蝨ｰ鮠�", "荳狗浹魑･", "豕｢譎ｮ豬ｷ雎�", "豬ｷ雎壻ｿ�", "蝎鈴嚀髫�", "譎ｮ髫�嚀蟋�", "鞫ｩ謇倩悋", "諡匁許陏�", "譎ｶ蜈芽歓", "譎ｶ蜈芽干", "蠅謎ｻ皮距", "蠅捺恕迥ｬ", "郤冗ｴ�ｶｴ", "襍ｰ魃ｨ", "豬ｩ螟ｧ魃ｨ", "霈戊ｺｫ魍�", "蜷�西髴ｸ", "邀ｳ遶矩ｾ�", "譽�ｸ也原", "蝨溽視", "螂�ｺ帝ｺ�", "蝨滄ｾ咲ｯ遽", "莉�脈蟆�ｻ�", "髮�♂迚�", "蜷ｼ蜿ｫ蟆ｾ", "迪帶Γ闖�", "謖ｯ鄙ｼ鬮ｮ", "辷ｬ蝨ｰ鄙�", "豐咎牲逧ｮ", "髏ｵ霓崎ｷ｡", "髏ｵ蛹�｢ｱ", "髏ｵ閾り�", "髏ｵ閼夜�ｸ", "髏ｵ豈定崟", "髏ｵ闕頑｣�", "豸ｼ閼企ｾ�", "蜃崎ш鮴�", "謌溯ш鮴�", "邏｢雋｡髱�", "雉ｽ蟇瑚ｱｪ", "蜿､邁｡陜ｸ", "蜿､蜉崎ｱｹ", "蜿､鮠朱ｹｿ", "蜿､邇蛾ｭ�", "霓滄ｳｴ譛�", "髏ｵ豁ｦ閠�", "謨�拠鬆�", "蟇�拠鬆�", "豕｢逶ｪ豌ｴ", "髏ｵ譁題痩", "陬ｹ陷懆浚", "譁ｯ鬲碑幻", "萓�ご邊苓幻", "螟�隶夂距", "鬘伜｢樒諺", "蜷蛾實髮�", "蜴�ｬｼ讀ｪ"],
              pokeType: ["荳闊ｬ", "譬ｼ鬯･", "鬟幄｡�", "豈�", "蝨ｰ髱｢", "蟯ｩ遏ｳ", "陝ｲ", "蟷ｽ髱�", "驪ｼ", "轣ｫ", "豌ｴ", "闕�", "髮ｻ", "雜��蜉�", "蜀ｰ", "鮴�", "諠｡", "螯也ｲｾ"],
              waza: {
                1: "諡肴投",
                2: "遨ｺ謇句活",
                3: "騾｣迺ｰ蟾ｴ謗�",
                4: "騾｣郤梧教",
                5: "逋ｾ關ｬ蝎ｸ驥肴教",
                6: "閨壼ｯｶ蜉�",
                7: "轣ｫ辟ｰ諡ｳ",
                8: "蜀ｰ蜃肴教",
                9: "髮ｷ髮ｻ諡ｳ",
                10: "謚�",
                11: "螟ｾ菴�",
                12: "譁ｷ鬆ｭ驩�",
                13: "譌矩｢ｨ蛻",
                14: "蜉崎�",
                15: "螻�粋譁ｬ",
                16: "襍ｷ鬚ｨ",
                17: "鄙��謾ｻ謫�",
                18: "蜷ｹ鬟�",
                19: "鬟帷ｿ�",
                20: "邯∫ｷ�",
                21: "鞫疲遠",
                22: "阯､髷ｭ",
                23: "雕ｩ雕�",
                24: "莠碁｣雕｢",
                25: "逋ｾ關ｬ蝎ｸ驥崎ｸ｢",
                26: "鬟幄ｸ｢",
                27: "霑ｴ譌玖ｸ｢",
                28: "貎第ｲ�",
                29: "鬆ｭ骭�",
                30: "隗呈寵",
                31: "莠よ投",
                32: "隗帝多",
                33: "謦樊投",
                34: "豕ｰ螻ｱ螢馴��",
                35: "邱頑據",
                36: "迪帶寵",
                37: "螟ｧ鬯ｧ荳逡ｪ",
                38: "謐ｨ霄ｫ陦晄寵",
                39: "謳門ｰｾ蟾ｴ",
                40: "豈帝�",
                41: "髮咎�",
                42: "鬟帛ｽ磯�",
                43: "迸ｪ逵ｼ",
                44: "蜥ｬ菴�",
                45: "蜿ｫ閨ｲ",
                46: "蜷ｼ蜿ｫ",
                47: "蜚ｱ豁�",
                48: "雜�浹豕｢",
                49: "髻ｳ辷�",
                50: "螳夊ｺｫ豕�",
                51: "貅ｶ隗｣豸ｲ",
                52: "轣ｫ闃ｱ",
                53: "蝎ｴ蟆�↓辟ｰ",
                54: "逋ｽ髴ｧ",
                55: "豌ｴ讒�",
                56: "豌ｴ轤ｮ",
                57: "陦晄ｵｪ",
                58: "蜀ｰ蜃榊�譚�",
                59: "證ｴ鬚ｨ髮ｪ",
                60: "蟷ｻ雎｡蜈臥ｷ�",
                61: "豕｡豐ｫ蜈臥ｷ�",
                62: "讌ｵ蜈画據",
                63: "遐ｴ螢槫�邱�",
                64: "蝠�",
                65: "蝠�多",
                66: "蝨ｰ迯�ｿｻ貊ｾ",
                67: "雕｢蛟�",
                68: "髮吝榊･蛾ｄ",
                69: "蝨ｰ逅�ｸ頑兜",
                70: "諤ｪ蜉�",
                71: "蜷ｸ蜿�",
                72: "雜�ｴ壼精蜿�",
                73: "蟇�函遞ｮ蟄�",
                74: "逕滄聞",
                75: "鬟幄痩蠢ｫ蛻",
                76: "譌･蜈画據",
                77: "豈堤ｲ�",
                78: "鮗ｻ逞ｺ邊�",
                79: "蛯ｬ逵�邊�",
                80: "闃ｱ逑｣闊�",
                81: "蜷千ｵｲ",
                82: "鮴堺ｹ区�",
                83: "轣ｫ辟ｰ譌区ｸｦ",
                84: "髮ｻ謫�",
                85: "蜊∬成莨冗音",
                86: "髮ｻ逎∵ｳ｢",
                87: "謇馴峭",
                88: "關ｽ遏ｳ",
                89: "蝨ｰ髴�",
                90: "蝨ｰ陬�",
                91: "謖匁ｴ�",
                92: "蜉�ｯ�",
                93: "蠢ｵ蜉�",
                94: "邊ｾ逾槫ｼｷ蠢ｵ",
                95: "蛯ｬ逵�陦�",
                96: "迹應ｼｽ蟋ｿ蜍｢",
                97: "鬮倬溽ｧｻ蜍�",
                98: "髮ｻ蜈我ｸ髢�",
                99: "諞､諤�",
                100: "迸ｬ髢鍋ｧｻ蜍�",
                101: "鮟大､憺ｭ泌ｽｱ",
                102: "讓｡莉ｿ",
                103: "蛻ｺ閠ｳ閨ｲ",
                104: "蠖ｱ蟄仙�霄ｫ",
                105: "閾ｪ謌大�逕�",
                106: "隶顔｡ｬ",
                107: "隶雁ｰ�",
                108: "辣吝ｹ�",
                109: "螂�焚荵句�",
                110: "邵ｮ蜈･谿ｼ荳ｭ",
                111: "隶雁恣",
                112: "螻城囿",
                113: "蜈臥掩",
                114: "鮟鷹悸",
                115: "蜿榊ｰ�｣�",
                116: "閨壽ｰ｣",
                117: "蠢崎�",
                118: "謠ｮ謖�",
                119: "鮑夐ｵ｡蟄ｸ闊�",
                120: "閾ｪ辷�",
                121: "轤ｸ陋�",
                122: "闊瑚�",
                123: "豼�悸",
                124: "豎｡豕･謾ｻ謫�",
                125: "鬪ｨ譽�",
                126: "螟ｧ蟄礼�轤�",
                127: "謾轢�",
                128: "雋晄ｮｼ螟ｾ謫�",
                129: "鬮倬滓弌譏�",
                130: "轣ｫ邂ｭ鬆ｭ骭�",
                131: "蟆門絢蜉�霎ｲ轤ｮ",
                132: "郤冗ｹ�",
                133: "迸ｬ髢灘､ｱ諞ｶ",
                134: "謚伜ｽ取ｹｯ蛹�",
                135: "逕溯寞",
                136: "鬟幄�雕｢",
                137: "螟ｧ陋�棯逵ｼ",
                138: "鬟溷､｢",
                139: "豈堤逃譁ｯ",
                140: "謚慕帥",
                141: "蜷ｸ陦",
                142: "諠｡鬲比ｹ句製",
                143: "逾樣ｳ･迪帶投",
                144: "隶願ｺｫ",
                145: "豕｡豐ｫ",
                146: "霑ｷ譏乗教",
                147: "陂題順蟄｢蟄�",
                148: "髢��",
                149: "邊ｾ逾樊ｳ｢",
                150: "霄崎ｵｷ",
                151: "貅ｶ蛹�",
                152: "陝ｹ驩鈴堅",
                153: "螟ｧ辷�ず",
                154: "莠よ鞄",
                155: "鬪ｨ鬆ｭ蝗槫鴨髀｢",
                156: "逹｡隕ｺ",
                157: "蟯ｩ蟠ｩ",
                158: "蠢�ｮｺ髢迚�",
                159: "遞懆ｧ貞喧",
                160: "邏狗炊",
                161: "荳蛾㍾謾ｻ謫�",
                162: "諞､諤帝摩迚�",
                163: "蜉磯幕",
                164: "譖ｿ霄ｫ",
                165: "謗呎猿",
                166: "蟇ｫ逕�",
                167: "荳蛾｣雕｢",
                168: "蟆丞�",
                169: "陋帷ｶｲ",
                170: "蠢�ｹ狗愍",
                171: "諠｡螟｢",
                172: "轣ｫ辟ｰ霈ｪ",
                173: "謇馴ｼｾ",
                174: "隧帛鋳",
                175: "謚鍋汲",
                176: "邏狗炊��",
                177: "豌｣譌区判謫�",
                178: "譽牙ｭ｢蟄�",
                179: "襍ｷ豁ｻ蝗樒函",
                180: "諤ｨ諱ｨ",
                181: "邏ｰ髮ｪ",
                182: "螳井ｽ�",
                183: "髻ｳ騾滓教",
                184: "鬯ｼ髱｢",
                185: "蜃ｺ螂�ｸ謫�",
                186: "螟ｩ菴ｿ荵句製",
                187: "閻ｹ鮠�",
                188: "豎｡豕･轤ｸ蠖�",
                189: "謫ｲ豕･",
                190: "遶�鬲壽｡ｶ轤ｮ",
                191: "謦定廠",
                192: "髮ｻ逎∫ぐ",
                193: "隴倡�ｴ",
                194: "蜷悟多",
                195: "貊�ｺ｡荵区ｭ�",
                196: "蜀ｰ蜃堺ｹ矩｢ｨ",
                197: "逵狗ｩｿ",
                198: "鬪ｨ譽剃ｺよ遠",
                199: "骼門ｮ�",
                200: "騾�ｱ�",
                201: "豐呎垓",
                202: "邨よ･ｵ蜷ｸ蜿�",
                203: "謖ｺ菴�",
                204: "謦貞ｬ�",
                205: "貊ｾ蜍�",
                206: "鮟槫芦轤ｺ豁｢",
                207: "陌帛ｼｵ閨ｲ蜍｢",
                208: "蝟晉央螂ｶ",
                209: "髮ｻ蜈�",
                210: "騾｣譁ｬ",
                211: "驪ｼ鄙ｼ",
                212: "鮟題牡逶ｮ蜈�",
                213: "霑ｷ莠ｺ",
                214: "螟｢隧ｱ",
                215: "豐ｻ逋帝斡閨ｲ",
                216: "蝣ｱ諱ｩ",
                217: "遖ｮ迚ｩ",
                218: "驕ｷ諤�",
                219: "逾樒ｧ伜ｮ郁ｭｷ",
                220: "蛻�灯逞帶･�",
                221: "逾櫁＊荵狗↓",
                222: "髴�ｴ�",
                223: "辷�｣よ教",
                224: "雜�ｴ夊ｧ呈投",
                225: "鮴肴�",
                226: "謗･譽�",
                227: "蜀堺ｾ�ｸ谺｡",
                228: "霑ｽ謇�",
                229: "鬮倬滓雷霓�",
                230: "逕懃莫鬥呎ｰ｣",
                231: "髏ｵ蟆ｾ",
                232: "驥大ｱｬ辷ｪ",
                233: "蛟溷鴨鞫�",
                234: "譎ｨ蜈�",
                235: "蜈牙粋菴懃畑",
                236: "譛亥�",
                237: "隕ｺ驢貞鴨驥�",
                238: "蜊∝ｭ怜活",
                239: "鮴肴佐鬚ｨ",
                240: "豎る岑",
                241: "螟ｧ譎ｴ螟ｩ",
                242: "蜥ｬ遒�",
                243: "髀｡髱｢蜿榊ｰ�",
                244: "閾ｪ謌第囓遉ｺ",
                245: "逾樣�",
                246: "蜴溷ｧ倶ｹ句鴨",
                247: "證怜ｽｱ逅�",
                248: "鬆千衍譛ｪ萓�",
                249: "遒主ｲｩ",
                250: "貎ｮ譌�",
                251: "蝨肴判",
                252: "謫頑詞螂�･ｲ",
                253: "蜷ｵ鬯ｧ",
                254: "闢�鴨",
                255: "蝎ｴ蜃ｺ",
                256: "蜷樔ｸ�",
                257: "辭ｱ鬚ｨ",
                258: "蜀ｰ髮ｹ",
                259: "辟｡逅�叙鬯ｧ",
                260: "蜷ｹ謐ｧ",
                261: "鬯ｼ轣ｫ",
                262: "閾ｨ蛻･遖ｮ迚ｩ",
                263: "遑ｬ謦�",
                264: "逵滓ｰ｣諡ｳ",
                265: "貂��",
                266: "逵区�蝌�",
                267: "閾ｪ辟ｶ荵句鴨",
                268: "蜈�崕",
                269: "謖鷹〟",
                270: "蟷ｫ蜉ｩ",
                271: "謌ｲ豕�",
                272: "謇ｮ貍�",
                273: "逾磯｡�",
                274: "蛟溷勧",
                275: "謇取�ｹ",
                276: "陟ｻ蜉�",
                277: "鬲疲ｳ募渚蟆�",
                278: "蝗樊噺蛻ｩ逕ｨ",
                279: "蝣ｱ蠕ｩ",
                280: "蜉育逃",
                281: "蜩域ｬ�",
                282: "諡崎誠",
                283: "陟ｻ蟷ｹ",
                284: "蝎ｴ轣ｫ",
                285: "迚ｹ諤ｧ莠呈鋤",
                286: "蟆∝魂",
                287: "辣･辟ｶ荳譁ｰ",
                288: "諤ｨ蠢ｵ",
                289: "謳ｶ螂ｪ",
                290: "遘伜ｯ�ｹ句鴨",
                291: "貎帶ｰｴ",
                292: "迪帶耳",
                293: "菫晁ｭｷ濶ｲ",
                294: "陞｢轣ｫ",
                295: "貎疲ｷｨ蜈芽樺",
                296: "阮�悸逅�",
                297: "鄒ｽ豈幄�",
                298: "謳匁刄闊�",
                299: "轣ｫ辟ｰ雕｢",
                300: "邇ｩ豕･蟾ｴ",
                301: "蜀ｰ逅�",
                302: "蟆門絢閾�",
                303: "蛛ｷ諛ｶ",
                304: "蟾ｨ閨ｲ",
                305: "蜉�ｯ堤甥",
                306: "謦戊｣ら穐",
                307: "辷�ず辜育┣",
                308: "蜉�霎ｲ豌ｴ轤ｮ",
                309: "蠖玲弌諡ｳ",
                310: "鬩壼嚊",
                311: "豌｣雎｡逅�",
                312: "闃ｳ鬥呎ｲｻ逋�",
                313: "蛛�働",
                314: "遨ｺ豌｣蛻ｩ蛻�",
                315: "驕守�",
                316: "豌｣蜻ｳ蛛ｵ貂ｬ",
                317: "蟯ｩ遏ｳ蟆�事",
                318: "驫濶ｲ譌矩｢ｨ",
                319: "驥大ｱｬ髻ｳ",
                320: "闕臥ｬ�",
                321: "謳皮劼",
                322: "螳�ｮ吝鴨驥�",
                323: "蝎ｴ豌ｴ",
                324: "菫｡陌溷�譚�",
                325: "證怜ｽｱ諡ｳ",
                326: "逾樣壼鴨",
                327: "陦晏､ｩ諡ｳ",
                328: "豬∵ｲ吝慍迯�",
                329: "邨募ｰ埼峺蠎ｦ",
                330: "豼∵ｵ�",
                331: "遞ｮ蟄先ｩ滄梨讒�",
                332: "辯戊ｿ�",
                333: "蜀ｰ骭�",
                334: "髏ｵ螢�",
                335: "謫玖ｷｯ",
                336: "髟ｷ蝴�",
                337: "鮴咲穐",
                338: "逖狗汲讀咲黄",
                339: "蛛･鄒�",
                340: "蠖郁ｷｳ",
                341: "豕･蟾ｴ蟆�投",
                342: "豈貞ｰｾ",
                343: "貂ｴ譛�",
                344: "莨冗音謾ｻ謫�",
                345: "鬲疲ｳ戊痩",
                346: "邇ｩ豌ｴ",
                347: "蜀･諠ｳ",
                348: "闡牙�",
                349: "鮴堺ｹ玖�",
                350: "蟯ｩ遏ｳ辷�投",
                351: "髮ｻ謫頑ｳ｢",
                352: "豌ｴ荵区ｳ｢蜍�",
                353: "遐ｴ貊�ｹ矩｡�",
                354: "邊ｾ逾樒ｪ�ｲ",
                355: "鄒ｽ譽ｲ",
                356: "驥榊鴨",
                357: "螂�ｷ｡荵狗愍",
                358: "蝟夐�蟾ｴ謗�",
                359: "閾る堅",
                360: "髯陞ｺ逅�",
                361: "豐ｻ逋剃ｹ矩｡�",
                362: "鮖ｽ豌ｴ",
                363: "閾ｪ辟ｶ荵区←",
                364: "菴ｯ謾ｻ",
                365: "蝠�｣�",
                366: "鬆�｢ｨ",
                367: "鮟樒ｩｴ",
                368: "驥大ｱｬ辷�ず",
                369: "諤･騾滓釜霑�",
                370: "霑題ｺｫ謌ｰ",
                371: "莉･迚咎ｄ迚�",
                372: "諠｡諢剰ｿｽ謫�",
                373: "譟･蟆�",
                374: "謚墓憧",
                375: "邊ｾ逾櫁ｽ臥ｧｻ",
                376: "邇狗煙",
                377: "蝗槫ｾｩ蟆�事",
                378: "邨樒ｷ�",
                379: "蜉幃㍼謌ｲ豕�",
                380: "閭�ｶｲ",
                381: "蟷ｸ驕句鋳隱�",
                382: "謳ｶ蜈井ｸ豁･",
                383: "莉ｿ謨�",
                384: "蜉幃㍼莠呈鋤",
                385: "髦ｲ螳井ｺ呈鋤",
                386: "諛ｲ鄂ｰ",
                387: "迴崎酪",
                388: "辣ｩ諠ｱ遞ｮ蟄�",
                389: "遯∬･ｲ",
                390: "豈定廠",
                391: "蠢�揶莠呈鋤",
                392: "豌ｴ豬∫腸",
                393: "髮ｻ逎�｣�ｵｮ",
                394: "髢�┣陦晞拠",
                395: "逋ｼ蜍�",
                396: "豕｢蟆主ｽ�",
                397: "蟯ｩ遏ｳ謇鍋｣ｨ",
                398: "豈呈投",
                399: "諠｡荵区ｳ｢蜍�",
                400: "證苓･ｲ隕∝ｮｳ",
                401: "豌ｴ豬∝ｰｾ",
                402: "遞ｮ蟄千ず蠖�",
                403: "遨ｺ豌｣譁ｬ",
                404: "蜊∝ｭ怜岡",
                405: "陝ｲ魑ｴ",
                406: "鮴堺ｹ区ｳ｢蜍�",
                407: "鮴堺ｹ倶ｿｯ陦�",
                408: "蜉幃㍼蟇ｶ遏ｳ",
                409: "蜷ｸ蜿匁教",
                410: "逵溽ｩｺ豕｢",
                411: "逵滓ｰ｣蠖�",
                412: "閭ｽ驥冗帥",
                413: "蜍�ｳ･迪帶判",
                414: "螟ｧ蝨ｰ荵句鴨",
                415: "謗牙桁",
                416: "邨よ･ｵ陦晄投",
                417: "隧ｭ險�",
                418: "蟄仙ｽ域教",
                419: "髮ｪ蟠ｩ",
                420: "蜀ｰ遉ｫ",
                421: "證怜ｽｱ辷ｪ",
                422: "髮ｷ髮ｻ迚�",
                423: "蜀ｰ蜃咲甥",
                424: "轣ｫ辟ｰ迚�",
                425: "蠖ｱ蟄仙�隘ｲ",
                426: "豕･蟾ｴ轤ｸ蠖�",
                427: "邊ｾ逾槫茜蛻�",
                428: "諢丞ｿｵ鬆ｭ骭�",
                429: "髀｡蜈牙ｰ�投",
                430: "蜉�霎ｲ蜈臥ぐ",
                431: "謾蟯ｩ",
                432: "貂�勁豼�悸",
                433: "謌ｲ豕慕ｩｺ髢�",
                434: "豬∵弌鄒､",
                435: "謾ｾ髮ｻ",
                436: "蝎ｴ辣�",
                437: "鬟幄痩鬚ｨ證ｴ",
                438: "蠑ｷ蜉幃椚謇�",
                439: "蟯ｩ遏ｳ轤ｮ",
                440: "蜊∝ｭ玲ｯ貞�",
                441: "蝙�慇蟆�投",
                442: "髏ｵ鬆ｭ",
                443: "逎�牲轤ｸ蠖�",
                444: "蟆也浹謾ｻ謫�",
                445: "隱俶ヱ",
                446: "髫ｱ蠖｢蟯ｩ",
                447: "謇楢拷邨�",
                448: "蝟句幕荳堺ｼ�",
                449: "蛻ｶ陬∝�遉ｫ",
                450: "陝ｲ蜥ｬ",
                451: "蜈�崕蜈画據",
                452: "譛ｨ讒�",
                453: "豌ｴ豬∝匐蟆�",
                454: "謾ｻ謫頑欠莉､",
                455: "髦ｲ遖ｦ謖�ｻ､",
                456: "蝗槫ｾｩ謖�ｻ､",
                457: "髮吝�鬆ｭ骭�",
                458: "莠碁｣謫�",
                459: "譎ょ�蜥�動",
                460: "莠樒ｩｺ陬よ脈",
                461: "譁ｰ譛郁�",
                462: "謐冗｢�",
                463: "辭泌ｲｩ鬚ｨ證ｴ",
                464: "證鈴ｻ第ｴ�",
                465: "遞ｮ蟄宣麻蜈�",
                466: "螂�焚荵矩｢ｨ",
                467: "證怜ｽｱ貎幄･ｲ",
                468: "逎ｨ辷ｪ",
                469: "蟒｣蝓滄亟螳�",
                470: "髦ｲ螳亥ｹｳ蛻�",
                471: "蜉幃㍼蟷ｳ蛻�",
                472: "螂�ｦ咏ｩｺ髢�",
                473: "邊ｾ逾櫁｡晄投",
                474: "豈呈ｶｲ陦晄投",
                475: "霄ｫ鬮碑ｼ暮㍼蛹�",
                476: "諞､諤堤ｲ�",
                477: "諢丞ｿｵ遘ｻ迚ｩ",
                478: "鬲疲ｳ慕ｩｺ髢�",
                479: "謫願誠",
                480: "螻ｱ蠏先藻",
                481: "辜育┣豼ｺ蟆�",
                482: "豎｡豕･豕｢",
                483: "陜ｶ闊�",
                484: "驥咲｣�｡晄寵",
                485: "蜷梧ｭ･蟷ｲ謫ｾ",
                486: "髮ｻ逅�",
                487: "豬ｸ豌ｴ",
                488: "闢��辟ｰ隘ｲ",
                489: "逶､陷ｷ",
                490: "荳狗乢雕｢",
                491: "驟ｸ豸ｲ轤ｸ蠖�",
                492: "谺ｺ隧�",
                493: "蝟ｮ邏泌�譚�",
                494: "謇ｾ螟･莨ｴ",
                495: "謔ｨ蜈郁ｫ�",
                496: "霈ｪ蜚ｱ",
                497: "蝗櫁�",
                498: "騾先ｭ･謫顔�ｴ",
                499: "貂�勁荵狗�",
                500: "霈泌勧蜉幃㍼",
                501: "蠢ｫ騾滄亟螳�",
                502: "莠､謠帛�ｴ蝨ｰ",
                503: "辭ｱ豌ｴ",
                504: "遐ｴ谿ｼ",
                505: "豐ｻ逋呈ｳ｢蜍�",
                506: "遖堺ｸ榊粍陦�",
                507: "閾ｪ逕ｱ關ｽ鬮�",
                508: "謠帶ｪ�",
                509: "蟾ｴ謚�",
                510: "辯堤孱",
                511: "蟒ｶ蠕�",
                512: "髮懈橿",
                513: "髀｡髱｢螻ｬ諤ｧ",
                514: "蝣ｱ莉�",
                515: "謳丞多",
                516: "蛯ｳ驕樒ｦｮ迚ｩ",
                517: "辣臥剛",
                518: "豌ｴ荵玖ｪ鍋ｴ�",
                519: "轣ｫ荵玖ｪ鍋ｴ�",
                520: "闕我ｹ玖ｪ鍋ｴ�",
                521: "莨冗音譖ｿ謠�",
                522: "陝ｲ荵区慣謚�",
                523: "驥崎ｸ�",
                524: "蜀ｰ諱ｯ",
                525: "鮴榊ｰｾ",
                526: "閾ｪ謌第ｿ蜍ｵ",
                527: "髮ｻ邯ｲ",
                528: "逖狗汲莨冗音",
                529: "逶ｴ陦晞多",
                530: "莠碁｣蜉�",
                531: "諢帛ｿ�魂遶�",
                532: "譛ｨ隗�",
                533: "閨門轄",
                534: "雋晄ｮｼ蛻�",
                535: "鬮俶ｺｫ驥榊｣�",
                536: "髱定拷謾ｪ諡悟勣",
                537: "逖狗汲貊ｾ螢�",
                538: "譽芽干髦ｲ螳�",
                539: "證鈴ｻ醍�遐ｴ",
                540: "邊ｾ逾樊投遐ｴ",
                541: "謗�ｰｾ諡肴遠",
                542: "證ｴ鬚ｨ",
                543: "辷�ず鬆ｭ遯∵投",
                544: "鮨定ｼｪ鬟帷乢",
                545: "轣ｫ辟ｰ蠖�",
                546: "鬮倡ｧ第橿蜈臥ぐ",
                547: "蜿､閠∽ｹ区ｭ�",
                548: "逾樒ｧ倅ｹ句轄",
                549: "蜀ｰ蟆∽ｸ也阜",
                550: "髮ｷ謫�",
                551: "髱堤┣",
                552: "轣ｫ荵玖�",
                553: "蜀ｰ蜃堺ｼ冗音",
                554: "讌ｵ蟇貞�辟ｰ",
                555: "螟ｧ閨ｲ蜥�動",
                556: "蜀ｰ譟ｱ蠅懈投",
                557: "�ｶ辭ｱ辟ｰ",
                558: "莠､骭ｯ轣ｫ辟ｰ",
                559: "莠､骭ｯ髢�崕",
                560: "鬟幄ｺｫ驥榊｣�",
                561: "謗讎ｻ讎ｻ邀ｳ",
                562: "謇灘理",
                563: "閠募慍",
                564: "鮟城ｻ冗ｶｲ",
                565: "閾ｴ蜻ｽ驥晏絢",
                566: "貎幃揶螂�･ｲ",
                567: "關ｬ閨門､�",
                568: "謌ｰ蜷ｼ",
                569: "遲蛾屬蟄先ｵｴ",
                570: "諡狗黄髱｢蜈�崕",
                571: "譽ｮ譫苓ｩ帛鋳",
                572: "關ｽ闍ｱ郢ｽ邏�",
                573: "蜀ｷ蜃堺ｹｾ辯･",
                574: "鬲�ヱ荵玖�",
                575: "諡倶ｸ狗侠隧ｱ",
                576: "鬘帛�",
                577: "蜷ｸ蜿紋ｹ句製",
                578: "謌ｲ豕暮亟螳�",
                579: "魄ｮ闃ｱ髦ｲ螳�",
                580: "髱定拷蝣ｴ蝨ｰ",
                581: "阮�悸蝣ｴ蝨ｰ",
                582: "霈ｸ髮ｻ",
                583: "螫蛾ｬｧ",
                584: "螯也ｲｾ荵矩｢ｨ",
                585: "譛井ｺｮ荵句鴨",
                586: "辷�浹豕｢",
                587: "螯也ｲｾ荵矩事",
                588: "邇玖�崟迚�",
                589: "蜥檎擱逶ｸ陌�",
                590: "蟇�ｪ�",
                591: "髑ｽ遏ｳ鬚ｨ證ｴ",
                592: "闥ｸ豎ｽ辷�ず",
                593: "逡ｰ谺｡蜈�ｴ�",
                594: "鬟帶ｰｴ謇玖｣｡蜉�",
                595: "鬲疲ｳ慕↓辟ｰ",
                596: "蟆門絢髦ｲ螳�",
                597: "闃ｳ鬥呵埋髴ｧ",
                598: "諤ｪ逡ｰ髮ｻ豕｢",
                599: "豈呈ｶｲ髯ｷ髦ｱ",
                600: "邊牙｡ｵ",
                601: "螟ｧ蝨ｰ謗梧而",
                602: "逎∝�ｴ謫肴而",
                603: "豁｡讓よ凾蜈�",
                604: "髮ｻ豌｣蝣ｴ蝨ｰ",
                605: "鬲疲ｳ暮麻閠",
                606: "諷ｶ逾�",
                607: "迚ｽ謇�",
                608: "蝨鍋楜",
                609: "雹ｭ雹ｭ閾蛾�ｰ",
                610: "謇倶ｸ狗蕗諠�",
                611: "豁ｻ郤冗�謇�",
                612: "蠅槫ｼｷ諡ｳ",
                613: "豁ｻ莠｡荵狗ｿｼ",
                614: "蜊�ｮｭ鮨顔匸",
                615: "蜊�ｳ｢豼逶ｪ",
                616: "螟ｧ蝨ｰ逾槫鴨",
                617: "遐ｴ貊�ｹ句�",
                618: "譬ｹ貅先ｳ｢蜍�",
                619: "譁ｷ蟠紋ｹ句轄",
                620: "逡ｫ鮴埼ｻ樒撥",
                621: "逡ｰ谺｡蜈�憲謾ｻ",
                622: "遨ｶ讌ｵ辟｡謨ｵ螟ｧ陦晄寵",
                623: "遨ｶ讌ｵ辟｡謨ｵ螟ｧ陦晄寵",
                624: "蜈ｨ蜉帷┌髮呎ｿ辜域教",
                625: "蜈ｨ蜉帷┌髮呎ｿ辜域教",
                626: "讌ｵ騾滉ｿｯ陦晁ｽ溽ヨ謦�",
                627: "讌ｵ騾滉ｿｯ陦晁ｽ溽ヨ謦�",
                628: "蠑ｷ驟ｸ蜉�ｯ呈ｻ�ｵ暮岑",
                629: "蠑ｷ驟ｸ蜉�ｯ呈ｻ�ｵ暮岑",
                630: "蝨ｰ髫�弍螟ｩ螟ｧ邨らｵ�",
                631: "蝨ｰ髫�弍螟ｩ螟ｧ邨らｵ�",
                632: "豈螟ｩ貊�慍蟾ｨ蟯ｩ蠅�",
                633: "豈螟ｩ貊�慍蟾ｨ蟯ｩ蠅�",
                634: "邨募ｰ肴黒鬟溯ｿｴ譌区脈",
                635: "邨募ｰ肴黒鬟溯ｿｴ譌区脈",
                636: "辟｡逶｡證怜､應ｹ玖ｪ俶ヱ",
                637: "辟｡逶｡證怜､應ｹ玖ｪ俶ヱ",
                638: "雜�ｵ戊楴譌矩｣謫�",
                639: "雜�ｵ戊楴譌矩｣謫�",
                640: "雜�ｼｷ讌ｵ髯千�辟ｰ蠖�",
                641: "雜�ｼｷ讌ｵ髯千�辟ｰ蠖�",
                642: "雜�ｴ壽ｰｴ豬∝､ｧ貍ｩ貂ｦ",
                643: "雜�ｴ壽ｰｴ豬∝､ｧ貍ｩ貂ｦ",
                644: "邨｢辷帷ｹｽ邏幄干諤呈叛",
                645: "邨｢辷帷ｹｽ邏幄干諤呈叛",
                646: "邨よ･ｵ莨冗音迢る峭髢�",
                647: "邨よ･ｵ莨冗音迢る峭髢�",
                648: "閾ｳ鬮倡ｲｾ逾樒�ｴ螢樊ｳ｢",
                649: "閾ｳ鬮倡ｲｾ逾樒�ｴ螢樊ｳ｢",
                650: "豼迢ょ､ｧ蝨ｰ關ｬ驥悟�",
                651: "豼迢ょ､ｧ蝨ｰ關ｬ驥悟�",
                652: "遨ｶ讌ｵ蟾ｨ鮴埼怫螟ｩ蝨ｰ",
                653: "遨ｶ讌ｵ蟾ｨ鮴埼怫螟ｩ蝨ｰ",
                654: "鮟第ｴ槫裾蝎ｬ關ｬ迚ｩ貊�",
                655: "鮟第ｴ槫裾蝎ｬ關ｬ迚ｩ貊�",
                656: "蜿ｯ諢帶弌譏滄｣帛､ｩ謦�",
                657: "蜿ｯ諢帶弌譏滄｣帛､ｩ謦�",
                658: "逧ｮ蜊｡逧ｮ蜊｡蠢�ｮｺ謫�",
                659: "髮�ｲ�",
                660: "霑朱�ｭ荳謫�",
                661: "遒牙�｡",
                662: "邵ｫ蠖ｱ",
                663: "�､�､驥大鏡閾�",
                664: "豕｡蠖ｱ逧�ｩ�豁手ｪｿ",
                665: "蜀ｰ骭�",
                666: "闃ｱ逋�",
                667: "蜊∬成鬥ｬ蜉�",
                668: "蜷ｸ蜿門鴨驥�",
                669: "譌･蜈牙�",
                670: "讓ｹ闡�",
                671: "閨壼�辯�",
                672: "豈堤ｵｲ",
                673: "逎ｨ遉ｪ",
                674: "霈泌勧鮨定ｼｪ",
                675: "蝨ｰ迯�ｪ∝絢",
                676: "闃ｱ邊牙恫",
                677: "謫ｲ骭ｨ",
                678: "邊ｾ逾槫�ｴ蝨ｰ",
                679: "迪帶調",
                680: "轣ｫ辟ｰ髷ｭ",
                681: "蝗ょｼｵ",
                682: "辯�孱",
                683: "騾溷ｺｦ莠呈鋤",
                684: "菫ｮ髟ｷ荵玖ｧ�",
                685: "豺ｨ蛹�",
                686: "隕ｺ驢剃ｹ玖�",
                687: "譬ｸ蠢��鄂ｰ閠�",
                688: "辭ｱ蟶ｶ雕｢",
                689: "陌滉ｻ､",
                690: "魑･蝌ｴ蜉�霎ｲ轤ｮ",
                691: "魍礼援蝎ｪ髻ｳ",
                692: "鮴埼堅",
                693: "迢り�謠ｮ謇�",
                694: "讌ｵ蜈牙ｹ�",
                695: "驕ｮ螟ｩ阡ｽ譌･證怜ｽｱ邂ｭ",
                696: "讌ｵ諠｡鬟幄ｺ咲ｲ臥｢取投",
                697: "豬ｷ逾櫁至蝴ｴ莠､髻ｿ讓�",
                698: "蟾ｨ莠ｺ陦帛｣ｫ繝ｻ髦ｿ鄒�級",
                699: "荳�弌螂ｪ鬲り�",
                700: "鬧暮峭鬥ｭ髮ｻ謌ｲ陦晄ｵｪ",
                701: "隱咲悄襍ｷ萓�､ｧ辷�投",
                702: "荵晏ｽｩ譏�庄鮨願★鬆�",
                703: "襍ｷ貅占ｶ�眠譏溷､ｧ辷�ず",
                704: "髯ｷ髦ｱ逕ｲ谿ｼ",
                705: "闃ｱ譛ｵ蜉�霎ｲ轤ｮ",
                706: "邊ｾ逾樔ｹ狗甥",
                707: "霍ｺ閻ｳ",
                708: "證怜ｽｱ荵矩ｪｨ",
                709: "陦晏ｲｩ",
                710: "豌ｴ豬∬｣ら�ｴ",
                711: "遞憺升髏ｳ蟆�",
                712: "證怜ｽｱ蛛ｷ逶�",
                713: "豬∵弌髢�｡�",
                714: "證怜ｽｱ荵句�",
                715: "豺夂愍豎ｪ豎ｪ",
                716: "鮗ｻ鮗ｻ蛻ｺ蛻ｺ",
                717: "閾ｪ辟ｶ荵区�",
                718: "螟壼ｱｬ諤ｧ謾ｻ謫�",
                719: "蜊�成莨冗音",
                720: "鬩夂�螟ｧ鬆ｭ",
                721: "遲蛾屬蟄宣麻髮ｻ諡ｳ",
                722: "蜈牙ｭ仙匐貉ｧ",
                723: "辟壼､ｩ貊�ｸ也�蜈臥�",
                724: "譌･蜈芽ｿｴ譌倶ｸ玖直遨ｹ",
                725: "譛郁庄鬟帶ｿｺ關ｽ髱磯怱",
                726: "隕ｪ蟇�┌髢灘､ｧ莠よ渚",
                727: "迢ｼ蝌ｯ遏ｳ迚咎｢ｶ鬚ｨ證ｴ",
                728: "辭ｾ鬲ら�闊樒ヨ髻ｳ辷�",
                729: "髮ｻ髮ｻ蜉�騾�",
                730: "貊疲ｻ碑｡晄ｵｪ",
                731: "鬟�｣�｢懆誠",
                732: "髢�麻髮ｷ蜈�",
                733: "豢ｻ豢ｻ豌｣豕｡",
                734: "鮗ｻ鮗ｻ髮ｻ謫�",
                735: "辭顔�轣ｫ辷�",
                736: "蝌ｩ蝌ｩ豌｣蝣ｴ",
                737: "螢槫｣樣�伜沺",
                738: "闌∬戟霓溽ず",
                739: "蜀ｰ蜀ｰ髴懷㍾",
                740: "莠ｮ莠ｮ鬚ｨ證ｴ",
                741: "遐ｰ遐ｰ謫顔�ｴ",
                742: "驪ｼ諡ｳ髮呎投",
                743: "讌ｵ蟾ｨ髦ｲ螢�",
                744: "讌ｵ蟾ｨ轤ｮ",
                745: "迢呎投",
                746: "邱雁町荳肴叛",
                747: "螟ｧ蠢ｫ譛ｵ鬆､",
                748: "閭梧ｰｴ荳謌ｰ",
                749: "轢晞搨蟆�投",
                750: "鬲疲ｳ慕ｲ�",
                751: "鮴咲ｮｭ",
                752: "闌ｶ譛�",
                753: "陋ｸ蝗ｺ",
                754: "髮ｻ蝟�",
                755: "魏灘町",
                756: "謠帛�ｴ",
                757: "讌ｵ蟾ｨ轣ｫ辷�",
                758: "讌ｵ蟾ｨ陝ｲ陟ｱ",
                759: "讌ｵ蟾ｨ髢�崕",
                760: "讌ｵ蟾ｨ謾ｻ謫�",
                761: "讌ｵ蟾ｨ諡ｳ鬯･",
                762: "讌ｵ蟾ｨ蟷ｽ鬲�",
                763: "讌ｵ蟾ｨ蟇貞�",
                764: "讌ｵ蟾ｨ驟ｸ豈�",
                765: "讌ｵ蟾ｨ豌ｴ豬�",
                766: "讌ｵ蟾ｨ鬟幄｡�",
                767: "讌ｵ蟾ｨ螯也ｲｾ",
                768: "讌ｵ蟾ｨ鮴埼ｨ�",
                769: "讌ｵ蟾ｨ雜��",
                770: "讌ｵ蟾ｨ蟯ｩ遏ｳ",
                771: "讌ｵ蟾ｨ螟ｧ蝨ｰ",
                772: "讌ｵ蟾ｨ諠｡髴ｸ",
                773: "讌ｵ蟾ｨ闕牙次",
                774: "讌ｵ蟾ｨ驪ｼ髏ｵ",
                775: "鬲り�辜磯浹辷�",
                776: "謦ｲ謫�",
                777: "陬晞｣ｾ",
                778: "鮠捺投",
                779: "謐慕査螟ｾ",
                780: "轣ｫ辟ｰ逅�",
                781: "蟾ｨ迯ｸ譁ｬ",
                782: "蟾ｨ迯ｸ蠖�",
                783: "豌｣蝣ｴ霈ｪ",
                784: "蟒｣蝓溽�ｴ螢�",
                785: "譛ｨ譫晉ｪ∝絢",
                786: "遐ｴ髻ｳ",
                787: "陂区棡驟ｸ",
                788: "關ｬ譛牙ｼ募鴨",
                789: "髱磯ｭり｡晄投",
                790: "逾槫･�頂豎ｽ",
                791: "逕溷多豌ｴ貊ｴ",
                792: "謾泌�ｵ",
                793: "蛛�ｷｪ逵滓寵",
                794: "豬∵弌遯∵投",
                795: "辟｡讌ｵ蜈画據",
                796: "髏ｵ雹��邱�",
                797: "蟒｣蝓滓芦蜉�",
                798: "髏ｵ貊ｾ霈ｪ",
                799: "魍怜ｰ�",
                800: "豬∵弌蜈画據",
                801: "閾りｲ晄ｭｦ蝎ｨ",
                802: "阮�悸轤ｸ陬�",
                803: "髱定拷貊第｢ｯ",
                804: "髮ｻ蜉帑ｸ雁合",
                805: "螟ｧ蝨ｰ豕｢蜍�",
                806: "辷ｬ謫�",
                807: "螯堤↓",
                808: "豢ｩ諞､",
                809: "髱磯ｨｷ",
                810: "閻占摯豌｣鬮�",
                811: "謖�ｰ�",
                812: "蠢ｫ騾滓釜霑�",
                813: "荳画雷謫�",
                814: "髮咏ｿｼ",
                815: "辭ｱ豐吝､ｧ蝨ｰ",
                816: "蜿｢譫玲ｲｻ逋�",
                817: "證怜�蠑ｷ謫�",
                818: "豌ｴ豬�｣謇�",
                819: "髮ｷ髮ｻ蝗夂ｱ�",
                820: "蟾ｨ鮴榊ｨ∬�",
                821: "蜀ｰ蜀ｷ隕也ｷ�",
                822: "諤堤↓荳ｭ辯�",
                823: "髮ｷ魑ｴ雹ｴ謫�",
                824: "髮ｪ遏�",
                825: "譏溽｢�",
                826: "隧ｭ逡ｰ蜥定ｪ�",
                827: "蜑句多辷ｪ",
                828: "螻城囿迪帶判",
                829: "蜉幃㍼霓画鋤",
                830: "蟯ｩ譁ｧ",
                831: "髯ｽ譏･鬚ｨ證ｴ",
                832: "逾樒ｧ倅ｹ句鴨",
                833: "螟ｧ諞､諷ｨ",
                834: "豕｢蜍戊｡�",
                835: "闡臥ｶ�辷�怫",
                836: "蜀ｰ螻ｱ鬚ｨ",
                837: "蜍晏茜荵玖�",
                838: "遯�｣帷憲謦ｲ",
                839: "豈貞鴻驥�",
                840: "豌｣蝣ｴ荵狗ｿｼ",
                841: "蜀､蜀､逶ｸ蝣ｱ",
                842: "髢蛾梨",
                843: "荳蛾｣邂ｭ",
                844: "鄒､鬲比ｺり�",
                845: "遘伜轄繝ｻ蜊�㍾豼､",
                846: "譫ｯ闡蛾｢ｨ證ｴ",
                847: "魑ｴ髮ｷ鬚ｨ證ｴ",
                848: "辭ｱ豐咎｢ｨ證ｴ",
                849: "譁ｰ譛育･育ｦｱ",
                850: "蜍�ｰ｣蝪ｫ蜈�",
                851: "螟ｪ譎ｶ辷�匸",
                852: "邱夐亞",
                853: "荳句｣楢ｸ｢",
                854: "謗�｢�",
                855: "逅牙�陦晄ｿ",
                856: "荳願除",
                857: "蝎ｴ蟆�教",
                858: "霎｣讀堤ｲｾ闖ｯ",
                859: "逍ｾ騾溯ｽ芽ｼｪ",
                860: "鮠�謨ｸ蜈�",
                861: "蜀ｰ譌�",
                862: "蟾ｨ蜉咲ｪ∵投",
                863: "蠕ｩ逕溽･育ｦｱ",
                864: "鮖ｽ驢�",
                865: "荳蛾｣髑ｽ",
                866: "譎ｶ蜈芽ｽ芽ｽ�",
                867: "謠冗ｹｪ",
                868: "逕ｩ閧�",
                869: "莉�脈",
                870: "蜊�ｮ願成闃ｱ",
                871: "髢�┣鬮俶ｭ�",
                872: "豬∵ｰｴ譌玖�",
                873: "諤堤央",
                874: "豺倬≡貎ｮ",
                875: "邊ｾ逾槫轄",
                876: "豌ｴ闥ｸ豌｣",
                877: "螟ｧ轣ｽ髮｣",
                878: "蜈ｨ髢狗憲謦�",
                879: "髢�崕迪幄｡�",
                880: "譁ｷ蟆ｾ",
                881: "蜀ｷ隨題ｩｱ",
                882: "螟ｧ謗�勁",
                883: "髮ｪ譎ｯ",
                884: "陝ｲ謦ｲ",
                885: "襍ｷ闕�",
                886: "貎大�豌ｴ",
                887: "蠑ｷ蜉幃多",
                888: "髮吝�譚�",
                889: "諞､諤剃ｹ区教",
                890: "骼ｧ霎ｲ轤ｮ",
                891: "謔泌ｿｵ蜉�",
                892: "髮ｻ蜈蛾尸謫�",
                893: "蟾ｨ蜉幃堅",
                894: "蠕ｩ莉�",
                895: "豌ｴ豕｢蛻",
                896: "轣ｼ辭ｱ證ｴ陦�",
                897: "鮟第囓證ｴ陦�",
                898: "蜉�ｯ呈垓陦�",
                899: "譬ｼ鬯･證ｴ陦�",
                900: "鬲疲ｳ墓垓陦�",
                901: "陦譛�",
                902: "蛻ｷ蛻ｷ闌ｶ轤ｮ",
                903: "邉匁ｼｿ轤ｸ蠖�",
                904: "譽倩陸譽�"
              },
              tokusei: {
                1: "諠｡閾ｭ",
                2: "髯埼岑",
                3: "蜉�騾�",
                4: "謌ｰ鬯･逶皮抜",
                5: "邨仙ｯｦ",
                6: "豼墓ｰ｣",
                7: "譟碑ｻ�",
                8: "豐咎坡",
                9: "髱憺崕",
                10: "闢�崕",
                11: "蜆ｲ豌ｴ",
                12: "驕ｲ驤�",
                13: "辟｡髣懷､ｩ豌｣",
                14: "隍�愍",
                15: "荳咲悛",
                16: "隶願牡",
                17: "蜈咲稔",
                18: "蠑慕↓",
                19: "魍礼ｲ�",
                20: "謌題｡梧�邏�",
                21: "蜷ｸ逶､",
                22: "螽∝嚊",
                23: "雕ｩ蠖ｱ",
                24: "邊礼ｳ咏坩閹�",
                25: "逾槫･�ｮ郁ｭｷ",
                26: "鬟�ｵｮ",
                27: "蟄｢蟄�",
                28: "蜷梧ｭ･",
                29: "諱�ｷｨ荵玖ｻ",
                30: "閾ｪ辟ｶ蝗槫ｾｩ",
                31: "驕ｿ髮ｷ驥�",
                32: "螟ｩ諱ｩ",
                33: "謔�貂ｸ閾ｪ螯�",
                34: "闡臥ｶ�邏�",
                35: "逋ｼ蜈�",
                36: "隍�｣ｽ",
                37: "螟ｧ蜉帛｣ｫ",
                38: "豈貞絢",
                39: "邊ｾ逾槫鴨",
                40: "辭泌ｲｩ骼ｧ逕ｲ",
                41: "豌ｴ蟷�",
                42: "逎∝鴨",
                43: "髫秘浹",
                44: "髮ｨ逶､",
                45: "謠壽ｲ�",
                46: "螢楢ｿｫ諢�",
                47: "蜴夊р閧ｪ",
                48: "譌ｩ襍ｷ",
                49: "轣ｫ辟ｰ荵玖ｻ",
                50: "騾�ｷ�",
                51: "驫ｳ蛻ｩ逶ｮ蜈�",
                52: "諤ｪ蜉幃於",
                53: "謦ｿ諡ｾ",
                54: "諛ｶ諠ｰ",
                55: "豢ｻ蜉�",
                56: "霑ｷ莠ｺ荵玖ｻ",
                57: "豁｣髮ｻ",
                58: "雋�髮ｻ",
                59: "髯ｰ譎ｴ荳榊ｮ�",
                60: "鮟剰送",
                61: "陋ｻ逧ｮ",
                62: "豈�鴨",
                63: "逾槫･�ｱ礼援",
                64: "豎｡豕･貍ｿ",
                65: "闌ら屁",
                66: "迪帷↓",
                67: "豼豬�",
                68: "陝ｲ荵矩�先─",
                69: "蝣�｡ｬ閻ｦ陲�",
                70: "譌･辣ｧ",
                71: "豐咏ｩｴ",
                72: "蟷ｹ蜍�",
                73: "逋ｽ濶ｲ辣咎悸",
                74: "迹應ｼｽ荵句鴨",
                75: "遑ｬ谿ｼ逶皮抜",
                76: "豌｣髢�",
                77: "雹｣霍�",
                78: "髮ｻ豌｣蠑墓梼",
                79: "鬯･辷ｭ蠢�",
                80: "荳榊ｱ井ｹ句ｿ�",
                81: "髮ｪ髫ｱ",
                82: "雋ｪ蜷�ｬｼ",
                83: "諞､諤堤ｩｴ菴�",
                84: "霈戊｣�",
                85: "閠千�",
                86: "蝟ｮ邏�",
                87: "荵ｾ辯･逧ｮ閹�",
                88: "荳玖ｼ�",
                89: "髏ｵ諡ｳ",
                90: "豈堤凾",
                91: "驕ｩ諛牙鴨",
                92: "騾｣郤梧判謫�",
                93: "豼墓ｽ､荵玖ｻ",
                94: "螟ｪ髯ｽ荵句鴨",
                95: "鬟帶ｯ幄�",
                96: "荳闊ｬ逧ｮ閹�",
                97: "迢呎投謇�",
                98: "鬲疲ｳ暮亟螳�",
                99: "辟｡髦ｲ螳�",
                100: "諷｢蜃ｺ",
                101: "謚陦馴ｫ俶焔",
                102: "闡牙ｭ宣亟螳�",
                103: "隨ｨ諡�",
                104: "遐ｴ譬ｼ",
                105: "雜�ｹｸ驕�",
                106: "蠑慕�",
                107: "蜊ｱ髫ｪ鬆千衍",
                108: "鬆千衍螟｢",
                109: "邏疲ｨｸ",
                110: "譛芽牡逵ｼ髀｡",
                111: "驕取ｿｾ",
                112: "諷｢蝠溷虚",
                113: "閹ｽ驥�",
                114: "蠑墓ｰｴ",
                115: "蜀ｰ蜃堺ｹ玖ｻ",
                116: "蝣�｡ｬ蟯ｩ遏ｳ",
                117: "髯埼妛",
                118: "謗｡陷�",
                119: "蟇溯ｦｺ",
                120: "謐ｨ霄ｫ",
                121: "螟壼ｱｬ諤ｧ",
                122: "闃ｱ荵狗ｦｮ",
                123: "螟｢鬲�",
                124: "鬆�焔迚ｽ鄒�",
                125: "蠑ｷ陦�",
                126: "蜚ｱ蜿崎ｪｿ",
                127: "邱雁ｼｵ諢�",
                128: "荳肴恪霈ｸ",
                129: "霆溷ｼｱ",
                130: "隧帛鋳荵玖ｻ",
                131: "豐ｻ逋剃ｹ句ｿ�",
                132: "蜿区ュ髦ｲ螳�",
                133: "遒手｣る而逕ｲ",
                134: "驥埼≡螻ｬ",
                135: "霈暮≡螻ｬ",
                136: "螟夐㍾魍礼援",
                137: "荳ｭ豈呈ｿ蜊�",
                138: "蜿礼�豼蜊�",
                139: "謾ｶ遨ｫ",
                140: "蠢�揶諢滓㊨",
                141: "蠢�ュ荳榊ｮ�",
                142: "髦ｲ蝪ｵ",
                143: "豈呈焔",
                144: "蜀咲函蜉�",
                145: "蛛･螢ｯ閭ｸ閧�",
                146: "謦･豐�",
                147: "螂�ｷ｡逧ｮ閹�",
                148: "蛻�梵",
                149: "蟷ｻ隕ｺ",
                150: "隶願ｺｫ閠�",
                151: "遨ｿ騾�",
                152: "譛ｨ荵�ｼ�",
                153: "閾ｪ菫｡驕主ｺｦ",
                154: "豁｣鄒ｩ荵句ｿ�",
                155: "閹ｽ諤ｯ",
                156: "鬲疲ｳ暮升",
                157: "鬟溯拷",
                158: "諠｡菴懷括荵句ｿ�",
                159: "豐吩ｹ句鴨",
                160: "髏ｵ蛻ｺ",
                161: "驕疲束讓｡蠑�",
                162: "蜍晏茜荵区弌",
                163: "貂ｦ霈ｪ轣ｫ辟ｰ",
                164: "蜈�ｴ夐崕螢�",
                165: "闃ｳ鬥吝ｹ�",
                166: "闃ｱ蟷�",
                167: "鬆ｰ蝗�",
                168: "隶雁ｹｻ閾ｪ螯�",
                169: "豈帷坩螟ｧ陦｣",
                170: "鬲碑｡灘ｸｫ",
                171: "髦ｲ蠖�",
                172: "螂ｽ蜍�",
                173: "蠑ｷ螢ｯ荵矩｡�",
                174: "蜀ｰ蜃咲坩閹�",
                175: "逕懷ｹ�",
                176: "謌ｰ鬯･蛻�鋤",
                177: "逍ｾ鬚ｨ荵狗ｿｼ",
                178: "雜�ｴ夂匸蟆�勣",
                179: "闕我ｹ区ｯ帷坩",
                180: "蜈ｱ逕�",
                181: "遑ｬ辷ｪ",
                182: "螯也ｲｾ逧ｮ閹�",
                183: "鮟乗ｻ�",
                184: "鬟幄｡檎坩閹�",
                185: "隕ｪ蟄先�",
                186: "證鈴ｻ第ｰ｣蝣ｴ",
                187: "螯也ｲｾ豌｣蝣ｴ",
                188: "豌｣蝣ｴ遐ｴ螢�",
                189: "蟋区ｺ蝉ｹ区ｵｷ",
                190: "邨らｵ蝉ｹ句慍",
                191: "蠕ｷ辷ｾ蝪疲ｰ｣豬�",
                192: "謖∽ｹ�鴨",
                193: "霄崎ｺ肴ｬｲ騾�",
                194: "蜊ｱ髫ｪ霑ｴ驕ｿ",
                195: "驕�ｰｴ蜃晏崋",
                196: "荳堺ｻ∽ｸ咲ｾｩ",
                197: "逡碁剞逶ｾ谿ｼ",
                198: "逶｣隕�",
                199: "豌ｴ豕｡",
                200: "驪ｼ閭ｽ蜉幄�",
                201: "諤堤↓豐門､ｩ",
                202: "謦･髮ｪ",
                203: "驕�髫�",
                204: "豼墓ｽ､荵玖�",
                205: "蜈郁｡梧ｲｻ逋�",
                206: "髮ｻ豌｣逧ｮ閹�",
                207: "陦晄ｵｪ荵句ｰｾ",
                208: "鬲夂ｾ､",
                209: "逡ｫ逧ｮ",
                210: "迚ｽ邨�ｮ願ｺｫ",
                211: "鄒､閨夊ｮ雁ｽ｢",
                212: "閻占摯",
                213: "邨募ｰ咲擅逵�",
                214: "螂ｳ邇狗噪螽∝垓",
                215: "鬟帛�逧��蝨ｨ迚ｩ",
                216: "闊櫁�",
                217: "闢�崕豎�",
                218: "豈幄減闌ｸ",
                219: "魄ｮ濶ｷ荵玖ｻ",
                220: "鬲ょｿ�",
                221: "謐ｲ鬮ｮ",
                222: "謗･逅�焔",
                223: "蛹門ｭｸ荵句鴨",
                224: "逡ｰ迯ｸ謠仙合",
                225: "�｡�ｲ邉ｻ邨ｱ",
                226: "髮ｻ豌｣陬ｽ騾�閠�",
                227: "邊ｾ逾櫁｣ｽ騾�閠�",
                228: "阮�悸陬ｽ騾�閠�",
                229: "髱定拷陬ｽ騾�閠�",
                230: "驥大ｱｬ髦ｲ隴ｷ",
                231: "蟷ｻ蠖ｱ髦ｲ螳�",
                232: "遞憺升陬晉抜",
                233: "閻ｦ譬ｸ荵句鴨",
                234: "荳肴駐荵句轄",
                235: "荳榊ｱ井ｹ狗崟",
                236: "閾ｪ逕ｱ閠�",
                237: "謦ｿ逅�",
                238: "譽臥ｵｮ",
                239: "陞ｺ譌句ｰｾ魏ｭ",
                240: "髀｡逕ｲ",
                241: "荳蜿｣鬟帛ｽ�",
                242: "蝣�ｯ�",
                243: "闥ｸ豎ｽ讖�",
                244: "鮴仙�謳匁ｻｾ",
                245: "蜷先ｲ�",
                246: "蜀ｰ魍礼ｲ�",
                247: "辭滓�",
                248: "邨仙㍾鬆ｭ",
                249: "閭ｽ驥城ｻ�",
                250: "謫ｬ諷�",
                251: "髯､髫�",
                252: "驪ｼ荵区э蠢�",
                253: "貊�ｺ｡荵玖ｻ",
                254: "驕企ｭ�",
                255: "荳迪ｩ荳諢�",
                256: "蛹門ｭｸ隶雁喧豌｣鬮�",
                257: "邊牙ｽｩ隴ｷ蟷�",
                258: "鬟ｽ莠�処鬢�",
                259: "騾滓投",
                260: "辟｡蠖｢諡ｳ",
                261: "諤ｪ阯･",
                262: "髮ｻ譎ｶ鬮�",
                263: "鮴埼｡�",
                264: "闥ｼ逋ｽ蝌ｶ魑ｴ",
                265: "貍�ｻ大亳魑ｴ",
                266: "莠ｺ鬥ｬ荳鬮�",
                267: "莠ｺ鬥ｬ荳鬮�",
                268: "逕ｩ荳肴脂逧�ｰ｣蜻ｳ",
                269: "謗牙�遞ｮ蟄�",
                270: "辭ｱ莠､謠�",
                271: "諞､諤堤抜谿ｼ",
                272: "貎疲ｷｨ荵矩ｹｽ",
                273: "辟ｦ鬥吩ｹ玖ｻ",
                274: "荵倬｢ｨ",
                275: "逵矩摩迥ｬ",
                276: "謳ｬ蟯ｩ",
                277: "鬚ｨ蜉帷匸髮ｻ",
                278: "蜈ｨ閭ｽ隶願ｺｫ",
                279: "逋ｼ陌滓命莉､",
                280: "髮ｻ蜉幄ｽ画鋤",
                281: "蜿､莉｣豢ｻ諤ｧ",
                282: "螟ｸ蜈句�閭ｽ",
                283: "鮟�≡荵玖ｻ",
                284: "轣ｽ遖堺ｹ矩ｼ�",
                285: "轣ｽ遖堺ｹ句轄",
                286: "轣ｽ遖堺ｹ狗ｰ｡",
                287: "轣ｽ遖堺ｹ狗脂",
                288: "邱狗ｴ�ц蜍�",
                289: "蠑ｷ蟄仙ｼ墓梼",
                290: "霍滄｢ｨ",
                291: "蜿崎棺",
                292: "驪帝患",
                293: "螟ｧ蟆�",
                294: "蜷悟床蜈ｱ貍�",
                295: "豈呈ｻｿ蝨ｰ",
                296: "蟆ｾ逕ｲ",
                297: "鬟溷悄",
                298: "闖檎ｵｲ荵句鴨",
                299: "谺ｾ蠕�",
                300: "蠢�愍",
                301: "髱｢蠖ｱ霈晄丐",
                302: "髱｢蠖ｱ霈晄丐",
                303: "髱｢蠖ｱ霈晄丐",
                304: "髱｢蠖ｱ霈晄丐",
                305: "豈帝事髀�",
                306: "逕倬愆荵玖惧"
              },
              seikaku: {
                0: "蜍､螂ｮ",
                1: "諤募ｯょｯ�",
                2: "蜍�覆",
                3: "蝗ｺ蝓ｷ",
                4: "鬆醍坩",
                5: "螟ｧ閹ｽ",
                6: "蝮ｦ邇�",
                7: "謔�髢�",
                8: "豺俶ｰ｣",
                9: "讓ょ､ｩ",
                10: "閹ｽ蟆�",
                11: "諤･霄�",
                12: "隱咲悄",
                13: "辷ｽ譛�",
                14: "螟ｩ逵�",
                15: "蜈ｧ譁�",
                16: "諷｢蜷槫裾",
                17: "蜀ｷ髱�",
                18: "螳ｳ鄒�",
                19: "鬥ｬ陌�",
                20: "貅ｫ蜥�",
                21: "貅ｫ鬆�",
                22: "閾ｪ螟ｧ",
                23: "諷朱㍾",
                24: "豬ｮ霄�"
              }
            }
          }
        };
        break;
      default:
        e = new i
      }
      const a = e;
      this.lang = a.pages, this.common = a.common, this.dex = a.dex, this.init()
    }
    init() {
      let e = {};
      switch (pageKey) {
      case "t_rankmatch":
        e = this.lang.t_rankmatchPageTexts;
        break;
      case "t_my_rankmatch":
        e = this.lang.t_my_rankmatchPageTexts;
        break;
      case "t_pokemonranking":
        e = this.lang.t_pokemonrankingPageTexts;
        break;
      case "t_internetcompetition":
        e = this.lang.t_internetcompetitionPageTexts;
        break;
      case "t_internetcompetition_detail":
        e = this.lang.t_internetcompetition_detailPageTexts;
        break;
      case "t_my_internetcompetition_detail":
        e = this.lang.t_my_internetcompetition_detailPageTexts;
        break;
      case "t_friendcompetition":
        e = this.lang.t_friendcompetitionPageTexts;
        break;
      case "t_my_friendcompetition":
        e = this.lang.t_my_friendcompetitionPageTexts;
        break;
      case "t_friendcompetition_detail":
        e = this.lang.t_friendcompetition_detailPageTexts;
        break;
      case "t_my_friendcompetition_detail":
        e = this.lang.t_my_friendcompetition_detailPageTexts;
        break;
      case "t_battle_team":
        e = this.lang.t_battle_teamPageTexts;
        break;
      case "t_mydataselect":
        e = this.lang.t_mydataselectPageTexts;
        break;
      case "t_tournament_detail":
        e = this.lang.t_tournament_detailPageTexts;
        break;
      case "top":
        e = this.lang.topPageTexts;
        break;
      case "myresult_top":
        e = this.lang.myresult_topPageTexts;
        break;
      case "myresult_romselect":
        e = this.lang.myresult_romselectPageTexts;
        break;
      case "myresult_rankmatch":
        e = this.lang.myresult_rankmatchPageTexts;
        break;
      case "my_internetcompetition_list":
        e = this.lang.my_internetcompetition_listPageTexts;
        break;
      case "my_internetcompetition_detail":
        e = this.lang.my_internetcompetition_detailPageTexts;
        break;
      case "friendcompetition_list":
        e = this.lang.friendcompetition_listPageTexts;
        break;
      case "friendcompetition_detail":
        e = this.lang.friendcompetition_detailPageTexts;
        break;
      case "rankmatch_detail":
        e = this.lang.rankmatch_detailPageTexts;
        break;
      case "internetcompetition_list":
        e = this.lang.internetcompetition_listPageTexts;
        break;
      case "internetcompetition_detail":
        e = this.lang.internetcompetition_detailPageTexts;
        break;
      case "battle_team":
        e = this.lang.battle_teamPageTexts;
        break;
      case "regulation_list":
        e = this.lang.regulation_listPageTexts;
        break;
      case "regulation_pokelist":
        e = this.lang.regulation_pokelistPageTexts;
        break;
      case "event_calendar":
        e = this.lang.event_calendar;
        break;
      case "rankmatch_pokemonranking_detail":
        e = this.lang.rankmatch_pokemonranking_detailPageTexts;
        break;
      case "internetcompetition_pokemonranking_detail":
        e = this.lang.internetcompetition_pokemonranking_detail;
        break;
      case "friendcompetition_pokemonranking_detail":
        e = this.lang.friendcompetition_pokemonranking_detail;
        break;
      case "my_friendcompetition_detail":
        e = this.lang.my_friendcompetition_detailPageTexts;
        break;
      case "tournament_list":
        e = this.lang.tournament_listPageTexts;
        break;
      case "tournament_detail":
        e = this.lang.tournament_detailPageTexts
      }
      for (let t in e) $(t).html(e[t]);
      this.t_commonInit(), this.commonInit()
    }
    commonInit() {
      let e = this.common;
      for (let t in e.ui_texts) $(t).html(e.ui_texts[t])
    }
    t_commonInit() {
      if ("undefined" != typeof targetKey && "t" === targetKey) {
        let e = this.lang.t_common;
        for (let t in e) $(t).html(e[t])
      }
    }
    GetPokeName(e) {
      return void 0 === this.dex.poke[e - 1] ? e : this.dex.poke[e - 1]
    }
  }
  const l = {
    share: {},
    myInfo: {
      playInfo: {}
    },
    rankmatchInfo: {},
    internetCompeInfo: {},
    regulationInfo: {},
    eventCalendar: {},
    tournamentDetail: {},
    tournamentList: [],
    tournamentDic: {},
    tournamentMyInfo: {
      isLoggedin: !1
    }
  };
  class r {
    constructor(e) {
      this.now = e;
      let t = localStorage.getItem("udversion"),
        a = Math.floor(e / window.refreshTime);
      null == t && (t = 0);
      let n = !1,
        i = localStorage.getItem("lcc"),
        o = localStorage.getItem("ulcc");
      null != o && 0 != o || (o = 0), i > o && (n = !0), localStorage.getItem("dlcc") > 0 && (n = !0), t = parseInt(t, 10), a > t || n ? (this.load(), localStorage.setItem("udversion", a), this.ud.myInfo.playInfo = {}, this.ud.rankmatchInfo = {}, this.ud.internetCompeInfo = {}, this.ud.regulationInfo = {}, this.ud.eventCalendar = {}, this.tournamentDetail = {}, this.tournamentList = [], this.tournamentDic = {}, this.ud.tournamentMyInfo = {
        isLoggedin: !1
      }, localStorage.setItem("ulcc", i), localStorage.setItem("dlcc", 0), this.save()) : this.load()
    }
    load() {
      let e = LZString.decompress(localStorage.getItem("ud"));
      0 !== e.length ? (this.ud = JSON.parse(e), void 0 !== this.ud.tournamentList && void 0 !== this.ud.tournamentDetail || (this.ud = l)) : this.ud = l
    }
    save() {
      localStorage.setItem("ud", LZString.compress(JSON.stringify(this.ud)))
    }
    setCacheExpire(e, t, a) {
      a = void 0 === a ? window.tournamentUDRefreshTime : a;
      const n = Math.floor((new Date).getTime() / 1e3);
      void 0 === this.isEnableCacheDic && (this.isEnableCacheDic = {}), this.isEnableCacheDic[e + "_" + t] = n + a
    }
    isEnableCache(e, t) {
      const a = Math.floor((new Date).getTime() / 1e3);
      return void 0 !== this.isEnableCacheDic && (void 0 !== this.isEnableCacheDic[e + "_" + t] && this.isEnableCacheDic[e + "_" + t] >= a)
    }
    isLoggedin() {
      return this.ud.share.isLoggedin
    }
    login(e) {
      const t = this;
      if (e = void 0 === e ? function () {} : e, 0 == Object.keys(this.ud.myInfo.playInfo).length) {
        const a = util.token();
        if (null == a || "" == a) return void e();
        util.request("/bd/playinfo/trainer", {}, (function (a) {
          let n = 0;
          for (let e in a.trainer) t.ud.myInfo.playInfo[e] = {}, t.ud.myInfo.playInfo[e].icon = a.trainer[e].icon, t.ud.myInfo.playInfo[e].name = a.trainer[e].name, t.ud.myInfo.playInfo[e].sex = a.trainer[e].sex, t.ud.myInfo.playInfo[e].lang = a.trainer[e].langcode, t.ud.myInfo.playInfo[e].iconImg = a.trainer[e].iconImg, n++;
          if (0 === n) t.ud.share.isLoggedin = !0, t.save(), util.locationMove("./top.html");
          else if (1 === n) {
            t.ud.share.romCnt = n, t.ud.share.isLoggedin = !0;
            let a = Object.keys(t.ud.myInfo.playInfo)[0];
            t.ud.share.selectRom = a, t.save(), e()
          } else t.ud.share.romCnt = n, t.ud.share.isLoggedin = !0, t.save(), e()
        }))
      } else e()
    }
    tournament_login(e) {
      const t = this;
      if (e = void 0 === e ? function () {} : e, 0 == Object.keys(this.ud.myInfo.playInfo).length) {
        const a = util.token();
        if (null == a || "" == a) return void e(!1);
        util.request_tournament("/bd/playinfo/trainer", {}, (function (a) {
          200 == a.code ? (t.ud.tournamentMyInfo.isLoggedin = !0, t.save(), e(!0)) : (console.log("login error."), t.ud.tournamentMyInfo.isLoggedin = !1, e(!1))
        }))
      } else t.ud.tournamentMyInfo.isLoggedin || (t.ud.tournamentMyInfo.isLoggedin = !0, t.save()), e(!0)
    }
    load_internetcompe_list(e, t, a) {
      const n = this;
      if (t = void 0 !== t && t, e = null === e ? "Sw" : e, a = void 0 === a ? function () {} : a, "__finish__" == n.internetcompe_list_lastKey) return a(), !1;
      const i = {};
      return 0 == Object.keys(this.ud.internetCompeInfo) || t ? (void 0 === this.internetcompe_list_lastKey ? i.soft = e : (i.soft = e, i.lastKey = this.internetcompe_list_lastKey), util.request_tournament("/cbd/competition/internet/list", i, (function (e) {
        void 0 === n.ud.internetCompeInfo && (n.ud.internetCompeInfo = {});
        const t = Object.keys(e.list.list);
        for (let a in t) n.ud.internetCompeInfo[t[a]] = e.list.list[t[a]], n.ud.internetCompeInfo[t[a]].cId = t[a];
        "" == e.list.lastKey ? n.internetcompe_list_lastKey = "__finish__" : n.internetcompe_list_lastKey = e.list.lastKey, n.save(), a()
      }))) : a(), !0
    }
    load_friendcompe_list(e, t, a) {
      const n = this;
      if (t = void 0 !== t && t, e = null === e ? "Sw" : e, a = void 0 === a ? function () {} : a, "__finish__" == n.friendcompe_list_lastKey) return a(), !1;
      const i = {};
      return void 0 === this.ud.myInfo.playInfo[e].friendCompe || t ? (void 0 === this.friendcompe_list_lastKey ? i.soft = e : (i.soft = e, i.lastKey = this.friendcompe_list_lastKey), util.request("/bd/playinfo/friend/list", i, (function (t) {
        void 0 === n.ud.myInfo.playInfo[e].friendCompe && (n.ud.myInfo.playInfo[e].friendCompe = {});
        for (let a in t.list) n.ud.myInfo.playInfo[e].friendCompe[t.list[a].cId] = t.list[a];
        "" == t.list.lastKey ? n.friendcompe_list_lastKey = "__finish__" : n.friendcompe_list_lastKey = t.list.lastKey, n.save(), a()
      }))) : a(), !0
    }
    load_friendcompe_detail(e, t, a) {
      const n = this;
      if (a = void 0 === a ? function () {} : a, void 0 === this.ud.myInfo.playInfo[e].friendCompe[t].result) {
        const i = {
          soft: e,
          competitionId: t
        };
        util.request("/bd/playinfo/firendbattlelog", i, (function (i) {
          n.ud.myInfo.playInfo[e].friendCompe[t].result = i.result, n.ud.myInfo.playInfo[e].friendCompe[t].log = i.log, n.save(), a()
        }))
      } else a()
    }
    load_rankmatch_list(e, t) {
      const a = this;
      t = void 0 === t ? function () {} : t;
      const n = {
        soft: e = null == e ? "Sw" : e
      };
      0 == Object.keys(this.ud.rankmatchInfo) ? util.request("/cbd/competition/rankmatch/list", n, (function (e) {
        a.ud.rankmatchInfo = {};
        const n = Object.keys(e.list);
        for (let t in n) {
          void 0 === a.ud.rankmatchInfo[n[t]] && (a.ud.rankmatchInfo[n[t]] = {});
          const i = Object.keys(e.list[n[t]]);
          for (let o in i) 0 == e.list[n[t]][i[o]].rule ? (a.ud.rankmatchInfo[n[t]].single = e.list[n[t]][i[o]], a.ud.rankmatchInfo[n[t]].single.cId = i[o]) : 1 == e.list[n[t]][i[o]].rule && (a.ud.rankmatchInfo[n[t]].double = e.list[n[t]][i[o]], a.ud.rankmatchInfo[n[t]].double.cId = i[o])
        }
        a.save(), t()
      })) : t()
    }
    load_my_internetcompe_list(e, t, a) {
      const n = this;
      if (t = void 0 !== t && t, a = void 0 === a ? function () {} : a, "__finish__" == n.my_internetcompe_list_lastKey) return a(), !1;
      const i = {};
      return void 0 === n.ud.myInfo.playInfo[e].internetCompe || t ? (void 0 === n.my_internetcompe_list_lastKey ? i.soft = e : (i.soft = e, i.lastKey = n.my_internetcompe_list_lastKey), util.request("/bd/playinfo/internet/list", i, (function (t) {
        void 0 === n.ud.myInfo.playInfo[e].internetCompe && (n.ud.myInfo.playInfo[e].internetCompe = {});
        for (let a in t.list) n.ud.myInfo.playInfo[e].internetCompe[t.list[a].cId] = t.list[a];
        let i = !1;
        const o = Object.keys(n.ud.myInfo.playInfo[e].internetCompe);
        for (let e in o)
          if (void 0 === n.ud.internetCompeInfo[e]) {
            i = !0;
            break
          }
        if (i) {
          ! function l(r) {
            n.load_internetcompe_list(e, !0, (function () {
              i = !1;
              for (let e in o)
                if (void 0 === n.ud.internetCompeInfo[e]) {
                  i = !0;
                  break
                }!i && r > 0 ? l(o, --r) : ("" == t.lastKey ? n.my_internetcompe_list_lastKey = "__finish__" : n.my_internetcompe_list_lastKey = t.lastKey, n.save(), a())
            }))
          }(5)
        } else "" == t.lastKey ? n.my_internetcompe_list_lastKey = "__finish__" : n.my_internetcompe_list_lastKey = t.lastKey, n.save(), a()
      }))) : a(), !0
    }
    load_my_internetcompe_detail(e, t, a) {
      const n = this;
      if (a = void 0 === a ? function () {} : a, void 0 !== n.ud.myInfo.playInfo[e].internetCompe[t])
        if (void 0 === n.ud.myInfo.playInfo[e].internetCompe[t].result) {
          const i = {
            soft: e,
            competitionId: t
          };
          util.request("/bd/playinfo/internet/result", i, (function (i) {
            n.ud.myInfo.playInfo[e].internetCompe[t].result = i.result, n.save(), a()
          }))
        } else a();
      else a()
    }
    load_myresult_rankmatch(e, t, a) {
      const n = this;
      a = void 0 === a ? function () {} : a;
      const i = {
        soft: e,
        season: t
      };
      void 0 === n.ud.myInfo.playInfo[e].rankmatch && (n.ud.myInfo.playInfo[e].rankmatch = {}), void 0 === n.ud.myInfo.playInfo[e].rankmatch[t] ? (n.ud.myInfo.playInfo[e].rankmatch[t] = {}, this.load_rankmatch_list(e, (function () {
        util.request("/bd/playinfo/rankmatch/result", i, (function (i) {
          const o = Object.keys(i.result);
          n.ud.myInfo.playInfo[e].rankmatch[t] = {};
          for (let a in o) n.ud.rankmatchInfo[t].single.cId == o[a] ? (n.ud.myInfo.playInfo[e].rankmatch[t].single = i.result[o[a]], n.ud.myInfo.playInfo[e].rankmatch[t].single.cId = o[a]) : n.ud.rankmatchInfo[t].double.cId == o[a] && (n.ud.myInfo.playInfo[e].rankmatch[t].double = i.result[o[a]], n.ud.myInfo.playInfo[e].rankmatch[t].double.cId = o[a]);
          n.save(), a()
        }))
      }))) : a()
    }
    load_history(e, t, a, n, i) {
      const o = this;
      if (n = void 0 !== n && n, i = void 0 === i ? function () {} : i, null == this.compe_lastKey && (this.compe_lastKey = {}), "_finish_" == o.compe_lastKey[a]) return void i();
      const l = {};
      void 0 === e.history || n ? (void 0 === e.history && (e.history = []), void 0 === this.compe_lastKey[a] ? (l.soft = t, l.competitionId = a) : (l.soft = t, l.competitionId = a, l.lastKey = this.compe_lastKey[a]), util.request("/bd/playinfo/battleLog", l, (function (t) {
        for (let a in t.log) e.history.push(t.log[a]);
        "" == t.lastKey && o.compe_lastKey[a], o.compe_lastKey[a] = t.lastKey, o.save(), i()
      }))) : i()
    }
    load_eventcalendar(e) {
      const t = this;
      var a = util.langCode(),
        n = util.countryCode(),
        i = window.now;
      if (this.ud.eventCalendar.hasOwnProperty(a) && this.ud.eventCalendar[a].hasOwnProperty(n) && t.ud.eventCalendar[a][n].ets >= i) return e(), !0;
      util.request("/cbd/eventcalendar", {}, (function (i) {
        void 0 === t.ud.eventCalendar && (t.ud.eventCalendar = {}), void 0 === t.ud.eventCalendar[a] && (t.ud.eventCalendar[a] = {}), t.ud.eventCalendar[a][n] = {
          list: i.list,
          tz: i.tz,
          ets: i.ets
        }, t.save(), e()
      }))
    }
    load_tournament_list(e, t) {
      const a = this,
        n = void 0 !== e.moreFlg && e.moreFlg;
      t = void 0 === t ? function () {} : t;
      const i = a.ud.tournamentMyInfo.isLoggedin;
      if ("__finish__" == a.tournament_list_lastKey) return t(), !0;
      if (this.ud.tournamentList.length > 0 && !n && a.isEnableCache("load_tournament_list", "tournament_list")) return void t();
      const o = {
        limit: 10
      };
      void 0 !== this.tournament_list_lastKey && (o.last = {
        st: this.tournament_list_lastKey.start,
        ed: this.tournament_list_lastKey.end,
        suf: this.tournament_list_lastKey.suf
      });
      let l = "";
      l = i ? "/bd/tournament/competition/list" : "/cbd/tournament/competition/list", util.request_tournament(l, o, (function (e) {
        if (200 == e.code) {
          a.setCacheExpire("load_tournament_list", "tournament_list"), n || (a.ud.tournamentDic = {}, a.ud.tournamentList = []);
          for (let t in e.list) i && (e.list[t].myStatus = void 0 === e.list[t].myStatus ? 0 : e.list[t].myStatus), a.ud.tournamentDic[e.list[t].cmpid] = t, a.ud.tournamentList.push(e.list[t]);
          e.list.length < 10 ? a.tournament_list_lastKey = "__finish__" : a.tournament_list_lastKey = e.list[e.list.length - 1].period, a.save(), t()
        } else console.log("error: " + l + ", " + e.code + ", " + e.detail), t()
      }))
    }
    load_tournament_detail(e, t) {
      const a = this,
        n = e.compeId;
      t = void 0 === t ? function () {} : t;
      const i = a.ud.tournamentMyInfo.isLoggedin;
      if (void 0 !== a.ud.tournamentDetail[n] && a.isEnableCache("load_tournament_detail", n)) return void t();
      let o = "";
      o = i ? "/bd/tournament/competition/detail" : "/cbd/tournament/competition/detail";
      const l = {
        compeId: n,
        getClosed: !0
      };
      util.request_tournament(o, l, (function (e) {
        if (200 == e.code) {
          if (void 0 === a.ud.tournamentDetail[n]) a.ud.tournamentDetail[n] = e.compeDetail;
          else
            for (let t in e.compeDetail) a.ud.tournamentDetail[n][t] = e.compeDetail[t];
          a.setCacheExpire("load_tournament_detail", n), i && (a.ud.tournamentDetail[n].myStatus = void 0 === e.compeDetail.myStatus ? 0 : e.compeDetail.myStatus), a.save()
        } else console.log("error: " + o + ", " + e.code + ", " + e.detail);
        t()
      }))
    }
    load_tournament_playersList(e, t) {
      const a = this,
        n = e.compeId;
      t = void 0 === t ? function () {} : t;
      const i = a.ud.tournamentMyInfo.isLoggedin;
      if (void 0 === a.ud.tournamentDetail[n]) return console.error("tournament detail nothing."), void t(null);
      if (void 0 !== a.ud.tournamentDetail[n].players_list && a.isEnableCache("load_tournament_playersList", n)) return void t(a.ud.tournamentDetail[n].players_list);
      let o = "";
      o = i ? "/bd/tournament/players-list" : "/cbd/tournament/players-list";
      const l = {
        competitionId: n
      };
      util.request_tournament(o, l, (function (e) {
        200 == e.code ? (a.setCacheExpire("load_tournament_playersList", n), e.list = void 0 === e.list ? [] : e.list, a.ud.tournamentDetail[n].players_list = e.list, a.ud.tournamentDetail[n].eCnt = e.eCnt, a.save()) : console.log("error: " + o + ", " + e.code + ", " + e.detail), t(e.list)
      }))
    }
    load_tournament_matchList(e, t) {
      const a = this;
      let n = window.tournamentUDRefreshTime;
      const i = e.compeId;
      t = void 0 === t ? function () {} : t;
      const o = a.ud.tournamentMyInfo.isLoggedin;
      if (void 0 === a.ud.tournamentDetail[i]) return console.error("tournament detail nothing."), void t(null);
      if (void 0 !== a.ud.tournamentDetail[i].match_list && a.isEnableCache("load_tournament_matchList", i)) return void t(a.ud.tournamentDetail[i].match_list);
      let l = "";
      o ? (l = "/bd/tournament/match-list", n = 5) : l = "/cbd/tournament/match-list";
      const r = {
        competitionId: i
      };
      util.request_tournament(l, r, (function (e) {
        200 == e.code ? (a.setCacheExpire("load_tournament_matchList", i, n), e.matchList = void 0 === e.matchList ? null : e.matchList, a.ud.tournamentDetail[i].match_list = e.matchList, a.save()) : console.log("error: " + l + ", " + e.code + ", " + e.detail), t(e.matchList)
      }))
    }
    load_tournament_infomationList(e, t) {
      const a = this,
        n = e.compeId;
      if (t = void 0 === t ? function () {} : t, void 0 === a.ud.tournamentDetail[n]) return console.error("tournament detail nothing."), void t(null);
      if (void 0 !== a.ud.tournamentDetail[n].info_list && a.isEnableCache("load_tournament_infomationList", n)) return void t(a.ud.tournamentDetail[n].info_list);
      let i = "/cbd/tournament/competition/info";
      const o = {
        competitionId: n
      };
      util.request_tournament(i, o, (function (e) {
        200 == e.code ? (a.setCacheExpire("load_tournament_infomationList", n), a.ud.tournamentDetail[n].info_list = e.result, a.save()) : console.log("error: " + i + ", " + e.code + ", " + e.detail), t(e.result)
      }))
    }
    tournament_entry(e, t) {
      const a = this,
        n = e.compeId;
      t = void 0 === t ? function () {} : t;
      if (!a.ud.tournamentMyInfo.isLoggedin) return console.error("tournament auth error."), void t(null);
      if (void 0 === a.ud.tournamentDetail[n]) return console.error("tournament detail nothing."), void t(null);
      const i = {
        competitionId: n
      };
      util.request_tournament("/bd/tournament/entry", i, (function (e) {
        200 == e.code ? (a.setCacheExpire("tournament_entry", n), a.ud.tournamentDetail[n].myStatus = 1, a.save(), t(!0)) : (11e3 == e.detail && console.log("you have entried."), 11001 == e.detail && console.log("entry over limit."), 11002 == e.detail && console.log("out of term."), console.log("error: /bd/tournament/entry, " + e.code + ", " + e.detail), t(null))
      }))
    }
    tournament_registerTeam(e, t) {
      const a = this,
        n = e.compeId,
        i = e.teamId;
      t = void 0 === t ? function () {} : t;
      if (!a.ud.tournamentMyInfo.isLoggedin) return console.error("tournament auth error."), void t(null);
      if (void 0 === a.ud.tournamentDetail[n]) return console.error("tournament detail nothing."), void t(null);
      let o = "/bd/tournament/registerteam";
      const l = {
        competitionId: n,
        teamId: i
      };
      util.request_tournament(o, l, (function (e) {
        200 == e.code ? (a.setCacheExpire("tournament_registerTeam", n), a.ud.tournamentDetail[n].myTeamId = i, a.save(), t(!0)) : (10001 == e.detail && console.log("team is nothing."), 10999 == e.detail && console.log("updated tournament info."), 11102 == e.detail && console.log("you have not entried."), 11103 == e.detail && console.log("out of term."), 11105 == e.detail && console.log("already checkedin."), console.log("error: " + o + ", " + e.code + ", " + e.detail), t(null))
      }))
    }
    tournament_checkin(e, t) {
      const a = this,
        n = e.compeId,
        i = e.teamId;
      t = void 0 === t ? function () {} : t;
      if (!a.ud.tournamentMyInfo.isLoggedin) return console.error("tournament auth error."), void t(null);
      if (void 0 === a.ud.tournamentDetail[n]) return console.error("tournament detail nothing."), void t(null);
      const o = {
        competitionId: n,
        teamId: i
      };
      util.request_tournament("/bd/tournament/checkin", o, (function (e) {
        200 == e.code ? (a.setCacheExpire("tournament_checkin", n), a.ud.tournamentDetail[n].myStatus = 2, a.save(), t(!0)) : (10001 == e.detail && console.log("team is nothing."), 10999 == e.detail && console.log("updated tournament info."), 11101 == e.detail && console.log("over limit."), 11102 == e.detail && console.log("you have not entried."), 11103 == e.detail && console.log("out of term."), 11104 == e.detail && console.log("team data nothing."), console.log("error: /bd/tournament/checkin, " + e.code + ", " + e.detail), t(null))
      }))
    }
    get_tournament_matchcard(e, t) {
      const a = this,
        n = e.compeId,
        i = void 0 === e.round ? null : e.round,
        o = void 0 === e.battle ? null : e.battle;
      t = void 0 === t ? function () {} : t;
      if (!a.ud.tournamentMyInfo.isLoggedin) return console.error("tournament auth error."), void t(null);
      if (void 0 === a.ud.tournamentDetail[n]) return console.error("tournament detail nothing."), void t(null);
      if (6 != a.ud.tournamentDetail[n].competitionStatus || 4 != a.ud.tournamentDetail[n].myStatus) return a.ud.tournamentDetail[n].matchcard = {}, a.ud.tournamentDetail[n].matchcard.prepare = {
        me: 0,
        op: 0
      }, void t(null);
      if (void 0 !== a.ud.tournamentDetail[n].matchcard && void 0 !== a.ud.tournamentDetail[n].matchcard.trainer && a.isEnableCache("get_tournament_matchcard", n)) return void t(a.ud.tournamentDetail[n].matchcard);
      const l = {
        compeId: n
      };
      null != i && null != o && (l.round = i, l.battle = o), util.request_tournament("/bd/tournament/matchcard", l, (function (e) {
        200 == e.code ? (a.setCacheExpire("get_tournament_matchcard", n, 2), a.ud.tournamentDetail[n].matchcard = {}, a.ud.tournamentDetail[n].matchcard.trainer = e.trainer, a.ud.tournamentDetail[n].matchcard.passwd = e.passwd, a.ud.tournamentDetail[n].matchcard.prepare = e.prepare, a.ud.tournamentDetail[n].matchcard.myFid = e.myFid, a.ud.tournamentDetail[n].matchcard.round = e.round, a.ud.tournamentDetail[n].matchcard.battle = e.battle, a.ud.tournamentDetail[n].matchcard.myData = e.myData, a.ud.tournamentDetail[n].matchcard.pwlst = e.pwlst, a.ud.tournamentDetail[n].matchcard.readyTm = e.readyTm, a.ud.tournamentDetail[n].matchcard.rdSt = e.rdSt, a.save(), t(!0)) : (console.log("error: /bd/tournament/matchcard, " + e.code + ", " + e.detail), t(null))
      }))
    }
    tournament_resetpass(e, t) {
      const a = this,
        n = e.compeId,
        i = e.passwd,
        o = void 0 === e.round ? null : e.round,
        l = void 0 === e.battle ? null : e.battle;
      t = void 0 === t ? function () {} : t;
      if (!a.ud.tournamentMyInfo.isLoggedin) return console.error("tournament auth error."), void t(null);
      if (void 0 === a.ud.tournamentDetail[n]) return console.error("tournament detail nothing."), void t(null);
      let r = "/bd/tournament/psresetting";
      const s = {
        compeId: n,
        current: i
      };
      null != o && null != l && (s.round = o, s.battle = l), util.request_tournament(r, s, (function (e) {
        200 == e.code ? (a.setCacheExpire("tournament_resetpass", n), a.ud.tournamentDetail[n].matchcard.passwd = e.passwd, a.save(), t(e)) : (11300 == e.detail && console.log("reset error."), console.log("error: " + r + ", " + e.code + ", " + e.detail), t(e))
      }))
    }
    get_tournament_teaminfo(e, t) {
      const a = this,
        n = e.compeId,
        i = e.teamId;
      if (t = void 0 === t ? function () {} : t, void 0 === a.ud.tournamentDetail[n]) return console.error("tournament detail nothing."), void t(null);
      if (void 0 !== a.ud.tournamentDetail[n].myteam && a.isEnableCache("get_tournament_teaminfo", n)) return void t(a.ud.tournamentDetail[n].myteam);
      let o = "/cbd/tournament/team-info";
      const l = {
        teamId: i
      };
      util.request_tournament(o, l, (function (e) {
        200 == e.code ? (a.setCacheExpire("get_tournament_teaminfo", n), a.ud.tournamentDetail[n].myteam = {
          tName: e.tName,
          tLang: e.tLang,
          tIcon: e.tIcon,
          teamName: e.teamName,
          teamInfo: e.teamInfo
        }, a.save(), t(!0)) : (console.log("error: " + o + ", " + e.code + ", " + e.detail), t(null))
      }))
    }
    tournament_matchprepare(e, t) {
      const a = this,
        n = e.compeId,
        i = void 0 === e.round ? null : e.round;
      t = void 0 === t ? function () {} : t;
      if (!a.ud.tournamentMyInfo.isLoggedin) return console.error("tournament auth error."), void t(null);
      if (void 0 === a.ud.tournamentDetail[n]) return console.error("tournament detail nothing."), void t(null);
      let o = "/bd/tournament/matchprepare";
      const l = {
        competitionId: n
      };
      null != i && (l.round = i), util.request_tournament(o, l, (function (e) {
        200 == e.code ? (a.setCacheExpire("tournament_matchprepare", n), void 0 === a.ud.tournamentDetail[n].matchcard && (a.ud.tournamentDetail[n].matchcard = {}), a.ud.tournamentDetail[n].matchcard.trainer = e.trainer, a.ud.tournamentDetail[n].matchcard.prepare = e.prepare, a.save(), t(!0)) : (console.log("error: " + o + ", " + e.code + ", " + e.detail), t(null))
      }))
    }
    tournament_reportResult(e, t) {
      const a = this,
        n = e.compeId,
        i = e.operation,
        o = void 0 === e.round ? null : e.round,
        l = void 0 === e.battle ? null : e.battle;
      t = void 0 === t ? function () {} : t;
      if (!a.ud.tournamentMyInfo.isLoggedin) return console.error("tournament auth error."), void t(null);
      if (void 0 === a.ud.tournamentDetail[n]) return console.error("tournament detail nothing."), void t(null);
      let r = "/bd/tournament/result/report";
      const s = {
        competitionId: n,
        operation: i
      };
      null != o && null != l && (s.round = o, s.battle = l), util.request_tournament(r, s, (function (e) {
        200 == e.code ? (a.setCacheExpire("tournament_reportResult", n), a.ud.tournamentDetail[n].nowBattle.status = e.status, a.save(), t(e)) : (console.log("error: " + r + ", " + e.code + ", " + e.detail), t(null))
      }))
    }
    get_tournament_battlestat(e, t) {
      const a = this,
        n = e.compeId,
        i = void 0 === e.round ? null : e.round,
        o = void 0 === e.battle ? null : e.battle;
      t = void 0 === t ? function () {} : t;
      if (!a.ud.tournamentMyInfo.isLoggedin) return console.error("tournament auth error."), void t(null);
      if (void 0 === a.ud.tournamentDetail[n]) return console.error("tournament detail nothing."), void t(null);
      const l = {};
      if (a.ud.tournamentDetail[n].myStatus < 4) return l.status = 0, a.ud.tournamentDetail[n].nowBattle = l, a.save(), void t(l);
      if (void 0 !== a.ud.tournamentDetail[n].nowBattle && a.isEnableCache("get_tournament_battlestat", n)) return void t(a.ud.tournamentDetail[n].nowBattle);
      let r = "/bd/tournament/result/info";
      const s = {
        competitionId: n
      };
      null != i && null != o && (s.round = i, s.battle = o), util.request_tournament(r, s, (function (e) {
        200 == e.code ? (a.setCacheExpire("get_tournament_battlestat", n, 2), l.battle = e.newest, l.status = e.status, a.ud.tournamentDetail[n].nowBattle = l, a.save(), t(l)) : 1e4 == e.detail ? (console.log("error: " + r + ", " + e.code + ", " + e.detail), l.status = 0, a.ud.tournamentDetail[n].nowBattle = l, t(l)) : (console.log("error: " + r + ", " + e.code + ", " + e.detail), t(null))
      }))
    }
    tournament_reportApproval(e, t) {
      const a = this,
        n = e.compeId,
        i = void 0 === e.round ? null : e.round,
        o = void 0 === e.battle ? null : e.battle;
      t = void 0 === t ? function () {} : t;
      if (!a.ud.tournamentMyInfo.isLoggedin) return console.error("tournament auth error."), void t(null);
      if (void 0 === a.ud.tournamentDetail[n]) return console.error("tournament detail nothing."), void t(null);
      let l = "/bd/tournament/result/approval";
      const r = {
        competitionId: n
      };
      null != i && null != o && (r.round = i, r.battle = o), util.request_tournament(l, r, (function (e) {
        200 == e.code ? (a.setCacheExpire("tournament_reportApproval", n), a.ud.tournamentDetail[n].nowBattle.status = e.status, a.save(), t(e)) : (console.log("error: " + l + ", " + e.code + ", " + e.detail), t(null))
      }))
    }
    tournament_protest(e, t) {
      const a = this,
        n = e.compeId,
        i = e.operation,
        o = void 0 === e.round ? null : e.round,
        l = void 0 === e.battle ? null : e.battle,
        r = void 0 === e.objText ? null : e.objText;
      t = void 0 === t ? function () {} : t;
      if (!a.ud.tournamentMyInfo.isLoggedin) return console.error("tournament auth error."), void t(null);
      if (void 0 === a.ud.tournamentDetail[n]) return console.error("tournament detail nothing."), void t(null);
      let s = "/bd/tournament/result/objection";
      const c = {
        competitionId: n,
        operation: i
      };
      null != o && null != l && (c.round = o, c.battle = l), null != r && (c.objText = r), util.request_tournament(s, c, (function (e) {
        200 == e.code ? (a.setCacheExpire("tournament_protest", n), t(e)) : (console.log("error: " + s + ", " + e.code + ", " + e.detail), t(e))
      }))
    }
    playRomCount() {
      return void 0 === this.ud.myInfo.playInfo ? 0 : Object.keys(this.ud.myInfo.playInfo).length
    }
  }
  const s = {
    rom: {
      Sw: {
        icon: "Sw",
        iconText: "SW"
      },
      Sh: {
        icon: "Sh",
        iconText: "SH"
      }
    },
    userIcon: {
      0: "icon-ball_g_s"
    },
    resultCase: {
      0: "win",
      1: "lose",
      2: "draw"
    },
    class: {
      0: "beginner", 1: "master"
    },
    sex: {
      0: "male",
      1: "female"
    },
    numClass: {
      single: {
        icon: "icon-season-result-icon01",
        icon_w: "icon-season-result-icon01w"
      },
      double: {
        icon: "icon-season-result-icon02",
        icon_w: "icon-season-result-icon02w"
      }
    },
    pokeType: {
      1: {
        0: [11, 3]
      },
      2: {
        0: [11, 3]
      },
      3: {
        0: [11, 3]
      },
      4: {
        0: [9]
      },
      5: {
        0: [9]
      },
      6: {
        0: [9, 2]
      },
      7: {
        0: [10]
      },
      8: {
        0: [10]
      },
      9: {
        0: [10]
      },
      10: {
        0: [6]
      },
      11: {
        0: [6]
      },
      12: {
        0: [6, 2]
      },
      13: {
        0: [6, 3]
      },
      14: {
        0: [6, 3]
      },
      15: {
        0: [6, 3]
      },
      16: {
        0: [0, 2]
      },
      17: {
        0: [0, 2]
      },
      18: {
        0: [0, 2]
      },
      19: {
        0: [0],
        1: [16, 0]
      },
      20: {
        0: [0],
        1: [16, 0],
        2: [16, 0]
      },
      21: {
        0: [0, 2]
      },
      22: {
        0: [0, 2]
      },
      23: {
        0: [3]
      },
      24: {
        0: [3]
      },
      25: {
        0: [12],
        1: [12],
        2: [12],
        3: [12],
        4: [12],
        5: [12],
        6: [12],
        7: [12],
        8: [12],
        9: [12]
      },
      26: {
        0: [12],
        1: [12, 13]
      },
      27: {
        0: [4],
        1: [14, 8]
      },
      28: {
        0: [4],
        1: [14, 8]
      },
      29: {
        0: [3]
      },
      30: {
        0: [3]
      },
      31: {
        0: [3, 4]
      },
      32: {
        0: [3]
      },
      33: {
        0: [3]
      },
      34: {
        0: [3, 4]
      },
      35: {
        0: [17]
      },
      36: {
        0: [17]
      },
      37: {
        0: [9],
        1: [14]
      },
      38: {
        0: [9],
        1: [14, 17]
      },
      39: {
        0: [0, 17]
      },
      40: {
        0: [0, 17]
      },
      41: {
        0: [3, 2]
      },
      42: {
        0: [3, 2]
      },
      43: {
        0: [11, 3]
      },
      44: {
        0: [11, 3]
      },
      45: {
        0: [11, 3]
      },
      46: {
        0: [6, 11]
      },
      47: {
        0: [6, 11]
      },
      48: {
        0: [6, 3]
      },
      49: {
        0: [6, 3]
      },
      50: {
        0: [4],
        1: [4, 8]
      },
      51: {
        0: [4],
        1: [4, 8]
      },
      52: {
        0: [0],
        1: [16],
        2: [8]
      },
      53: {
        0: [0],
        1: [16]
      },
      54: {
        0: [10]
      },
      55: {
        0: [10]
      },
      56: {
        0: [1]
      },
      57: {
        0: [1]
      },
      58: {
        0: [9],
        1: [9, 5]
      },
      59: {
        0: [9],
        1: [9, 5],
        2: [9, 5]
      },
      60: {
        0: [10]
      },
      61: {
        0: [10]
      },
      62: {
        0: [10, 1]
      },
      63: {
        0: [13]
      },
      64: {
        0: [13]
      },
      65: {
        0: [13]
      },
      66: {
        0: [1]
      },
      67: {
        0: [1]
      },
      68: {
        0: [1]
      },
      69: {
        0: [11, 3]
      },
      70: {
        0: [11, 3]
      },
      71: {
        0: [11, 3]
      },
      72: {
        0: [10, 3]
      },
      73: {
        0: [10, 3]
      },
      74: {
        0: [5, 4],
        1: [5, 12]
      },
      75: {
        0: [5, 4],
        1: [5, 12]
      },
      76: {
        0: [5, 4],
        1: [5, 12]
      },
      77: {
        0: [9],
        1: [13]
      },
      78: {
        0: [9],
        1: [13, 17]
      },
      79: {
        0: [10, 13],
        1: [13]
      },
      80: {
        0: [10, 13],
        2: [3, 13]
      },
      81: {
        0: [12, 8]
      },
      82: {
        0: [12, 8]
      },
      83: {
        0: [0, 2],
        1: [1]
      },
      84: {
        0: [0, 2]
      },
      85: {
        0: [0, 2]
      },
      86: {
        0: [10]
      },
      87: {
        0: [10, 14]
      },
      88: {
        0: [3],
        1: [3, 16]
      },
      89: {
        0: [3],
        1: [3, 16]
      },
      90: {
        0: [10]
      },
      91: {
        0: [10, 14]
      },
      92: {
        0: [7, 3]
      },
      93: {
        0: [7, 3]
      },
      94: {
        0: [7, 3]
      },
      95: {
        0: [5, 4]
      },
      96: {
        0: [13]
      },
      97: {
        0: [13]
      },
      98: {
        0: [10]
      },
      99: {
        0: [10]
      },
      100: {
        0: [12],
        1: [12, 11]
      },
      101: {
        0: [12],
        1: [12, 11],
        2: [12, 11]
      },
      102: {
        0: [11, 13]
      },
      103: {
        0: [11, 13],
        1: [11, 15]
      },
      104: {
        0: [4]
      },
      105: {
        0: [4],
        1: [9, 7],
        2: [9, 7]
      },
      106: {
        0: [1]
      },
      107: {
        0: [1]
      },
      108: {
        0: [0]
      },
      109: {
        0: [3]
      },
      110: {
        0: [3],
        1: [3, 17]
      },
      111: {
        0: [4, 5]
      },
      112: {
        0: [4, 5]
      },
      113: {
        0: [0]
      },
      114: {
        0: [11]
      },
      115: {
        0: [0]
      },
      116: {
        0: [10]
      },
      117: {
        0: [10]
      },
      118: {
        0: [10]
      },
      119: {
        0: [10]
      },
      120: {
        0: [10]
      },
      121: {
        0: [10, 13]
      },
      122: {
        0: [13, 17],
        1: [14, 13]
      },
      123: {
        0: [6, 2]
      },
      124: {
        0: [14, 13]
      },
      125: {
        0: [12]
      },
      126: {
        0: [9]
      },
      127: {
        0: [6]
      },
      128: {
        0: [0],
        1: [1],
        2: [1, 9],
        3: [1, 10]
      },
      129: {
        0: [10]
      },
      130: {
        0: [10, 2]
      },
      131: {
        0: [10, 14]
      },
      132: {
        0: [0]
      },
      133: {
        0: [0],
        1: [0]
      },
      134: {
        0: [10]
      },
      135: {
        0: [12]
      },
      136: {
        0: [9]
      },
      137: {
        0: [0]
      },
      138: {
        0: [5, 10]
      },
      139: {
        0: [5, 10]
      },
      140: {
        0: [5, 10]
      },
      141: {
        0: [5, 10]
      },
      142: {
        0: [5, 2]
      },
      143: {
        0: [0]
      },
      144: {
        0: [14, 2],
        1: [13, 2]
      },
      145: {
        0: [12, 2],
        1: [1, 2]
      },
      146: {
        0: [9, 2],
        1: [16, 2]
      },
      147: {
        0: [15]
      },
      148: {
        0: [15]
      },
      149: {
        0: [15, 2]
      },
      150: {
        0: [13]
      },
      151: {
        0: [13]
      },
      152: {
        0: [11]
      },
      153: {
        0: [11]
      },
      154: {
        0: [11]
      },
      155: {
        0: [9]
      },
      156: {
        0: [9]
      },
      157: {
        0: [9],
        1: [9, 7]
      },
      158: {
        0: [10]
      },
      159: {
        0: [10]
      },
      160: {
        0: [10]
      },
      161: {
        0: [0]
      },
      162: {
        0: [0]
      },
      163: {
        0: [0, 2]
      },
      164: {
        0: [0, 2]
      },
      165: {
        0: [6, 2]
      },
      166: {
        0: [6, 2]
      },
      167: {
        0: [6, 3]
      },
      168: {
        0: [6, 3]
      },
      169: {
        0: [3, 2]
      },
      170: {
        0: [10, 12]
      },
      171: {
        0: [10, 12]
      },
      172: {
        0: [12]
      },
      173: {
        0: [17]
      },
      174: {
        0: [0, 17]
      },
      175: {
        0: [17]
      },
      176: {
        0: [17, 2]
      },
      177: {
        0: [13, 2]
      },
      178: {
        0: [13, 2]
      },
      179: {
        0: [12]
      },
      180: {
        0: [12]
      },
      181: {
        0: [12]
      },
      182: {
        0: [11]
      },
      183: {
        0: [10, 17]
      },
      184: {
        0: [10, 17]
      },
      185: {
        0: [5]
      },
      186: {
        0: [10]
      },
      187: {
        0: [11, 2]
      },
      188: {
        0: [11, 2]
      },
      189: {
        0: [11, 2]
      },
      190: {
        0: [0]
      },
      191: {
        0: [11]
      },
      192: {
        0: [11]
      },
      193: {
        0: [6, 2]
      },
      194: {
        0: [10, 4],
        1: [3, 4]
      },
      195: {
        0: [10, 4]
      },
      196: {
        0: [13]
      },
      197: {
        0: [16]
      },
      198: {
        0: [16, 2]
      },
      199: {
        0: [10, 13],
        1: [3, 13]
      },
      200: {
        0: [7]
      },
      201: {
        0: [13],
        5: [13]
      },
      202: {
        0: [13]
      },
      203: {
        0: [0, 13]
      },
      204: {
        0: [6]
      },
      205: {
        0: [6, 8]
      },
      206: {
        0: [0]
      },
      207: {
        0: [4, 2]
      },
      208: {
        0: [8, 4]
      },
      209: {
        0: [17]
      },
      210: {
        0: [17]
      },
      211: {
        0: [10, 3],
        1: [16, 3]
      },
      212: {
        0: [6, 8]
      },
      213: {
        0: [6, 5]
      },
      214: {
        0: [6, 1]
      },
      215: {
        0: [16, 14],
        1: [1, 3]
      },
      216: {
        0: [0]
      },
      217: {
        0: [0]
      },
      218: {
        0: [9]
      },
      219: {
        0: [9, 5]
      },
      220: {
        0: [14, 4]
      },
      221: {
        0: [14, 4]
      },
      222: {
        0: [10, 5],
        1: [7]
      },
      223: {
        0: [10]
      },
      224: {
        0: [10]
      },
      225: {
        0: [14, 2]
      },
      226: {
        0: [10, 2]
      },
      227: {
        0: [8, 2]
      },
      228: {
        0: [16, 9]
      },
      229: {
        0: [16, 9]
      },
      230: {
        0: [10, 15]
      },
      231: {
        0: [4]
      },
      232: {
        0: [4]
      },
      233: {
        0: [0]
      },
      234: {
        0: [0]
      },
      235: {
        0: [0]
      },
      236: {
        0: [1]
      },
      237: {
        0: [1]
      },
      238: {
        0: [14, 13]
      },
      239: {
        0: [12]
      },
      240: {
        0: [9]
      },
      241: {
        0: [0]
      },
      242: {
        0: [0]
      },
      243: {
        0: [12]
      },
      244: {
        0: [9]
      },
      245: {
        0: [10]
      },
      246: {
        0: [5, 4]
      },
      247: {
        0: [5, 4]
      },
      248: {
        0: [5, 16]
      },
      249: {
        0: [13, 2]
      },
      250: {
        0: [9, 2]
      },
      251: {
        0: [13, 11]
      },
      252: {
        0: [11]
      },
      253: {
        0: [11]
      },
      254: {
        0: [11]
      },
      255: {
        0: [9]
      },
      256: {
        0: [9, 1]
      },
      257: {
        0: [9, 1]
      },
      258: {
        0: [10]
      },
      259: {
        0: [10, 4]
      },
      260: {
        0: [10, 4]
      },
      261: {
        0: [16]
      },
      262: {
        0: [16]
      },
      263: {
        0: [0],
        1: [16, 0]
      },
      264: {
        0: [0],
        1: [16, 0]
      },
      265: {
        0: [6]
      },
      266: {
        0: [6]
      },
      267: {
        0: [6, 2]
      },
      268: {
        0: [6]
      },
      269: {
        0: [6, 3]
      },
      270: {
        0: [10, 11]
      },
      271: {
        0: [10, 11]
      },
      272: {
        0: [10, 11]
      },
      273: {
        0: [11]
      },
      274: {
        0: [11, 16]
      },
      275: {
        0: [11, 16]
      },
      276: {
        0: [0, 2]
      },
      277: {
        0: [0, 2]
      },
      278: {
        0: [10, 2]
      },
      279: {
        0: [10, 2]
      },
      280: {
        0: [13, 17]
      },
      281: {
        0: [13, 17]
      },
      282: {
        0: [13, 17]
      },
      283: {
        0: [6, 10]
      },
      284: {
        0: [6, 2]
      },
      285: {
        0: [11]
      },
      286: {
        0: [11, 1]
      },
      287: {
        0: [0]
      },
      288: {
        0: [0]
      },
      289: {
        0: [0]
      },
      290: {
        0: [6, 4]
      },
      291: {
        0: [6, 2]
      },
      292: {
        0: [6, 7]
      },
      293: {
        0: [0]
      },
      294: {
        0: [0]
      },
      295: {
        0: [0]
      },
      296: {
        0: [1]
      },
      297: {
        0: [1]
      },
      298: {
        0: [0, 17]
      },
      299: {
        0: [5]
      },
      300: {
        0: [0]
      },
      301: {
        0: [0]
      },
      302: {
        0: [16, 7]
      },
      303: {
        0: [8, 17]
      },
      304: {
        0: [8, 5]
      },
      305: {
        0: [8, 5]
      },
      306: {
        0: [8, 5]
      },
      307: {
        0: [1, 13]
      },
      308: {
        0: [1, 13]
      },
      309: {
        0: [12]
      },
      310: {
        0: [12]
      },
      311: {
        0: [12]
      },
      312: {
        0: [12]
      },
      313: {
        0: [6]
      },
      314: {
        0: [6]
      },
      315: {
        0: [11, 3]
      },
      316: {
        0: [3]
      },
      317: {
        0: [3]
      },
      318: {
        0: [10, 16]
      },
      319: {
        0: [10, 16]
      },
      320: {
        0: [10]
      },
      321: {
        0: [10]
      },
      322: {
        0: [9, 4]
      },
      323: {
        0: [9, 4]
      },
      324: {
        0: [9]
      },
      325: {
        0: [13]
      },
      326: {
        0: [13]
      },
      327: {
        0: [0]
      },
      328: {
        0: [4]
      },
      329: {
        0: [4, 15]
      },
      330: {
        0: [4, 15]
      },
      331: {
        0: [11]
      },
      332: {
        0: [11, 16]
      },
      333: {
        0: [0, 2]
      },
      334: {
        0: [15, 2]
      },
      335: {
        0: [0]
      },
      336: {
        0: [3]
      },
      337: {
        0: [5, 13]
      },
      338: {
        0: [5, 13]
      },
      339: {
        0: [10, 4]
      },
      340: {
        0: [10, 4]
      },
      341: {
        0: [10]
      },
      342: {
        0: [10, 16]
      },
      343: {
        0: [4, 13]
      },
      344: {
        0: [4, 13]
      },
      345: {
        0: [5, 11]
      },
      346: {
        0: [5, 11]
      },
      347: {
        0: [5, 6]
      },
      348: {
        0: [5, 6]
      },
      349: {
        0: [10]
      },
      350: {
        0: [10]
      },
      351: {
        0: [0]
      },
      352: {
        0: [0]
      },
      353: {
        0: [7]
      },
      354: {
        0: [7]
      },
      355: {
        0: [7]
      },
      356: {
        0: [7]
      },
      357: {
        0: [11, 2]
      },
      358: {
        0: [13]
      },
      359: {
        0: [16]
      },
      360: {
        0: [13]
      },
      361: {
        0: [14]
      },
      362: {
        0: [14]
      },
      363: {
        0: [14, 10]
      },
      364: {
        0: [14, 10]
      },
      365: {
        0: [14, 10]
      },
      366: {
        0: [10]
      },
      367: {
        0: [10]
      },
      368: {
        0: [10]
      },
      369: {
        0: [10, 5]
      },
      370: {
        0: [10]
      },
      371: {
        0: [15]
      },
      372: {
        0: [15]
      },
      373: {
        0: [15, 2]
      },
      374: {
        0: [8, 13]
      },
      375: {
        0: [8, 13]
      },
      376: {
        0: [8, 13]
      },
      377: {
        0: [5]
      },
      378: {
        0: [14]
      },
      379: {
        0: [8]
      },
      380: {
        0: [15, 13]
      },
      381: {
        0: [15, 13]
      },
      382: {
        0: [10]
      },
      383: {
        0: [4]
      },
      384: {
        0: [15, 2]
      },
      385: {
        0: [8, 13]
      },
      386: {
        0: [13],
        1: [13],
        2: [13],
        3: [13]
      },
      387: {
        0: [11]
      },
      388: {
        0: [11]
      },
      389: {
        0: [11, 4]
      },
      390: {
        0: [9]
      },
      391: {
        0: [9, 1]
      },
      392: {
        0: [9, 1]
      },
      393: {
        0: [10]
      },
      394: {
        0: [10]
      },
      395: {
        0: [10, 8]
      },
      396: {
        0: [0, 2]
      },
      397: {
        0: [0, 2]
      },
      398: {
        0: [0, 2]
      },
      399: {
        0: [0]
      },
      400: {
        0: [0, 10]
      },
      401: {
        0: [6]
      },
      402: {
        0: [6]
      },
      403: {
        0: [12]
      },
      404: {
        0: [12]
      },
      405: {
        0: [12]
      },
      406: {
        0: [11, 3]
      },
      407: {
        0: [11, 3]
      },
      408: {
        0: [5]
      },
      409: {
        0: [5]
      },
      410: {
        0: [5, 8]
      },
      411: {
        0: [5, 8]
      },
      412: {
        0: [6]
      },
      413: {
        0: [6, 11],
        1: [6, 4],
        2: [6, 8]
      },
      414: {
        0: [6, 2],
        1: [6, 2],
        2: [6, 2]
      },
      415: {
        0: [6, 2]
      },
      416: {
        0: [6, 2]
      },
      417: {
        0: [12]
      },
      418: {
        0: [10]
      },
      419: {
        0: [10]
      },
      420: {
        0: [11]
      },
      421: {
        0: [11]
      },
      422: {
        0: [10],
        1: [10]
      },
      423: {
        0: [10, 4],
        1: [10, 4]
      },
      424: {
        0: [0]
      },
      425: {
        0: [7, 2]
      },
      426: {
        0: [7, 2]
      },
      427: {
        0: [0]
      },
      428: {
        0: [0]
      },
      429: {
        0: [7]
      },
      430: {
        0: [16, 2]
      },
      431: {
        0: [0]
      },
      432: {
        0: [0]
      },
      433: {
        0: [13]
      },
      434: {
        0: [3, 16]
      },
      435: {
        0: [3, 16]
      },
      436: {
        0: [8, 13]
      },
      437: {
        0: [8, 13]
      },
      438: {
        0: [5]
      },
      439: {
        0: [13, 17]
      },
      440: {
        0: [0]
      },
      441: {
        0: [0, 2]
      },
      442: {
        0: [7, 16]
      },
      443: {
        0: [15, 4]
      },
      444: {
        0: [15, 4]
      },
      445: {
        0: [15, 4]
      },
      446: {
        0: [0]
      },
      447: {
        0: [1]
      },
      448: {
        0: [1, 8]
      },
      449: {
        0: [4]
      },
      450: {
        0: [4]
      },
      451: {
        0: [3, 6]
      },
      452: {
        0: [3, 16]
      },
      453: {
        0: [3, 1]
      },
      454: {
        0: [3, 1]
      },
      455: {
        0: [11]
      },
      456: {
        0: [10]
      },
      457: {
        0: [10]
      },
      458: {
        0: [10, 2]
      },
      459: {
        0: [11, 14]
      },
      460: {
        0: [11, 14]
      },
      461: {
        0: [16, 14]
      },
      462: {
        0: [12, 8]
      },
      463: {
        0: [0]
      },
      464: {
        0: [4, 5]
      },
      465: {
        0: [11]
      },
      466: {
        0: [12]
      },
      467: {
        0: [9]
      },
      468: {
        0: [17, 2]
      },
      469: {
        0: [6, 2]
      },
      470: {
        0: [11]
      },
      471: {
        0: [14]
      },
      472: {
        0: [4, 2]
      },
      473: {
        0: [14, 4]
      },
      474: {
        0: [0]
      },
      475: {
        0: [13, 1]
      },
      476: {
        0: [5, 8]
      },
      477: {
        0: [7]
      },
      478: {
        0: [14, 7]
      },
      479: {
        0: [12, 7],
        1: [12, 9],
        2: [12, 10],
        3: [12, 14],
        4: [12, 2],
        5: [12, 11]
      },
      480: {
        0: [13]
      },
      481: {
        0: [13]
      },
      482: {
        0: [13]
      },
      483: {
        0: [8, 15],
        1: [8, 15]
      },
      484: {
        0: [10, 15],
        1: [10, 15]
      },
      485: {
        0: [9, 8]
      },
      486: {
        0: [0]
      },
      487: {
        0: [7, 15],
        1: [7, 15]
      },
      488: {
        0: [13]
      },
      489: {
        0: [10]
      },
      490: {
        0: [10]
      },
      491: {
        0: [16]
      },
      492: {
        0: [11],
        1: [11, 2]
      },
      493: {
        0: [0],
        1: [1],
        2: [2],
        3: [3],
        4: [4],
        5: [5],
        6: [6],
        7: [7],
        8: [8],
        9: [9],
        10: [10],
        11: [11],
        12: [12],
        13: [13],
        14: [14],
        15: [15],
        16: [16],
        17: [17],
        18: [0]
      },
      494: {
        0: [13, 9]
      },
      495: {
        0: [11]
      },
      496: {
        0: [11]
      },
      497: {
        0: [11]
      },
      498: {
        0: [9]
      },
      499: {
        0: [9, 1]
      },
      500: {
        0: [9, 1]
      },
      501: {
        0: [10]
      },
      502: {
        0: [10]
      },
      503: {
        0: [10],
        1: [10, 16]
      },
      504: {
        0: [0]
      },
      505: {
        0: [0]
      },
      506: {
        0: [0]
      },
      507: {
        0: [0]
      },
      508: {
        0: [0]
      },
      509: {
        0: [16]
      },
      510: {
        0: [16]
      },
      511: {
        0: [11]
      },
      512: {
        0: [11]
      },
      513: {
        0: [9]
      },
      514: {
        0: [9]
      },
      515: {
        0: [10]
      },
      516: {
        0: [10]
      },
      517: {
        0: [13]
      },
      518: {
        0: [13]
      },
      519: {
        0: [0, 2]
      },
      520: {
        0: [0, 2]
      },
      521: {
        0: [0, 2]
      },
      522: {
        0: [12]
      },
      523: {
        0: [12]
      },
      524: {
        0: [5]
      },
      525: {
        0: [5]
      },
      526: {
        0: [5]
      },
      527: {
        0: [13, 2]
      },
      528: {
        0: [13, 2]
      },
      529: {
        0: [4]
      },
      530: {
        0: [4, 8]
      },
      531: {
        0: [0]
      },
      532: {
        0: [1]
      },
      533: {
        0: [1]
      },
      534: {
        0: [1]
      },
      535: {
        0: [10]
      },
      536: {
        0: [10, 4]
      },
      537: {
        0: [10, 4]
      },
      538: {
        0: [1]
      },
      539: {
        0: [1]
      },
      540: {
        0: [6, 11]
      },
      541: {
        0: [6, 11]
      },
      542: {
        0: [6, 11]
      },
      543: {
        0: [6, 3]
      },
      544: {
        0: [6, 3]
      },
      545: {
        0: [6, 3]
      },
      546: {
        0: [11, 17]
      },
      547: {
        0: [11, 17]
      },
      548: {
        0: [11]
      },
      549: {
        0: [11],
        1: [11, 1],
        2: [11, 1]
      },
      550: {
        0: [10],
        1: [10],
        2: [10]
      },
      551: {
        0: [4, 16]
      },
      552: {
        0: [4, 16]
      },
      553: {
        0: [4, 16]
      },
      554: {
        0: [9],
        1: [14]
      },
      555: {
        0: [9],
        2: [14]
      },
      556: {
        0: [11]
      },
      557: {
        0: [6, 5]
      },
      558: {
        0: [6, 5]
      },
      559: {
        0: [16, 1]
      },
      560: {
        0: [16, 1]
      },
      561: {
        0: [13, 2]
      },
      562: {
        0: [7],
        1: [4, 7]
      },
      563: {
        0: [7]
      },
      564: {
        0: [10, 5]
      },
      565: {
        0: [10, 5]
      },
      566: {
        0: [5, 2]
      },
      567: {
        0: [5, 2]
      },
      568: {
        0: [3]
      },
      569: {
        0: [3]
      },
      570: {
        0: [16],
        1: [0, 7]
      },
      571: {
        0: [16],
        1: [0, 7]
      },
      572: {
        0: [0]
      },
      573: {
        0: [0]
      },
      574: {
        0: [13]
      },
      575: {
        0: [13]
      },
      576: {
        0: [13]
      },
      577: {
        0: [13]
      },
      578: {
        0: [13]
      },
      579: {
        0: [13]
      },
      580: {
        0: [10, 2]
      },
      581: {
        0: [10, 2]
      },
      582: {
        0: [14]
      },
      583: {
        0: [14]
      },
      584: {
        0: [14]
      },
      585: {
        0: [0, 11],
        1: [0, 11],
        2: [0, 11],
        3: [0, 11]
      },
      586: {
        0: [0, 11],
        1: [0, 11],
        2: [0, 11],
        3: [0, 11]
      },
      587: {
        0: [12, 2]
      },
      588: {
        0: [6]
      },
      589: {
        0: [6, 8]
      },
      590: {
        0: [11, 3]
      },
      591: {
        0: [11, 3]
      },
      592: {
        0: [10, 7]
      },
      593: {
        0: [10, 7]
      },
      594: {
        0: [10]
      },
      595: {
        0: [6, 12]
      },
      596: {
        0: [6, 12]
      },
      597: {
        0: [11, 8]
      },
      598: {
        0: [11, 8]
      },
      599: {
        0: [8]
      },
      600: {
        0: [8]
      },
      601: {
        0: [8]
      },
      602: {
        0: [12]
      },
      603: {
        0: [12]
      },
      604: {
        0: [12]
      },
      605: {
        0: [13]
      },
      606: {
        0: [13]
      },
      607: {
        0: [7, 9]
      },
      608: {
        0: [7, 9]
      },
      609: {
        0: [7, 9]
      },
      610: {
        0: [15]
      },
      611: {
        0: [15]
      },
      612: {
        0: [15]
      },
      613: {
        0: [14]
      },
      614: {
        0: [14]
      },
      615: {
        0: [14]
      },
      616: {
        0: [6]
      },
      617: {
        0: [6]
      },
      618: {
        0: [4, 12],
        1: [4, 8]
      },
      619: {
        0: [1]
      },
      620: {
        0: [1]
      },
      621: {
        0: [15]
      },
      622: {
        0: [4, 7]
      },
      623: {
        0: [4, 7]
      },
      624: {
        0: [16, 8]
      },
      625: {
        0: [16, 8]
      },
      626: {
        0: [0]
      },
      627: {
        0: [0, 2]
      },
      628: {
        0: [0, 2],
        1: [13, 2]
      },
      629: {
        0: [16, 2]
      },
      630: {
        0: [16, 2]
      },
      631: {
        0: [9]
      },
      632: {
        0: [6, 8]
      },
      633: {
        0: [16, 15]
      },
      634: {
        0: [16, 15]
      },
      635: {
        0: [16, 15]
      },
      636: {
        0: [6, 9]
      },
      637: {
        0: [6, 9]
      },
      638: {
        0: [8, 1]
      },
      639: {
        0: [5, 1]
      },
      640: {
        0: [11, 1]
      },
      641: {
        0: [2],
        1: [2]
      },
      642: {
        0: [12, 2],
        1: [12, 2]
      },
      643: {
        0: [15, 9]
      },
      644: {
        0: [15, 12]
      },
      645: {
        0: [4, 2],
        1: [4, 2]
      },
      646: {
        0: [15, 14],
        1: [15, 14],
        2: [15, 14]
      },
      647: {
        0: [10, 1]
      },
      648: {
        0: [0, 13]
      },
      649: {
        0: [6, 8]
      },
      650: {
        0: [11]
      },
      651: {
        0: [11]
      },
      652: {
        0: [11, 1]
      },
      653: {
        0: [9]
      },
      654: {
        0: [9]
      },
      655: {
        0: [9, 13]
      },
      656: {
        0: [10]
      },
      657: {
        0: [10]
      },
      658: {
        0: [10, 16],
        1: [10, 16]
      },
      659: {
        0: [0]
      },
      660: {
        0: [0, 4]
      },
      661: {
        0: [0, 2]
      },
      662: {
        0: [9, 2]
      },
      663: {
        0: [9, 2]
      },
      664: {
        0: [6],
        1: [6],
        2: [6],
        3: [6],
        4: [6],
        5: [6],
        6: [6],
        7: [6],
        8: [6],
        9: [6],
        10: [6],
        11: [6],
        12: [6],
        13: [6],
        14: [6],
        15: [6],
        16: [6],
        17: [6],
        18: [6],
        19: [6]
      },
      665: {
        0: [6],
        1: [6],
        2: [6],
        3: [6],
        4: [6],
        5: [6],
        6: [6],
        7: [6],
        8: [6],
        9: [6],
        10: [6],
        11: [6],
        12: [6],
        13: [6],
        14: [6],
        15: [6],
        16: [6],
        17: [6],
        18: [6],
        19: [6]
      },
      666: {
        0: [6, 2],
        1: [6, 2],
        2: [6, 2],
        3: [6, 2],
        4: [6, 2],
        5: [6, 2],
        6: [6, 2],
        7: [6, 2],
        8: [6, 2],
        9: [6, 2],
        10: [6, 2],
        11: [6, 2],
        12: [6, 2],
        13: [6, 2],
        14: [6, 2],
        15: [6, 2],
        16: [6, 2],
        17: [6, 2],
        18: [6, 2],
        19: [6, 2]
      },
      667: {
        0: [9, 0]
      },
      668: {
        0: [9, 0]
      },
      669: {
        0: [17],
        1: [17],
        2: [17],
        3: [17],
        4: [17]
      },
      670: {
        0: [17],
        1: [17],
        2: [17],
        3: [17],
        4: [17]
      },
      671: {
        0: [17],
        1: [17],
        2: [17],
        3: [17],
        4: [17]
      },
      672: {
        0: [11]
      },
      673: {
        0: [11]
      },
      674: {
        0: [1]
      },
      675: {
        0: [1, 16]
      },
      676: {
        0: [0]
      },
      677: {
        0: [13]
      },
      678: {
        0: [13],
        1: [13]
      },
      679: {
        0: [8, 7]
      },
      680: {
        0: [8, 7]
      },
      681: {
        0: [8, 7]
      },
      682: {
        0: [17]
      },
      683: {
        0: [17]
      },
      684: {
        0: [17]
      },
      685: {
        0: [17]
      },
      686: {
        0: [16, 13]
      },
      687: {
        0: [16, 13]
      },
      688: {
        0: [5, 10]
      },
      689: {
        0: [5, 10]
      },
      690: {
        0: [3, 10]
      },
      691: {
        0: [3, 15]
      },
      692: {
        0: [10]
      },
      693: {
        0: [10]
      },
      694: {
        0: [12, 0]
      },
      695: {
        0: [12, 0]
      },
      696: {
        0: [5, 15]
      },
      697: {
        0: [5, 15]
      },
      698: {
        0: [5, 14]
      },
      699: {
        0: [5, 14]
      },
      700: {
        0: [17]
      },
      701: {
        0: [1, 2]
      },
      702: {
        0: [12, 17]
      },
      703: {
        0: [5, 17]
      },
      704: {
        0: [15]
      },
      705: {
        0: [15],
        1: [8, 15]
      },
      706: {
        0: [15],
        1: [8, 15]
      },
      707: {
        0: [8, 17]
      },
      708: {
        0: [7, 11]
      },
      709: {
        0: [7, 11]
      },
      710: {
        0: [7, 11],
        1: [7, 11],
        2: [7, 11],
        3: [7, 11]
      },
      711: {
        0: [7, 11],
        1: [7, 11],
        2: [7, 11],
        3: [7, 11]
      },
      712: {
        0: [14]
      },
      713: {
        0: [14],
        1: [14, 5],
        2: [14, 5]
      },
      714: {
        0: [2, 15]
      },
      715: {
        0: [2, 15]
      },
      716: {
        0: [17]
      },
      717: {
        0: [16, 2]
      },
      718: {
        0: [15, 4],
        1: [15, 4],
        2: [15, 4],
        3: [15, 4]
      },
      719: {
        0: [5, 17]
      },
      720: {
        0: [13, 7],
        1: [13, 16]
      },
      721: {
        0: [9, 10]
      },
      722: {
        0: [11, 2]
      },
      723: {
        0: [11, 2]
      },
      724: {
        0: [11, 7],
        1: [11, 1]
      },
      725: {
        0: [9]
      },
      726: {
        0: [9]
      },
      727: {
        0: [9, 16]
      },
      728: {
        0: [10]
      },
      729: {
        0: [10]
      },
      730: {
        0: [10, 17]
      },
      731: {
        0: [0, 2]
      },
      732: {
        0: [0, 2]
      },
      733: {
        0: [0, 2]
      },
      734: {
        0: [0]
      },
      735: {
        0: [0],
        1: [0]
      },
      736: {
        0: [6]
      },
      737: {
        0: [6, 12]
      },
      738: {
        0: [6, 12],
        1: [6, 12]
      },
      739: {
        0: [1]
      },
      740: {
        0: [1, 14]
      },
      741: {
        0: [9, 2],
        1: [12, 2],
        2: [13, 2],
        3: [7, 2]
      },
      742: {
        0: [6, 17]
      },
      743: {
        0: [6, 17],
        1: [6, 17]
      },
      744: {
        0: [5],
        1: [5]
      },
      745: {
        0: [5],
        1: [5],
        2: [5]
      },
      746: {
        0: [10]
      },
      747: {
        0: [3, 10]
      },
      748: {
        0: [3, 10]
      },
      749: {
        0: [4]
      },
      750: {
        0: [4]
      },
      751: {
        0: [10, 6]
      },
      752: {
        0: [10, 6],
        1: [10, 6]
      },
      753: {
        0: [11]
      },
      754: {
        0: [11],
        1: [11]
      },
      755: {
        0: [11, 17]
      },
      756: {
        0: [11, 17]
      },
      757: {
        0: [3, 9]
      },
      758: {
        0: [3, 9],
        1: [3, 9]
      },
      759: {
        0: [0, 1]
      },
      760: {
        0: [0, 1]
      },
      761: {
        0: [11]
      },
      762: {
        0: [11]
      },
      763: {
        0: [11]
      },
      764: {
        0: [17]
      },
      765: {
        0: [0, 13]
      },
      766: {
        0: [1]
      },
      767: {
        0: [6, 10]
      },
      768: {
        0: [6, 10]
      },
      769: {
        0: [7, 4]
      },
      770: {
        0: [7, 4]
      },
      771: {
        0: [10]
      },
      772: {
        0: [0]
      },
      773: {
        0: [0],
        1: [1],
        2: [2],
        3: [3],
        4: [4],
        5: [5],
        6: [6],
        7: [7],
        8: [8],
        9: [9],
        10: [10],
        11: [11],
        12: [12],
        13: [13],
        14: [14],
        15: [15],
        16: [16],
        17: [17]
      },
      774: {
        7: [5, 2]
      },
      775: {
        0: [0]
      },
      776: {
        0: [9, 15]
      },
      777: {
        0: [12, 8],
        1: [12, 8]
      },
      778: {
        0: [7, 17],
        2: [7, 17],
        3: [7, 17]
      },
      779: {
        0: [10, 13]
      },
      780: {
        0: [0, 15]
      },
      781: {
        0: [7, 11]
      },
      782: {
        0: [15]
      },
      783: {
        0: [15, 1]
      },
      784: {
        0: [15, 1],
        1: [15, 1]
      },
      785: {
        0: [12, 17]
      },
      786: {
        0: [13, 17]
      },
      787: {
        0: [11, 17]
      },
      788: {
        0: [10, 17]
      },
      789: {
        0: [13]
      },
      790: {
        0: [13]
      },
      791: {
        0: [13, 8]
      },
      792: {
        0: [13, 7]
      },
      793: {
        0: [5, 3]
      },
      794: {
        0: [6, 1]
      },
      795: {
        0: [6, 1]
      },
      796: {
        0: [12]
      },
      797: {
        0: [8, 2]
      },
      798: {
        0: [11, 8]
      },
      799: {
        0: [16, 15]
      },
      800: {
        0: [13],
        1: [13, 8],
        2: [13, 7]
      },
      801: {
        0: [8, 17],
        1: [8, 17]
      },
      802: {
        0: [1, 7]
      },
      803: {
        0: [3]
      },
      804: {
        0: [3, 15]
      },
      805: {
        0: [5, 8]
      },
      806: {
        0: [9, 7]
      },
      807: {
        0: [12]
      },
      808: {
        0: [8]
      },
      809: {
        0: [8]
      },
      810: {
        0: [11]
      },
      811: {
        0: [11]
      },
      812: {
        0: [11]
      },
      813: {
        0: [9]
      },
      814: {
        0: [9]
      },
      815: {
        0: [9]
      },
      816: {
        0: [10]
      },
      817: {
        0: [10]
      },
      818: {
        0: [10]
      },
      819: {
        0: [0]
      },
      820: {
        0: [0]
      },
      821: {
        0: [2]
      },
      822: {
        0: [2]
      },
      823: {
        0: [2, 8]
      },
      824: {
        0: [6]
      },
      825: {
        0: [6, 13]
      },
      826: {
        0: [6, 13]
      },
      827: {
        0: [16]
      },
      828: {
        0: [16]
      },
      829: {
        0: [11]
      },
      830: {
        0: [11]
      },
      831: {
        0: [0]
      },
      832: {
        0: [0]
      },
      833: {
        0: [10]
      },
      834: {
        0: [10, 5]
      },
      835: {
        0: [12]
      },
      836: {
        0: [12]
      },
      837: {
        0: [5]
      },
      838: {
        0: [5, 9]
      },
      839: {
        0: [5, 9]
      },
      840: {
        0: [11, 15]
      },
      841: {
        0: [11, 15]
      },
      842: {
        0: [11, 15]
      },
      843: {
        0: [4]
      },
      844: {
        0: [4]
      },
      845: {
        0: [2, 10]
      },
      846: {
        0: [10]
      },
      847: {
        0: [10]
      },
      848: {
        0: [12, 3]
      },
      849: {
        0: [12, 3],
        1: [12, 3]
      },
      850: {
        0: [9, 6]
      },
      851: {
        0: [9, 6]
      },
      852: {
        0: [1]
      },
      853: {
        0: [1]
      },
      854: {
        0: [7],
        1: [7]
      },
      855: {
        0: [7],
        1: [7]
      },
      856: {
        0: [13]
      },
      857: {
        0: [13]
      },
      858: {
        0: [13, 17]
      },
      859: {
        0: [16, 17]
      },
      860: {
        0: [16, 17]
      },
      861: {
        0: [16, 17]
      },
      862: {
        0: [16, 0]
      },
      863: {
        0: [8]
      },
      864: {
        0: [7]
      },
      865: {
        0: [1]
      },
      866: {
        0: [14, 13]
      },
      867: {
        0: [4, 7]
      },
      868: {
        0: [17]
      },
      869: {
        0: [17]
      },
      870: {
        0: [1]
      },
      871: {
        0: [12]
      },
      872: {
        0: [14, 6]
      },
      873: {
        0: [14, 6]
      },
      874: {
        0: [5]
      },
      875: {
        0: [14]
      },
      876: {
        0: [13, 0],
        1: [13, 0]
      },
      877: {
        0: [12, 16]
      },
      878: {
        0: [8]
      },
      879: {
        0: [8]
      },
      880: {
        0: [12, 15]
      },
      881: {
        0: [12, 14]
      },
      882: {
        0: [10, 15]
      },
      883: {
        0: [10, 14]
      },
      884: {
        0: [8, 15]
      },
      885: {
        0: [15, 7]
      },
      886: {
        0: [15, 7]
      },
      887: {
        0: [15, 7]
      },
      888: {
        0: [17],
        1: [17, 8]
      },
      889: {
        0: [1],
        1: [1, 8]
      },
      890: {
        0: [3, 15],
        1: [3, 15]
      },
      891: {
        0: [1]
      },
      892: {
        0: [1, 16],
        1: [1, 10]
      },
      893: {
        0: [16, 11],
        1: [16, 11]
      },
      894: {
        0: [12]
      },
      895: {
        0: [15]
      },
      896: {
        0: [14]
      },
      897: {
        0: [7]
      },
      898: {
        0: [13, 11],
        1: [13, 14],
        2: [13, 7]
      },
      899: {
        0: [0, 13]
      },
      900: {
        0: [6, 5],
        1: [6, 5]
      },
      901: {
        0: [4, 0],
        1: [4, 0]
      },
      902: {
        0: [10, 7],
        1: [10, 7]
      },
      903: {
        0: [1, 3]
      },
      904: {
        0: [16, 3]
      },
      905: {
        0: [17, 2],
        1: [17, 2]
      },
      906: {
        0: [11]
      },
      907: {
        0: [11]
      },
      908: {
        0: [11, 16]
      },
      909: {
        0: [9]
      },
      910: {
        0: [9]
      },
      911: {
        0: [9, 7]
      },
      912: {
        0: [10]
      },
      913: {
        0: [10]
      },
      914: {
        0: [10, 1]
      },
      915: {
        0: [0]
      },
      916: {
        0: [0],
        1: [0]
      },
      917: {
        0: [6]
      },
      918: {
        0: [6]
      },
      919: {
        0: [6]
      },
      920: {
        0: [6, 16]
      },
      921: {
        0: [12]
      },
      922: {
        0: [12, 1]
      },
      923: {
        0: [12, 1]
      },
      924: {
        0: [0]
      },
      925: {
        0: [0],
        1: [0]
      },
      926: {
        0: [17]
      },
      927: {
        0: [17]
      },
      928: {
        0: [11, 0]
      },
      929: {
        0: [11, 0]
      },
      930: {
        0: [11, 0]
      },
      931: {
        0: [0, 2],
        1: [0, 2],
        2: [0, 2],
        3: [0, 2]
      },
      932: {
        0: [5]
      },
      933: {
        0: [5]
      },
      934: {
        0: [5]
      },
      935: {
        0: [9]
      },
      936: {
        0: [9, 13]
      },
      937: {
        0: [9, 7]
      },
      938: {
        0: [12]
      },
      939: {
        0: [12]
      },
      940: {
        0: [12, 2]
      },
      941: {
        0: [12, 2]
      },
      942: {
        0: [16]
      },
      943: {
        0: [16]
      },
      944: {
        0: [3, 0]
      },
      945: {
        0: [3, 0]
      },
      946: {
        0: [11, 7]
      },
      947: {
        0: [11, 7]
      },
      948: {
        0: [4, 11]
      },
      949: {
        0: [4, 11]
      },
      950: {
        0: [5]
      },
      951: {
        0: [11]
      },
      952: {
        0: [11, 9]
      },
      953: {
        0: [6]
      },
      954: {
        0: [6, 13]
      },
      955: {
        0: [13]
      },
      956: {
        0: [13]
      },
      957: {
        0: [17, 8]
      },
      958: {
        0: [17, 8]
      },
      959: {
        0: [17, 8]
      },
      960: {
        0: [10]
      },
      961: {
        0: [10]
      },
      962: {
        0: [2, 16]
      },
      963: {
        0: [10]
      },
      964: {
        0: [10]
      },
      965: {
        0: [8, 3]
      },
      966: {
        0: [8, 3]
      },
      967: {
        0: [15, 0]
      },
      968: {
        0: [8]
      },
      969: {
        0: [5, 3]
      },
      970: {
        0: [5, 3]
      },
      971: {
        0: [7]
      },
      972: {
        0: [7]
      },
      973: {
        0: [2, 1]
      },
      974: {
        0: [14]
      },
      975: {
        0: [14]
      },
      976: {
        0: [10, 13]
      },
      977: {
        0: [10]
      },
      978: {
        0: [15, 10],
        1: [15, 10],
        2: [15, 10]
      },
      979: {
        0: [1, 7]
      },
      980: {
        0: [3, 4]
      },
      981: {
        0: [0, 13]
      },
      982: {
        0: [0],
        1: [0]
      },
      983: {
        0: [16, 8]
      },
      984: {
        0: [4, 1]
      },
      985: {
        0: [17, 13]
      },
      986: {
        0: [11, 16]
      },
      987: {
        0: [7, 17]
      },
      988: {
        0: [6, 1]
      },
      989: {
        0: [12, 4]
      },
      990: {
        0: [4, 8]
      },
      991: {
        0: [14, 10]
      },
      992: {
        0: [1, 12]
      },
      993: {
        0: [16, 2]
      },
      994: {
        0: [9, 3]
      },
      995: {
        0: [5, 12]
      },
      996: {
        0: [15, 14]
      },
      997: {
        0: [15, 14]
      },
      998: {
        0: [15, 14]
      },
      999: {
        0: [7],
        1: [7]
      },
      1e3: {
        0: [8, 7]
      },
      1001: {
        0: [16, 11]
      },
      1002: {
        0: [16, 14]
      },
      1003: {
        0: [16, 4]
      },
      1004: {
        0: [16, 9]
      },
      1005: {
        0: [15, 16]
      },
      1006: {
        0: [17, 1]
      },
      1007: {
        0: [1, 15]
      },
      1008: {
        0: [12, 15]
      },
      1009: {
        0: [10, 15]
      },
      1010: {
        0: [11, 13]
      },
      1011: {
        0: [11, 15]
      },
      1012: {
        0: [11, 7],
        1: [11, 7]
      },
      1013: {
        0: [11, 7],
        1: [11, 7]
      },
      1014: {
        0: [3, 1]
      },
      1015: {
        0: [3, 13]
      },
      1016: {
        0: [3, 17]
      },
      1017: {
        0: [11],
        1: [11, 10],
        2: [11, 9],
        3: [11, 5]
      }
    },
    pokeImg: ["icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s", "icon-ball_g_s"],
    wazaType: {
      1: [0, 1],
      2: [1, 1],
      3: [0, 1],
      4: [0, 1],
      5: [0, 1],
      6: [0, 1],
      7: [9, 1],
      8: [14, 1],
      9: [12, 1],
      10: [0, 1],
      11: [0, 1],
      12: [0, 1],
      13: [0, 2],
      14: [0, 3],
      15: [0, 1],
      16: [2, 2],
      17: [2, 1],
      18: [0, 3],
      19: [2, 1],
      20: [0, 1],
      21: [0, 1],
      22: [11, 1],
      23: [0, 1],
      24: [1, 1],
      25: [0, 1],
      26: [1, 1],
      27: [1, 1],
      28: [4, 3],
      29: [0, 1],
      30: [0, 1],
      31: [0, 1],
      32: [0, 1],
      33: [0, 1],
      34: [0, 1],
      35: [0, 1],
      36: [0, 1],
      37: [0, 1],
      38: [0, 1],
      39: [0, 3],
      40: [3, 1],
      41: [6, 1],
      42: [6, 1],
      43: [0, 3],
      44: [16, 1],
      45: [0, 3],
      46: [0, 3],
      47: [0, 3],
      48: [0, 3],
      49: [0, 2],
      50: [0, 3],
      51: [3, 2],
      52: [9, 2],
      53: [9, 2],
      54: [14, 3],
      55: [10, 2],
      56: [10, 2],
      57: [10, 2],
      58: [14, 2],
      59: [14, 2],
      60: [13, 2],
      61: [10, 2],
      62: [14, 2],
      63: [0, 2],
      64: [2, 1],
      65: [2, 1],
      66: [1, 1],
      67: [1, 1],
      68: [1, 1],
      69: [1, 1],
      70: [0, 1],
      71: [11, 2],
      72: [11, 2],
      73: [11, 3],
      74: [0, 3],
      75: [11, 1],
      76: [11, 2],
      77: [3, 3],
      78: [11, 3],
      79: [11, 3],
      80: [11, 2],
      81: [6, 3],
      82: [15, 2],
      83: [9, 2],
      84: [12, 2],
      85: [12, 2],
      86: [12, 3],
      87: [12, 2],
      88: [5, 1],
      89: [4, 1],
      90: [4, 1],
      91: [4, 1],
      92: [3, 3],
      93: [13, 2],
      94: [13, 2],
      95: [13, 3],
      96: [13, 3],
      97: [13, 3],
      98: [0, 1],
      99: [0, 1],
      100: [13, 3],
      101: [7, 2],
      102: [0, 3],
      103: [0, 3],
      104: [0, 3],
      105: [0, 3],
      106: [0, 3],
      107: [0, 3],
      108: [0, 3],
      109: [7, 3],
      110: [10, 3],
      111: [0, 3],
      112: [13, 3],
      113: [13, 3],
      114: [14, 3],
      115: [13, 3],
      116: [0, 3],
      117: [0, 1],
      118: [0, 3],
      119: [2, 3],
      120: [0, 1],
      121: [0, 1],
      122: [7, 1],
      123: [3, 2],
      124: [3, 2],
      125: [4, 1],
      126: [9, 2],
      127: [10, 1],
      128: [10, 1],
      129: [0, 2],
      130: [0, 1],
      131: [0, 1],
      132: [0, 1],
      133: [13, 3],
      134: [13, 3],
      135: [0, 3],
      136: [1, 1],
      137: [0, 3],
      138: [13, 2],
      139: [3, 3],
      140: [0, 1],
      141: [6, 1],
      142: [0, 3],
      143: [2, 1],
      144: [0, 3],
      145: [10, 2],
      146: [0, 1],
      147: [11, 3],
      148: [0, 3],
      149: [13, 2],
      150: [0, 3],
      151: [3, 3],
      152: [10, 1],
      153: [0, 1],
      154: [0, 1],
      155: [4, 1],
      156: [13, 3],
      157: [5, 1],
      158: [0, 1],
      159: [0, 3],
      160: [0, 3],
      161: [0, 2],
      162: [0, 1],
      163: [0, 1],
      164: [0, 3],
      165: [0, 1],
      166: [0, 3],
      167: [1, 1],
      168: [16, 1],
      169: [6, 3],
      170: [0, 3],
      171: [7, 3],
      172: [9, 1],
      173: [0, 2],
      174: [7, 3],
      175: [0, 1],
      176: [0, 3],
      177: [2, 2],
      178: [11, 3],
      179: [1, 1],
      180: [7, 3],
      181: [14, 2],
      182: [0, 3],
      183: [1, 1],
      184: [0, 3],
      185: [16, 1],
      186: [17, 3],
      187: [0, 3],
      188: [3, 2],
      189: [4, 2],
      190: [10, 2],
      191: [4, 3],
      192: [12, 2],
      193: [0, 3],
      194: [7, 3],
      195: [0, 3],
      196: [14, 2],
      197: [1, 3],
      198: [4, 1],
      199: [0, 3],
      200: [15, 1],
      201: [5, 3],
      202: [11, 2],
      203: [0, 3],
      204: [17, 3],
      205: [5, 1],
      206: [0, 1],
      207: [0, 3],
      208: [0, 3],
      209: [12, 1],
      210: [6, 1],
      211: [8, 1],
      212: [0, 3],
      213: [0, 3],
      214: [0, 3],
      215: [0, 3],
      216: [0, 1],
      217: [0, 1],
      218: [0, 1],
      219: [0, 3],
      220: [0, 3],
      221: [9, 1],
      222: [4, 1],
      223: [1, 1],
      224: [6, 1],
      225: [15, 2],
      226: [0, 3],
      227: [0, 3],
      228: [16, 1],
      229: [0, 1],
      230: [0, 3],
      231: [8, 1],
      232: [8, 1],
      233: [1, 1],
      234: [0, 3],
      235: [11, 3],
      236: [17, 3],
      237: [0, 2],
      238: [1, 1],
      239: [15, 2],
      240: [10, 3],
      241: [9, 3],
      242: [16, 1],
      243: [13, 2],
      244: [0, 3],
      245: [0, 1],
      246: [5, 2],
      247: [7, 2],
      248: [13, 2],
      249: [1, 1],
      250: [10, 2],
      251: [16, 1],
      252: [0, 1],
      253: [0, 2],
      254: [0, 3],
      255: [0, 2],
      256: [0, 3],
      257: [9, 2],
      258: [14, 3],
      259: [16, 3],
      260: [16, 3],
      261: [9, 3],
      262: [16, 3],
      263: [0, 1],
      264: [1, 1],
      265: [0, 1],
      266: [0, 3],
      267: [0, 3],
      268: [12, 3],
      269: [16, 3],
      270: [0, 3],
      271: [13, 3],
      272: [13, 3],
      273: [0, 3],
      274: [0, 3],
      275: [11, 3],
      276: [1, 1],
      277: [13, 3],
      278: [0, 3],
      279: [1, 1],
      280: [1, 1],
      281: [0, 3],
      282: [16, 1],
      283: [0, 1],
      284: [9, 2],
      285: [13, 3],
      286: [13, 3],
      287: [0, 3],
      288: [7, 3],
      289: [16, 3],
      290: [0, 1],
      291: [10, 1],
      292: [1, 1],
      293: [0, 3],
      294: [6, 3],
      295: [13, 2],
      296: [13, 2],
      297: [2, 3],
      298: [0, 3],
      299: [9, 1],
      300: [4, 3],
      301: [14, 1],
      302: [11, 1],
      303: [0, 3],
      304: [0, 2],
      305: [3, 1],
      306: [0, 1],
      307: [9, 2],
      308: [10, 2],
      309: [8, 1],
      310: [7, 1],
      311: [0, 2],
      312: [11, 3],
      313: [16, 3],
      314: [2, 2],
      315: [9, 2],
      316: [0, 3],
      317: [5, 1],
      318: [6, 2],
      319: [8, 3],
      320: [11, 3],
      321: [0, 3],
      322: [13, 3],
      323: [10, 2],
      324: [6, 2],
      325: [7, 1],
      326: [13, 2],
      327: [1, 1],
      328: [4, 1],
      329: [14, 2],
      330: [10, 2],
      331: [11, 1],
      332: [2, 1],
      333: [14, 1],
      334: [8, 3],
      335: [0, 3],
      336: [0, 3],
      337: [15, 1],
      338: [11, 2],
      339: [1, 3],
      340: [2, 1],
      341: [4, 2],
      342: [3, 1],
      343: [0, 1],
      344: [12, 1],
      345: [11, 2],
      346: [10, 3],
      347: [13, 3],
      348: [11, 1],
      349: [15, 3],
      350: [5, 1],
      351: [12, 2],
      352: [10, 2],
      353: [8, 2],
      354: [13, 2],
      355: [2, 3],
      356: [13, 3],
      357: [13, 3],
      358: [1, 1],
      359: [1, 1],
      360: [8, 1],
      361: [13, 3],
      362: [10, 2],
      363: [0, 1],
      364: [0, 1],
      365: [2, 1],
      366: [2, 3],
      367: [0, 3],
      368: [8, 1],
      369: [6, 1],
      370: [1, 1],
      371: [16, 1],
      372: [16, 1],
      373: [16, 3],
      374: [16, 1],
      375: [13, 3],
      376: [0, 2],
      377: [13, 3],
      378: [0, 2],
      379: [13, 3],
      380: [3, 3],
      381: [0, 3],
      382: [0, 3],
      383: [0, 3],
      384: [13, 3],
      385: [13, 3],
      386: [16, 1],
      387: [0, 1],
      388: [11, 3],
      389: [16, 1],
      390: [3, 3],
      391: [13, 3],
      392: [10, 3],
      393: [12, 3],
      394: [9, 1],
      395: [1, 1],
      396: [1, 2],
      397: [5, 3],
      398: [3, 1],
      399: [16, 2],
      400: [16, 1],
      401: [10, 1],
      402: [11, 1],
      403: [2, 2],
      404: [6, 1],
      405: [6, 2],
      406: [15, 2],
      407: [15, 1],
      408: [5, 2],
      409: [1, 1],
      410: [1, 2],
      411: [1, 2],
      412: [11, 2],
      413: [2, 1],
      414: [4, 2],
      415: [16, 3],
      416: [0, 1],
      417: [16, 3],
      418: [8, 1],
      419: [14, 1],
      420: [14, 1],
      421: [7, 1],
      422: [12, 1],
      423: [14, 1],
      424: [9, 1],
      425: [7, 1],
      426: [4, 2],
      427: [13, 1],
      428: [13, 1],
      429: [8, 2],
      430: [8, 2],
      431: [0, 1],
      432: [2, 3],
      433: [13, 3],
      434: [15, 2],
      435: [12, 2],
      436: [9, 2],
      437: [11, 2],
      438: [11, 1],
      439: [5, 1],
      440: [3, 1],
      441: [3, 1],
      442: [8, 1],
      443: [8, 1],
      444: [5, 1],
      445: [0, 3],
      446: [5, 3],
      447: [11, 2],
      448: [2, 2],
      449: [0, 2],
      450: [6, 1],
      451: [12, 2],
      452: [11, 1],
      453: [10, 1],
      454: [6, 1],
      455: [6, 3],
      456: [6, 3],
      457: [5, 1],
      458: [0, 1],
      459: [15, 2],
      460: [15, 2],
      461: [13, 3],
      462: [0, 1],
      463: [9, 2],
      464: [16, 3],
      465: [11, 2],
      466: [7, 2],
      467: [7, 1],
      468: [16, 3],
      469: [5, 3],
      470: [13, 3],
      471: [13, 3],
      472: [13, 3],
      473: [13, 2],
      474: [3, 2],
      475: [8, 3],
      476: [6, 3],
      477: [13, 3],
      478: [13, 3],
      479: [5, 1],
      480: [1, 1],
      481: [9, 2],
      482: [3, 2],
      483: [6, 3],
      484: [8, 1],
      485: [13, 2],
      486: [12, 2],
      487: [10, 3],
      488: [9, 1],
      489: [3, 3],
      490: [1, 1],
      491: [3, 2],
      492: [16, 1],
      493: [0, 3],
      494: [0, 3],
      495: [0, 3],
      496: [0, 2],
      497: [0, 2],
      498: [0, 1],
      499: [3, 2],
      500: [13, 2],
      501: [1, 3],
      502: [13, 3],
      503: [10, 2],
      504: [0, 3],
      505: [13, 3],
      506: [7, 2],
      507: [2, 1],
      508: [8, 3],
      509: [1, 1],
      510: [9, 2],
      511: [16, 3],
      512: [2, 1],
      513: [0, 3],
      514: [0, 1],
      515: [1, 2],
      516: [0, 3],
      517: [9, 2],
      518: [10, 2],
      519: [9, 2],
      520: [11, 2],
      521: [12, 2],
      522: [6, 2],
      523: [4, 1],
      524: [14, 2],
      525: [15, 1],
      526: [0, 3],
      527: [12, 2],
      528: [12, 1],
      529: [4, 1],
      530: [15, 1],
      531: [13, 1],
      532: [11, 1],
      533: [1, 1],
      534: [10, 1],
      535: [9, 1],
      536: [11, 2],
      537: [6, 1],
      538: [11, 3],
      539: [16, 2],
      540: [13, 2],
      541: [0, 1],
      542: [2, 2],
      543: [0, 1],
      544: [8, 1],
      545: [9, 2],
      546: [0, 2],
      547: [0, 2],
      548: [1, 2],
      549: [14, 2],
      550: [12, 1],
      551: [9, 2],
      552: [9, 2],
      553: [14, 1],
      554: [14, 2],
      555: [16, 2],
      556: [14, 1],
      557: [9, 1],
      558: [9, 2],
      559: [12, 1],
      560: [1, 1],
      561: [1, 3],
      562: [3, 2],
      563: [4, 3],
      564: [6, 3],
      565: [6, 1],
      566: [7, 1],
      567: [7, 3],
      568: [0, 3],
      569: [12, 3],
      570: [12, 2],
      571: [11, 3],
      572: [11, 1],
      573: [14, 2],
      574: [17, 2],
      575: [16, 3],
      576: [16, 3],
      577: [17, 2],
      578: [17, 3],
      579: [17, 3],
      580: [11, 3],
      581: [17, 3],
      582: [12, 3],
      583: [17, 1],
      584: [17, 2],
      585: [17, 2],
      586: [0, 2],
      587: [17, 3],
      588: [8, 3],
      589: [0, 3],
      590: [0, 3],
      591: [5, 1],
      592: [10, 2],
      593: [13, 2],
      594: [10, 2],
      595: [9, 2],
      596: [11, 3],
      597: [17, 3],
      598: [12, 3],
      599: [3, 3],
      600: [6, 3],
      601: [17, 3],
      602: [12, 3],
      603: [0, 3],
      604: [12, 3],
      605: [17, 2],
      606: [0, 3],
      607: [0, 3],
      608: [17, 3],
      609: [12, 1],
      610: [0, 1],
      611: [6, 2],
      612: [1, 1],
      613: [2, 2],
      614: [4, 1],
      615: [4, 1],
      616: [4, 1],
      617: [17, 2],
      618: [10, 2],
      619: [4, 1],
      620: [2, 1],
      621: [16, 1],
      622: [0, 1],
      623: [0, 2],
      624: [1, 1],
      625: [1, 2],
      626: [2, 1],
      627: [2, 2],
      628: [3, 1],
      629: [3, 2],
      630: [4, 1],
      631: [4, 2],
      632: [5, 1],
      633: [5, 2],
      634: [6, 1],
      635: [6, 2],
      636: [7, 1],
      637: [7, 2],
      638: [8, 1],
      639: [8, 2],
      640: [9, 1],
      641: [9, 2],
      642: [10, 1],
      643: [10, 2],
      644: [11, 1],
      645: [11, 2],
      646: [12, 1],
      647: [12, 2],
      648: [13, 1],
      649: [13, 2],
      650: [14, 1],
      651: [14, 2],
      652: [15, 1],
      653: [15, 2],
      654: [16, 1],
      655: [16, 2],
      656: [17, 1],
      657: [17, 2],
      658: [12, 1],
      659: [4, 3],
      660: [6, 1],
      661: [3, 3],
      662: [7, 1],
      663: [16, 1],
      664: [10, 2],
      665: [14, 1],
      666: [17, 3],
      667: [4, 1],
      668: [11, 3],
      669: [11, 1],
      670: [11, 1],
      671: [0, 3],
      672: [3, 3],
      673: [0, 3],
      674: [8, 3],
      675: [16, 1],
      676: [6, 2],
      677: [8, 1],
      678: [13, 3],
      679: [6, 1],
      680: [9, 1],
      681: [16, 1],
      682: [9, 2],
      683: [13, 3],
      684: [8, 1],
      685: [3, 3],
      686: [0, 2],
      687: [15, 2],
      688: [11, 1],
      689: [13, 3],
      690: [2, 1],
      691: [15, 2],
      692: [15, 1],
      693: [16, 1],
      694: [14, 3],
      695: [7, 1],
      696: [16, 1],
      697: [10, 2],
      698: [17, 2],
      699: [7, 1],
      700: [12, 2],
      701: [0, 1],
      702: [0, 3],
      703: [13, 2],
      704: [9, 2],
      705: [17, 2],
      706: [13, 1],
      707: [4, 1],
      708: [7, 1],
      709: [5, 1],
      710: [10, 1],
      711: [13, 2],
      712: [7, 1],
      713: [8, 1],
      714: [7, 2],
      715: [0, 3],
      716: [12, 1],
      717: [17, 2],
      718: [0, 1],
      719: [12, 2],
      720: [9, 2],
      721: [12, 1],
      722: [13, 2],
      723: [13, 2],
      724: [8, 1],
      725: [7, 2],
      726: [17, 1],
      727: [5, 1],
      728: [15, 2],
      729: [12, 1],
      730: [10, 2],
      731: [2, 1],
      732: [12, 2],
      733: [10, 2],
      734: [12, 2],
      735: [9, 1],
      736: [13, 2],
      737: [16, 2],
      738: [11, 1],
      739: [14, 2],
      740: [17, 2],
      741: [0, 1],
      742: [8, 1],
      743: [0, 3],
      744: [15, 2],
      745: [10, 2],
      746: [16, 1],
      747: [0, 3],
      748: [1, 3],
      749: [5, 3],
      750: [13, 3],
      751: [15, 1],
      752: [0, 3],
      753: [1, 3],
      754: [12, 1],
      755: [10, 1],
      756: [0, 3],
      757: [9, 1],
      758: [6, 1],
      759: [12, 1],
      760: [0, 1],
      761: [1, 1],
      762: [7, 1],
      763: [14, 1],
      764: [3, 1],
      765: [10, 1],
      766: [2, 1],
      767: [17, 1],
      768: [15, 1],
      769: [13, 1],
      770: [5, 1],
      771: [4, 1],
      772: [16, 1],
      773: [11, 1],
      774: [8, 1],
      775: [15, 3],
      776: [1, 1],
      777: [17, 3],
      778: [11, 1],
      779: [11, 1],
      780: [9, 1],
      781: [8, 1],
      782: [8, 1],
      783: [12, 1],
      784: [15, 1],
      785: [11, 1],
      786: [12, 2],
      787: [11, 2],
      788: [11, 1],
      789: [17, 1],
      790: [17, 2],
      791: [10, 3],
      792: [16, 3],
      793: [16, 1],
      794: [1, 1],
      795: [15, 2],
      796: [8, 2],
      797: [13, 2],
      798: [8, 1],
      799: [15, 1],
      800: [5, 2],
      801: [3, 2],
      802: [17, 2],
      803: [11, 1],
      804: [12, 2],
      805: [0, 2],
      806: [6, 1],
      807: [9, 2],
      808: [16, 1],
      809: [7, 1],
      810: [3, 2],
      811: [1, 3],
      812: [10, 1],
      813: [14, 1],
      814: [2, 1],
      815: [4, 2],
      816: [11, 3],
      817: [16, 1],
      818: [10, 1],
      819: [12, 2],
      820: [15, 2],
      821: [13, 2],
      822: [16, 2],
      823: [1, 1],
      824: [14, 1],
      825: [7, 2],
      826: [13, 2],
      827: [3, 1],
      828: [13, 1],
      829: [0, -1],
      830: [5, 1],
      831: [17, 2],
      832: [13, 2],
      833: [9, 1],
      834: [10, 1],
      835: [11, 2],
      836: [14, 1],
      837: [1, -1],
      838: [4, 1],
      839: [3, 1],
      840: [13, 2],
      841: [7, 2],
      842: [8, -1],
      843: [1, 1],
      844: [7, 2],
      845: [16, 1],
      846: [2, 2],
      847: [12, 2],
      848: [4, 2],
      849: [13, -1],
      850: [13, -1],
      851: [0, 2],
      852: [6, -1],
      853: [1, 1],
      854: [7, 1],
      855: [13, 2],
      856: [15, 1],
      857: [10, 1],
      858: [11, -1],
      859: [8, 1],
      860: [0, 1],
      861: [14, 1],
      862: [15, 1],
      863: [0, -1],
      864: [5, 1],
      865: [10, 1],
      866: [3, 1],
      867: [0, -1],
      868: [0, -1],
      869: [16, 1],
      870: [11, 1],
      871: [9, 2],
      872: [10, 1],
      873: [0, 1],
      874: [8, 2],
      875: [13, 1],
      876: [10, 2],
      877: [16, 2],
      878: [1, 1],
      879: [12, 2],
      880: [0, -1],
      881: [14, -1],
      882: [0, -1],
      883: [14, -1],
      884: [6, 1],
      885: [11, 1],
      886: [10, 2],
      887: [0, 1],
      888: [13, 2],
      889: [7, 1],
      890: [9, 2],
      891: [9, 1],
      892: [12, 1],
      893: [8, 1],
      894: [16, 1],
      895: [10, 1],
      896: [9, 1],
      897: [16, 1],
      898: [3, 1],
      899: [1, 1],
      900: [17, 1],
      901: [0, 2],
      902: [11, 2],
      903: [11, 2],
      904: [11, 1]
    },
    infoCategory: {
      1: "Noraml",
      2: "Important",
      3: "Mainte",
      4: "Update",
      5: "Event",
      6: "Campaign"
    },
    langStr: {
      1: "ja",
      2: "us",
      3: "fr",
      4: "it",
      5: "de",
      7: "es",
      8: "ko",
      9: "sc",
      10: "tc"
    },
    langStrL: {
      1: {
        1: "JPN",
        2: "ENG",
        3: "FRA",
        4: "ITA",
        5: "GER",
        7: "SPA",
        8: "KOR",
        9: "CHS",
        10: "CHT"
      },
      2: {
        1: "JPN",
        2: "ENG",
        3: "FRE",
        4: "ITA",
        5: "GER",
        7: "SP-EU",
        8: "KOR",
        9: "CHS",
        10: "CHT"
      },
      3: {
        1: "JAP",
        2: "ANG",
        3: "FRA",
        4: "ITA",
        5: "ALL",
        7: "ES-EU",
        8: "COR",
        9: "CHS",
        10: "CHT"
      },
      4: {
        1: "GPN",
        2: "ING",
        3: "FRA",
        4: "ITA",
        5: "TED",
        7: "SPA-E",
        8: "COR",
        9: "CIN-S",
        10: "CIN-T"
      },
      5: {
        1: "JPN",
        2: "ENG",
        3: "FRA",
        4: "ITA",
        5: "DEU",
        7: "SP-EU",
        8: "KOR",
        9: "CHV",
        10: "CHT"
      },
      7: {
        1: "JAP",
        2: "ING",
        3: "FRA",
        4: "ITA",
        5: "ALE",
        7: "ES-ES",
        8: "COR",
        9: "CHS",
        10: "CHT"
      },
      8: {
        1: "JPN",
        2: "ENG",
        3: "FRE",
        4: "ITA",
        5: "GER",
        7: "SPA",
        8: "KOR",
        9: "CHS",
        10: "CHT"
      },
      9: {
        1: "JPN",
        2: "ENG",
        3: "FRA",
        4: "ITA",
        5: "GER",
        7: "SPA",
        8: "KOR",
        9: "CHS",
        10: "CHT"
      },
      10: {
        1: "JPN",
        2: "ENG",
        3: "FRA",
        4: "ITA",
        5: "GER",
        7: "SPA",
        8: "KOR",
        9: "CHS",
        10: "CHT"
      }
    },
    regulationLang: {
      1: "ja",
      2: "en",
      3: "fr",
      4: "it",
      5: "de",
      7: "es",
      8: "ko",
      9: "sc",
      10: "tc"
    },
    playericon: ["icon_player_poke_01.png", "icon_player_poke_02.png", "icon_player_poke_03.png", "icon_player_poke_05.png", "icon_player_poke_04.png", "icon_player_npc_03.png", "icon_player_npc_04.png", "icon_player_npc_05.png", "icon_player_npc_06.png", "icon_player_npc_07.png", "icon_player_npc_08.png", "icon_player_npc_09.png", "icon_player_npc_10.png", "icon_player_npc_11.png", "icon_player_npc_12.png", "icon_player_npc_13.png", "icon_player_npc_14.png", "icon_player_npc_15.png", "icon_player_npc_16.png", "icon_player_npc_17.png", "icon_player_npc_18.png", "icon_player_npc_19.png", "icon_player_npc_20.png", "icon_player_npc_21.png", "icon_player_npc_22.png", "icon_player_npc_23.png", "icon_player_npc_24.png", "icon_player_npc_25.png", "icon_player_npc_26.png", "icon_player_npc_27.png", "icon_player_npc_28.png", "icon_player_npc_29.png", "icon_player_npc_30.png", "icon_player_npc_31.png", "icon_player_npc_32.png", "icon_player_npc_33.png", "icon_player_npc_34.png", "icon_player_npc_35.png", "icon_player_npc_36.png", "icon_player_npc_37.png", "icon_player_npc_38.png", "icon_player_npc_39.png", "icon_player_logo_01.png", "icon_player_logo_02.png", "icon_player_logo_03.png", "icon_player_logo_04.png", "icon_player_logo_05.png", "icon_player_logo_06.png", "icon_player_logo_07.png", "icon_player_logo_08.png", "icon_player_logo_09.png", "icon_player_logo_10.png", "icon_player_logo_11.png", "icon_player_logo_12.png", "icon_player_logo_13.png", "icon_player_logo_22.png"],
    temper: {
      0: [0, 0],
      1: [2, 3],
      2: [2, 4],
      3: [2, 5],
      4: [2, 6],
      5: [3, 2],
      6: [0, 0],
      7: [3, 4],
      8: [3, 5],
      9: [3, 6],
      10: [4, 2],
      11: [4, 3],
      12: [0, 0],
      13: [4, 5],
      14: [4, 6],
      15: [5, 2],
      16: [5, 3],
      17: [5, 4],
      18: [0, 0],
      19: [5, 6],
      20: [6, 2],
      21: [6, 3],
      22: [6, 4],
      23: [6, 5],
      24: [0, 0]
    }
  };
  class c {
    constructor() {
      this.selecter = "#t_yesnoDialogBase", this.isOpen = !1
    }
    open(e, t) {
      const a = this,
        n = e.title,
        i = e.msg,
        o = void 0 === e.btn1Callback ? function () {
          a.close()
        } : e.btn1Callback,
        l = void 0 === e.btn2Callback ? function () {
          a.close()
        } : e.btn2Callback,
        r = void 0 === e.btn1enable || e.btn1enable,
        s = void 0 === e.btn2enable || e.btn2enable,
        c = void 0 === t ? function () {} : t;
      if (a.isOpen) return void a.close((function () {
        a.open(e, t)
      }));
      a.isOpen = !0;
      let d = !1;
      $("#yesnoDialogTitle").html(n), $("#yesnoDialogText").html(i), null == e.btn1text ? $("#yesnoDialogBtn1").addClass("disableDisplay") : ($("#yesnoDialogBtn1").removeClass("disableDisplay"), $("#yesnoDialogBtn1>.text").html(e.btn1text), d = !0), null == e.btn2text ? $("#yesnoDialogBtn2").addClass("disableDisplay") : ($("#yesnoDialogBtn2").removeClass("disableDisplay"), $("#yesnoDialogBtn2>.text").html(e.btn2text), d = !0), $("#t_yesnoDialogBase>.back").addClass("anim_dialogBackFadeIn"), $("#t_yesnoDialogBase>.dialog").addClass("anim_dialogSlideIn"), $("#t_yesnoDialogBase").removeClass("disableDisplay"), setTimeout((function () {
        $("#t_yesnoDialogBase>.back").removeClass("anim_dialogBackFadeIn"), $("#t_yesnoDialogBase>.dialog").removeClass("anim_dialogSlideIn"), c()
      }), 200), $("#yesnoDialogBtn1").off("click"), $("#yesnoDialogBtn2").off("click"), console.log("btn1enable=" + r), !1 === r ? $("#yesnoDialogBtn1").addClass("disable") : ($("#yesnoDialogBtn1").removeClass("disable"), $("#yesnoDialogBtn1").click((function (e) {
        return e.preventDefault(), a.close(o), !1
      }))), console.log("btn2enable=" + s), !1 === s ? $("#yesnoDialogBtn2").addClass("disable") : ($("#yesnoDialogBtn2").removeClass("disable"), $("#yesnoDialogBtn2").click((function (e) {
        return e.preventDefault(), a.close(l), !1
      }))), $("#yesnoDialogBack").off("click"), 1 == d && $("#yesnoDialogBack").click((function (e) {
        return e.preventDefault(), a.close(), !1
      }))
    }
    close(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      $("#t_yesnoDialogBase>.back").addClass("anim_dialogBackFadeOut"), $("#t_yesnoDialogBase>.dialog").addClass("anim_dialogSlideOut"), setTimeout((function () {
        $("#t_yesnoDialogBase").addClass("disableDisplay"), $("#t_yesnoDialogBase>.back").removeClass("anim_dialogBackFadeOut"), $("#t_yesnoDialogBase>.dialog").removeClass("anim_dialogSlideOut"), t.isOpen = !1, a()
      }), 200)
    }
  }
  class d {
    constructor() {
      const e = this;
      e.yesnoDialog = new c;
      null == util.getRequestParam("t") && (localStorage.removeItem("uset"), localStorage.removeItem("t")), t_udCtrl.reset(), t_udCtrl.save(), t_udCtrl.login((function () {
        let t = localStorage.getItem("top");
        if (t = null == t ? 0 : t, 1 == t) util.locationReplace("./t_internetcompetition.html");
        else if (2 == t) {
          let t = t_udCtrl.getFriendcompeJoinDataNum();
          console.log("num=" + t[0] + " ,id=" + t[1]), 0 == t[0] ? (e.setBanner(), e.yesnoDialog.open({
            title: langCtrl.lang.t_common.not_join,
            msg: langCtrl.lang.t_common.not_join_friendcompe
          })) : 1 == t[0] ? (t_udCtrl.t_ud.share.selectMydataType = "friendcompe", t_udCtrl.t_ud.share.selectnplnId = t[1], t_udCtrl.save(), util.locationReplace("./t_my_friendcompetition.html")) : (t_udCtrl.t_ud.share.selectMydataType = "friendcompe", t_udCtrl.save(), util.locationReplace("./t_mydataselect.html"))
        } else util.locationReplace("./t_rankmatch.html")
      }))
    }
    setBanner() {
      let e = localStorage.getItem("bn");
      null == e && (e = "pgl_img");
      let t = 1,
        a = $(window).height() / 1020,
        n = $(window).width() / 640;
      t = a > n ? a : n;
      let i = 1020 * t,
        o = 640 * t;
      $("#topbanner").html("<img src='./img/client/" + e + "_blur.jpg' width='" + o + "' height='" + i + "'\" onError=\"this.onerror=null;this.src='./img/client/pgl_img_blur.jpg';\">")
    }
  }
  const u = {
    share: {},
    myInfo: {
      playInfo: {}
    },
    rankmatchInfo: {},
    internetCompeInfo: {},
    tournamentDic: {},
    tournamentDetail: {}
  };
  class m {
    constructor(e) {
      this.now = e;
      let t = localStorage.getItem("t_udversion"),
        a = Math.floor(e / window.refreshTime);
      null == t && (t = 0);
      let n = !1,
        i = localStorage.getItem("lcc"),
        o = localStorage.getItem("ulcc");
      null != o && 0 != o || (o = 0), i > o && (n = !0), localStorage.getItem("dlcc") > 0 && (n = !0), localStorage.getItem("ll") != util.langCode() && (n = !0), t = parseInt(t, 10), a > t || n ? (console.log("UD蛻晄悄蛹�"), localStorage.setItem("t_udversion", a), this.t_ud = u, this.t_ud.myInfo.playInfo = {}, this.t_ud.rankmatchInfo = {}, this.t_ud.internetCompeInfo = {}, this.t_ud.tournamentDic = {}, this.t_ud.tournamentDetail = {}, localStorage.setItem("ulcc", i), localStorage.setItem("dlcc", 0), this.save()) : (console.log("UD繝ｭ繝ｼ繝�"), this.load())
    }
    reset() {
      console.log("UD繝ｪ繧ｻ繝�ヨ"), this.t_ud = u, this.t_ud.myInfo.playInfo = {}, this.t_ud.rankmatchInfo = {}, this.t_ud.internetCompeInfo = {}, this.t_ud.tournamentDic = {}, this.t_ud.tournamentDetail = {}
    }
    load() {
      let e = LZString.decompress(localStorage.getItem("t_ud"));
      null != e && 0 !== e.length ? this.t_ud = JSON.parse(e) : this.t_ud = u
    }
    save() {
      localStorage.setItem("t_ud", LZString.compress(JSON.stringify(this.t_ud)))
    }
    login(e, t) {
      const a = this;
      e = void 0 === e ? function () {} : e, t = void 0 === t ? function () {} : t;
      let n = localStorage.getItem("d");
      if (null != n ? 0 != n && (this.t_ud.share.unitTestType = n) : this.t_ud.share.unitTestType = void 0, console.log("unitTestType=" + this.t_ud.share.unitTestType), localStorage.setItem("ll", util.langCode()), Object.keys(this.t_ud.myInfo.playInfo).length > 0) return console.log("縺吶〒縺ｫ繝ｭ繧ｰ繧､繝ｳ貂医∩"), a.t_ud.share.isLogin = !0, void e();
      if (console.log("譛ｪ繝ｭ繧ｰ繧､繝ｳ縺ｪ縺ｮ縺ｧplayInfo蜿門ｾ�"), 1 == a.unitTestLogin()) return util.requestWaitView(), void setTimeout((function () {
        util.requestWaitView(!1), a.joinInfoOrganize(), e()
      }), 1e3);
      const i = util.token();
      if (null == i || "" == i) return console.log("繝医�繧ｯ繝ｳ縺後↑縺��縺ｧ繝ｭ繧ｰ繧､繝ｳ縺励↑縺�"), a.t_ud.share.isLogin = !0, void e();
      util.t_request("/tt/bd/playinfo/trainer", {}, (function (t) {
        a.t_ud.share.isLogin = !0, a.t_ud.myInfo.playInfo = t.trainer, a.joinInfoOrganize(), e()
      }), (function (e, a) {
        t(e, a)
      }))
    }
    joinInfoOrganize() {
      const e = this;
      for (let t in e.t_ud.myInfo.playInfo)
        if (e.t_ud.myInfo.playInfo[t].hasOwnProperty("join"))
          for (let a in e.t_ud.myInfo.playInfo[t].join) e.t_ud.myInfo.playInfo[t].join[a].hasOwnProperty("type") && (1 == e.t_ud.myInfo.playInfo[t].join[a].type ? (e.t_ud.myInfo.playInfo[t].internetcompeList = e.t_ud.myInfo.playInfo[t].join[a].ids, null == e.t_ud.myInfo.playInfo[t].internetcompeList && (e.t_ud.myInfo.playInfo[t].internetcompeList = [])) : 2 == e.t_ud.myInfo.playInfo[t].join[a].type ? (e.t_ud.myInfo.playInfo[t].friendcompeList = e.t_ud.myInfo.playInfo[t].join[a].ids, null == e.t_ud.myInfo.playInfo[t].friendcompeList && (e.t_ud.myInfo.playInfo[t].friendcompeList = [])) : 3 == e.t_ud.myInfo.playInfo[t].join[a].type && (e.t_ud.myInfo.playInfo[t].rankmatchSeasonList = e.t_ud.myInfo.playInfo[t].join[a].ids, null == e.t_ud.myInfo.playInfo[t].rankmatchSeasonList && (e.t_ud.myInfo.playInfo[t].rankmatchSeasonList = [])))
    }
    load_rankmatch_list(e, t) {
      const a = this;
      if (e = null == e ? "Sc" : e, t = void 0 === t ? function () {} : t, console.log("繝ｩ繝ｳ繧ｯ繝槭Μ繧ｹ繝域焚" + Object.keys(this.t_ud.rankmatchInfo).length), Object.keys(this.t_ud.rankmatchInfo).length > 0) return console.log("繝ｩ繝ｳ繧ｯ繝槭Μ繧ｹ繝亥叙蠕玲ｸ医∩縺ｪ縺ｮ縺ｧAPI繧ｹ繧ｭ繝��"), void t();
      if (console.log("繝ｩ繝ｳ繧ｯ繝槭Μ繧ｹ繝域悴蜿門ｾ励↑縺ｮ縺ｧAPI蜻ｼ縺ｶ"), 1 == a.unitTestRankmatchInfo()) return util.requestWaitView(), void setTimeout((function () {
        util.requestWaitView(!1), t()
      }), 1e3);
      const n = {
        soft: e
      };
      util.t_request("/tt/cbd/competition/rankmatch/list", n, (function (e) {
        a.t_ud.rankmatchInfo = {};
        const n = Object.keys(e.list);
        for (let t in n) {
          void 0 === a.t_ud.rankmatchInfo[n[t]] && (a.t_ud.rankmatchInfo[n[t]] = {});
          const i = Object.keys(e.list[n[t]]);
          for (let o in i) 0 == e.list[n[t]][i[o]].rule ? a.t_ud.rankmatchInfo[n[t]].single = e.list[n[t]][i[o]] : 1 == e.list[n[t]][i[o]].rule && (a.t_ud.rankmatchInfo[n[t]].double = e.list[n[t]][i[o]])
        }
        a.save(), t()
      }))
    }
    load_myresult_rankmatch(e, t, a) {
      const n = this;
      if (a = void 0 === a ? function () {} : a, null == e) return console.error("load_myresult_rankmatch( nplnId=" + e + " )"), !1;
      if (console.log("繝ｩ繝ｳ繧ｯ繝舌ヨ繝ｫ邨先棡蜿門ｾ�( nplnId=" + e + " , seasonId=" + t + " )"), void 0 === n.t_ud.myInfo.playInfo[e].rankmatch && (n.t_ud.myInfo.playInfo[e].rankmatch = {}), void 0 !== n.t_ud.myInfo.playInfo[e].rankmatch[t]) return console.log("繝ｩ繝ｳ繧ｯ繝舌ヨ繝ｫ邨先棡蜿門ｾ玲ｸ医∩縺ｪ縺ｮ縺ｧAPI繧ｹ繧ｭ繝��"), void a();
      if (n.t_ud.myInfo.playInfo[e].rankmatch[t] = {}, console.log("繝ｩ繝ｳ繧ｯ繝舌ヨ繝ｫ邨先棡譛ｪ蜿門ｾ玲ｸ医∩縺ｪ縺ｮ縺ｧAPI蜻ｼ縺ｶ"), 1 == n.unitTestMyresultRankmatchInfo(e, t)) return util.requestWaitView(), void setTimeout((function () {
        util.requestWaitView(!1), a()
      }), 1e3);
      const i = {
        nplnId: e,
        season: t
      };
      util.t_request("/tt/bd/playinfo/rankmatch/result", i, (function (i) {
        const o = Object.keys(i.result);
        n.t_ud.myInfo.playInfo[e].rankmatch[t] = {};
        for (let a in o) n.t_ud.rankmatchInfo[t].single.cId == o[a] ? (n.t_ud.myInfo.playInfo[e].rankmatch[t].single = i.result[o[a]], n.t_ud.myInfo.playInfo[e].rankmatch[t].single.cId = o[a]) : n.t_ud.rankmatchInfo[t].double.cId == o[a] && (n.t_ud.myInfo.playInfo[e].rankmatch[t].double = i.result[o[a]], n.t_ud.myInfo.playInfo[e].rankmatch[t].double.cId = o[a]);
        n.save(), a()
      }))
    }
    load_history(e, t, a, n, i) {
      const o = this;
      if (n = void 0 !== n && n, i = void 0 === i ? function () {} : i, void 0 === a) return console.error("load_history() compeId undefined"), void 0 === e.history && (e.history = []), void i();
      if (null == this.compe_lastKey && (this.compe_lastKey = {}), "_finish_" == o.compe_lastKey[a]) return console.log("謌ｦ邵ｾ譛蠕後∪縺ｧ蜿門ｾ玲ｸ医∩縺ｪ縺ｮ縺ｧAPI繧ｹ繧ｭ繝��"), void i();
      const l = {};
      if (void 0 === e.history || n) {
        if (void 0 === e.history && (e.history = []), console.log("謌ｦ邵ｾ譛ｪ蜿門ｾ励↑縺ｮ縺ｧAPI蜻ｼ縺ｶ"), 1 == o.unitTestHistory(e, t, a)) return util.requestWaitView(), void setTimeout((function () {
          util.requestWaitView(!1), i()
        }), 1e3);
        void 0 === this.compe_lastKey[a] ? (l.nplnId = t, l.competitionId = a) : (l.nplnId = t, l.competitionId = a, l.lastKey = this.compe_lastKey[a]), util.t_request("/tt/bd/playinfo/battleLog", l, (function (t) {
          for (let a in t.log) e.history.push(t.log[a]);
          "" == t.lastKey && o.compe_lastKey[a], o.compe_lastKey[a] = t.lastKey, o.save(), i()
        }))
      } else console.log("謌ｦ邵ｾ蜿門ｾ玲ｸ医∩縺ｪ縺ｮ縺ｧAPI繧ｹ繧ｭ繝��"), i()
    }
    load_internetcompe_list(e, t, a) {
      const n = this;
      if (t = void 0 !== t && t, e = null === e ? "Sc" : e, a = void 0 === a ? function () {} : a, "__finish__" == n.t_ud.internetcompe_list_lastKey) return a(), !1;
      if (1 == n.unitTestInternetcompeList()) return util.requestWaitView(), void setTimeout((function () {
        util.requestWaitView(!1), a()
      }), 1e3);
      const i = {};
      return 0 == Object.keys(n.t_ud.internetCompeInfo).length || t ? (void 0 === n.t_ud.internetcompe_list_lastKey ? i.soft = e : (i.soft = e, i.lastKey = n.t_ud.internetcompe_list_lastKey), util.t_request("/tt/cbd/competition/internet/list", i, (function (e) {
        if (void 0 === n.t_ud.internetCompeInfo && (n.t_ud.internetCompeInfo = {}), void 0 !== e.list) {
          const t = Object.keys(e.list);
          for (let a in t) n.t_ud.internetCompeInfo[t[a]] = e.list[t[a]], n.t_ud.internetCompeInfo[t[a]].cId = t[a];
          "" == e.lastKey ? n.t_ud.internetcompe_list_lastKey = "__finish__" : n.t_ud.internetcompe_list_lastKey = e.lastKey
        }
        n.save(), a()
      }))) : a(), !0
    }
    load_my_internetcompe_detail(e, t, a) {
      const n = this;
      if (a = void 0 === a ? function () {} : a, null == e) return console.error("load_my_internetcompe_detail( nplnId=" + e + " )"), !1;
      if (console.log("繧､繝ｳ繧ｿ繝ｼ繝阪ャ繝亥､ｧ莨夂ｵ先棡蜿門ｾ�( nplnId=" + e + " , compeId=" + t + " )"), void 0 === n.t_ud.myInfo.playInfo[e].internetCompe && (n.t_ud.myInfo.playInfo[e].internetCompe = {}), void 0 === n.t_ud.myInfo.playInfo[e].internetCompe[t] && (n.t_ud.myInfo.playInfo[e].internetCompe[t] = {}), void 0 === n.t_ud.myInfo.playInfo[e].internetCompe[t].result) {
        if (1 == n.unitTestMyresultInternetcompeInfo(e, t)) return util.requestWaitView(), void setTimeout((function () {
          util.requestWaitView(!1), a()
        }), 1e3);
        const i = {
          nplnId: e,
          competitionId: t
        };
        util.t_request("/tt/bd/playinfo/internet/result", i, (function (i) {
          n.t_ud.myInfo.playInfo[e].internetCompe[t].result = i.result, n.save(), a()
        }))
      } else a()
    }
    load_tournament_detail(e, t) {
      const a = this,
        n = e.compeId;
      t = void 0 === t ? function () {} : t;
      Object.keys(this.t_ud.myInfo.playInfo).length;
      if (1 == a.unitTestTournamentDetail(n)) return util.requestWaitView(), void setTimeout((function () {
        util.requestWaitView(!1), t()
      }), 1e3);
      let i = "";
      i = "/tt/tournament/competition/detail";
      const o = {
        compeId: n
      };
      util.t_request(i, o, (function (e) {
        200 == e.code ? (a.t_ud.tournamentDetail[n] = e, a.save()) : console.log("error: " + i + ", " + e.code + ", " + e.detail), t()
      }))
    }
    load_friendcompe_list(e, t, a) {
      const n = this;
      if (t = void 0 !== t && t, null == e) return console.error("load_friendcompe_list( nplnId=" + e + " )"), !1;
      if (a = void 0 === a ? function () {} : a, "__finish__" == n.t_ud.friendcompe_list_lastKey) return a(), !1;
      if (void 0 === n.t_ud.myInfo.playInfo[e].friendCompe && (n.t_ud.myInfo.playInfo[e].friendCompe = {}), 1 == n.unitTestFriendcompeList(e)) return util.requestWaitView(), void setTimeout((function () {
        util.requestWaitView(!1), a()
      }), 1e3);
      const i = {};
      return 0 == Object.keys(this.t_ud.myInfo.playInfo[e].friendCompe).length || t ? (void 0 === this.t_ud.friendcompe_list_lastKey ? i.nplnId = e : (i.nplnId = e, i.lastKey = this.t_ud.friendcompe_list_lastKey), util.t_request("/tt/bd/playinfo/friend/list", i, (function (t) {
        for (let a in t.list) n.t_ud.myInfo.playInfo[e].friendCompe[t.list[a].cId] = t.list[a];
        "" == t.lastKey ? n.t_ud.friendcompe_list_lastKey = "__finish__" : n.t_ud.friendcompe_list_lastKey = t.lastKey, n.save(), a()
      }))) : a(), !0
    }
    load_friendcompe_detail(e, t, a) {
      const n = this;
      if (a = void 0 === a ? function () {} : a, 1 == n.unitTestFriendcompeDetail(e, t)) return util.requestWaitView(), void setTimeout((function () {
        util.requestWaitView(!1), a()
      }), 1e3);
      if (void 0 === this.t_ud.myInfo.playInfo[e].friendCompe[t].result) {
        const i = {
          nplnId: e,
          competitionId: t
        };
        util.t_request("/tt/bd/playinfo/firendbattlelog", i, (function (i) {
          n.t_ud.myInfo.playInfo[e].friendCompe[t].result = i.result, n.t_ud.myInfo.playInfo[e].friendCompe[t].log = i.log, n.save(), a()
        }))
      } else a()
    }
    getRankmatchJoinDataNum() {
      const e = this;
      let t, a = 0;
      for (let n in e.t_ud.myInfo.playInfo) e.t_ud.myInfo.playInfo[n].hasOwnProperty("rankmatchSeasonList") && e.t_ud.myInfo.playInfo[n].rankmatchSeasonList.length > 0 && (t = n, a++);
      return [a, t]
    }
    getRankmatchJoinNewestSeason(e, t) {
      const a = this;
      let n = "";
      if (e in a.t_ud.myInfo.playInfo && a.t_ud.myInfo.playInfo[e].hasOwnProperty("rankmatchSeasonList"))
        for (let i in a.t_ud.myInfo.playInfo[e].rankmatchSeasonList)
          if (n = a.t_ud.myInfo.playInfo[e].rankmatchSeasonList[i], t == n) break;
      return n
    }
    isJoinRankmatch1(e) {
      const t = this;
      return !!(e in t.t_ud.myInfo.playInfo && t.t_ud.myInfo.playInfo[e].hasOwnProperty("rankmatchSeasonList") && t.t_ud.myInfo.playInfo[e].rankmatchSeasonList.length > 0)
    }
    isJoinRankmatch2(e, t) {
      const a = this;
      return "string" == typeof t && (t = Number(t)), !(!(e in a.t_ud.myInfo.playInfo) || !a.t_ud.myInfo.playInfo[e].hasOwnProperty("rankmatchSeasonList") || -1 === a.t_ud.myInfo.playInfo[e].rankmatchSeasonList.indexOf(t))
    }
    getInternetcompeJoinDataNum() {
      const e = this;
      let t, a = 0;
      for (let n in e.t_ud.myInfo.playInfo) e.t_ud.myInfo.playInfo[n].hasOwnProperty("internetcompeList") && e.t_ud.myInfo.playInfo[n].internetcompeList.length > 0 && (t = n, a++);
      return [a, t]
    }
    getInternetcompeJoinDataNum2(e) {
      const t = this;
      let a, n = 0;
      for (let i in t.t_ud.myInfo.playInfo) t.t_ud.myInfo.playInfo[i].hasOwnProperty("internetcompeList") && -1 !== t.t_ud.myInfo.playInfo[i].internetcompeList.indexOf(e) && (a = i, n++);
      return [n, a]
    }
    isJoinInternetcompe1(e) {
      const t = this;
      return !!(e in t.t_ud.myInfo.playInfo && t.t_ud.myInfo.playInfo[e].hasOwnProperty("internetcompeList") && t.t_ud.myInfo.playInfo[e].internetcompeList.length > 0)
    }
    isJoinInternetcompe2(e, t) {
      const a = this;
      return !(!(e in a.t_ud.myInfo.playInfo) || !a.t_ud.myInfo.playInfo[e].hasOwnProperty("internetcompeList") || -1 === a.t_ud.myInfo.playInfo[e].internetcompeList.indexOf(t))
    }
    getFriendcompeJoinDataNum() {
      const e = this;
      let t, a = 0;
      for (let n in e.t_ud.myInfo.playInfo) e.t_ud.myInfo.playInfo[n].hasOwnProperty("friendcompeList") && e.t_ud.myInfo.playInfo[n].friendcompeList.length > 0 && (t = n, a++);
      return [a, t]
    }
    getFriendcompeJoinDataNum2(e) {
      "number" == typeof e && (e = String(e));
      const t = this;
      let a, n = 0;
      for (let i in t.t_ud.myInfo.playInfo) t.t_ud.myInfo.playInfo[i].hasOwnProperty("friendcompeList") && -1 !== t.t_ud.myInfo.playInfo[i].friendcompeList.indexOf(e) && (a = i, n++);
      return [n, a]
    }
    isJoinFriendcompe1(e) {
      const t = this;
      return !!(e in t.t_ud.myInfo.playInfo && t.t_ud.myInfo.playInfo[e].hasOwnProperty("friendcompeList") && t.t_ud.myInfo.playInfo[e].friendcompeList.length > 0)
    }
    isJoinFriendcompe2(e, t) {
      "number" == typeof t && (t = String(t));
      const a = this;
      return !(!(e in a.t_ud.myInfo.playInfo) || !a.t_ud.myInfo.playInfo[e].hasOwnProperty("friendcompeList") || -1 === a.t_ud.myInfo.playInfo[e].friendcompeList.indexOf(t))
    }
    trainerRankingRequest(e, t) {
      const a = this;
      if (void 0 !== this.t_ud.share.unitTestType) return util.requestWaitView(), void setTimeout((function () {
        util.requestWaitView(!1);
        let n = a.unitTestTrainerRanking(e);
        t(n)
      }), 1e3);
      util.t_rankingRequest(e, (function (e) {
        t(e)
      }), (function () {
        t(null)
      }))
    }
    pokemonRankingRequest(e, t) {
      const a = this;
      if (void 0 !== this.t_ud.share.unitTestType) return util.requestWaitView(), void setTimeout((function () {
        util.requestWaitView(!1);
        let e = a.unitTestPokemonRanking();
        t(e)
      }), 1e3);
      util.t_rankingRequest(e, (function (e) {
        t(e)
      }), (function () {
        t(null)
      }))
    }
    pokemonRankingDetailRequest(e, t) {
      const a = this;
      if (void 0 !== this.t_ud.share.unitTestType) return util.requestWaitView(), void setTimeout((function () {
        util.requestWaitView(!1);
        let e = a.unitTestPokemonRankingDetail();
        t(e)
      }), 1e3);
      util.t_rankingRequest(e, (function (e) {
        t(e)
      }), (function () {
        t(null)
      }))
    }
    tournamentRankingRequest(e, t) {
      const a = this;
      if (void 0 !== this.t_ud.share.unitTestType) return util.requestWaitView(), void setTimeout((function () {
        util.requestWaitView(!1);
        let n = a.unitTestTrainerRanking(e);
        t(n)
      }), 1e3);
      util.t_rankingRequest(e, (function (e) {
        t(e)
      }), (function () {
        t(null)
      }))
    }
    unitTestLogin() {
      return void 0 !== this.t_ud.share.unitTestType && (console.log("繝ｭ繧ｰ繧､繝ｳ蜊倅ｽ薙ユ繧ｹ繝医ョ繝ｼ繧ｿ螻暮幕[myInfo.playInfo]"), this.t_ud.share.isLogin = !0, 2 == this.t_ud.share.unitTestType ? (this.save(), !0) : (this.t_ud.myInfo.playInfo[11111] = {
        nplnId: "11111",
        romId: "Vi",
        icon: "cmn_player_0301",
        iconImg: "544a9fed98c7d6f29559d02f9fc7cd1d17ea742e",
        name: "name11",
        sex: 1,
        lang: 1,
        trainerId: 123456,
        join: [{
          type: 1,
          ids: ["104515", "104516", "104517"]
        }, {
          type: 2,
          ids: ["1000031", "1000032"]
        }, {
          type: 3,
          ids: [1, 3, 4]
        }]
      }, this.t_ud.myInfo.playInfo[11112] = {
        nplnId: "11112",
        romId: "Sc",
        icon: "cmn_player_0302",
        iconImg: "544a9fed98c7d6f29559d02f9fc7cd1d17ea742e",
        name: "name12",
        sex: 1,
        lang: 2,
        trainerId: 234567,
        join: [{
          type: 1,
          ids: ["104515", "104516", "104517"]
        }, {
          type: 2,
          ids: ["1000031", "1000032"]
        }, {
          type: 3,
          ids: [1, 3]
        }]
      }, this.t_ud.myInfo.playInfo[11113] = {
        nplnId: "11113",
        romId: "Sc",
        icon: "cmn_player_0303",
        iconImg: "544a9fed98c7d6f29559d02f9fc7cd1d17ea742e",
        name: "name13",
        sex: 1,
        lang: 3,
        trainerId: 345678,
        join: [{
          type: 2,
          ids: ["1000031"]
        }]
      }, this.t_ud.myInfo.playInfo[22221] = {
        nplnId: "22221",
        romId: "Vi",
        icon: "cmn_player_0401",
        iconImg: "544a9fed98c7d6f29559d02f9fc7cd1d17ea742e",
        name: "name21",
        sex: 1,
        lang: 4,
        trainerId: 456789,
        join: [{
          type: 1,
          ids: ["104515", "104516"]
        }, {
          type: 3,
          ids: [1]
        }]
      }, this.t_ud.myInfo.playInfo[22222] = {
        nplnId: "22222",
        romId: "Vi",
        icon: "cmn_player_0402",
        iconImg: "544a9fed98c7d6f29559d02f9fc7cd1d17ea742e",
        name: "name22",
        sex: 1,
        lang: 5,
        trainerId: 567890
      }, this.save(), !0))
    }
    unitTestRankmatchInfo() {
      if (void 0 === this.t_ud.share.unitTestType) return !1;
      console.log("繝ｩ繝ｳ繧ｯ繝舌ヨ繝ｫ蜊倅ｽ薙ユ繧ｹ繝医ョ繝ｼ繧ｿ螻暮幕[rankmatchInfo]");
      let e = "繧ｷ繝ｼ繧ｺ繝ｳ",
        t = "",
        a = "";
      var n = util.langCode();
      switch (parseInt(n)) {
      case 1:
        e = "繧ｷ繝ｼ繧ｺ繝ｳ%d", t = "2022/11/18 13:30", a = "2022/12/1 15:00";
        break;
      case 2:
        e = "Season %d", t = "11/18/22 13:30", a = "12/01/22 15:00";
        break;
      case 3:
        e = "Saison %d", t = "18/11/2022 13:30", a = "01/12/2022 15:00";
        break;
      case 4:
        e = "Stagione %d", t = "18/11/2022 13:30", a = "01/12/2022 15:00";
        break;
      case 5:
        e = "Saison %d", t = "18.11.2022 13:30", a = "01.12.2022 15:00";
        break;
      case 7:
        e = "Temporada %d", t = "18/11/2022 13:30", a = "01/12/2022 15:00";
        break;
      case 8:
        e = "�懍ｦ� %d", t = "2022.11.18 13:30", a = "2022.12.01 15:00";
        break;
      case 9:
      case 10:
        e = "隨ｬ%d蟄｣", t = "2022/11/18 13:30", a = "2022/12/1 15:00"
      }
      return this.t_ud.rankmatchInfo = {
        1: {
          single: {
            cId: "10011",
            name: util.msNumFormat(e, [1]),
            start: t,
            end: a,
            cnt: 5e5,
            rule: 0,
            season: 1,
            rst: 2,
            ts1: 1587015942,
            ts2: 1587015970,
            rankCnt: 54321
          },
          double: {
            cId: "10012",
            name: util.msNumFormat(e, [1]),
            start: t,
            end: a,
            cnt: 512e3,
            rule: 1,
            season: 1,
            rst: 2,
            ts1: 1587015942,
            ts2: 1587015970,
            rankCnt: 54321
          }
        },
        2: {
          single: {
            cId: "10021",
            name: util.msNumFormat(e, [2]),
            start: t,
            end: a,
            cnt: 3e5,
            rule: 0,
            season: 2,
            rst: 2,
            ts1: 1596178573,
            ts2: 1596178606
          },
          double: {
            cId: "10022",
            name: util.msNumFormat(e, [2]),
            start: t,
            end: a,
            cnt: 34e4,
            rule: 1,
            season: 2,
            rst: 2,
            ts1: 1596178573,
            ts2: 1596178606
          }
        },
        3: {
          single: {
            cId: "10031",
            name: util.msNumFormat(e, [3]),
            start: t,
            end: a,
            cnt: 4e5,
            rule: 0,
            season: 3,
            rst: 1,
            ts1: 1596178573,
            ts2: 1596178606,
            rankCnt: 54321
          },
          double: {
            cId: "10032",
            name: util.msNumFormat(e, [3]),
            start: t,
            end: a,
            cnt: 45e4,
            rule: 1,
            season: 3,
            rst: 1,
            ts1: 1596178573,
            ts2: 1596178606,
            rankCnt: 54321
          }
        },
        4: {
          single: {
            cId: "10041",
            name: util.msNumFormat(e, [4]),
            start: t,
            end: a,
            cnt: 4e5,
            rule: 0,
            season: 4,
            rst: 1,
            ts1: 1596178573,
            ts2: 1596178606,
            rankCnt: 54321
          },
          double: {
            cId: "10042",
            name: util.msNumFormat(e, [4]),
            start: t,
            end: a,
            cnt: 45e4,
            rule: 1,
            season: 4,
            rst: 1,
            ts1: 1596178573,
            ts2: 1596178606,
            rankCnt: 54321
          }
        },
        5: {
          single: {
            cId: "10051",
            name: util.msNumFormat(e, [5]),
            start: t,
            end: a,
            cnt: 4e5,
            rule: 0,
            season: 5,
            rst: 0,
            ts1: 0,
            ts2: 0
          },
          double: {
            cId: "10052",
            name: util.msNumFormat(e, [5]),
            start: t,
            end: a,
            cnt: 45e4,
            rule: 1,
            season: 5,
            rst: 0,
            ts1: 0,
            ts2: 0
          }
        }
      }, this.save(), !0
    }
    unitTestMyresultRankmatchInfo(e, t) {
      if (void 0 === this.t_ud.share.unitTestType) return !1;
      let a, n, i, o;
      switch (console.log("繝ｩ繝ｳ繧ｯ繝舌ヨ繝ｫ邨先棡蜊倅ｽ薙ユ繧ｹ繝医ョ繝ｼ繧ｿ螻暮幕[playInfo[" + e + "].rankmatch[" + t + "]]"), t) {
      case "1":
        a = "10011", n = "10012", i = 0, o = 4;
        break;
      case "2":
        return a = "10021", n = "10022", !0;
      case "3":
        a = "10031", n = "10032", i = 1, o = 2;
        break;
      case "4":
        a = "10041", n = "10042", i = 4, o = 3;
        break;
      case "5":
        return a = "10051", n = "10052", !0
      }
      return this.t_ud.myInfo.playInfo[e].rankmatch[t] = {
        single: {
          cId: a,
          competition_id: 10111,
          total_win: 26,
          total_draw: 0,
          total_loss: 9,
          ranking: {
            status: 1,
            rank_type: 1,
            rank: 50001
          },
          rating_value: "1663670",
          rankmatch: {
            layer: i,
            rank: 10,
            point: 123
          }
        },
        double: {
          cId: n,
          competition_id: 10112,
          total_win: 10,
          total_draw: 0,
          total_loss: 2,
          ranking: {
            status: 1,
            rank_type: 1,
            rank: 123
          },
          rating_value: "1500000",
          rankmatch: {
            layer: o,
            rank: 9,
            point: 23456
          }
        }
      }, 1 == t && (this.t_ud.myInfo.playInfo[e].rankmatch[t].double.total_win = 0, this.t_ud.myInfo.playInfo[e].rankmatch[t].double.total_draw = 0, this.t_ud.myInfo.playInfo[e].rankmatch[t].double.total_loss = 0), this.save(), !0
    }
    unitTestHistory(e, t, a) {
      if (void 0 === this.t_ud.share.unitTestType) return !1;
      console.log("蟇ｾ謌ｦ繝ｭ繧ｰ蜊倅ｽ薙ユ繧ｹ繝医ョ繝ｼ繧ｿ螻暮幕compeId=" + a);
      let n = "繧ｷ繝ｳ繧ｰ繝ｫ";
      "10012" == a && (n = "繝繝悶Ν"), e.history = [];
      for (let t = 0; t < 40; t++) e.history.push({
        name: n + "蜷�" + (3 * t + 1),
        date: "2019/11/17 00:09",
        icon: "cmn_player_0501.png",
        rank: "1",
        result: "0",
        locale: "JPN",
        rentalTeamId: 0
      }), e.history.push({
        name: n + "蜷�" + (3 * t + 2),
        date: "2019/11/17 00:09",
        icon: "cmn_player_0501.png",
        rank: "1",
        result: "1",
        locale: "JPN",
        rentalTeamId: 0
      }), e.history.push({
        name: n + "蜷�" + (3 * t + 3),
        date: "2019/11/17 00:09",
        icon: "cmn_player_0501.png",
        rank: "1",
        result: "2",
        locale: "JPN",
        rentalTeamId: 1
      });
      return e.history.push({
        name: n + "蜷�",
        date: "2019/11/17 00:09",
        icon: "cmn_player_0501.png",
        rank: "1",
        result: "0",
        locale: "JPN",
        rentalTeamId: 0
      }), !0
    }
    unitTestInternetcompeList() {
      const e = this;
      if (void 0 === e.t_ud.share.unitTestType) return !1;
      if (console.log("繧､繝ｳ繧ｿ繝ｼ繝阪ャ繝亥､ｧ莨壹Μ繧ｹ繝亥腰菴薙ユ繧ｹ繝医ョ繝ｼ繧ｿ螻暮幕[internetCompeInfo]"), 0 == Object.keys(e.t_ud.internetCompeInfo)) {
        let t;
        e.t_ud.internetCompeInfo = {
          104536: {
            name: "繝医�繝翫Γ繝ｳ繝茨ｼ�4莠ｺ��",
            subname: "繧ｵ繝悶ロ繝ｼ繝�",
            start: "2020/05/22 7:50",
            end: "2020/05/22 17:00",
            startTs: "1590101400",
            rule: 1,
            cnt: 2,
            soft: ["Sc", "Vi"],
            banner: "banner_01.jpg",
            text: "",
            rst: 2,
            ts1: 1611145591,
            ts2: 1611145598,
            rankCnt: 54321,
            hst: 2,
            tournament: 1
          },
          104535: {
            name: "繝医�繝翫Γ繝ｳ繝茨ｼ�8莠ｺ��",
            subname: "繧ｵ繝悶ロ繝ｼ繝�",
            start: "2020/05/22 7:50",
            end: "2020/05/22 17:00",
            startTs: "1590101400",
            rule: 1,
            cnt: 2,
            soft: ["Sc", "Vi"],
            banner: "banner_01.jpg",
            text: "",
            rst: 2,
            ts1: 1611145591,
            ts2: 1611145598,
            rankCnt: 54321,
            hst: 2,
            tournament: 1
          },
          104534: {
            name: "繝医�繝翫Γ繝ｳ繝茨ｼ�16莠ｺ��",
            subname: "繧ｵ繝悶ロ繝ｼ繝�",
            start: "2020/05/22 7:50",
            end: "2020/05/22 17:00",
            startTs: "1590101400",
            rule: 1,
            cnt: 2,
            soft: ["Sc", "Vi"],
            banner: "banner_01.jpg",
            text: "",
            rst: 2,
            ts1: 1611145591,
            ts2: 1611145598,
            rankCnt: 54321,
            hst: 2,
            tournament: 1
          },
          104533: {
            name: "繝医�繝翫Γ繝ｳ繝茨ｼ�32莠ｺ��",
            subname: "繧ｵ繝悶ロ繝ｼ繝�",
            start: "2020/05/22 7:50",
            end: "2020/05/22 17:00",
            startTs: "1590101400",
            rule: 0,
            cnt: 32,
            soft: ["Sc", "Vi"],
            banner: "banner_01.jpg",
            text: "",
            rst: 2,
            ts1: 1611145591,
            ts2: 1611145598,
            rankCnt: 54321,
            hst: 1,
            tournament: 1
          },
          104532: {
            name: "繝医�繝翫Γ繝ｳ繝�2��64莠ｺ�峨ム繝悶Ν繧ｨ繝ｪ繝�",
            subname: "繧ｵ繝悶ロ繝ｼ繝�",
            start: "2020/05/22 7:50",
            end: "2020/05/22 17:00",
            startTs: "1590101400",
            rule: 1,
            cnt: 64,
            soft: ["Sc", "Vi"],
            banner: "banner_01.jpg",
            text: "",
            rst: 2,
            ts1: 1611145591,
            ts2: 1611145598,
            rankCnt: 54321,
            hst: 2,
            tournament: 1
          },
          104531: {
            name: "繝医�繝翫Γ繝ｳ繝茨ｼ�64莠ｺ�峨す繝ｳ繧ｰ繝ｫ繧ｨ繝ｪ繝�",
            subname: "繧ｵ繝悶ロ繝ｼ繝�",
            start: "2020/05/22 7:50",
            end: "2020/05/22 17:00",
            startTs: "1590101400",
            rule: 0,
            cnt: 64,
            soft: ["Sc", "Vi"],
            banner: "banner_01.jpg",
            text: "",
            rst: 2,
            ts1: 1611145591,
            ts2: 1611145598,
            rankCnt: 54321,
            hst: 1,
            tournament: 1
          },
          104520: {
            name: "繧､繝ｳ繧ｿ繝ｼ繝阪ャ繝亥､ｧ莨夲ｼ�",
            start: "2020/05/22 7:50",
            end: "2020/05/22 17:00",
            startTs: "1590101400",
            rule: 0,
            cnt: 3333,
            soft: ["Sc", "Vi"],
            banner: "banner_01.jpg",
            text: "",
            rst: 2,
            ts1: 0,
            ts2: 0,
            hst: 0,
            tournament: 0
          },
          104519: {
            name: "繧､繝ｳ繧ｿ繝ｼ繝阪ャ繝亥､ｧ莨夲ｼ�",
            subname: "繧ｵ繝悶ロ繝ｼ繝���",
            start: "2020/05/10 18:03",
            end: "2020/05/10 20:00",
            startTs: "1589101400",
            rule: 0,
            cnt: 222,
            soft: ["Sc", "Vi"],
            banner: "banner_01.jpg",
            text: "",
            rst: 2,
            ts1: 1611145591,
            ts2: 1611145598,
            hst: 1
          },
          104518: {
            name: "繧､繝ｳ繧ｿ繝ｼ繝阪ャ繝亥､ｧ莨夲ｼ�",
            subname: "繧ｵ繝悶ロ繝ｼ繝���",
            start: "2020/04/29 4:16",
            end: "2020/04/29 14:00",
            startTs: "1588101400",
            rule: 1,
            cnt: 11,
            soft: ["Sc", "Vi"],
            banner: "banner_01.jpg",
            text: "",
            rst: 2,
            ts1: 1611145591,
            ts2: 1611145598,
            rankCnt: 54321,
            hst: 1
          },
          104517: {
            name: "繧､繝ｳ繧ｿ繝ｼ繝阪ャ繝亥､ｧ莨夲ｼ�",
            subname: "繧ｵ繝悶ロ繝ｼ繝���",
            start: "2020/04/17 14:30",
            end: "2020/04/17 18:00",
            startTs: "1587101400",
            rule: 0,
            cnt: 2,
            soft: ["Sc", "Vi"],
            banner: "banner_01.jpg",
            text: "",
            rst: 2,
            ts1: 1611145591,
            ts2: 1611145598,
            rankCnt: 54321,
            hst: 1
          },
          104516: {
            name: "繧､繝ｳ繧ｿ繝ｼ繝阪ャ繝亥､ｧ莨夲ｼ�",
            subname: "繧ｵ繝悶ロ繝ｼ繝���",
            start: "2020/04/06 11:35",
            end: "2020/04/06 11:50",
            startTs: "1586140557",
            rule: 1,
            cnt: 1,
            soft: ["Sc", "Vi"],
            banner: "banner_01.jpg",
            text: "",
            rst: 1,
            ts1: 1587015893,
            ts2: 1587015903,
            rankCnt: 54321,
            hst: 2
          },
          104515: {
            name: "繧､繝ｳ繧ｿ繝ｼ繝阪ャ繝亥､ｧ莨夲ｼ代≠縺ゅ≠縺ゅ≠縺ゅ≠縺ゅ≠縺ゅ≠縺ゅ≠縺ゅ≠縺ゅ≠縺ゅ≠縺ゅ≠縺ゅ≠縺ゅ≠縺�",
            subname: "繧ｵ繝悶ロ繝ｼ繝���",
            start: "2020/04/06 11:25",
            end: "2020/04/06 11:27",
            startTs: "1586139913",
            rule: 0,
            cnt: 1,
            soft: ["Sc", "Vi"],
            banner: "banner_01.jpg",
            text: "",
            rst: 1,
            ts1: 1587015893,
            ts2: 1587015903,
            rankCnt: 54321,
            hst: 2
          }
        };
        for (let a = Object.keys(e.t_ud.internetCompeInfo).length; a < 200; a++) {
          let n = "";
          const i = a > 36 ? 36 : a;
          for (let e = 0; e < i; e++) n += "W";
          let o = "譁�ｭ玲焚" + i;
          e.t_ud.internetCompeInfo[String(-a)] = {
            name: n,
            subname: o,
            start: "2020/04/17 14:30",
            end: "2020/04/17 18:00",
            startTs: String(1586139913 - a),
            rule: 0,
            cnt: 2,
            soft: ["Sc", "Vi"],
            banner: "banner_01.jpg",
            text: "",
            rst: 2,
            ts1: 1611145591,
            ts2: 1611145598,
            hst: 2
          }, t = String(a)
        }
        e.t_ud.internetcompe_list_lastKey = t
      } else {
        for (let t = 200; t < 400; t++) e.t_ud.internetCompeInfo[String(-t)] = {
          name: "繧､繝ｳ繧ｿ繝ｼ繝阪ャ繝亥､ｧ莨�" + -t,
          subname: "繧ｵ繝悶ロ繝ｼ繝�" + -t,
          start: "2020/04/17 14:30",
          end: "2020/04/17 18:00",
          startTs: "1587101400",
          rule: 0,
          cnt: 2,
          soft: ["Sc", "Vi"],
          banner: "banner_01.jpg",
          text: "",
          rst: 2,
          ts1: 1611145591,
          ts2: 1611145598,
          hst: 0
        };
        e.t_ud.internetcompe_list_lastKey = "__finish__"
      }
      return console.log(" -> length=" + Object.keys(e.t_ud.internetCompeInfo).length), e.save(), !0
    }
    unitTestMyresultInternetcompeInfo(e, t) {
      return void 0 !== this.t_ud.share.unitTestType && (console.log("繧､繝ｳ繧ｿ繝ｼ繝阪ャ繝育ｵ先棡蜊倅ｽ薙ユ繧ｹ繝医ョ繝ｼ繧ｿ螻暮幕[playInfo[" + e + "].internetCompe[" + t + "]]"), this.t_ud.myInfo.playInfo[e].internetCompe[t].result = {
        competition_id: 104515,
        total_win: 13,
        total_draw: 0,
        total_loss: 9,
        ranking: {
          status: 1,
          rank_type: 2,
          rank: 1638
        },
        rating_value: "1575943",
        pokemon: [{
          no: "1009",
          form: "0",
          sex: "1",
          waza: ["876"]
        }, {
          no: "1010",
          form: "0",
          sex: "0",
          waza: ["875"]
        }, {
          no: "128",
          form: "0",
          sex: "0",
          waza: ["444", "424", "231", "706"]
        }, {
          no: "128",
          form: "1",
          sex: "2",
          waza: ["538", "676", "0"]
        }, {
          no: "128",
          form: "2",
          sex: "1",
          waza: ["572", "398", "409", "389"]
        }, {
          no: "128",
          form: "3",
          sex: "0",
          waza: ["349", "19", "407", "788"]
        }]
      }, this.save(), !0)
    }
    unitTestFriendcompeList(e) {
      const t = this;
      if (void 0 === t.t_ud.share.unitTestType) return !1;
      if (console.log("莉ｲ髢灘､ｧ莨壹Μ繧ｹ繝亥腰菴薙ユ繧ｹ繝医ョ繝ｼ繧ｿ螻暮幕[playInfo[" + e + "].friendCompe]"), 0 == Object.keys(t.t_ud.myInfo.playInfo[e].friendCompe)) {
        let a;
        t.t_ud.myInfo.playInfo[e].friendCompe = {
          1000031: {
            cId: "1000031",
            pokemon: [{
              no: "25",
              form: "1",
              sex: "0",
              waza: ["583", "14", "241", "669"]
            }, {
              no: "25",
              form: "2",
              sex: "1",
              waza: ["73", "776", "278", "334"]
            }, {
              no: "25",
              form: "3",
              sex: "1",
              waza: ["360", "92", "282", "73"]
            }, {
              no: "25",
              form: "4",
              sex: "0",
              waza: ["538", "676", "178", "437"]
            }, {
              no: "25",
              form: "5",
              sex: "1",
              waza: ["572", "398", "409", "389"]
            }, {
              no: "25",
              form: "6",
              sex: "0",
              waza: ["349", "19", "407", "788"]
            }],
            date: "2019/11/17 00:29",
            detail: {
              name: "莉ｲ髢灘､ｧ莨夲ｼ代≠縺ゅ≠縺ゅ≠縺ゅ≠縺ゅ≠縺ゅ≠縺ゅ≠縺ゅ≠縺ゅ≠縺ゅ≠縺ゅ≠縺ゅ≠縺ゅ≠縺ゅ≠縺ゅ≠縺�",
              start: "2019/06/07 01:00",
              end: "2019/06/07 10:59",
              rule: 0,
              cnt: 11,
              soft: ["Sc", "Vi"],
              locale: "JPN",
              playerName: "繝医Ξ繝ｼ繝翫�A",
              rst: 2,
              ts1: 1611145591,
              ts2: 1611145598,
              ownerId: "11111",
              hst: 2,
              rulePreset: 1
            }
          },
          1000032: {
            cId: "1000032",
            pokemon: [{
              no: "25",
              form: "7",
              sex: "0",
              waza: ["583", "14", "241", "669"]
            }, {
              no: "25",
              form: "9",
              sex: "1",
              waza: ["73", "776", "278", "334"]
            }, {
              no: "422",
              form: "1",
              sex: "1",
              waza: ["360", "92", "282", "73"]
            }, {
              no: "423",
              form: "1",
              sex: "0",
              waza: ["538", "676", "178", "437"]
            }, {
              no: "585",
              form: "1",
              sex: "1",
              waza: ["572", "398", "409", "389"]
            }, {
              no: "585",
              form: "2",
              sex: "0",
              waza: ["349", "19", "407", "788"]
            }],
            date: "2019/11/17 00:29",
            detail: {
              name: "莉ｲ髢灘､ｧ莨夲ｼ�",
              start: "2019/06/07 01:00",
              end: "2019/06/07 10:59",
              rule: 1,
              cnt: 10,
              soft: ["Sc", "Vi"],
              locale: "JPN",
              playerName: "繝医Ξ繝ｼ繝翫�B",
              rst: 2,
              ts1: 1611145591,
              ts2: 1611145598,
              ownerId: "11112",
              hst: 1,
              rulePreset: 2
            }
          },
          1000033: {
            cId: "1000033",
            pokemon: [{
              no: "585",
              form: "3",
              sex: "0",
              waza: ["583", "14", "241", "669"]
            }, {
              no: "586",
              form: "1",
              sex: "1",
              waza: ["73", "776", "278", "334"]
            }, {
              no: "586",
              form: "2",
              sex: "1",
              waza: ["360", "92", "282", "73"]
            }, {
              no: "586",
              form: "3",
              sex: "0",
              waza: ["538", "676", "178", "437"]
            }],
            date: "2019/11/17 00:29",
            detail: {
              name: "莉ｲ髢灘､ｧ莨夲ｼ�",
              start: "2019/06/07 01:00",
              end: "2019/06/07 10:59",
              rule: 0,
              cnt: 1,
              soft: ["Sc", "Vi"],
              locale: "JPN",
              playerName: "繝医Ξ繝ｼ繝翫�C",
              rst: 2,
              ts1: 1611145591,
              ts2: 1611145598,
              ownerId: "11113",
              hst: 1,
              rulePreset: 3
            }
          },
          1000034: {
            cId: "1000034",
            pokemon: [{
              no: "658",
              form: "1",
              sex: "0",
              waza: ["583", "14", "241", "669"]
            }, {
              no: "664",
              form: "18",
              sex: "1",
              waza: ["73", "776", "278", "334"]
            }, {
              no: "665",
              form: "18",
              sex: "1",
              waza: ["360", "92", "282", "73"]
            }, {
              no: "669",
              form: "1",
              sex: "0",
              waza: ["538", "676", "178", "437"]
            }, {
              no: "669",
              form: "2",
              sex: "1",
              waza: ["572", "398", "409", "389"]
            }, {
              no: "669",
              form: "3",
              sex: "0",
              waza: ["349", "19", "407", "788"]
            }],
            date: "2019/11/17 00:29",
            detail: {
              name: "莉ｲ髢灘､ｧ莨夲ｼ�",
              start: "2019/06/07 01:00",
              end: "2019/06/07 10:59",
              rule: 1,
              cnt: 2,
              soft: ["Sc", "Vi"],
              locale: "JPN",
              playerName: "繝医Ξ繝ｼ繝翫�D",
              rst: 2,
              ts1: 1611145591,
              ts2: 1611145598,
              ownerId: "22221",
              hst: 1,
              rulePreset: 12
            }
          },
          1000035: {
            cId: "1000035",
            pokemon: [{
              no: "669",
              form: "4",
              sex: "0",
              waza: ["583", "14", "241", "669"]
            }, {
              no: "670",
              form: "1",
              sex: "1",
              waza: ["73", "776", "278", "334"]
            }, {
              no: "670",
              form: "2",
              sex: "1",
              waza: ["360", "92", "282", "73"]
            }, {
              no: "670",
              form: "3",
              sex: "0",
              waza: ["538", "676", "178", "437"]
            }, {
              no: "670",
              form: "4",
              sex: "1",
              waza: ["572", "398", "409", "389"]
            }, {
              no: "671",
              form: "1",
              sex: "0",
              waza: ["349", "19", "407", "788"]
            }],
            date: "2019/11/17 00:29",
            detail: {
              name: "莉ｲ髢灘､ｧ莨夲ｼ�",
              start: "2019/06/07 01:00",
              end: "2019/06/07 10:59",
              rule: 0,
              cnt: 3,
              soft: ["Sc", "Vi"],
              locale: "JPN",
              playerName: "繝医Ξ繝ｼ繝翫�E",
              rst: 2,
              ts1: 1611145591,
              ts2: 1611145598,
              ownerId: "22222",
              hst: 1,
              rulePreset: 13
            }
          },
          1000036: {
            cId: "1000036",
            pokemon: [{
              no: "671",
              form: "2",
              sex: "0",
              waza: ["583", "14", "241", "669"]
            }, {
              no: "671",
              form: "3",
              sex: "1",
              waza: ["73", "776", "278", "334"]
            }, {
              no: "671",
              form: "4",
              sex: "1",
              waza: ["360", "92", "282", "73"]
            }, {
              no: "744",
              form: "1",
              sex: "0",
              waza: ["538", "676", "178", "437"]
            }, {
              no: "801",
              form: "1",
              sex: "1",
              waza: ["572", "398", "409", "389"]
            }, {
              no: "854",
              form: "1",
              sex: "0",
              waza: ["349", "19", "407", "788"]
            }],
            date: "2019/11/17 00:29",
            detail: {
              name: "莉ｲ髢灘､ｧ莨夲ｼ�",
              start: "2019/06/07 01:00",
              end: "2019/06/07 10:59",
              rule: 1,
              cnt: 4,
              soft: ["Sc", "Vi"],
              locale: "JPN",
              playerName: "繝医Ξ繝ｼ繝翫�F",
              rst: 1,
              ts1: 0,
              ts2: 0,
              ownerId: "22222",
              hst: 0,
              rulePreset: 14
            }
          }
        };
        for (let n = 20; n < 37; n++) {
          let i = "";
          const o = n > 36 ? 36 : n;
          for (let e = 0; e < o; e++) i += "W";
          let l = "譁�ｭ玲焚" + o;
          t.t_ud.myInfo.playInfo[e].friendCompe[String(-n)] = {
            cId: "" + -n,
            pokemon: [{
              no: "421",
              form: "0",
              sex: "0",
              waza: ["583", "14", "241", "669"]
            }, {
              no: "842",
              form: "0",
              sex: "1",
              waza: ["73", "776", "278", "334"]
            }, {
              no: "598",
              form: "0",
              sex: "1",
              waza: ["360", "92", "282", "73"]
            }, {
              no: "830",
              form: "0",
              sex: "0",
              waza: ["538", "676", "178", "437"]
            }, {
              no: "556",
              form: "0",
              sex: "1",
              waza: ["572", "398", "409", "389"]
            }, {
              no: "982",
              form: "1",
              sex: "0",
              waza: ["349", "19", "407", "788"]
            }],
            date: "2019/11/17 00:29",
            detail: {
              name: i,
              subname: l,
              start: "2019/06/07 01:00",
              end: "2019/06/07 10:59",
              rule: 1,
              cnt: 4,
              soft: ["Sc", "Vi"],
              locale: "JPN",
              playerName: "繝医Ξ繝ｼ繝翫�F",
              rst: 2,
              ts1: 1611145591,
              ts2: 1611145598,
              ownerId: "22222",
              hst: 2
            }
          }, 20 == n ? t.t_ud.myInfo.playInfo[e].friendCompe[String(-n)].pokemon = [{
            no: "855",
            form: "1",
            sex: "0",
            waza: ["583", "14", "241", "669"]
          }, {
            no: "888",
            form: "1",
            sex: "1",
            waza: ["73", "776", "278", "334"]
          }, {
            no: "889",
            form: "1",
            sex: "1",
            waza: ["360", "92", "282", "73"]
          }, {
            no: "892",
            form: "1",
            sex: "0",
            waza: ["538", "676", "178", "437"]
          }, {
            no: "893",
            form: "1",
            sex: "1",
            waza: ["572", "398", "409", "389"]
          }, {
            no: "925",
            form: "1",
            sex: "0",
            waza: ["349", "19", "407", "788"]
          }] : 21 == n && (t.t_ud.myInfo.playInfo[e].friendCompe[String(-n)].pokemon = [{
            no: "978",
            form: "1",
            sex: "0",
            waza: ["583", "14", "241", "669"]
          }, {
            no: "978",
            form: "2",
            sex: "1",
            waza: ["73", "776", "278", "334"]
          }, {
            no: "982",
            form: "1",
            sex: "1",
            waza: ["360", "92", "282", "73"]
          }]), a = String(n)
        }
        t.t_ud.friendcompe_list_lastKey = a
      } else {
        for (let a = 1; a < 20; a++) t.t_ud.myInfo.playInfo[e].friendCompe[String(-a)] = {
          cId: "" + -a,
          pokemon: [{
            no: "421",
            form: "0",
            sex: "0",
            waza: ["583", "14", "241", "669"]
          }, {
            no: "842",
            form: "0",
            sex: "1",
            waza: ["73", "776", "278", "334"]
          }, {
            no: "598",
            form: "0",
            sex: "1",
            waza: ["360", "92", "282", "73"]
          }, {
            no: "830",
            form: "0",
            sex: "0",
            waza: ["538", "676", "178", "437"]
          }, {
            no: "556",
            form: "0",
            sex: "1",
            waza: ["572", "398", "409", "389"]
          }, {
            no: "982",
            form: "1",
            sex: "0",
            waza: ["349", "19", "407", "788"]
          }],
          date: "2019/11/17 00:29",
          detail: {
            name: "莉ｲ髢灘､ｧ莨�" + -a,
            subname: "sub蜷�",
            start: "2019/06/07 01:00",
            end: "2019/06/07 10:59",
            rule: 1,
            cnt: 4,
            soft: ["Sc", "Vi"],
            locale: "JPN",
            playerName: "繝医Ξ繝ｼ繝翫�F",
            rst: 2,
            ts1: 1611145591,
            ts2: 1611145598,
            ownerId: "22222",
            hst: 0
          }
        };
        t.t_ud.friendcompe_list_lastKey = "__finish__"
      }
      return t.save(), !0
    }
    unitTestFriendcompeDetail(e, t) {
      if (void 0 === this.t_ud.share.unitTestType) return !1;
      console.log("莉ｲ髢灘､ｧ莨夂ｵ先棡蜊倅ｽ薙ユ繧ｹ繝医ョ繝ｼ繧ｿ螻暮幕[playInfo[" + e + "].friendCompe[" + t + "].log/result]"), this.t_ud.myInfo.playInfo[e].friendCompe[t].result = {
        total: 6,
        win: 1,
        lose: 2,
        drow: 3
      }, this.t_ud.myInfo.playInfo[e].friendCompe[t].log = [];
      for (let a = 0; a < 40; a++) this.t_ud.myInfo.playInfo[e].friendCompe[t].log.push({
        name: "蜷�" + 3 * a,
        date: "2019/11/17 00:09",
        icon: "cmn_player_0501.png",
        rank: "1",
        result: "0",
        locale: "JPN",
        rentalTeamId: ""
      }), this.t_ud.myInfo.playInfo[e].friendCompe[t].log.push({
        name: "蜷�" + (3 * a + 1),
        date: "2019/11/17 00:09",
        icon: "cmn_player_0501.png",
        rank: "1",
        result: "1",
        locale: "JPN",
        rentalTeamId: ""
      }), this.t_ud.myInfo.playInfo[e].friendCompe[t].log.push({
        name: "蜷�" + (3 * a + 2),
        date: "2019/11/17 00:09",
        icon: "cmn_player_0501.png",
        rank: "1",
        result: "2",
        locale: "JPN",
        rentalTeamId: ""
      });
      return this.save(), !0
    }
    unitTestTrainerRanking(e) {
      if (void 0 === this.t_ud.share.unitTestType) return null;
      const t = 1e3 * (Number(e.substring(e.lastIndexOf("-") + 1, e.length)) - 1) + 1,
        a = t + 999;
      console.log("繝医Ξ繝ｼ繝翫�繝ｩ繝ｳ繧ｭ繝ｳ繧ｰ蜊倅ｽ薙ユ繧ｹ繝医ョ繝ｼ繧ｿ螻暮幕 cid=" + e.substr(1, 5) + " url=" + e + " start=" + t + " , end=" + a);
      let n = [];
      for (let e = t; e <= a && !(e > 54321); e++) n.push({
        rank: e,
        rating_value: 1999999 - 9 * e,
        icon: "cmn_player_0201.png",
        name: "繝医Ξ繝ｼ繝翫�蜷�" + e,
        lng: 1
      });
      return n
    }
    unitTestPokemonRanking() {
      if (void 0 === this.t_ud.share.unitTestType) return null;
      console.log("繝昴こ繝｢繝ｳ繝ｩ繝ｳ繧ｭ繝ｳ繧ｰ蜊倅ｽ薙ユ繧ｹ繝医ョ繝ｼ繧ｿ螻暮幕");
      let e = [];
      e.push({
        id: 1009,
        form: 0
      }), e.push({
        id: 1010,
        form: 0
      }), e.push({
        id: 128,
        form: 0
      }), e.push({
        id: 128,
        form: 1
      }), e.push({
        id: 128,
        form: 2
      }), e.push({
        id: 128,
        form: 3
      }), e.push({
        id: 248,
        form: 0
      }), e.push({
        id: 373,
        form: 0
      }), e.push({
        id: 286,
        form: 0
      }), e.push({
        id: 113,
        form: 0
      }), e.push({
        id: 450,
        form: 0
      }), e.push({
        id: 479,
        form: 1
      }), e.push({
        id: 197,
        form: 0
      }), e.push({
        id: 149,
        form: 0
      }), e.push({
        id: 130,
        form: 0
      }), e.push({
        id: 706,
        form: 0
      });
      for (let t in mdCtrl.md.pokeType)
        for (let a in mdCtrl.md.pokeType[t]) e.push({
          id: t,
          form: a
        });
      return e
    }
    unitTestPokemonRankingDetail() {
      if (void 0 === this.t_ud.share.unitTestType) return null;
      console.log("繝昴こ繝｢繝ｳ繝ｩ繝ｳ繧ｭ繝ｳ繧ｰ隧ｳ邏ｰ蜊倅ｽ薙ユ繧ｹ繝医ョ繝ｼ繧ｿ螻暮幕");
      let e = {},
        t = 0;
      for (let a in mdCtrl.md.pokeType)
        for (let n in mdCtrl.md.pokeType[a]) {
          let i = [];
          t = 0, i.push({
            id: 1009,
            form: 0
          }), i.push({
            id: 1010,
            form: 0
          });
          for (let e in mdCtrl.md.pokeType) {
            for (let o in mdCtrl.md.pokeType[e])
              if (a == e && n == o || (i.push({
                  id: e,
                  form: o
                }), t++), t >= 10) break;
            if (t >= 10) break
          }
          let o = [];
          o.push({
            id: 875,
            val: 99
          }), o.push({
            id: 876,
            val: 98
          });
          for (let e = 10; e < 20; e++) o.push({
            id: e + 1,
            val: 99 - 5.5 * e
          });
          let l = [];
          l.push({
            id: 45,
            val: 99.8
          }), l.push({
            id: 127,
            val: .2
          });
          let r = [];
          r.push({
            id: 538,
            val: 90
          }), r.push({
            id: 539,
            val: 80
          }), r.push({
            id: 540,
            val: 70
          }), r.push({
            id: 541,
            val: 60
          }), r.push({
            id: 542,
            val: 50
          }), r.push({
            id: 543,
            val: 40
          }), r.push({
            id: 544,
            val: 30
          }), r.push({
            id: 545,
            val: 20
          }), r.push({
            id: 546,
            val: 10
          }), r.push({
            id: 547,
            val: 1
          });
          let s = [];
          for (let e = 0; e < 10; e++) s.push({
            id: e + 1,
            val: 99 - 5.5 * e
          });
          !1 === e.hasOwnProperty(a) && (e[a] = {}), e[a][n] = {
            temoti: {
              pokemon: i,
              waza: o,
              tokusei: l,
              seikaku: s,
              motimono: r,
              terastal: s
            },
            win: {
              pokemon: i,
              waza: o
            },
            lose: {
              pokemon: i,
              waza: o
            }
          }
        }
      return e
    }
    unitTestTournamentDetail(e) {
      const t = this;
      if (void 0 === t.t_ud.share.unitTestType) return !1;
      switch (console.log("繝医�繝翫Γ繝ｳ繝郁ｩｳ邏ｰ蜊倅ｽ薙ユ繧ｹ繝医ョ繝ｼ繧ｿ螻暮幕[tournamentDetail]"), t.t_ud.tournamentDetail[e] = {
        title: t.t_ud.internetCompeInfo[e].name,
        subtitle: t.t_ud.internetCompeInfo[e].subname,
        compePeriod: {
          start: 1588221920,
          end: 1588221920
        },
        rst: 1
      }, e) {
      case "104536":
        t.t_ud.tournamentDetail[e].type = 2, t.t_ud.tournamentDetail[e].limit = 4, t.t_ud.tournamentDetail[e].entryCount = 3;
        break;
      case "104535":
        t.t_ud.tournamentDetail[e].type = 2, t.t_ud.tournamentDetail[e].limit = 8, t.t_ud.tournamentDetail[e].entryCount = 7;
        break;
      case "104534":
        t.t_ud.tournamentDetail[e].type = 2, t.t_ud.tournamentDetail[e].limit = 16, t.t_ud.tournamentDetail[e].entryCount = 14;
        break;
      case "104533":
        t.t_ud.tournamentDetail[e].type = 2, t.t_ud.tournamentDetail[e].limit = 32, t.t_ud.tournamentDetail[e].entryCount = 29;
        break;
      case "104532":
        t.t_ud.tournamentDetail[e].type = 2, t.t_ud.tournamentDetail[e].limit = 64, t.t_ud.tournamentDetail[e].entryCount = 59, t.t_ud.tournamentDetail[e].rst = 2;
        break;
      case "104531":
        t.t_ud.tournamentDetail[e].type = 1, t.t_ud.tournamentDetail[e].limit = 64, t.t_ud.tournamentDetail[e].entryCount = 58
      }
      return null == t.debugMatchDetailCount ? t.debugMatchDetailCount = 1 : (t.debugMatchDetailCount++, t.t_ud.tournamentDetail[e].rst = 2), t.t_ud.tournamentDetail[e].matchDetail = t.createMatchDetail(t.debugMatchDetailCount), t.save(), !0
    }
    createMatchDetail(e) {
      let t = null;
      return t = {
        winners: {
          64: [{
            bracket: 1,
            winner: 1,
            trainer1: {
              name: "繝医Ξ繝ｼ繝翫���",
              win: 2
            },
            trainer2: {
              name: "繝医Ξ繝ｼ繝翫���",
              win: 1
            }
          }, {
            bracket: 2,
            winner: 2,
            trainer1: {
              name: "繝医Ξ繝ｼ繝翫���",
              win: 1
            },
            trainer2: {
              name: "繝医Ξ繝ｼ繝翫���",
              win: 2
            }
          }, {
            bracket: 3,
            winner: 0,
            trainer1: {
              name: "繝医Ξ繝ｼ繝翫���",
              win: 0
            },
            trainer2: {}
          }, {
            bracket: 4,
            winner: 0,
            trainer2: {
              name: "繝医Ξ繝ｼ繝翫���",
              win: 0
            }
          }, {
            bracket: 5,
            winner: 0,
            trainer1: {
              name: "繝医Ξ繝ｼ繝翫���",
              win: 0
            },
            trainer2: {
              name: "繝医Ξ繝ｼ繝翫���",
              win: 0
            }
          }, {
            bracket: 6,
            winner: 3,
            trainer1: {
              name: "繝医Ξ繝ｼ繝翫���",
              win: 0
            },
            trainer2: {
              name: "繝医Ξ繝ｼ繝翫��托ｼ�",
              win: 0
            }
          }],
          32: [{
            bracket: 1,
            winner: 1,
            trainer1: {
              name: "繝医Ξ繝ｼ繝翫���",
              win: 2
            },
            trainer2: {
              name: "繝医Ξ繝ｼ繝翫���",
              win: 1
            }
          }]
        },
        losers: {
          "32_1": [{
            bracket: 1,
            winner: 1,
            trainer1: {
              name: "繝医Ξ繝ｼ繝翫���",
              win: 2
            },
            trainer2: {
              name: "繝医Ξ繝ｼ繝翫���",
              win: 1
            }
          }]
        },
        finals: {
          1: [{
            bracket: 1,
            winner: 1,
            trainer1: {
              name: "繝医Ξ繝ｼ繝翫�X",
              win: 2
            },
            trainer2: {
              name: "繝医Ξ繝ｼ繝翫�Y",
              win: 1
            }
          }]
        }
      }, e >= 2 && (t.winners[16] = [{
        bracket: 1,
        winner: 2,
        trainer1: {
          name: "繝医Ξ繝ｼ繝翫���",
          win: 1
        },
        trainer2: {
          name: "繝医Ξ繝ｼ繝翫���",
          win: 2
        }
      }]), t
    }
  }
  class g {
    constructor() {}
    initPageTab(e, t) {
      const a = this;
      t = void 0 === t ? function () {} : t, a.pagetabList = [], a.tabNum = e, a.selectNo = 1, a.startTabNo = 1;
      let n = "";
      n += '<div class="leftTab" id="pageLeftTab">', n += '<img src="./img/svg/icon_pagearrow_01_01.svg">', n += "</div>";
      for (let e = 0; e < a.tabNum; e++) n += '<div class="tab" id="pageTab' + e + '">', n += '<div class="tablabel">' + e + "</div>", n += "</div>";
      n += '<div class="rightTab" id="pageRightTab">', n += '<img src="./img/svg/icon_pagearrow_01_02.svg">', n += "</div>", $("#pageselectBody").html(n), $("#pageLeftTab").click((function (e) {
        e.preventDefault(), e.stopImmediatePropagation(), void 0 !== a.tabNoMax && (a.selectNo = 1, a.updateTab(), t(a.selectNo))
      })), $("#pageRightTab").click((function (e) {
        e.preventDefault(), e.stopImmediatePropagation(), void 0 !== a.tabNoMax && (a.selectNo = a.tabNoMax, a.updateTab(), t(a.selectNo))
      }));
      for (let e = 0; e < a.tabNum; e++) a.pagetabList.push("#pageTab" + e), $("#pageTab" + e).click((function (n) {
        n.preventDefault(), n.stopImmediatePropagation(), a.selectNo = a.startTabNo + e, a.updateTab(), t(a.selectNo)
      }))
    }
    resetTab(e, t) {
      t = (t = void 0 === t ? 1 : t) < 1 ? 1 : t, this.selectNo = Math.floor(t), this.startTabNo = 1, this.tabNoMax = Math.floor(e + 1), console.log("resetTab( " + e + " , " + t + " ) tabNum=" + this.tabNum + " tabNoMax=" + this.tabNoMax + " selectNo=" + this.selectNo), this.updateTab(this.selectNo)
    }
    updateTab() {
      const e = this;
      let t = Math.floor(e.selectNo - e.tabNum / 2 + 1),
        a = t + e.tabNum - 1;
      a > e.tabNoMax && (a = e.tabNoMax, t = a - e.tabNum + 1), t < 1 && (t = 1, a = t + e.tabNum - 1, a > e.tabNoMax && (a = e.tabNoMax)), e.startTabNo = t, $.each(e.pagetabList, (t, n) => {
        $(n + ">.tablabel").html(t + e.startTabNo);
        let i = e.startTabNo + t;
        i == e.selectNo ? $(n).addClass("selectTab") : $(n).removeClass("selectTab"), i > a ? $(n).addClass("disableDisplay") : $(n).removeClass("disableDisplay")
      })
    }
    show() {
      console.log("page.show"), $("#pageselectBody").show()
    }
    hide() {
      console.log("page.hide"), $("#pageselectBody").hide()
    }
  }
  class p {
    constructor() {
      const e = this;
      e.pSelect = new g, e.yesnoDialog = new c, console.log("繧ｭ繝｣繝�す繝･:rankmatch_selectSeason=" + t_udCtrl.t_ud.share.rankmatch_selectSeason), console.log("繧ｭ繝｣繝�す繝･:rankmatch_selectRule=" + t_udCtrl.t_ud.share.rankmatch_selectRule), console.log("繧ｭ繝｣繝�す繝･:rankmatch_selectRanking=" + t_udCtrl.t_ud.share.rankmatch_selectRanking), console.log("繧ｭ繝｣繝�す繝･:rankmatch_selectTabno=" + t_udCtrl.t_ud.share.rankmatch_selectTabno), console.log("繧ｭ繝｣繝�す繝･:rankmatch_selectScroll=" + t_udCtrl.t_ud.share.rankmatch_selectScroll), console.log("繧ｭ繝｣繝�す繝･:rankmatch_selectRank=" + t_udCtrl.t_ud.share.rankmatch_selectRank), void 0 !== t_udCtrl.t_ud.share.isLogin && void 0 !== t_udCtrl.t_ud.share.rankmatch_selectSeason && void 0 !== t_udCtrl.t_ud.share.rankmatch_selectRule && void 0 !== t_udCtrl.t_ud.share.rankmatch_selectRanking && void 0 !== t_udCtrl.t_ud.share.rankmatch_selectTabno && void 0 !== t_udCtrl.t_ud.share.rankmatch_selectScroll ? (e.selectRule = t_udCtrl.t_ud.share.rankmatch_selectRule, void 0 !== t_udCtrl.t_ud.share.rankmatch_selectRank && "-1" != t_udCtrl.t_ud.share.rankmatch_selectRank ? (e.selectRank = t_udCtrl.t_ud.share.rankmatch_selectRank, t_udCtrl.t_ud.share.rankmatch_selectRank = "-1", e.selectRanking = "trainer") : e.selectRanking = t_udCtrl.t_ud.share.rankmatch_selectRanking, e.selectTabno = t_udCtrl.t_ud.share.rankmatch_selectTabno, e.selectScroll = t_udCtrl.t_ud.share.rankmatch_selectScroll) : (e.selectRule = "single", e.selectRanking = "trainer", e.selectTabno = 1, e.selectScroll = 0, t_udCtrl.reset()), t_udCtrl.login((function () {
        t_udCtrl.load_rankmatch_list(null, (function () {
          e.seasonList = Object.keys(t_udCtrl.t_ud.rankmatchInfo), e.seasonList.sort((e, t) => parseInt(e, 10) < parseInt(t, 10) ? 1 : -1), e.uiInitialize()
        }))
      }))
    }
    uiInitialize() {
      const e = this;
      var t = 0;
      if ($("#trainerRankingBody").css("height", $(window).height() - 560 + "px"), $("#pokemonRankingBody").css("height", $(window).height() - 470 + "px"), $("#topButton").click((function (t) {
          let a = t_udCtrl.getRankmatchJoinDataNum();
          console.log("num=" + a[0] + " ,id=" + a[1]), 0 == a[0] ? e.yesnoDialog.open({
            title: langCtrl.lang.t_common.not_join,
            msg: langCtrl.lang.t_common.not_join_battle,
            btn1text: langCtrl.lang.t_common.ok,
            btn1Callback: function () {
              e.yesnoDialog.close()
            }
          }) : 1 == a[0] ? (t_udCtrl.t_ud.share.selectMydataType = "rankmatch", t_udCtrl.t_ud.share.selectnplnId = a[1], t_udCtrl.t_ud.share.my_rankmatch_selectSeason = void 0, t_udCtrl.t_ud.share.my_rankmatch_selectRule = void 0, t_udCtrl.t_ud.share.my_rankmatch_selectTabno = void 0, t_udCtrl.t_ud.share.my_rankmatch_selectScroll = void 0, e.saveCache(), util.locationMove("./t_my_rankmatch.html")) : (t_udCtrl.t_ud.share.selectMydataType = "rankmatch", e.saveCache(), util.locationMove("./t_mydataselect.html"))
        })), void 0 !== t_udCtrl.t_ud.share.rankmatch_selectSeason && void 0 !== t_udCtrl.t_ud.share.rankmatch_selectRule)
        for (var a in this.seasonList) this.seasonList[a] == t_udCtrl.t_ud.share.rankmatch_selectSeason && (t = a, $("#seasonSelector").val(this.seasonList[a]));
      if (console.log("seasonListKey=" + t), 0 == this.seasonList.length) return void console.error("seasonList.length=" + this.seasonList.length);
      if (e.selectSeason = this.seasonList[t], !(e.selectSeason in t_udCtrl.t_ud.rankmatchInfo)) return void console.error("rankmatchInfo[" + e.selectSeason + "] not found!");
      "single" === e.selectRule && void 0 === t_udCtrl.t_ud.rankmatchInfo[e.selectSeason].single && (e.selectRule = "double");
      let n = "";
      for (let e = 0; e < this.seasonList.length; e++) {
        if (void 0 !== t_udCtrl.t_ud.rankmatchInfo[this.seasonList[e]].single) {
          let t = t_udCtrl.t_ud.rankmatchInfo[this.seasonList[e]].single.start.split(" "),
            a = "";
          for (let e = 0; e < t.length - 1; e++) a += t[e];
          n += '<option value="' + this.seasonList[e] + ',0">' + t_udCtrl.t_ud.rankmatchInfo[this.seasonList[e]].single.name + " " + langCtrl.common.rule[0] + " " + a + "~</option>"
        }
        if (void 0 !== t_udCtrl.t_ud.rankmatchInfo[this.seasonList[e]].double) {
          let t = t_udCtrl.t_ud.rankmatchInfo[this.seasonList[e]].double.start.split(" "),
            a = "";
          for (let e = 0; e < t.length - 1; e++) a += t[e];
          n += '<option value="' + this.seasonList[e] + ',1">' + t_udCtrl.t_ud.rankmatchInfo[this.seasonList[e]].double.name + " " + langCtrl.common.rule[1] + " " + a + "~</option>"
        }
      }
      $("#seasonSelector").html(n), $("#seasonSelector").val(this.seasonList[t] + ",0"), $("#seasonSelector").change((function () {
        let t = $(this).val().split(",");
        e.selectSeason = t[0], 0 == t[1] ? e.selectRule = "single" : e.selectRule = "double", e.selectTabno = 1, e.selectScroll = 0, e.seasonSelection()
      })), e.pSelect.initPageTab(5, (function (t) {
        if (e.selectTabno === t) return;
        e.selectTabno = t, e.selectScroll = 0;
        const a = t_udCtrl.t_ud.rankmatchInfo[e.selectSeason][e.selectRule];
        if ("trainer" == e.selectRanking)
          if (a.rst < 0 || 0 == a.ts1 || 9999999999 == a.ts1) e.pokemonRankingView([]), e.trainerRankingView([]);
          else {
            const n = "/" + a.cId + "/" + a.rst + "/" + a.ts1 + "/traner-" + util.rankingFileIdx(100 * t - 1);
            console.log("url=" + n), t_udCtrl.trainerRankingRequest(n, (function (a) {
              if (null == a) return e.pSelect.resetTab(0), void e.pSelect.show();
              e.trainerRankingView(a, 100 * (t - 1))
            }))
          }
        else if (a.rst < 0 || 0 == a.ts2 || 9999999999 == a.ts2) e.pokemonRankingView([]), e.trainerRankingView([]);
        else {
          const n = "/" + a.cId + "/" + a.rst + "/" + a.ts2 + "/pokemon";
          t_udCtrl.pokemonRankingRequest(n, (function (a) {
            e.pokemonRankingView(a, 100 * (t - 1))
          }))
        }
      })), this.seasonSelection(this.seasonList[t]), this.refreshClassList = {};
      let i = this.seasonList[t] + ",";
      "single" === e.selectRule ? i += "0" : i += "1", $("#seasonSelector").val(i)
    }
    seasonSelection() {
      const e = this;
      $("#competion-ranking").addClass("disableDisplay");
      for (let e in this.refreshClassList) $(e).removeClass(this.refreshClassList[e]);
      if (this.refreshClassList = {}, $("#trainerRankingBody").html(""), e.pSelect.hide(), void 0 === e.selectSeason) return;
      const t = t_udCtrl.t_ud.rankmatchInfo[e.selectSeason];
      if (console.log("selectSeason=" + e.selectSeason), $("#regulationPage").click((function (a) {
          e.saveCache(), util.t_locationMoveRegulation(t[e.selectRule].cId, util.langCode())
        })), $("#regulationPokemonPage").click((function (a) {
          e.saveCache(), util.t_locationMoveUsePokemonList(t[e.selectRule].cId, util.langCode())
        })), void 0 !== e.selectRule)
        if ("single" === e.selectRule) {
          if ($("#period").html(util.joinDate(t.single.start, t.single.end)), 1 === t_udCtrl.t_ud.rankmatchInfo[e.selectSeason].single.rst) $("#joinedNum").html(langCtrl.lang.t_common.gathering);
          else {
            let t = t_udCtrl.t_ud.rankmatchInfo[e.selectSeason].single.cnt;
            $("#joinedNum").html(util.numberFormat(t))
          }
          $("#competion-ranking").removeClass("disableDisplay"), e.rankingContainerView()
        } else {
          if ($("#period").html(util.joinDate(t.double.start, t.double.end)), 1 === t_udCtrl.t_ud.rankmatchInfo[e.selectSeason].double.rst) $("#joinedNum").html(langCtrl.lang.t_common.gathering);
          else {
            let t = t_udCtrl.t_ud.rankmatchInfo[e.selectSeason].double.cnt;
            $("#joinedNum").html(util.numberFormat(t))
          }
          $("#competion-ranking").removeClass("disableDisplay"), e.rankingContainerView()
        }
    }
    rankingContainerView() {
      const e = this;
      $("#trainerTab").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), "trainer" !== e.selectRanking && (e.selectScroll = 0);
        const a = t_udCtrl.t_ud.rankmatchInfo[e.selectSeason][e.selectRule];
        if ($("#trainerTab").removeClass("disable"), $("#pokemonTab").addClass("disable"), $("#trainerRankingHeader").removeClass("disableDisplay"), $("#trainerRankingBody").removeClass("disableDisplay"), $("#pokemonRankingBody").addClass("disableDisplay"), e.selectRanking = "trainer", 0 == a.ts1 || 9999999999 == a.ts1) $("#trainerRankingBody").addClass("disableDisplay"), $("#ranking-aggr").removeClass("disableDisplay"), $("#ranking-aggr").html(langCtrl.lang.t_common.gathering), e.pSelect.hide();
        else {
          const t = $.isNumeric(e.selectRank) ? e.selectRank - 1 : 100 * e.selectTabno - 1,
            n = "/" + a.cId + "/" + a.rst + "/" + a.ts1 + "/traner-" + util.rankingFileIdx(t);
          t_udCtrl.trainerRankingRequest(n, (function (t) {
            if (null == t) return $("#trainerRankingBody").addClass("disableDisplay"), $("#ranking-aggr").removeClass("disableDisplay"), $("#ranking-aggr").html(langCtrl.lang.t_common.gathering), void e.pSelect.hide();
            let n = $.isNumeric(a.rankCnt) ? a.rankCnt : t.length;
            if (void 0 !== e.selectRank) {
              let a = parseInt((e.selectRank - 1) / 100);
              e.selectTabno = a + 1;
              let i = 100 * a,
                o = (e.selectRank - 1) % 100;
              e.selectScroll = 91 * o, e.trainerRankingView(t, i), e.pSelect.resetTab((n - 1) / 100, e.selectTabno), e.pSelect.show()
            } else {
              let a = 100 * (e.selectTabno - 1);
              e.trainerRankingView(t, a), e.pSelect.resetTab((n - 1) / 100, e.selectTabno), e.pSelect.show()
            }
          }))
        }
      })), $("#pokemonTab").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), e.pSelect.hide(), "pokemon" !== e.selectRanking && (e.selectScroll = 0);
        const a = t_udCtrl.t_ud.rankmatchInfo[e.selectSeason][e.selectRule];
        if ($("#pokemonTab").removeClass("disable"), $("#trainerTab").addClass("disable"), $("#pokemonRankingBody").removeClass("disableDisplay"), $("#trainerRankingHeader").addClass("disableDisplay"), $("#trainerRankingBody").addClass("disableDisplay"), e.selectRanking = "pokemon", 0 == a.ts2 || 9999999999 == a.ts2) $("#pokemonRankingBody").addClass("disableDisplay"), $("#ranking-aggr").removeClass("disableDisplay"), $("#ranking-aggr").html(langCtrl.lang.t_common.gathering);
        else {
          const t = "/" + a.cId + "/" + a.rst + "/" + a.ts2 + "/pokemon";
          t_udCtrl.pokemonRankingRequest(t, (function (t) {
            e.pokemonRankingView(t, 0)
          }))
        }
      })), "trainer" === e.selectRanking ? $("#trainerTab").click() : $("#pokemonTab").click()
    }
    trainerRankingView(e, t) {
      if (null == e || 0 === e.length) return $("#trainerRankingBody").addClass("disableDisplay"), $("#ranking-aggr").removeClass("disableDisplay"), void $("#ranking-aggr").html(langCtrl.lang.t_common.gathering);
      $("#trainerRankingBody").removeClass("disableDisplay"), $("#competion-ranking").removeClass("disableDisplay"), $("#ranking-aggr").addClass("disableDisplay"), t = (t = void 0 === t ? 0 : t) < 0 ? 0 : t;
      let a = "",
        n = 0;
      for (let i = 0; i < e.length; i++) {
        if (e[i].rank <= t) continue;
        if (t + 100 < e[i].rank) break;
        switch (n > 0 && (a += '<div class="dotDividor"></div>'), n++, a += '<div class="rankingRow1">', a += '<div class="leftContainer">', e[i].rank) {
        case 1:
          a += '<div class="icon icon-oukan1"></div>';
          break;
        case 2:
          a += '<div class="icon icon-oukan2"></div>';
          break;
        case 3:
          a += '<div class="icon icon-oukan3"></div>';
          break;
        default:
          a += '<div class="icon"></div>'
        }
        a += '<div class="rank">', a += '<div class="rankText">' + e[i].rank + "</div>", a += "</div>", a += '<div class="point">' + util.ratingToStr(e[i].rating_value) + "</div>", a += "</div>", a += '<div class="rightContainer">', a += '<div class="userIconContainer">', a += '<div class="icon"><img src="./img/icons/trainer/' + e[i].icon + '" onError="this.onerror=null;this.src=\'./img/icons/icon_prof_icon02.png\';"></div>', a += "</div>", a += '<div class="userName">' + ("" == e[i].name ? "" : util.htmlEacape(e[i].name)) + "</div>";
        let o = e[i].lng,
          l = "";
        if (void 0 !== o && 0 !== parseInt(o) && (l = mdCtrl.md.langStrL[util.langCode()][o]), a += '<div class="locationIconContainer">', a += '<div class="ranking-user-lang">' + l + "</div>", a += "</div>", a += "</div>", a += "</div>", n > 99) break
      }
      $("#trainerRankingBody").html(a), $("#trainerRankingBody").scrollTop(this.selectScroll)
    }
    pokemonRankingView(e, t) {
      const a = this;
      if (null == e || 0 === e.length) return $("#pokemonRankingBody").addClass("disableDisplay"), $("#ranking-aggr").removeClass("disableDisplay"), void $("#ranking-aggr").html(langCtrl.lang.t_common.gathering);
      $("#pokemonRankingBody").removeClass("disableDisplay"), $("#competion-ranking").removeClass("disableDisplay"), $("#ranking-aggr").addClass("disableDisplay");
      let n = 0,
        i = "";
      for (let a = t = (t = void 0 === t ? 0 : t) < 0 ? 0 : t; a < e.length; a++) {
        switch (i += '<div id="prank-' + a + '" class="rankingRow2">', i += '<div class="leftContainer">', a + 1) {
        case 1:
          i += '<div class="icon icon-oukan1"></div>';
          break;
        case 2:
          i += '<div class="icon icon-oukan2"></div>';
          break;
        case 3:
          i += '<div class="icon icon-oukan3"></div>';
          break;
        default:
          i += '<div class="icon"></div>'
        }
        let t = e[a].id,
          o = e[a].form;
        if (i += '<div class="rank">', i += '<div class="rankText">' + (a + 1) + "</div>", i += "</div>", i += "</div>", i += '<div class="rightContainer">', i += '<div class="pokemonIconContainer">', i += '<img src="' + util.GetPokeiIconName(t, o) + '" onError="this.onerror=null;this.src=\'./img/icons/ball_g.png\';">', i += "</div>", i += '<div class="pokemonName">' + langCtrl.GetPokeName(e[a].id) + "</div>", i += '<div class="t_pokemonTypeContainer">', i += '<div class="type1Continer t_typeColor' + mdCtrl.GetType(t, o, 0) + '">', i += '<div class="icon icon-' + util.getTypeIconName(mdCtrl.GetType(t, o, 0)) + '"></div>', i += "</div>", mdCtrl.GetType(t, o, 1) >= 0 && (i += '<div class="type2Continer t_typeColor' + mdCtrl.GetType(t, o, 1) + '">', i += '<div class="icon icon-' + util.getTypeIconName(mdCtrl.GetType(t, o, 1)) + '"></div>', i += "</div>"), i += "</div>", i += "</div>", i += "</div>", n >= 149) break;
        n++
      }
      $("#pokemonRankingBody").html(i), $("#pokemonRankingBody").scrollTop(a.selectScroll);
      for (let n = t; n < e.length; n++) $("#prank-" + n).click((function (e) {
        e.preventDefault(), e.stopImmediatePropagation(), t_udCtrl.t_ud.share.selectMydataType = "rankmatch", t_udCtrl.t_ud.share.pokemonrankingDetailParam = {
          cId: t_udCtrl.t_ud.rankmatchInfo[a.selectSeason][a.selectRule].cId,
          rst: t_udCtrl.t_ud.rankmatchInfo[a.selectSeason][a.selectRule].rst,
          ts2: t_udCtrl.t_ud.rankmatchInfo[a.selectSeason][a.selectRule].ts2,
          idx: n
        }, 1 != a.selectSeason && 2 != a.selectSeason && 3 != a.selectSeason && 95 != a.selectSeason || (t_udCtrl.t_ud.share.pokemonrankingDetailParam.isDisableSeikaku = !0), a.saveCache(), util.locationMove("./t_pokemonranking.html")
      }))
    }
    saveCache() {
      t_udCtrl.t_ud.share.rankmatch_selectSeason = this.selectSeason, t_udCtrl.t_ud.share.rankmatch_selectRule = this.selectRule, t_udCtrl.t_ud.share.rankmatch_selectTabno = this.selectTabno, t_udCtrl.t_ud.share.rankmatch_selectRanking = this.selectRanking, "trainer" == this.selectRanking ? t_udCtrl.t_ud.share.rankmatch_selectScroll = $("#trainerRankingBody").scrollTop() : t_udCtrl.t_ud.share.rankmatch_selectScroll = $("#pokemonRankingBody").scrollTop(), t_udCtrl.save()
    }
  }
  class b {
    constructor() {
      const e = this;
      this.pSelect = new g, t_udCtrl.t_ud.share.rankmatch_selectRank = -1, console.log("繧ｭ繝｣繝�す繝･:my_rankmatch_selectSeason=" + t_udCtrl.t_ud.share.my_rankmatch_selectSeason), console.log("繧ｭ繝｣繝�す繝･:my_rankmatch_selectRule=" + t_udCtrl.t_ud.share.my_rankmatch_selectRule), console.log("繧ｭ繝｣繝�す繝･:my_rankmatch_selectTabno=" + t_udCtrl.t_ud.share.my_rankmatch_selectTabno), console.log("繧ｭ繝｣繝�す繝･:my_rankmatch_selectScroll=" + t_udCtrl.t_ud.share.my_rankmatch_selectScroll), void 0 !== t_udCtrl.t_ud.share.isLogin ? (void 0 === t_udCtrl.t_ud.share.selectnplnId && console.error("nplnId縺碁∈謚槭＆繧後※縺�∪縺帙ｓ"), t_udCtrl.login((function () {
        e.selectnplnId = t_udCtrl.t_ud.share.selectnplnId, void 0 !== t_udCtrl.t_ud.share.my_rankmatch_selectSeason && void 0 !== t_udCtrl.t_ud.share.my_rankmatch_selectRule && void 0 !== t_udCtrl.t_ud.share.my_rankmatch_selectTabno && void 0 !== t_udCtrl.t_ud.share.my_rankmatch_selectScroll ? (e.selectSeason = t_udCtrl.t_ud.share.my_rankmatch_selectSeason, e.selectRule = t_udCtrl.t_ud.share.my_rankmatch_selectRule, e.selectTabno = t_udCtrl.t_ud.share.my_rankmatch_selectTabno, e.selectScroll = t_udCtrl.t_ud.share.my_rankmatch_selectScroll) : (e.selectSeason = String(t_udCtrl.getRankmatchJoinNewestSeason(e.selectnplnId, t_udCtrl.t_ud.share.rankmatch_selectSeason)), e.selectRule = "single", e.selectTabno = 1, e.selectScroll = 0);
        let t = t_udCtrl.t_ud.myInfo.playInfo[e.selectnplnId].romId;
        console.log("nplnId=" + t_udCtrl.t_ud.share.selectnplnId + " , Season=" + e.selectSeason + " , Rom=" + t), "Sc" == t ? $("#rom_header").html('<div class="icon"><img src="./img/logo/icon_soft_S_01_01.png"></div>') : "Vi" == t && $("#rom_header").html('<div class="icon"><img src="./img/logo/icon_soft_S_01_02.png"></div>'), $("#userName").html(t_udCtrl.t_ud.myInfo.playInfo[e.selectnplnId].name), $("#myicon").addClass("icon-" + t_udCtrl.t_ud.myInfo.playInfo[e.selectnplnId].icon), e.isEndHistory = {}, t_udCtrl.load_rankmatch_list(null, (function () {
          e.seasonList = Object.keys(t_udCtrl.t_ud.rankmatchInfo), e.seasonList.sort((e, t) => parseInt(e, 10) < parseInt(t, 10) ? 1 : -1), e.historyStart = 0, e.uiInitialize()
        }))
      }), (function (e, t) {
        console.error("騾壻ｿ｡繧ｨ繝ｩ繝ｼ(" + e + "," + t + ")")
      }))) : util.locationMove("./t_rankmatch.html")
    }
    uiInitialize() {
      const e = this;
      $("#historyList").css("height", $(window).height() - 660 + "px"), $("#title-text").addClass(util.langCodeStr()), $("#topButton").click((function (t) {
        t.preventDefault(), t_udCtrl.t_ud.share.rankmatch_selectSeason = e.selectSeason, t_udCtrl.t_ud.share.rankmatch_selectRule = e.selectRule, t_udCtrl.t_ud.share.rankmatch_selectRanking = "trainer", t_udCtrl.t_ud.share.rankmatch_selectTabno = 1, t_udCtrl.t_ud.share.rankmatch_selectScroll = 0, e.saveCache(), util.locationMove("./t_rankmatch.html")
      })), e.pSelect.initPageTab(5, (function (t) {
        if (e.selectTabno === t) return;
        e.selectTabno = t, e.selectScroll = 0, e.historyStart = 10 * (t - 1);
        let a = t_udCtrl.t_ud.myInfo.playInfo[e.selectnplnId].rankmatch[e.selectSeason];
        e.historyStart > a[e.selectRule].history.length && !e.isEndHistory[a[e.selectRule].cId] ? t_udCtrl.load_history(a[e.selectRule], e.selectnplnId, a[e.selectRule].cId, !0, (function () {
          a[e.selectRule].history.length < 100 ? e.isEndHistory[a[e.selectRule].cId] = !0 : e.isEndHistory[a[e.selectRule].cId] = !1, e.historyView(a[e.selectRule].history, e.historyStart)
        })) : e.historyView(a[e.selectRule].history, e.historyStart)
      })), e.pSelect.hide(), t_udCtrl.load_myresult_rankmatch(e.selectnplnId, e.selectSeason, (function () {
        e.initSelectorOption(), e.seasonSelection()
      }))
    }
    initSelectorOption() {
      const e = this;
      let t = "";
      for (let a = 0; a < e.seasonList.length; a++) {
        if (0 == t_udCtrl.isJoinRankmatch2(e.selectnplnId, e.seasonList[a])) continue;
        let n = e.seasonList[a];
        if (void 0 !== t_udCtrl.t_ud.rankmatchInfo[n].single) {
          let e = t_udCtrl.t_ud.rankmatchInfo[n].single.start.split(" "),
            a = "";
          for (let t = 0; t < e.length - 1; t++) a += e[t];
          t += '<option value="' + n + ',0">' + t_udCtrl.t_ud.rankmatchInfo[n].single.name + " " + langCtrl.common.rule[0] + " " + a + "~</option>"
        }
        if (void 0 !== t_udCtrl.t_ud.rankmatchInfo[n].double) {
          let e = t_udCtrl.t_ud.rankmatchInfo[n].double.start.split(" "),
            a = "";
          for (let t = 0; t < e.length - 1; t++) a += e[t];
          t += '<option value="' + n + ',1">' + t_udCtrl.t_ud.rankmatchInfo[n].double.name + " " + langCtrl.common.rule[1] + " " + a + "~</option>"
        }
      }
      $("#seasonSelector").html(t), console.log("selectnplnId=" + e.selectnplnId + " , selectSeason=" + e.selectSeason);
      const a = t_udCtrl.t_ud.myInfo.playInfo[e.selectnplnId].rankmatch[e.selectSeason];
      "single" === e.selectRule && (void 0 === t_udCtrl.t_ud.rankmatchInfo[e.selectSeason].single || void 0 === a.single || 0 === a.single.total_win && 0 === a.single.total_loss && 0 === a.single.total_draw) && (e.selectRule = "double");
      let n = e.selectSeason + ",";
      "single" === e.selectRule ? n += "0" : n += "1", $("#seasonSelector").val(n), $("#seasonSelector").change((function () {
        let t = $(this).val().split(",");
        e.selectSeason = t[0], 0 == t[1] ? e.selectRule = "single" : e.selectRule = "double", e.selectTabno = 1, e.selectScroll = 0, t_udCtrl.load_myresult_rankmatch(e.selectnplnId, e.selectSeason, (function () {
          e.seasonSelection()
        }))
      }))
    }
    seasonSelection() {
      const e = this;
      $("#singleRank").hide(), $("#doubleRank").hide(), this.refreshClassList = {};
      const t = t_udCtrl.t_ud.myInfo.playInfo[e.selectnplnId].rankmatch[e.selectSeason],
        a = t_udCtrl.t_ud.rankmatchInfo[e.selectSeason];
      if ($("#regulationPage").click((function (t) {
          e.saveCache(), util.t_locationMoveRegulation(a[e.selectRule].cId, util.langCode())
        })), $("#regulationPokemonPage").click((function (t) {
          e.saveCache(), util.t_locationMoveUsePokemonList(a[e.selectRule].cId, util.langCode())
        })), "single" == e.selectRule) {
        if ($("#period").html(util.joinDate(a.single.start, a.single.end)), 1 === a.single.rst) $("#joinedNum").html(langCtrl.lang.t_common.gathering);
        else {
          let e = a.single.cnt;
          $("#joinedNum").html(util.numberFormat(e))
        }
        e.updateMydata(t.single)
      } else if ("double" == e.selectRule) {
        if ($("#period").html(util.joinDate(a.double.start, a.double.end)), 1 === a.double.rst) $("#joinedNum").html(langCtrl.lang.t_common.gathering);
        else {
          let e = a.double.cnt;
          $("#joinedNum").html(util.numberFormat(e))
        }
        e.updateMydata(t.double)
      }
      "single" == e.selectRule ? void 0 === t.single || 0 === t.single.total_win && 0 === t.single.total_loss && 0 === t.single.total_draw ? ($("#historyList").html(""), e.pSelect.hide()) : t_udCtrl.load_history(t.single, e.selectnplnId, t.single.cId, !1, (function () {
        0 === t.single.history.length || (t.single.history.length < 100 ? e.isEndHistory[t.single.cId] = !0 : e.isEndHistory[t.single.cId] = !1);
        let a = 10 * (e.selectTabno - 1);
        e.historyView(t.single.history, a)
      })) : "double" == e.selectRule && (void 0 === t.double || 0 === t.double.total_win && 0 === t.double.total_loss && 0 === t.double.total_draw ? ($("#historyList").html(""), e.pSelect.hide()) : t_udCtrl.load_history(t.double, e.selectnplnId, t.double.cId, !1, (function () {
        0 === t.double.history.length || (t.double.history.length < 100 ? e.isEndHistory[t.double.cId] = !0 : e.isEndHistory[t.double.cId] = !1);
        let a = 10 * (e.selectTabno - 1);
        e.historyView(t.double.history, a)
      })))
    }
    updateMydata(e) {
      const t = this;
      if ($("#totalView").unbind("click"), $("#totalView").removeClass("t_changeButton"), void 0 === e) {
        var a = [0, 0, 0];
        let e = langCtrl.lang.t_common.win_num + " " + langCtrl.lang.t_common.lose_num + " " + langCtrl.lang.t_common.draw_num;
        return $(".rankText").html(langCtrl.lang.t_common.outrange), $("#ratePoint").hide(), $(".rank-result").html(util.replaced(e, a)), $(".rankLayerContainer").html(""), !1
      }
      e.rankmatch.layer <= 3 || 0 === e.ranking.rank ? ($(".rankText").html(langCtrl.lang.t_common.outrange), $("#ratePoint").hide()) : ($(".rankText").html(util.msNumFormat(langCtrl.lang.t_common.rank_num, [util.numberFormat(e.ranking.rank)])), $("#userPoint").html(util.ratingToStr(e.rating_value)), $("#ratePoint").show(), $("#totalView").click((function (a) {
        t_udCtrl.t_ud.share.rankmatch_selectSeason = t.selectSeason, t_udCtrl.t_ud.share.rankmatch_selectRule = t.selectRule, t_udCtrl.t_ud.share.rankmatch_selectRanking = "trainer", t_udCtrl.t_ud.share.rankmatch_selectTabno = 1, t_udCtrl.t_ud.share.rankmatch_selectScroll = 0, t_udCtrl.t_ud.share.rankmatch_selectRank = e.ranking.rank, t.saveCache(), util.locationMove("./t_rankmatch.html")
      })), $("#totalView").addClass("t_changeButton")), 0 === e.total_win && 0 === e.total_loss && 0 === e.total_draw ? $(".rankLayerContainer").html("") : $(".rankLayerContainer").html('<img src="./img/svg/' + this.getRankIconName(e.rankmatch.layer) + '" width="30" height="30">');
      a = [e.total_win, e.total_loss, e.total_draw];
      let n = langCtrl.lang.t_common.win_num + " " + langCtrl.lang.t_common.lose_num + " " + langCtrl.lang.t_common.draw_num;
      return $(".rank-result").html(util.replaced(n, a)), !0
    }
    historyView(e, t) {
      console.log("historyView()");
      t = (t = void 0 === t ? 0 : t) < 0 ? 0 : t, this.historyStart = t, this.pSelect.resetTab((e.length - 1) / 10, t / 10 + 1), this.pSelect.show();
      let a = 0,
        n = "",
        i = 0;
      for (let o = t; o < e.length && (i > 0 && (n += '<div class="dotDividor"></div>'), i++, n += '<div class="historyRow">', n += '<div class="winloseIconContainer">', 0 == e[o].result ? n += '<div class="t_winloseIcon"><span class="iconText">' + langCtrl.lang.t_common.win + "</span></div>" : 1 == e[o].result ? n += '<div class="t_winloseIcon t_loseIcon"><span class="iconText">' + langCtrl.lang.t_common.lose + "</span></div>" : 2 == e[o].result && (n += '<div class="t_winloseIcon t_drawIcon"><span class="iconText">' + langCtrl.lang.t_common.draw + "</span></div>"), n += "</div>", n += '<div class="userIconContainer">', n += '<div class="icon"><img src="./img/icons/trainer/' + e[o].icon + '" onError="this.onerror=null;this.src=\'./img/icons/icon_prof_icon02.png\';"></div>', n += "</div>", n += '<div class="userNameContainer">', n += '<div class="userName">' + e[o].name + "</div>", n += "</div>", n += '<div class="placeContainer">', n += '<div class="code">', n += '<div class="codeText">' + e[o].locale + "</div>", n += "</div>", n += "</div>", n += '<div class="dateText">' + util.joinDateTz(e[o].date) + "</div>", 0 != e[o].rentalTeamId && (n += '<div class="footer">', n += '<div class="label">' + langCtrl.lang.t_common.rental + "</div>", n += '<div class="teamIdContainer">', n += '<div class="teamId">' + e[o].rentalTeamId + "</div>", n += "</div>", n += "</div>"), n += "</div>", n += "</div>", !(a >= 9)); o++) a++;
      $("#historyList").html(n), $("#historyList").scrollTop(this.selectScroll)
    }
    getRankIconName(e) {
      switch (e) {
      case 0:
        return "icon_rankmark_01.svg";
      case 1:
        return "icon_rankmark_02.svg";
      case 2:
        return "icon_rankmark_03.svg";
      case 3:
        return "icon_rankmark_04.svg";
      case 4:
        return "icon_rankmark_05.svg"
      }
      return ""
    }
    saveCache() {
      t_udCtrl.t_ud.share.my_rankmatch_selectSeason = this.selectSeason, t_udCtrl.t_ud.share.my_rankmatch_selectRule = this.selectRule, t_udCtrl.t_ud.share.my_rankmatch_selectTabno = this.selectTabno, t_udCtrl.t_ud.share.my_rankmatch_selectScroll = $("#historyList").scrollTop(), t_udCtrl.save()
    }
  }
  class k {
    constructor() {
      const e = this;
      if (void 0 === t_udCtrl.t_ud.share.isLogin) {
        let e = localStorage.getItem("top");
        return e = null == e ? 0 : e, void(1 == e ? util.locationMove("./t_internetcompetition.html") : 2 == e ? util.locationMove("./t_friendcompetition.html") : util.locationMove("./t_rankmatch.html"))
      }
      t_udCtrl.login((function () {
        console.log("cId=" + t_udCtrl.t_ud.share.pokemonrankingDetailParam.cId + " , rst=" + t_udCtrl.t_ud.share.pokemonrankingDetailParam.rst + " , ts2=" + t_udCtrl.t_ud.share.pokemonrankingDetailParam.ts2), e.detailGetParam = t_udCtrl.t_ud.share.pokemonrankingDetailParam, e.rankingTab = 1, e.rankingTabKind = 1, e.detailData = {}, e.rankingData = {}, e.nowRankingData = {}, util.getItemnamejson(parseInt(util.langCode()), (function (t) {
          e.itemnamejson = t.itemname, util.getZknFormjson(parseInt(util.langCode()), (function (t) {
            e.zknformjson = t.zkn_form, e.uiInitialize()
          }))
        }))
      }))
    }
    uiInitialize() {
      const e = this;
      if ($(".t_pokemonRankingContainer>.body").css("height", $(window).height() - 460 + "px"), $("#selectTabName").addClass(util.langCodeStr()), e.tabOnColor = "rgba(18,166,168,1)", e.tabOffColor = "rgba(18,166,168,0)", "rankmatch" == t_udCtrl.t_ud.share.selectMydataType ? $("#headerIcon").html('<div class="iconView icon-h2_icon03"></div>') : "internetcompe_detail" == t_udCtrl.t_ud.share.selectMydataType ? $("#headerIcon").html('<div class="iconView icon-h2_icon04"></div>') : "friendcompe_detail" == t_udCtrl.t_ud.share.selectMydataType && $("#headerIcon").html('<div class="iconView icon-h2_icon05"></div>'), 0 == e.detailGetParam.ts2 || 9999999999 == e.detailGetParam.ts2) return;
      const t = "/" + e.detailGetParam.cId + "/" + e.detailGetParam.rst + "/" + e.detailGetParam.ts2 + "/pokemon";
      t_udCtrl.pokemonRankingRequest(t, (function (t) {
        e.rankingData = t, e.selectDetailView(), e.setUIAction(), e.changeRankingTab()
      }))
    }
    selectDetailView() {
      const e = this;
      let t = e.rankingData[e.detailGetParam.idx].id;
      e.rankingData[e.detailGetParam.idx].form;
      if (e.detailData.hasOwnProperty(t)) e.showDetailData(), e.showPokemonRanking();
      else {
        let t = parseInt(e.rankingData[e.detailGetParam.idx].id / 200) + 1;
        const a = "/" + e.detailGetParam.cId + "/" + e.detailGetParam.rst + "/" + e.detailGetParam.ts2 + "/pdetail-" + t.toString();
        t_udCtrl.pokemonRankingDetailRequest(a, (function (t) {
          for (var a in t) e.detailData[a] = t[a];
          e.showDetailData(), e.showPokemonRanking()
        }))
      }
    }
    showDetailData() {
      let e = this.rankingData[this.detailGetParam.idx],
        t = "0000" + e.id,
        a = e.id,
        n = e.form,
        i = ($("<div />"), "");
      switch (i += '<div class="rankIconContainer">', this.detailGetParam.idx) {
      case 0:
        i += '<div class="icon icon-oukan1"></div>';
        break;
      case 1:
        i += '<div class="icon icon-oukan2"></div>';
        break;
      case 2:
        i += '<div class="icon icon-oukan3"></div>';
        break;
      default:
        i += '<div class="icon"></div>'
      }
      i += "</div>", i += '<div class="rankText">' + (this.detailGetParam.idx + 1) + "</div>", i += '<div class="pokemonIconContainer">', i += '<img src="' + util.GetPokeiIcon128Name(a, n) + '" onError="this.onerror=null;this.src=\'./img/icons/ball_g.png\';">', i += "</div>", i += '<div class="pokemonNo">', i += '<div class="noTitle">' + langCtrl.lang.t_pokemonrankingPageTexts.no + "</div>", i += '<div class="no">' + t.substring(t.length - 4) + "</div>", i += "</div>", i += '<div class="pokemonName">' + langCtrl.GetPokeName(e.id) + "</div>";
      let o = this.zknformjson[util.zeroPadding(a, 3) + "_" + util.zeroPadding(n, 3)];
      void 0 !== o && o.length > 0 && (i += '<div class="pokemonFormName">(' + o + ")</div>"), i += '<div class="t_pokemonTypeContainer">', i += '<div class="type1Continer t_typeColor' + mdCtrl.GetType(a, n, 0) + '">', i += '<div class="icon icon-' + util.getTypeIconName(mdCtrl.GetType(a, n, 0)) + '"></div>', i += "</div>", mdCtrl.GetType(a, n, 1) >= 0 && (i += '<div class="type2Continer t_typeColor' + mdCtrl.GetType(a, n, 1) + '">', i += '<div class="icon icon-' + util.getTypeIconName(mdCtrl.GetType(a, n, 1)) + '"></div>', i += "</div>"), $("#detail-data").html(i)
    }
    changeRankingTab() {
      const e = this;
      e.rankingTabKind = 1, 1 == e.rankingTab ? ($("#tab1").removeClass("disable"), $("#tab2").addClass("disable"), $("#tab3").addClass("disable"), $("#pokemonRankingTab-d1").hide(), $("#pokemonRankingTab1-1").show().css("background-color", e.tabOnColor), $("#pokemonRankingTab1-2").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab1-3").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab1-4").show().css("background-color", e.tabOffColor), !0 === e.detailGetParam.isDisableSeikaku ? $("#pokemonRankingTab1-5").hide() : $("#pokemonRankingTab1-5").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab1-6").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab2-1").hide(), $("#pokemonRankingTab2-2").hide(), $("#pokemonRankingTab3-1").hide(), $("#pokemonRankingTab3-2").hide(), $("#pokemonRankingTab-d2").hide(), $("#selectTabName").html(langCtrl.lang.t_pokemonrankingPageTexts["kind-tab-battle-team"])) : 2 == e.rankingTab ? ($("#tab1").addClass("disable"), $("#tab2").removeClass("disable"), $("#tab3").addClass("disable"), $("#pokemonRankingTab-d1").show(), $("#pokemonRankingTab1-1").hide(), $("#pokemonRankingTab1-2").hide(), $("#pokemonRankingTab1-3").hide(), $("#pokemonRankingTab1-4").hide(), $("#pokemonRankingTab1-5").hide(), $("#pokemonRankingTab1-6").hide(), $("#pokemonRankingTab2-1").show().css("background-color", e.tabOnColor), $("#pokemonRankingTab2-2").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab3-1").hide(), $("#pokemonRankingTab3-2").hide(), $("#pokemonRankingTab-d2").show(), $("#selectTabName").html(langCtrl.lang.t_pokemonrankingPageTexts["kind-tab-battle-win"])) : ($("#tab1").addClass("disable"), $("#tab2").addClass("disable"), $("#tab3").removeClass("disable"), $("#pokemonRankingTab-d1").show(), $("#pokemonRankingTab1-1").hide(), $("#pokemonRankingTab1-2").hide(), $("#pokemonRankingTab1-3").hide(), $("#pokemonRankingTab1-4").hide(), $("#pokemonRankingTab1-5").hide(), $("#pokemonRankingTab1-6").hide(), $("#pokemonRankingTab2-1").hide(), $("#pokemonRankingTab2-2").hide(), $("#pokemonRankingTab3-1").show().css("background-color", e.tabOnColor), $("#pokemonRankingTab3-2").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab-d2").show(), $("#selectTabName").html(langCtrl.lang.t_pokemonrankingPageTexts["kind-tab-battle-lose"])), e.showPokemonRanking()
    }
    showPokemonRanking() {
      const e = this;
      let t = "",
        a = "";
      if (t = 1 == e.rankingTab ? "temoti" : 2 == e.rankingTab ? "win" : "lose", 1 == e.rankingTabKind ? a = "pokemon" : 2 == e.rankingTabKind ? a = "waza" : 3 == e.rankingTabKind ? a = "tokusei" : 4 == e.rankingTabKind ? a = "motimono" : 5 == e.rankingTabKind ? a = "seikaku" : 6 == e.rankingTabKind && (a = "terastal"), $("#pokemonRankingBody").empty(), $("#wazaRankingBody").empty(), !1 === e.detailData.hasOwnProperty(e.rankingData[e.detailGetParam.idx].id)) return void console.log("繝ｩ繝ｳ繧ｭ繝ｳ繧ｰ繝��繧ｿ縺ｪ縺�1");
      if (!1 === e.detailData[e.rankingData[e.detailGetParam.idx].id].hasOwnProperty(e.rankingData[e.detailGetParam.idx].form)) return void console.log("繝ｩ繝ｳ繧ｭ繝ｳ繧ｰ繝��繧ｿ縺ｪ縺�2");
      if (void 0 === e.detailData[e.rankingData[e.detailGetParam.idx].id][e.rankingData[e.detailGetParam.idx].form]) return void console.log("繝ｩ繝ｳ繧ｭ繝ｳ繧ｰ繝��繧ｿ縺ｪ縺�3");
      let n = e.detailData[e.rankingData[e.detailGetParam.idx].id][e.rankingData[e.detailGetParam.idx].form][t][a];
      e.nowRankingData = n;
      let i = "",
        o = 0;
      if ("pokemon" == a) {
        for (var l in $("#pokemonRankingBody").removeClass("disableDisplay"), $("#wazaRankingBody").addClass("disableDisplay"), n) {
          o > 0 && (i += '<div class="dotDividor"></div>'), o++;
          var r = parseInt(l) + 1;
          let e = n[l].id,
            t = n[l].form;
          i += '<div class="rankingRow2">', i += '<div class="leftContainer">', i += '<div class="rank">', i += '<div class="rankText">' + r.toString() + "</div>", i += "</div>", i += "</div>", i += '<div class="rightContainer">', i += '<div class="t_pokemonContainer">', i += '<div class="pokemonIconContainer">', i += '<img src="' + util.GetPokeiIconName(e, t) + '" onError="this.onerror=null;this.src=\'./img/icons/ball_g.png\';">', i += "</div>", i += '<div class="pokemonName">' + langCtrl.GetPokeName(e) + "</div>", i += '<div class="t_pokemonTypeContainer">', i += '<div class="type1Continer t_typeColor' + mdCtrl.GetType(e, t, 0) + '">', i += '<div class="icon icon-' + util.getTypeIconName(mdCtrl.GetType(e, t, 0)) + '"></div>', i += "</div>", mdCtrl.GetType(e, t, 1) >= 0 && (i += '<div class="type2Continer t_typeColor' + mdCtrl.GetType(e, t, 1) + '">', i += '<div class="icon icon-' + util.getTypeIconName(mdCtrl.GetType(e, t, 1)) + '"></div>', i += "</div>"), i += "</div>", i += "</div>", i += "</div>", i += "</div>"
        }
        $("#pokemonRankingBody").empty(), $("#pokemonRankingBody").html(i)
      } else {
        $("#pokemonRankingBody").addClass("disableDisplay"), $("#wazaRankingBody").removeClass("disableDisplay");
        var s = {};
        for (var l in "waza" == a ? s = langCtrl.dex.waza : "tokusei" == a ? s = langCtrl.dex.tokusei : "motimono" == a ? s = e.itemnamejson : "seikaku" == a ? s = langCtrl.dex.seikaku : "terastal" == a && (s = langCtrl.dex.pokeType), n) {
          o > 0 && (i += '<div class="dotDividor"></div>'), o++, i += '<div class="waza-ranking-row" id="wazaRow' + o + '">', i += '<div class="leftContainer">', i += '<div class="rank">', i += '<div class="rankText">' + (r = parseInt(l) + 1).toString() + "</div>", i += '<div class="rateText">' + util.formatFraction(n[l].val.toString()) + "</div>", i += "</div>", i += "</div>", i += '<div class="rightContainer">', i += '<div class="wazaContainer">', "waza" == a ? (i += '<div class="typeContiner t_typeColor' + mdCtrl.GetWazaType(n[l].id, 0) + '">', i += '<div class="icon icon-' + util.getTypeIconName(mdCtrl.GetWazaType(n[l].id, 0)) + '"></div>', i += "</div>") : "terastal" == a ? (i += '<div class="terastalTypeContiner">', i += '<div class="icon"><img src="' + util.getTerastalIconName(n[l].id) + '" width="64" height="64" onError="this.onerror=null;this.src=\'./img/icons/ball_g.png\';"></div>', i += "</div>") : "motimono" == a && (i += '<div class="typeContiner">', i += '<div class="icon"><img src="' + util.GetItemIconName(n[l].id) + '" width="64" height="64" onError="this.onerror=null;this.src=\'./img/icons/ball_g.png\';"></div>', i += "</div>"), i += '<div class="infoContainer">', "waza" == a || "tokusei" == a ? null == s[n[l].id] ? i += '<div class="wazaName fontWeightBold">' + n[l].id + "</div>" : i += '<div class="wazaName fontWeightBold">' + s[n[l].id] + "</div>" : "motimono" == a ? 0 === n[l].id ? i += '<div class="wazaName fontWeightBold">' + langCtrl.lang.t_pokemonrankingPageTexts.hyphen + "</div>" : null == s[n[l].id] ? i += '<div class="wazaName fontWeightBold">' + n[l].id + "</div>" : i += '<div class="wazaName fontWeightBold">' + s[n[l].id] + "</div>" : null == s[n[l].id] ? i += '<div class="wazaName">' + n[l].id + "</div>" : i += '<div class="wazaName">' + s[n[l].id] + "</div>", i += "</div>", "waza" == a ? (i += '<div class="rightCategoryIconContainer">', i += '<div class="icon icon-' + util.getCategoryIconName(mdCtrl.GetWazaType(n[l].id, 1)) + '"></div>', i += "</div>") : "seikaku" == a && (i += '<div class="temperContainer">', null != mdCtrl.md.temper[n[l].id] && (mdCtrl.md.temper[n[l].id][0] > 0 ? (i += '<div class="up"></div>', i += '<div class="uptxt">' + e.getAbilityName(mdCtrl.md.temper[n[l].id][0]) + "</div>") : i += '<div class="uptxt">' + langCtrl.lang.t_pokemonrankingPageTexts.hyphen + "</div>", mdCtrl.md.temper[n[l].id][1] > 0 ? (i += '<div class="down"></div>', i += '<div class="downtxt">' + e.getAbilityName(mdCtrl.md.temper[n[l].id][1]) + "</div>") : i += '<div class="downtxt">' + langCtrl.lang.t_pokemonrankingPageTexts.hyphen + "</div>"), i += "</div>"), i += "</div>", i += "</div>", i += "</div>", i += "</div>"
        }
        $("#pokemon-detail-body").empty(), $("#wazaRankingBody").html(i), "waza" != a && "tokusei" != a && "motimono" != a || ($("#wazaRow1").click((function (t) {
          e.popup(0)
        })), $("#wazaRow2").click((function (t) {
          e.popup(1)
        })), $("#wazaRow3").click((function (t) {
          e.popup(2)
        })), $("#wazaRow4").click((function (t) {
          e.popup(3)
        })), $("#wazaRow5").click((function (t) {
          e.popup(4)
        })), $("#wazaRow6").click((function (t) {
          e.popup(5)
        })), $("#wazaRow7").click((function (t) {
          e.popup(6)
        })), $("#wazaRow8").click((function (t) {
          e.popup(7)
        })), $("#wazaRow9").click((function (t) {
          e.popup(8)
        })), $("#wazaRow10").click((function (t) {
          e.popup(9)
        })))
      }
      clearTimeout(e.timer), $(".popupBase").addClass("disableDisplay"), $(".t_pokemonRankingContainer > .body").scrollTop(0)
    }
    popup(e) {
      const t = this;
      t.popupidx = e, t.popupid = t.nowRankingData[e].id, 2 == t.rankingTabKind ? void 0 === t.wazainfojson ? util.getWazainfojson(parseInt(util.langCode()), (function (e) {
        t.wazainfojson = e, t.showPopup(t.popupidx, t.popupid)
      })) : t.showPopup(t.popupidx, t.popupid) : 3 == t.rankingTabKind ? void 0 === t.tokuseiinfojson ? util.getTokuseiinfojson(parseInt(util.langCode()), (function (e) {
        t.tokuseiinfojson = e, t.showPopup(t.popupidx, t.popupid)
      })) : t.showPopup(t.popupidx, t.popupid) : 4 == t.rankingTabKind && (void 0 === t.iteminfojson ? util.getIteminfojson(parseInt(util.langCode()), (function (e) {
        t.iteminfojson = e, t.showPopup(t.popupidx, t.popupid)
      })) : t.showPopup(t.popupidx, t.popupid))
    }
    showPopup(e, t) {
      const a = this;
      let n;
      if (2 == a.rankingTabKind ? n = a.getWazainfoText(String(t)) : 3 == a.rankingTabKind ? n = a.getTokuseiinfoText(String(t)) : 4 == a.rankingTabKind && (n = a.getIteminfoText(String(t))), null == n) return;
      clearTimeout(a.timer), $(".popupBase>.popupText").html(n), $(".popupBase>.popupText").addClass("anim_popupFadeIn"), $(".popupBase").removeClass("disableDisplay"), $(".popupBase>.popupText").removeClass("anim_popupFadeOut");
      let i = $("#wazaRow" + (e + 1)).offset(),
        o = i.left;
      o = 100;
      let l = n.split("<br>"),
        r = i.top - 20 - 45 * l.length;
      $(".popupBase>.popupText").offset({
        top: r,
        left: 100
      }), a.timer = setTimeout((function () {
        $(".popupBase>.popupText").removeClass("anim_popupFadeIn"), a.timer = setTimeout((function () {
          $(".popupBase>.popupText").addClass("anim_popupFadeOut"), a.timer = setTimeout((function () {
            $(".popupBase").addClass("disableDisplay"), $(".popupBase>.popupText").removeClass("anim_popupFadeOut")
          }), 200)
        }), 2e3)
      }), 200)
    }
    getWazainfoText(e) {
      return this.wazainfojson.wazainfo[e]
    }
    getTokuseiinfoText(e) {
      return this.tokuseiinfojson.tokuseiinfo[e]
    }
    getIteminfoText(e) {
      return this.iteminfojson.iteminfo[e]
    }
    getAbilityName(e) {
      let t;
      switch (parseInt(e)) {
      case 2:
        t = langCtrl.lang.t_pokemonrankingPageTexts.atk;
        break;
      case 3:
        t = langCtrl.lang.t_pokemonrankingPageTexts.def;
        break;
      case 4:
        t = langCtrl.lang.t_pokemonrankingPageTexts.agi;
        break;
      case 5:
        t = langCtrl.lang.t_pokemonrankingPageTexts.spatk;
        break;
      case 6:
        t = langCtrl.lang.t_pokemonrankingPageTexts.spdef;
        break;
      default:
        t = ""
      }
      return t
    }
    setUIAction() {
      const e = this;
      $("#pokemonRankingTab1-1").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 1 != e.rankingTabKind && (e.rankingTabKind = 1, e.showPokemonRanking(), $("#pokemonRankingTab1-1").show().css("background-color", e.tabOnColor), $("#pokemonRankingTab1-2").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab1-3").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab1-4").show().css("background-color", e.tabOffColor), !0 === e.detailGetParam.isDisableSeikaku ? $("#pokemonRankingTab1-5").hide() : $("#pokemonRankingTab1-5").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab1-6").show().css("background-color", e.tabOffColor), $("#selectTabName").html(langCtrl.lang.t_pokemonrankingPageTexts["kind-tab-battle-team"]))
      })), $("#pokemonRankingTab1-2").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 2 != e.rankingTabKind && (e.rankingTabKind = 2, e.showPokemonRanking(), $("#pokemonRankingTab1-1").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab1-2").show().css("background-color", e.tabOnColor), $("#pokemonRankingTab1-3").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab1-4").show().css("background-color", e.tabOffColor), !0 === e.detailGetParam.isDisableSeikaku ? $("#pokemonRankingTab1-5").hide() : $("#pokemonRankingTab1-5").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab1-6").show().css("background-color", e.tabOffColor), $("#selectTabName").html(langCtrl.lang.t_pokemonrankingPageTexts["kind-tab-battle-waza"]))
      })), $("#pokemonRankingTab1-3").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 3 != e.rankingTabKind && (e.rankingTabKind = 3, e.showPokemonRanking(), $("#pokemonRankingTab1-1").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab1-2").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab1-3").show().css("background-color", e.tabOnColor), $("#pokemonRankingTab1-4").show().css("background-color", e.tabOffColor), !0 === e.detailGetParam.isDisableSeikaku ? $("#pokemonRankingTab1-5").hide() : $("#pokemonRankingTab1-5").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab1-6").show().css("background-color", e.tabOffColor), $("#selectTabName").html(langCtrl.lang.t_pokemonrankingPageTexts["kind-tab-battle-tokusei"]))
      })), $("#pokemonRankingTab1-5").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 5 != e.rankingTabKind && (e.rankingTabKind = 5, e.showPokemonRanking(), $("#pokemonRankingTab1-1").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab1-2").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab1-3").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab1-4").show().css("background-color", e.tabOffColor), !0 === e.detailGetParam.isDisableSeikaku ? $("#pokemonRankingTab1-5").hide() : $("#pokemonRankingTab1-5").show().css("background-color", e.tabOnColor), $("#pokemonRankingTab1-6").show().css("background-color", e.tabOffColor), $("#selectTabName").html(langCtrl.lang.t_pokemonrankingPageTexts["kind-tab-battle-seikaku"]))
      })), $("#pokemonRankingTab1-4").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 4 != e.rankingTabKind && (e.rankingTabKind = 4, e.showPokemonRanking(), $("#pokemonRankingTab1-1").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab1-2").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab1-3").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab1-4").show().css("background-color", e.tabOnColor), !0 === e.detailGetParam.isDisableSeikaku ? $("#pokemonRankingTab1-5").hide() : $("#pokemonRankingTab1-5").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab1-6").show().css("background-color", e.tabOffColor), $("#selectTabName").html(langCtrl.lang.t_pokemonrankingPageTexts["kind-tab-battle-item"]))
      })), $("#pokemonRankingTab1-6").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 6 != e.rankingTabKind && (e.rankingTabKind = 6, e.showPokemonRanking(), $("#pokemonRankingTab1-1").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab1-2").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab1-3").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab1-4").show().css("background-color", e.tabOffColor), !0 === e.detailGetParam.isDisableSeikaku ? $("#pokemonRankingTab1-5").hide() : $("#pokemonRankingTab1-5").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab1-6").show().css("background-color", e.tabOnColor), $("#selectTabName").html(langCtrl.lang.t_pokemonrankingPageTexts["kind-tab-battle-terastal"]))
      })), $("#pokemonRankingTab2-1").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 1 != e.rankingTabKind && (e.rankingTabKind = 1, e.showPokemonRanking(), $("#pokemonRankingTab2-1").show().css("background-color", e.tabOnColor), $("#pokemonRankingTab2-2").show().css("background-color", e.tabOffColor), $("#selectTabName").html(langCtrl.lang.t_pokemonrankingPageTexts["kind-tab-battle-win"]))
      })), $("#pokemonRankingTab2-2").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 2 != e.rankingTabKind && (e.rankingTabKind = 2, e.showPokemonRanking(), $("#pokemonRankingTab2-1").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab2-2").show().css("background-color", e.tabOnColor), $("#selectTabName").html(langCtrl.lang.t_pokemonrankingPageTexts["kind-tab-battle-waza-win"]))
      })), $("#pokemonRankingTab3-1").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 1 != e.rankingTabKind && (e.rankingTabKind = 1, e.showPokemonRanking(), $("#pokemonRankingTab3-1").show().css("background-color", e.tabOnColor), $("#pokemonRankingTab3-2").show().css("background-color", e.tabOffColor), $("#selectTabName").html(langCtrl.lang.t_pokemonrankingPageTexts["kind-tab-battle-lose"]))
      })), $("#pokemonRankingTab3-2").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 2 != e.rankingTabKind && (e.rankingTabKind = 2, e.showPokemonRanking(), $("#pokemonRankingTab3-1").show().css("background-color", e.tabOffColor), $("#pokemonRankingTab3-2").show().css("background-color", e.tabOnColor), $("#selectTabName").html(langCtrl.lang.t_pokemonrankingPageTexts["kind-tab-battle-waza-lose"]))
      })), $("#tab1").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), e.rankingTab = 1, e.changeRankingTab()
      })), $("#tab2").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), e.rankingTab = 2, e.changeRankingTab()
      })), $("#tab3").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), e.rankingTab = 3, e.changeRankingTab()
      })), $("#detail-prev").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), e.detailGetParam.idx--, e.detailGetParam.idx < 0 && (e.detailGetParam.idx = e.rankingData.length - 1), e.rankingTab = 1, e.rankingTabKind = 1, e.selectDetailView(), e.changeRankingTab()
      })), $("#detail-next").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), e.detailGetParam.idx++, e.detailGetParam.idx > e.rankingData.length - 1 && (e.detailGetParam.idx = 0), e.rankingTab = 1, e.rankingTabKind = 1, e.selectDetailView(), e.changeRankingTab()
      }))
    }
  }
  class _ {
    constructor() {
      const e = this;
      e.pSelect = new g, console.log("繧ｭ繝｣繝�す繝･:internetcompetition_selectTabno=" + t_udCtrl.t_ud.share.internetcompetition_selectTabno), console.log("繧ｭ繝｣繝�す繝･:internetcompetition_selectScroll=" + t_udCtrl.t_ud.share.internetcompetition_selectScroll), void 0 !== t_udCtrl.t_ud.share.isLogin && void 0 !== t_udCtrl.t_ud.share.internetcompetition_selectTabno && void 0 !== t_udCtrl.t_ud.share.internetcompetition_selectScroll ? (e.selectTabno = t_udCtrl.t_ud.share.internetcompetition_selectTabno, e.selectScroll = t_udCtrl.t_ud.share.internetcompetition_selectScroll) : (e.selectTabno = 1, e.selectScroll = 0, t_udCtrl.reset()), t_udCtrl.login((function () {
        e.listNum = 50, e.morePage = -1, t_udCtrl.load_internetcompe_list(null, !1, (function () {
          e.updateCompeIdList(), e.isScroll = !1, e.uiInitialize()
        }))
      }))
    }
    updateCompeIdList() {
      this.compeInfo = t_udCtrl.t_ud.internetCompeInfo;
      let e = [];
      for (var t in t_udCtrl.t_ud.internetCompeInfo) e.push(t);
      this.compeIdList = e
    }
    uiInitialize() {
      const e = this;
      $("#t_internetCompeList").css("height", $(window).height() - 180 + "px"), e.pSelect.initPageTab(3, (function (t) {
        e.selectTabno !== t && (e.selectTabno = t, e.selectScroll = 0, e.morePage == t ? t_udCtrl.load_internetcompe_list(null, !0, (function () {
          e.updateCompeIdList(), e.listView(e.listNum)
        })) : e.listView(e.listNum))
      })), e.listView(e.listNum), document.getElementById("t_internetCompeList").addEventListener("touchmove", (function () {
        e.isScroll = !0
      }), {
        passive: !0
      }), document.getElementById("t_internetCompeList").addEventListener("touchend", (function () {
        e.isScroll = !1
      }), {
        passive: !0
      })
    }
    listView(e) {
      const t = this;
      e = void 0 === e ? 0 : e;
      const a = t.compeIdList;
      let n = (t.selectTabno - 1) * t.listNum,
        i = "";
      for (let o = 0; o < e && !(a.length <= o); o++) {
        let e = n + o,
          l = a[e];
        if (void 0 === l) {
          console.error("idList[" + e + "]=idList");
          continue
        }
        i += '<div id="' + l + '" class="internetCompe">', i += '<div class="header">', 1 == t.compeInfo[l].hst ? i += '<div class="state_open">' + langCtrl.lang.t_common["#open"] + "</div>" : 2 == t.compeInfo[l].hst && (i += '<div class="state_end">' + langCtrl.lang.t_common["#end"] + "</div>"), t_udCtrl.getInternetcompeJoinDataNum2(l)[0] > 0 ? i += '<div class="title" style="color: #12a6a8;">' : i += '<div class="title" style="color: #4e4e4e;">';
        let r = 24;
        const s = t.compeInfo[l].name,
          c = t.compeInfo[l].subname,
          d = Math.max(s ? s.length : 0, c ? c.length : 0);
        d > 24 && (r = 24 - 2 * Math.log2(d - 24)), i += `<div class="title1" style="font-size: ${r}px">${s}</div>`, i += `<div class="title2" style="font-size: ${r}px">${c}</div>`, i += "</div>", t.compeInfo[l].tournament && (i += '<div class="t_tournamentIcon"><div class="icon icon-tt_ranking1"></div></div>'), 0 == t.compeInfo[l].rule ? i += '<div class="t_ruleIcon"><div class="icon icon-result-single1"></div></div>' : i += '<div class="t_ruleIcon"><div class="icon icon-season-result-icon02"></div></div>', i += "</div>", i += '<div class="dotDividor"></div>', i += '<div class="periodContainer">', i += '<div class="icon"><img src="./img/svg/icon_calender_01.svg"></div>', i += '<div class="periodText">' + util.joinDate(t.compeInfo[l].start, t.compeInfo[l].end) + "</div>", i += "</div>", i += "</div>", i += "</div>"
      }
      $("#t_internetCompeList").html(i), $("#t_internetCompeList").scrollTop(t.selectScroll), t.scrollViewHeight = $("#t_internetCompeList").height(), t.scrollContentHeight = $("#t_internetCompeList").get(0).scrollHeight, t.thumbHeight = t.scrollViewHeight / t.scrollContentHeight, $(".t_scrollberImitation > .track > .thumb").css("height", 100 * t.thumbHeight + "%"), $("#t_internetCompeList").scroll((function () {
        let e = $("#t_internetCompeList").scrollTop() / t.scrollContentHeight;
        $(".t_scrollberImitation > .track > .thumb").css("top", 100 * e + "%")
      }));
      for (let i = 0; i < e && !(a.length <= i); i++) {
        let e = a[n + i];
        $("#" + e).click((function (e) {
          e.preventDefault(), t.isScroll || (t_udCtrl.t_ud.share.selectInternetCompe = $(this).attr("id"), t.compeInfo[t_udCtrl.t_ud.share.selectInternetCompe].tournament ? (t_udCtrl.t_ud.share.selectTournament = t_udCtrl.t_ud.share.selectInternetCompe, t.saveCache(), util.locationMove("./t_tournament_detail.html")) : (t_udCtrl.t_ud.share.internetcompetition_detail_selectRanking = void 0, t_udCtrl.t_ud.share.internetcompetition_detail_selectTabno = void 0, t_udCtrl.t_ud.share.internetcompetition_detail_selectScroll = void 0, t_udCtrl.t_ud.share.internetcompetition_detail_selectRank = void 0, t.saveCache(), util.locationMove("./t_internetcompetition_detail.html")))
        }))
      }
      if (e > 0) {
        let i = 0;
        "__finish__" !== t_udCtrl.t_ud.internetcompe_list_lastKey && (i = 1, t.morePage = Math.floor((a.length - 1) / e + 2)), t.pSelect.resetTab((a.length - 1) / e + i, n / e + 1), t.pSelect.show()
      } else t.pSelect.hide()
    }
    saveCache() {
      t_udCtrl.t_ud.share.internetcompetition_selectTabno = this.selectTabno, t_udCtrl.t_ud.share.internetcompetition_selectScroll = $("#t_internetCompeList").scrollTop(), t_udCtrl.save()
    }
  }
  class h {
    constructor() {
      const e = this;
      e.pSelect = new g, e.yesnoDialog = new c, console.log("繧ｭ繝｣繝�す繝･:internetcompetition_detail_selectRanking=" + t_udCtrl.t_ud.share.internetcompetition_detail_selectRanking), console.log("繧ｭ繝｣繝�す繝･:internetcompetition_detail_selectTabno=" + t_udCtrl.t_ud.share.internetcompetition_detail_selectTabno), console.log("繧ｭ繝｣繝�す繝･:internetcompetition_detail_selectScroll=" + t_udCtrl.t_ud.share.internetcompetition_detail_selectScroll), console.log("繧ｭ繝｣繝�す繝･:internetcompetition_detail_selectRank=" + t_udCtrl.t_ud.share.internetcompetition_detail_selectRank), void 0 !== t_udCtrl.t_ud.share.isLogin ? (void 0 === t_udCtrl.t_ud.share.selectInternetCompe && console.error("selectInternetCompe縺碁∈謚槭＆繧後※縺�∪縺帙ｓ"), t_udCtrl.login((function () {
        t_udCtrl.load_internetcompe_list(null, !1, (function () {
          void 0 !== t_udCtrl.t_ud.share.internetcompetition_detail_selectRanking && void 0 !== t_udCtrl.t_ud.share.internetcompetition_detail_selectTabno && void 0 !== t_udCtrl.t_ud.share.internetcompetition_detail_selectScroll ? (void 0 !== t_udCtrl.t_ud.share.internetcompetition_detail_selectRank && "-1" != t_udCtrl.t_ud.share.internetcompetition_detail_selectRank ? (e.selectRank = t_udCtrl.t_ud.share.internetcompetition_detail_selectRank, t_udCtrl.t_ud.share.internetcompetition_detail_selectRank = "-1", e.selectRanking = "trainer") : e.selectRanking = t_udCtrl.t_ud.share.internetcompetition_detail_selectRanking, e.selectTabno = t_udCtrl.t_ud.share.internetcompetition_detail_selectTabno, e.selectScroll = t_udCtrl.t_ud.share.internetcompetition_detail_selectScroll) : (e.selectRanking = "trainer", e.selectTabno = 1, e.selectScroll = 0), e.selectInternetCompe = t_udCtrl.t_ud.share.selectInternetCompe, e.compeInfo = t_udCtrl.t_ud.internetCompeInfo[e.selectInternetCompe], console.log("selectInternetCompe=" + e.selectInternetCompe), e.uiInitialize()
        }))
      }))) : util.locationMove("./t_internetcompetition.html")
    }
    uiInitialize() {
      const e = this;
      $("#trainerRankingBody").css("height", $(window).height() - 610 + "px"), $("#pokemonRankingBody").css("height", $(window).height() - 530 + "px"), $("#topButton").click((function (t) {
        t.preventDefault();
        let a = t_udCtrl.getInternetcompeJoinDataNum2(e.selectInternetCompe);
        console.log("num=" + a[0] + " ,id=" + a[1]), 0 == a[0] ? e.yesnoDialog.open({
          title: langCtrl.lang.t_common.not_join,
          msg: langCtrl.lang.t_common.not_join_tournament,
          btn1text: langCtrl.lang.t_common.ok,
          btn1Callback: function () {
            e.yesnoDialog.close()
          }
        }) : 1 == a[0] ? (t_udCtrl.t_ud.share.selectMydataType = "internetcompe_detail", t_udCtrl.t_ud.share.selectnplnId = a[1], t_udCtrl.t_ud.share.my_internetcompetition_detail_selectTabno = void 0, t_udCtrl.t_ud.share.my_internetcompetition_detail_selectScroll = void 0, e.saveCache(), util.locationMove("./t_my_internetcompetition_detail.html")) : (t_udCtrl.t_ud.share.selectMydataType = "internetcompe_detail", e.saveCache(), util.locationMove("./t_mydataselect.html"))
      })), 1 == this.compeInfo.hst ? $(".t_open_hr").removeClass("disableDisplay") : 2 == this.compeInfo.hst && $(".t_end_hr").removeClass("disableDisplay");
      let t = 26;
      const a = this.compeInfo.name,
        n = e.compeInfo.subname,
        i = Math.max(a ? a.length : 0, n ? n.length : 0);
      i > 24 && (t = 26 - 2 * Math.log2(i - 24)), $("#compeName").html(a), $("#compeName").css("fontSize", t + "px"), $("#compeSubName").html(n), $("#compeSubName").css("fontSize", t + "px"), $("#period").html(util.joinDate(this.compeInfo.start, this.compeInfo.end)), 2 === parseInt(this.compeInfo.rst) ? ($("#rankingContainer").show(), $("#joinedNum").html(util.numberFormat(this.compeInfo.cnt))) : 1 === parseInt(this.compeInfo.rst) ? ($("#rankingContainer").hide(), $("#joinedNum").html(langCtrl.lang.t_common.gathering)) : ($("#rankingContainer").hide(), this.compeInfo.cnt > 0 && $("#joinedNum").html(util.numberFormat(this.compeInfo.cnt))), 0 == this.compeInfo.rule ? $("#ruleIcon").html('<div class="icon icon-result-single1"></div>') : $("#ruleIcon").html('<div class="icon icon-season-result-icon02"></div>'), $("#regulationPage").click((function (t) {
        e.saveCache(), util.t_locationMoveRegulation(e.selectInternetCompe, util.langCode())
      })), $("#regulationPokemonPage").click((function (t) {
        e.saveCache(), util.t_locationMoveUsePokemonList(e.selectInternetCompe, util.langCode())
      })), e.pSelect.initPageTab(5, (function (t) {
        if (e.selectTabno !== t)
          if (e.selectTabno = t, e.selectScroll = 0, "trainer" == e.selectRanking)
            if (0 == e.compeInfo.ts1 || 9999999999 == e.compeInfo.ts1) e.pokemonRankingView([]), e.trainerRankingView([]);
            else {
              const a = "/" + e.selectInternetCompe + "/" + e.compeInfo.rst + "/" + e.compeInfo.ts1 + "/traner-" + util.rankingFileIdx(100 * t - 1);
              t_udCtrl.trainerRankingRequest(a, (function (a) {
                if (null == a) return e.pSelect.resetTab(0), void e.pSelect.show();
                e.trainerRankingView(a, 100 * (t - 1))
              }))
            }
        else if (0 == e.compeInfo.ts2 || 9999999999 == e.compeInfo.ts2) e.pokemonRankingView([]), e.trainerRankingView([]);
        else {
          const a = "/" + e.selectInternetCompe + "/" + e.compeInfo.rst + "/" + e.compeInfo.ts2 + "/pokemon";
          t_udCtrl.pokemonRankingRequest(a, (function (a) {
            e.pokemonRankingView(a, 100 * (t - 1))
          }))
        }
      })), $("#competion-ranking").removeClass("disableDisplay"), e.rankingContainerView()
    }
    rankingContainerView() {
      const e = this;
      e.pSelect.hide(), $("#trainerTab").click((function (t) {
        if (t.preventDefault(), t.stopImmediatePropagation(), "trainer" !== e.selectRanking && (e.selectScroll = 0), $("#trainerTab").removeClass("disable"), $("#pokemonTab").addClass("disable"), $("#trainerRankingHeader").removeClass("disableDisplay"), $("#trainerRankingBody").removeClass("disableDisplay"), $("#pokemonRankingBody").addClass("disableDisplay"), e.selectRanking = "trainer", 0 == e.compeInfo.ts1 || 9999999999 == e.compeInfo.ts1) $("#trainerRankingBody").addClass("disableDisplay"), $("#ranking-aggr").removeClass("disableDisplay"), $("#ranking-aggr").html(langCtrl.lang.t_common.gathering), e.pSelect.resetTab(0), e.pSelect.show();
        else {
          const t = $.isNumeric(e.selectRank) ? e.selectRank - 1 : 100 * e.selectTabno - 1,
            a = "/" + e.selectInternetCompe + "/" + e.compeInfo.rst + "/" + e.compeInfo.ts1 + "/traner-" + util.rankingFileIdx(t);
          t_udCtrl.trainerRankingRequest(a, (function (t) {
            if (null == t) return $("#trainerRankingBody").addClass("disableDisplay"), $("#ranking-aggr").removeClass("disableDisplay"), $("#ranking-aggr").html(langCtrl.lang.t_common.gathering), e.pSelect.resetTab(0), void e.pSelect.hide();
            let a = $.isNumeric(e.compeInfo.rankCnt) ? e.compeInfo.rankCnt : t.length;
            if (void 0 !== e.selectRank) {
              let n = parseInt((e.selectRank - 1) / 100);
              e.selectTabno = n + 1;
              let i = 100 * n,
                o = (e.selectRank - 1) % 100;
              e.selectScroll = 91 * o, e.trainerRankingView(t, i), e.pSelect.resetTab((a - 1) / 100, e.selectTabno), e.pSelect.show()
            } else {
              let n = 100 * (e.selectTabno - 1);
              e.trainerRankingView(t, n), e.pSelect.resetTab((a - 1) / 100, e.selectTabno), e.pSelect.show()
            }
          }))
        }
      })), $("#pokemonTab").click((function (t) {
        if (t.preventDefault(), t.stopImmediatePropagation(), "pokemon" !== e.selectRanking && (e.selectScroll = 0), e.pSelect.hide(), $("#pokemonTab").removeClass("disable"), $("#trainerTab").addClass("disable"), $("#pokemonRankingBody").removeClass("disableDisplay"), $("#trainerRankingHeader").addClass("disableDisplay"), $("#trainerRankingBody").addClass("disableDisplay"), e.selectRanking = "pokemon", 0 == e.compeInfo.ts2 || 9999999999 == e.compeInfo.ts2) $("#pokemonRankingBody").addClass("disableDisplay"), $("#ranking-aggr").removeClass("disableDisplay"), $("#ranking-aggr").html(langCtrl.lang.t_common.gathering);
        else {
          const t = "/" + e.selectInternetCompe + "/" + e.compeInfo.rst + "/" + e.compeInfo.ts2 + "/pokemon";
          t_udCtrl.pokemonRankingRequest(t, (function (t) {
            e.pokemonRankingView(t)
          }))
        }
      })), "trainer" === e.selectRanking ? $("#trainerTab").click() : $("#pokemonTab").click()
    }
    trainerRankingView(e, t) {
      if (null == e || 0 === e.length) return $("#trainerRankingBody").addClass("disableDisplay"), $("#ranking-aggr").removeClass("disableDisplay"), void $("#ranking-aggr").html(langCtrl.lang.t_common.gathering);
      $("#trainerRankingBody").removeClass("disableDisplay"), $("#competion-ranking").removeClass("disableDisplay"), $("#ranking-aggr").addClass("disableDisplay"), t = (t = void 0 === t ? 0 : t) < 0 ? 0 : t;
      let a = "",
        n = 0;
      for (let i = 0; i < e.length; i++) {
        if (e[i].rank <= t) continue;
        if (t + 100 < e[i].rank) break;
        switch (n > 0 && (a += '<div class="dotDividor"></div>'), n++, a += '<div class="rankingRow1">', a += '<div class="leftContainer">', e[i].rank) {
        case 1:
          a += '<div class="icon icon-oukan1"></div>';
          break;
        case 2:
          a += '<div class="icon icon-oukan2"></div>';
          break;
        case 3:
          a += '<div class="icon icon-oukan3"></div>';
          break;
        default:
          a += '<div class="icon"></div>'
        }
        a += '<div class="rank">', a += '<div class="rankText">' + e[i].rank + "</div>", a += "</div>", a += '<div class="point">' + util.ratingToStr(e[i].rating_value) + "</div>", a += '<div class="pointLabel"></div>', a += "</div>", a += '<div class="rightContainer">', a += '<div class="userIconContainer">', a += '<div class="icon"><img src="./img/icons/trainer/' + e[i].icon + '" onError="this.onerror=null;this.src=\'./img/icons/icon_prof_icon02.png\';"></div>', a += "</div>", a += '<div class="userName">' + ("" == e[i].name ? langCtrl.common.noname : e[i].name) + "</div>";
        let o = e[i].lng,
          l = "";
        if (void 0 !== o && 0 !== parseInt(o) && (l = mdCtrl.md.langStrL[util.langCode()][o]), a += '<div class="locationIconContainer">', a += '<div class="ranking-user-lang">' + l + "</div>", a += "</div>", a += "</div>", a += "</div>", n > 99) break
      }
      $("#trainerRankingBody").html(a), $("#trainerRankingBody").scrollTop(this.selectScroll)
    }
    pokemonRankingView(e, t) {
      const a = this;
      if (null == e || 0 === e.length) return $("#pokemonRankingBody").addClass("disableDisplay"), $("#ranking-aggr").removeClass("disableDisplay"), void $("#ranking-aggr").html(langCtrl.lang.t_common.gathering);
      $("#pokemonRankingBody").removeClass("disableDisplay"), $("#competion-ranking").removeClass("disableDisplay"), $("#ranking-aggr").addClass("disableDisplay");
      let n = 0,
        i = "";
      for (let a = t = (t = void 0 === t ? 0 : t) < 0 ? 0 : t; a < e.length; a++) {
        switch (i += '<div id="prank-' + a + '" class="rankingRow2">', i += '<div class="leftContainer">', a + 1) {
        case 1:
          i += '<div class="icon icon-oukan1"></div>';
          break;
        case 2:
          i += '<div class="icon icon-oukan2"></div>';
          break;
        case 3:
          i += '<div class="icon icon-oukan3"></div>';
          break;
        default:
          i += '<div class="icon"></div>'
        }
        let t = e[a].id,
          o = e[a].form;
        if (i += '<div class="rank">', i += '<div class="rankText">' + (a + 1) + "</div>", i += "</div>", i += "</div>", i += '<div class="rightContainer">', i += '<div class="pokemonIconContainer">', i += '<img src="' + util.GetPokeiIconName(t, o) + '" width="120" height="120" onError="this.onerror=null;this.src=\'./img/icons/ball_g.png\';">', i += "</div>", i += '<div class="pokemonName">' + langCtrl.GetPokeName(t) + "</div>", i += '<div class="t_pokemonTypeContainer">', i += '<div class="type1Continer t_typeColor' + mdCtrl.GetType(t, o, 0) + '">', i += '<div class="icon icon-' + util.getTypeIconName(mdCtrl.GetType(t, o, 0)) + '"></div>', i += "</div>", mdCtrl.GetType(t, o, 1) >= 0 && (i += '<div class="type2Continer t_typeColor' + mdCtrl.GetType(t, o, 1) + '">', i += '<div class="icon icon-' + util.getTypeIconName(mdCtrl.GetType(t, o, 1)) + '"></div>', i += "</div>"), i += "</div>", i += "</div>", i += "</div>", n >= 149) break;
        n++
      }
      $("#pokemonRankingBody").html(i), $("#pokemonRankingBody").scrollTop(a.selectScroll);
      for (let n = t; n < e.length; n++) $("#prank-" + n).click((function (e) {
        e.preventDefault(), e.stopImmediatePropagation(), t_udCtrl.t_ud.share.selectMydataType = "internetcompe_detail", t_udCtrl.t_ud.share.pokemonrankingDetailParam = {
          cId: a.selectInternetCompe,
          rst: a.compeInfo.rst,
          ts2: a.compeInfo.ts2,
          idx: n
        }, a.saveCache(), util.locationMove("./t_pokemonranking.html")
      }))
    }
    saveCache() {
      t_udCtrl.t_ud.share.internetcompetition_detail_selectRanking = this.selectRanking, t_udCtrl.t_ud.share.internetcompetition_detail_selectTabno = this.selectTabno, "trainer" == this.selectRanking ? t_udCtrl.t_ud.share.internetcompetition_detail_selectScroll = $("#trainerRankingBody").scrollTop() : t_udCtrl.t_ud.share.internetcompetition_detail_selectScroll = $("#pokemonRankingBody").scrollTop(), t_udCtrl.save()
    }
  }
  class f {
    constructor() {
      const e = this;
      e.pSelect = new g, e.yesnoDialog = new c, console.log("繧ｭ繝｣繝�す繝･:my_internetcompetition_detail_selectTabno=" + t_udCtrl.t_ud.share.my_internetcompetition_detail_selectTabno), console.log("繧ｭ繝｣繝�す繝･:my_internetcompetition_detail_selectScroll=" + t_udCtrl.t_ud.share.my_internetcompetition_detail_selectScroll), void 0 !== t_udCtrl.t_ud.share.isLogin ? (void 0 === t_udCtrl.t_ud.share.selectInternetCompe && console.error("selectInternetCompe縺碁∈謚槭＆繧後※縺�∪縺帙ｓ"), t_udCtrl.login((function () {
        e.selectnplnId = t_udCtrl.t_ud.share.selectnplnId, e.selectInternetCompe = t_udCtrl.t_ud.share.selectInternetCompe, void 0 !== t_udCtrl.t_ud.share.my_internetcompetition_detail_selectTabno && void 0 !== t_udCtrl.t_ud.share.my_internetcompetition_detail_selectScroll ? (e.selectTabno = t_udCtrl.t_ud.share.my_internetcompetition_detail_selectTabno, e.selectScroll = t_udCtrl.t_ud.share.my_internetcompetition_detail_selectScroll) : (e.selectTabno = 1, e.selectScroll = 0), e.isEndHistory = {}, t_udCtrl.load_my_internetcompe_detail(e.selectnplnId, e.selectInternetCompe, (function () {
          e.uiInitialize()
        }))
      }))) : util.locationMove("./t_internetcompetition.html")
    }
    uiInitialize() {
      const e = this;
      $("#historyList").css("height", $(window).height() - 710 + "px");
      let t = t_udCtrl.t_ud.myInfo.playInfo[e.selectnplnId].romId;
      "Sc" == t ? $("#rom_header").html('<div class="icon"><img src="./img/logo/icon_soft_S_01_01.png"></div>') : "Vi" == t && $("#rom_header").html('<div class="icon"><img src="./img/logo/icon_soft_S_01_02.png"></div>'), $("#topButton").click((function (t) {
        t.preventDefault(), t_udCtrl.t_ud.share.internetcompetition_detail_selectRanking = "trainer", t_udCtrl.t_ud.share.internetcompetition_detail_selectTabno = 1, t_udCtrl.t_ud.share.internetcompetition_detail_selectScroll = 0, e.saveCache(), util.locationMove("./t_internetcompetition_detail.html")
      }));
      const a = t_udCtrl.t_ud.myInfo.playInfo[this.selectnplnId].internetCompe[this.selectInternetCompe],
        n = t_udCtrl.t_ud.internetCompeInfo[this.selectInternetCompe];
      1 == n.hst ? $(".t_open_hr").removeClass("disableDisplay") : 2 == n.hst && $(".t_end_hr").removeClass("disableDisplay");
      let i = 26;
      const o = n.name,
        l = n.subname,
        r = Math.max(o ? o.length : 0, l ? l.length : 0);
      if (r > 24 && (i = 26 - 2 * Math.log2(r - 24)), $("#compeName").html(o), $("#compeName").css("fontSize", i + "px"), $("#compeSubName").html(l), $("#compeSubName").css("fontSize", i + "px"), $("#period").html(util.joinDate(n.start, n.end)), $("#joinedNum").html(util.numberFormat(n.cnt)), 0 == n.rule ? $("#ruleIcon").html('<div class="icon icon-result-single1"></div>') : $("#ruleIcon").html('<div class="icon icon-season-result-icon02"></div>'), $("#regulationPage").click((function (t) {
          e.saveCache(), util.t_locationMoveRegulation(e.selectInternetCompe, util.langCode())
        })), $("#regulationPokemonPage").click((function (t) {
          e.saveCache(), util.t_locationMoveUsePokemonList(e.selectInternetCompe, util.langCode())
        })), $("#userName").html(t_udCtrl.t_ud.myInfo.playInfo[this.selectnplnId].name), $("#myicon").addClass("icon-" + t_udCtrl.t_ud.myInfo.playInfo[e.selectnplnId].icon), $("#totalView").unbind("click"), $("#totalView").removeClass("t_changeButton"), a.result.hasOwnProperty("ranking") && a.result.ranking.rank > 0) {
        $(".rankText").html(util.replaced(langCtrl.lang.t_common.rank_num, [util.numberFormat(a.result.ranking.rank)])), $("#userPoint").html(util.ratingToStr(a.result.rating_value)), $("#ratePoint").show();
        let t = [a.result.total_win, a.result.total_loss, a.result.total_draw],
          n = langCtrl.lang.t_common.win_num + " " + langCtrl.lang.t_common.lose_num + " " + langCtrl.lang.t_common.draw_num;
        $(".rank-result").html(util.replaced(n, t)), $("#totalView").click((function (t) {
          const a = t_udCtrl.t_ud.myInfo.playInfo[e.selectnplnId].internetCompe[e.selectInternetCompe];
          e.yesnoDialog.open({
            title: langCtrl.lang.t_my_internetcompetition_detailPageTexts.mydata_dialog_title,
            msg: langCtrl.lang.t_my_internetcompetition_detailPageTexts.mydata_dialog_text,
            btn1text: langCtrl.lang.t_my_internetcompetition_detailPageTexts.mydata_dialog_btn1,
            btn2text: langCtrl.lang.t_my_internetcompetition_detailPageTexts.mydata_dialog_btn2,
            btn1Callback: function () {
              e.yesnoDialog.close(), t_udCtrl.t_ud.share.internetcompetition_detail_selectRanking = "trainer", t_udCtrl.t_ud.share.internetcompetition_detail_selectTabno = 1, t_udCtrl.t_ud.share.internetcompetition_detail_selectScroll = 0, t_udCtrl.t_ud.share.internetcompetition_detail_selectRank = a.result.ranking.rank, e.saveCache(), util.locationMove("./t_internetcompetition_detail.html")
            },
            btn2Callback: function () {
              e.yesnoDialog.close(), t_udCtrl.t_ud.share.selectCompeType = "internet", console.log("selectInternetCompe=" + e.selectInternetCompe), console.log("selectnplnId=" + e.selectnplnId), e.saveCache(), util.locationMove("./t_battle_team.html")
            },
            btn2enable: !(!a.result.pokemon || 0 === a.result.pokemon.length)
          })
        })), $("#totalView").addClass("t_changeButton")
      } else $("#totalView").hide(), console.log("閾ｪ蛻��謌ｦ邵ｾ髱櫁｡ｨ遉ｺ");
      e.pSelect.initPageTab(5, (function (t) {
        e.selectTabno !== t && (e.selectTabno = t, e.selectScroll = 0, e.historyStart = 10 * (t - 1), e.historyStart > a.history.length && !e.isEndHistory[e.selectInternetCompe] ? t_udCtrl.load_history(a, e.selectnplnId, e.selectInternetCompe, !0, (function () {
          a.history.length < 100 ? e.isEndHistory[e.selectInternetCompe] = !0 : e.isEndHistory[e.selectInternetCompe] = !1, e.historyView(a.history, e.historyStart)
        })) : e.historyView(a.history, e.historyStart))
      })), t_udCtrl.load_history(a, e.selectnplnId, e.selectInternetCompe, !1, (function () {
        0 === a.history.length ? $("#battle-history").hide() : ($("#battle-history").show(), a.history.length < 100 ? e.isEndHistory[e.selectInternetCompe] = !0 : e.isEndHistory[e.selectInternetCompe] = !1);
        let t = 10 * (e.selectTabno - 1);
        e.historyView(a.history, t)
      }))
    }
    historyView(e, t) {
      t = (t = void 0 === t ? 0 : t) < 0 ? 0 : t, this.historyStart = t, this.pSelect.resetTab((e.length - 1) / 10, t / 10 + 1);
      let a = 0,
        n = "",
        i = 0;
      for (let o = t; o < e.length && (i > 0 && (n += '<div class="dotDividor"></div>'), i++, n += '<div class="historyRow">', n += '<div class="winloseIconContainer">', 0 == e[o].result ? n += '<div class="t_winloseIcon"><span class="iconText">' + langCtrl.lang.t_common.win + "</span></div>" : 1 == e[o].result ? n += '<div class="t_winloseIcon t_loseIcon"><span class="iconText">' + langCtrl.lang.t_common.lose + "</span></div>" : 2 == e[o].result && (n += '<div class="t_winloseIcon t_drawIcon"><span class="iconText">' + langCtrl.lang.t_common.draw + "</span></div>"), n += "</div>", n += '<div class="userIconContainer">', n += '<div class="icon"><img src="./img/icons/trainer/' + e[o].icon + '" onError="this.onerror=null;this.src=\'./img/icons/icon_prof_icon02.png\';"></div>', n += "</div>", n += '<div class="userNameContainer">', n += '<div class="userName">' + e[o].name + "</div>", n += "</div>", n += '<div class="placeContainer">', n += '<div class="code">', n += '<div class="codeText">' + e[o].locale + "</div>", n += "</div>", n += "</div>", n += '<div class="dateText">' + util.joinDateTz(e[o].date) + "</div>", n += "</div>", n += "</div>", !(a >= 9)); o++) a++;
      $("#historyList").html(n), $("#historyList").scrollTop(this.selectScroll)
    }
    saveCache() {
      t_udCtrl.t_ud.share.my_internetcompetition_detail_selectTabno = this.selectTabno, t_udCtrl.t_ud.share.my_internetcompetition_detail_selectScroll = $("#historyList").scrollTop(), t_udCtrl.save()
    }
  }
  class C {
    constructor() {
      const e = this;
      e.yesnoDialog = new c, t_udCtrl.reset(), t_udCtrl.login((function () {
        let t = t_udCtrl.getFriendcompeJoinDataNum();
        0 == t[0] ? (e.setBanner(), e.yesnoDialog.open({
          title: langCtrl.lang.t_common.not_join,
          msg: langCtrl.lang.t_common.not_join_friendcompe
        })) : 1 == t[0] ? (t_udCtrl.t_ud.share.selectMydataType = "friendcompe", t_udCtrl.t_ud.share.selectnplnId = t[1], t_udCtrl.save(), util.locationReplace("./t_my_friendcompetition.html")) : (t_udCtrl.t_ud.share.selectMydataType = "friendcompe", t_udCtrl.save(), util.locationReplace("./t_mydataselect.html"))
      }))
    }
    setBanner() {
      let e = localStorage.getItem("bn");
      null == e && (e = "pgl_img");
      let t = 1,
        a = $(window).height() / 1020,
        n = $(window).width() / 640;
      t = a > n ? a : n;
      let i = 1020 * t,
        o = 640 * t;
      $("#topbanner").html("<img src='./img/client/" + e + "_blur.jpg' width='" + o + "' height='" + i + "'\" onError=\"this.onerror=null;this.src='./img/client/pgl_img_blur.jpg';\">")
    }
  }
  class v {
    constructor() {
      const e = this;
      e.pSelect = new g, console.log("繧ｭ繝｣繝�す繝･:my_friendcompetition_selectTabno=" + t_udCtrl.t_ud.share.my_friendcompetition_selectTabno), console.log("繧ｭ繝｣繝�す繝･:my_friendcompetition_selectScroll=" + t_udCtrl.t_ud.share.my_friendcompetition_selectScroll), void 0 !== t_udCtrl.t_ud.share.isLogin ? t_udCtrl.login((function () {
        e.listNum = 10, e.selectnplnId = t_udCtrl.t_ud.share.selectnplnId, void 0 !== t_udCtrl.t_ud.share.my_friendcompetition_selectTabno && void 0 !== t_udCtrl.t_ud.share.my_friendcompetition_selectScroll ? (e.selectTabno = t_udCtrl.t_ud.share.my_friendcompetition_selectTabno, e.selectScroll = t_udCtrl.t_ud.share.my_friendcompetition_selectScroll) : (e.selectTabno = 1, e.selectScroll = 0), console.log("selectnplnId=" + e.selectnplnId), e.isScroll = !1, t_udCtrl.load_friendcompe_list(e.selectnplnId, !1, (function () {
          e.updateCompeIdList(), e.uiInitialize()
        }))
      })) : util.locationMove("./t_friendcompetition.html")
    }
    updateCompeIdList() {
      const e = this;
      e.compeInfo = t_udCtrl.t_ud.myInfo.playInfo[e.selectnplnId].friendCompe;
      let t = [];
      for (var a in e.compeInfo) t.push(a);
      e.compeList = t
    }
    uiInitialize() {
      const e = this;
      $(".t_romButtonContainer").on("click touchstart", (function (e) {
        e.preventDefault(), history.back()
      })), $("#friendCompeList").css("height", $(window).height() - 350 + "px");
      let t = t_udCtrl.t_ud.myInfo.playInfo[e.selectnplnId].romId,
        a = "";
      a += '<div class="romIconContainer">', "Sc" == t ? a += '<div class="icon"><img src="./img/logo/icon_soft_M_01_01.png"></div>' : "Vi" == t && (a += '<div class="icon"><img src="./img/logo/icon_soft_M_01_02.png"></div>'), a += "</div>", a += '<div class="romButtonDivider"></div>', a += '<div class="userNameContainer">', a += '<div class="userName">' + t_udCtrl.t_ud.myInfo.playInfo[e.selectnplnId].name + "</div>", a += '<div class="trainerId">' + t_udCtrl.t_ud.myInfo.playInfo[e.selectnplnId].trainerId + "</div>", a += "</div>", a += '<div class="placeContainer">', a += '<div class="placeCodeText">' + mdCtrl.md.langStrL[util.langCode()][t_udCtrl.t_ud.myInfo.playInfo[e.selectnplnId].lang] + "</div>", a += "</div>", $(".t_romButtonContainer").html(a), $(".t_romButtonContainer").css("border-radius", "60px"), document.getElementById("friendCompeList").addEventListener("touchmove", (function () {
        e.isScroll = !0
      }), {
        passive: !0
      }), document.getElementById("friendCompeList").addEventListener("touchend", (function () {
        e.isScroll = !1
      }), {
        passive: !0
      }), e.pSelect.initPageTab(3, (function (t) {
        e.selectTabno !== t && (e.selectTabno = t, e.selectScroll = 0, e.morePage == t ? t_udCtrl.load_friendcompe_list(e.selectnplnId, !0, (function () {
          e.updateCompeIdList(), e.listView(e.listNum)
        })) : e.listView(e.listNum))
      })), e.listView(e.listNum)
    }
    listView(e) {
      const t = this;
      e = void 0 === e ? 0 : e;
      const a = t.compeList;
      let n = (t.selectTabno - 1) * t.listNum,
        i = "";
      for (let o = 0; o < e && !(a.length <= o); o++) {
        let e = n + o,
          l = a[e];
        if (void 0 === l) {
          console.error("idList[" + e + "]=undefined");
          continue
        }
        i += '<div class="t_friendJoinedCompetition" data-id="' + l + '">', i += '<div class="header">', 1 == t.compeInfo[l].detail.hst ? i += '<div class="state_open">' + langCtrl.lang.t_common["#open"] + "</div>" : 2 == t.compeInfo[l].detail.hst && (i += '<div class="state_end">' + langCtrl.lang.t_common["#end"] + "</div>");
        let r = 26;
        const s = t.compeInfo[l].detail.name,
          c = t.compeInfo[l].detail.subname,
          d = Math.max(s ? s.length : 0, c ? c.length : 0);
        d > 19 && (r = 26 - 3 * Math.log2(d - 19)), i += `<div class="title1" style="font-size: ${r}px">${s}</div>`, i += `<div class="title2" style="font-size: ${r}px">${c}</div>`, i += '<div class="join">', i += '<div class="icon icon-tt_joined1"></div>', i += '<div class="num">' + t.compeInfo[l].detail.cnt + "</div>", i += "</div>", 0 == t.compeInfo[l].detail.rule ? i += '<div class="t_ruleIcon"><div class="icon icon-result-single1"></div></div>' : i += '<div class="t_ruleIcon"><div class="icon icon-season-result-icon02"></div></div>', i += "</div>", i += '<div class="body">', i += '<div class="margin">', i += '<div class="dotDividor"></div>', i += '<div class="rowContainer">', i += '<div class="period">', i += '<div class="icon"><img src="./img/svg/icon_calender_01.svg"></div>', i += '<div class="periodTextContainer">', i += '<div class="periodText">' + util.joinDate(t.compeInfo[l].detail.start, t.compeInfo[l].detail.end) + "</div>", i += "</div>", i += "</div>", i += "</div>", i += '<div class="dotDividor"></div>', i += '<div class="rowContainer">', t.compeInfo[l].detail.ownerId == t.selectnplnId ? i += '<div class="playername" style="color: #12a6a8;">' : i += '<div class="playername" style="color: #4e4e4e;">', i += '<div class="organizer-label-text label1"></div>', i += '<div class="userName">' + t.compeInfo[l].detail.playerName + "</div>", i += "</div>", i += "</div>", i += "</div>", i += "</div>", i += '<div class="t_horizontalButtonContainer">', i += '<div id="compe' + l + '" class="button" data-id="' + l + '">', i += '<div class="result-label-text label"></div>', i += "</div>", t.compeInfo[l].pokemon && 0 !== t.compeInfo[l].pokemon.length ? i += '<div id="team' + l + '" class="button" data-id="' + l + '">' : i += '<div id="team' + l + '" class="button disable" data-id="' + l + '">', i += '<div class="battleteam-label-text label"></div>', i += "</div>", i += "</div>", i += "</div>", i += "</div>"
      }
      $("#friendCompeList").html(i), $("#friendCompeList").scrollTop(t.selectScroll), t.scrollViewHeight = $("#friendCompeList").height(), t.scrollContentHeight = $("#friendCompeList").get(0).scrollHeight, t.thumbHeight = t.scrollViewHeight / t.scrollContentHeight, $(".t_scrollberImitation > .track > .thumb").css("height", 100 * t.thumbHeight + "%"), $("#friendCompeList").scroll((function () {
        let e = $("#friendCompeList").scrollTop() / t.scrollContentHeight;
        $(".t_scrollberImitation > .track > .thumb").css("top", 100 * e + "%")
      }));
      for (let e = 0; e < a.length && !(a.length <= e); e++) {
        let i = a[n + e];
        $("#team" + i).not(".disable").click((function (e) {
          e.preventDefault(), e.stopImmediatePropagation(), t.isScroll || (t_udCtrl.t_ud.share.selectFriendCompeId = $(this).data("id"), t_udCtrl.t_ud.share.selectCompeType = "friend", t.saveCache(), util.locationMove("./t_battle_team.html"))
        })), $("#compe" + i).click((function (e) {
          e.preventDefault(), t.isScroll || (e.stopImmediatePropagation(), t_udCtrl.t_ud.share.selectFriendCompeId = $(this).data("id"), t_udCtrl.t_ud.share.friendcompetition_detail_selectRanking = void 0, t_udCtrl.t_ud.share.friendcompetition_detail_selectTabno = void 0, t_udCtrl.t_ud.share.friendcompetition_detail_selectScroll = void 0, t_udCtrl.t_ud.share.friendcompetition_detail_selectRank = void 0, t.saveCache(), util.locationMove("./t_friendcompetition_detail.html"))
        }))
      }
      if (langCtrl.init(), e > 0) {
        let i = 0;
        "__finish__" !== t_udCtrl.t_ud.friendcompe_list_lastKey && (i = 1, t.morePage = Math.floor((a.length - 1) / e + 2), console.log("friendcompe_list_lastKey=" + t_udCtrl.t_ud.friendcompe_list_lastKey + " morePage=" + t.morePage)), t.pSelect.resetTab((a.length - 1) / e + i, n / e + 1), t.pSelect.show()
      } else t.pSelect.hide()
    }
    saveCache() {
      t_udCtrl.t_ud.share.my_friendcompetition_selectTabno = this.selectTabno, t_udCtrl.t_ud.share.my_friendcompetition_selectScroll = $("#friendCompeList").scrollTop(), t_udCtrl.save()
    }
  }
  class y {
    constructor() {
      const e = this;
      this.pSelect = new g, console.log("繧ｭ繝｣繝�す繝･:friendcompetition_detail_selectRanking=" + t_udCtrl.t_ud.share.friendcompetition_detail_selectRanking), console.log("繧ｭ繝｣繝�す繝･:friendcompetition_detail_selectTabno=" + t_udCtrl.t_ud.share.friendcompetition_detail_selectTabno), console.log("繧ｭ繝｣繝�す繝･:friendcompetition_detail_selectScroll=" + t_udCtrl.t_ud.share.friendcompetition_detail_selectScroll), console.log("繧ｭ繝｣繝�す繝･:friendcompetition_detail_selectRank=" + t_udCtrl.t_ud.share.friendcompetition_detail_selectRank), void 0 !== t_udCtrl.t_ud.share.isLogin ? t_udCtrl.login((function () {
        void 0 !== t_udCtrl.t_ud.share.friendcompetition_detail_selectRanking && void 0 !== t_udCtrl.t_ud.share.friendcompetition_detail_selectTabno && void 0 !== t_udCtrl.t_ud.share.friendcompetition_detail_selectScroll ? (void 0 !== t_udCtrl.t_ud.share.friendcompetition_detail_selectRank && "-1" != t_udCtrl.t_ud.share.friendcompetition_detail_selectRank ? (e.selectRank = t_udCtrl.t_ud.share.friendcompetition_detail_selectRank, t_udCtrl.t_ud.share.friendcompetition_detail_selectRank = "-1", e.selectRanking = "trainer") : (t_udCtrl.t_ud.share.selectFriendCompeId, e.selectRanking = t_udCtrl.t_ud.share.friendcompetition_detail_selectRanking), e.selectTabno = t_udCtrl.t_ud.share.friendcompetition_detail_selectTabno, e.selectScroll = t_udCtrl.t_ud.share.friendcompetition_detail_selectScroll) : (e.selectRanking = "trainer", e.selectTabno = 1, e.selectScroll = 0), e.selectnplnId = t_udCtrl.t_ud.share.selectnplnId, e.selectFriendCompeId = t_udCtrl.t_ud.share.selectFriendCompeId, e.rankingurl = "", e.rankingurl2 = "", e.compeInfo = t_udCtrl.t_ud.myInfo.playInfo[e.selectnplnId].friendCompe[e.selectFriendCompeId].detail, console.log("selectFriendCompeId=" + e.selectFriendCompeId + " typeof(selectFriendCompeId)=" + typeof e.selectFriendCompeId), e.uiInitialize()
      })) : util.locationMove("./t_friendcompetition.html")
    }
    uiInitialize() {
      const e = this;
      $("#trainerRankingBody").css("height", $(window).height() - 580 + "px"), $("#pokemonRankingBody").css("height", $(window).height() - 490 + "px"), $("#topButton").click((function (t) {
        t.preventDefault(), t_udCtrl.t_ud.share.my_friendcompetition_detail_selectTabno = void 0, t_udCtrl.t_ud.share.my_friendcompetition_detail_selectScroll = void 0, e.saveCache(), util.locationMove("./t_my_friendcompetition_detail.html")
      })), e.rankingurl = "/" + e.selectFriendCompeId + "/" + e.compeInfo.rst + "/" + e.compeInfo.ts1 + "/traner-1", e.rankingurl2 = "/" + e.selectFriendCompeId + "/" + e.compeInfo.rst + "/" + e.compeInfo.ts2 + "/pokemon", 1 == this.compeInfo.hst ? $(".t_open_hr").removeClass("disableDisplay") : 2 == this.compeInfo.hst && $(".t_end_hr").removeClass("disableDisplay");
      let t = 26;
      const a = this.compeInfo.name,
        n = e.compeInfo.subname,
        i = Math.max(a ? a.length : 0, n ? n.length : 0);
      i > 24 && (t = 26 - 2 * Math.log2(i - 24)), $("#compeName").html(a), $("#compeName").css("fontSize", t + "px"), $("#compeSubName").html(n), $("#compeSubName").css("fontSize", t + "px"), $("#period").html(util.joinDate(this.compeInfo.start, this.compeInfo.end)), 2 === parseInt(this.compeInfo.rst) ? ($("#rankingContainer").show(), $("#joinedNum").html(util.numberFormat(this.compeInfo.cnt))) : 1 === parseInt(this.compeInfo.rst) ? ($("#rankingContainer").hide(), $("#joinedNum").html(langCtrl.lang.t_common.gathering)) : ($("#rankingContainer").hide(), this.compeInfo.cnt > 0 && $("#joinedNum").html(util.numberFormat(this.compeInfo.cnt))), 0 == this.compeInfo.rule ? $("#ruleIcon").html('<div class="icon icon-result-single1"></div>') : $("#ruleIcon").html('<div class="icon icon-season-result-icon02"></div>'), $("#rulename").html(langCtrl.lang.t_common["rulename" + this.compeInfo.rulePreset]), e.pSelect.initPageTab(5, (function (t) {
        e.selectTabno !== t && (e.selectTabno = t, e.selectScroll = 0, "trainer" == e.selectRanking ? 0 == e.compeInfo.ts1 || 9999999999 == e.compeInfo.ts1 ? (e.pokemonRankingView([]), e.trainerRankingView([])) : t_udCtrl.trainerRankingRequest(e.rankingurl, (function (a) {
          if (null == a) return e.pSelect.resetTab(0), void e.pSelect.show();
          e.trainerRankingView(a, 100 * (t - 1))
        })) : 0 == e.compeInfo.ts2 || 9999999999 == e.compeInfo.ts2 ? (e.pokemonRankingView([]), e.trainerRankingView([])) : t_udCtrl.pokemonRankingRequest(e.rankingurl2, (function (a) {
          e.pokemonRankingView(a, 100 * (t - 1))
        })))
      })), $("#competion-ranking").removeClass("disableDisplay"), e.rankingContainerView()
    }
    rankingContainerView() {
      const e = this;
      e.pSelect.hide(), $("#trainerTab").on("click touchstart", (function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), "trainer" !== e.selectRanking && (e.selectScroll = 0), $("#trainerTab").removeClass("disable"), $("#pokemonTab").addClass("disable"), $("#trainerRankingHeader").removeClass("disableDisplay"), $("#trainerRankingBody").removeClass("disableDisplay"), $("#pokemonRankingBody").addClass("disableDisplay"), e.selectRanking = "trainer", 0 == e.compeInfo.ts1 || 9999999999 == e.compeInfo.ts1 ? ($("#trainerRankingBody").addClass("disableDisplay"), $("#ranking-aggr").removeClass("disableDisplay"), $("#ranking-aggr").html(langCtrl.lang.t_common.gathering), e.pSelect.resetTab(0), e.pSelect.show()) : t_udCtrl.trainerRankingRequest(e.rankingurl, (function (t) {
          if (null == t) return $("#trainerRankingBody").addClass("disableDisplay"), $("#ranking-aggr").removeClass("disableDisplay"), void $("#ranking-aggr").html(langCtrl.lang.t_common.gathering);
          if (void 0 !== e.selectRank && t.length >= e.selectRank) {
            let a = parseInt((e.selectRank - 1) / 100);
            e.selectTabno = a + 1;
            let n = 100 * a,
              i = (e.selectRank - 1) % 100;
            e.selectScroll = 91 * i, e.trainerRankingView(t, n), e.pSelect.resetTab((t.length - 1) / 100, e.selectTabno), e.pSelect.show()
          } else {
            let a = 100 * (e.selectTabno - 1);
            e.trainerRankingView(t, a), e.pSelect.resetTab((t.length - 1) / 100, e.selectTabno), e.pSelect.show()
          }
        }))
      })), $("#pokemonTab").on("click touchstart", (function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), "pokemon" !== e.selectRanking && (e.selectScroll = 0), e.pSelect.hide(), $("#pokemonTab").removeClass("disable"), $("#trainerTab").addClass("disable"), $("#pokemonRankingBody").removeClass("disableDisplay"), $("#trainerRankingHeader").addClass("disableDisplay"), $("#trainerRankingBody").addClass("disableDisplay"), e.selectRanking = "pokemon", 0 == e.compeInfo.ts2 || 9999999999 == e.compeInfo.ts2 ? ($("#pokemonRankingBody").addClass("disableDisplay"), $("#ranking-aggr").removeClass("disableDisplay"), $("#ranking-aggr").html(langCtrl.lang.t_common.gathering)) : t_udCtrl.pokemonRankingRequest(e.rankingurl2, (function (t) {
          e.pokemonRankingView(t)
        }))
      })), "trainer" === e.selectRanking ? $("#trainerTab").click() : $("#pokemonTab").click()
    }
    trainerRankingView(e, t) {
      if (null == e || 0 === e.length) return $("#trainerRankingBody").addClass("disableDisplay"), $("#ranking-aggr").removeClass("disableDisplay"), void $("#ranking-aggr").html(langCtrl.lang.t_common.gathering);
      $("#trainerRankingBody").removeClass("disableDisplay"), $("#competion-ranking").removeClass("disableDisplay"), $("#ranking-aggr").addClass("disableDisplay"), t = (t = void 0 === t ? 0 : t) < 0 ? 0 : t;
      let a = "",
        n = 0;
      for (let i = 0; i < e.length; i++) {
        if (e[i].rank <= t) continue;
        if (t + 100 < e[i].rank) break;
        switch (n > 0 && (a += '<div class="dotDividor"></div>'), n++, a += '<div class="rankingRow1">', a += '<div class="leftContainer">', e[i].rank) {
        case 1:
          a += '<div class="icon icon-oukan1"></div>';
          break;
        case 2:
          a += '<div class="icon icon-oukan2"></div>';
          break;
        case 3:
          a += '<div class="icon icon-oukan3"></div>';
          break;
        default:
          a += '<div class="icon"></div>'
        }
        a += '<div class="rank">', a += '<div class="rankText">' + e[i].rank + "</div>", a += "</div>", a += '<div class="point">' + util.ratingToStr(e[i].rating_value) + "</div>", a += '<div class="pointLabel"></div>', a += "</div>", a += '<div class="rightContainer">', a += '<div class="userIconContainer">', a += '<div class="icon"><img src="./img/icons/trainer/' + e[i].icon + '" onError="this.onerror=null;this.src=\'./img/icons/icon_prof_icon02.png\';"></div>', a += "</div>", a += '<div class="userName">' + ("" == e[i].name ? langCtrl.common.noname : e[i].name) + "</div>";
        let o = e[i].lng,
          l = "";
        if (void 0 !== o && 0 !== parseInt(o) && (l = mdCtrl.md.langStrL[util.langCode()][o]), a += '<div class="locationIconContainer">', a += '<div class="ranking-user-lang">' + l + "</div>", a += "</div>", a += "</div>", a += "</div>", n > 99) break
      }
      $("#trainerRankingBody").html(a), $("#trainerRankingBody").scrollTop(this.selectScroll)
    }
    pokemonRankingView(e, t) {
      const a = this;
      if (null == e || 0 === e.length) return $("#pokemonRankingBody").addClass("disableDisplay"), $("#ranking-aggr").removeClass("disableDisplay"), void $("#ranking-aggr").html(langCtrl.lang.t_common.gathering);
      $("#pokemonRankingBody").removeClass("disableDisplay"), $("#competion-ranking").removeClass("disableDisplay"), $("#ranking-aggr").addClass("disableDisplay");
      let n = 0,
        i = "";
      for (let a = t = (t = void 0 === t ? 0 : t) < 0 ? 0 : t; a < e.length; a++) {
        switch (i += '<div id="prank-' + a + '" class="rankingRow2">', i += '<div class="leftContainer">', a + 1) {
        case 1:
          i += '<div class="icon icon-oukan1"></div>';
          break;
        case 2:
          i += '<div class="icon icon-oukan2"></div>';
          break;
        case 3:
          i += '<div class="icon icon-oukan3"></div>';
          break;
        default:
          i += '<div class="icon"></div>'
        }
        let t = e[a].id,
          o = e[a].form;
        if (i += '<div class="rank">', i += '<div class="rankText">' + (a + 1) + "</div>", i += "</div>", i += "</div>", i += '<div class="rightContainer">', i += '<div class="pokemonIconContainer">', i += '<img src="' + util.GetPokeiIconName(t, o) + '" width="120" height="120" onError="this.onerror=null;this.src=\'./img/icons/ball_g.png\';">', i += "</div>", i += '<div class="pokemonName">' + langCtrl.GetPokeName(e[a].id) + "</div>", i += '<div class="t_pokemonTypeContainer">', i += '<div class="type1Continer t_typeColor' + mdCtrl.GetType(t, o, 0) + '">', i += '<div class="icon icon-' + util.getTypeIconName(mdCtrl.GetType(t, o, 0)) + '"></div>', i += "</div>", mdCtrl.GetType(t, o, 1) >= 0 && (i += '<div class="type2Continer t_typeColor' + mdCtrl.GetType(t, o, 1) + '">', i += '<div class="icon icon-' + util.getTypeIconName(mdCtrl.GetType(t, o, 1)) + '"></div>', i += "</div>"), i += "</div>", i += "</div>", i += "</div>", n >= 149) break;
        n++
      }
      $("#pokemonRankingBody").html(i), $("#pokemonRankingBody").scrollTop(a.selectScroll);
      for (let n = t; n < e.length; n++) $("#prank-" + n).click((function (e) {
        e.preventDefault(), e.stopImmediatePropagation(), t_udCtrl.t_ud.share.selectMydataType = "friendcompe_detail", t_udCtrl.t_ud.share.pokemonrankingDetailParam = {
          cId: a.selectFriendCompeId,
          rst: a.compeInfo.rst,
          ts2: a.compeInfo.ts2,
          startTs: a.compeInfo.startTs,
          idx: n
        }, a.saveCache(), util.locationMove("./t_pokemonranking.html")
      }))
    }
    saveCache() {
      t_udCtrl.t_ud.share.friendcompetition_detail_selectRanking = this.selectRanking, t_udCtrl.t_ud.share.friendcompetition_detail_selectTabno = this.selectTabno, "trainer" == this.selectRanking ? t_udCtrl.t_ud.share.friendcompetition_detail_selectScroll = $("#trainerRankingBody").scrollTop() : t_udCtrl.t_ud.share.friendcompetition_detail_selectScroll = $("#pokemonRankingBody").scrollTop(), t_udCtrl.save()
    }
  }
  class T {
    constructor() {
      const e = this;
      e.pSelect = new g, e.yesnoDialog = new c, console.log("繧ｭ繝｣繝�す繝･:my_friendcompetition_detail_selectTabno=" + t_udCtrl.t_ud.share.my_friendcompetition_detail_selectTabno), console.log("繧ｭ繝｣繝�す繝･:my_friendcompetition_detail_selectScroll=" + t_udCtrl.t_ud.share.my_friendcompetition_detail_selectScroll), void 0 !== t_udCtrl.t_ud.share.isLogin ? t_udCtrl.login((function () {
        e.selectnplnId = t_udCtrl.t_ud.share.selectnplnId, e.selectFriendCompeId = t_udCtrl.t_ud.share.selectFriendCompeId, e.myrank = 0, void 0 !== t_udCtrl.t_ud.share.my_internetcompetition_detail_selectTabno && void 0 !== t_udCtrl.t_ud.share.my_internetcompetition_detail_selectScroll ? (e.selectTabno = t_udCtrl.t_ud.share.my_internetcompetition_detail_selectTabno, e.selectScroll = t_udCtrl.t_ud.share.my_internetcompetition_detail_selectScroll) : (e.selectTabno = 1, e.selectScroll = 0), console.log("t_my_friendcompetition_detail :: selectnplnId=" + e.selectnplnId + " , selectFriendCompeId=" + e.selectFriendCompeId), t_udCtrl.load_friendcompe_list(e.selectnplnId, !1, (function () {
          t_udCtrl.load_friendcompe_detail(e.selectnplnId, e.selectFriendCompeId, (function () {
            e.dataInitialize()
          }))
        }))
      })) : util.locationMove("./t_friendcompetition.html")
    }
    dataInitialize() {
      const e = this;
      console.log("dataInitialize() selectnplnId=" + e.selectnplnId + " , selectFriendCompeId=" + e.selectFriendCompeId);
      const t = t_udCtrl.t_ud.myInfo.playInfo[e.selectnplnId].friendCompe[e.selectFriendCompeId],
        a = "/" + e.selectFriendCompeId + "/" + t.detail.rst + "/" + t.detail.ts1 + "/traner-1";
      t_udCtrl.trainerRankingRequest(a, (function (t) {
        let a = t_udCtrl.t_ud.share.selectnplnId,
          n = t_udCtrl.t_ud.myInfo.playInfo[a].iconImg;
        for (var i in t)
          if (-1 !== t[i].icon.indexOf(n)) {
            e.myrank = t[i].rank;
            break
          }
        console.log("閾ｪ蛻��鬆�ｽ�:" + e.myrank), e.uiInitialize()
      }), (function () {
        e.uiInitialize()
      }))
    }
    uiInitialize() {
      const e = this;
      $("#historyList").css("height", $(window).height() - 670 + "px");
      let t = t_udCtrl.t_ud.myInfo.playInfo[e.selectnplnId].romId;
      "Sc" == t ? $("#rom_header").html('<div class="icon"><img src="./img/logo/icon_soft_S_01_01.png"></div>') : "Vi" == t && $("#rom_header").html('<div class="icon"><img src="./img/logo/icon_soft_S_01_02.png"></div>'), $("#topButton").click((function (t) {
        t.preventDefault(), t_udCtrl.t_ud.share.friendcompetition_detail_selectRanking = "trainer", t_udCtrl.t_ud.share.friendcompetition_detail_selectTabno = 1, t_udCtrl.t_ud.share.friendcompetition_detail_selectScroll = 0, e.saveCache(), util.locationMove("./t_friendcompetition_detail.html")
      }));
      const a = t_udCtrl.t_ud.myInfo.playInfo[this.selectnplnId].friendCompe[this.selectFriendCompeId],
        n = a.detail;
      1 == n.hst ? $(".t_open_hr").removeClass("disableDisplay") : 2 == n.hst && $(".t_end_hr").removeClass("disableDisplay");
      let i = 26;
      const o = n.name,
        l = n.subname,
        r = Math.max(o ? o.length : 0, l ? l.length : 0);
      r > 24 && (i = 26 - 2 * Math.log2(r - 24)), $("#compeName").html(o), $("#compeName").css("fontSize", i + "px"), $("#compeSubName").html(l), $("#compeSubName").css("fontSize", i + "px"), $("#period").html(util.joinDate(n.start, n.end)), $("#joinedNum").html(util.numberFormat(n.cnt)), 0 == n.rule ? $("#ruleIcon").html('<div class="icon icon-result-single1"></div>') : $("#ruleIcon").html('<div class="icon icon-season-result-icon02"></div>'), $("#rulename").html(langCtrl.lang.t_common["rulename" + n.rulePreset]), $("#userName").html(t_udCtrl.t_ud.myInfo.playInfo[this.selectnplnId].name), $("#myicon").addClass("icon-" + t_udCtrl.t_ud.myInfo.playInfo[e.selectnplnId].icon), $("#totalView").unbind("click"), $("#totalView").removeClass("t_changeButton"), 0 === e.myrank ? $(".rankText").html(langCtrl.lang.t_common.outrange) : $(".rankText").html(util.replaced(langCtrl.lang.t_common.rank_num, [util.numberFormat(e.myrank)]));
      let s = [];
      s = a.result && 0 !== a.result.length ? [a.result.win, a.result.lose, a.result.drow] : [0, 0, 0];
      let c = langCtrl.lang.t_common.win_num + " " + langCtrl.lang.t_common.lose_num + " " + langCtrl.lang.t_common.draw_num;
      $(".rank-result").html(util.replaced(c, s)), $("#totalView").click((function (t) {
        const a = t_udCtrl.t_ud.myInfo.playInfo[e.selectnplnId].friendCompe[e.selectFriendCompeId];
        e.yesnoDialog.open({
          title: langCtrl.lang.t_my_internetcompetition_detailPageTexts.mydata_dialog_title,
          msg: langCtrl.lang.t_my_internetcompetition_detailPageTexts.mydata_dialog_text,
          btn1text: langCtrl.lang.t_my_internetcompetition_detailPageTexts.mydata_dialog_btn1,
          btn2text: langCtrl.lang.t_my_internetcompetition_detailPageTexts.mydata_dialog_btn2,
          btn1Callback: function () {
            e.yesnoDialog.close(), t_udCtrl.t_ud.share.friendcompetition_detail_selectRanking = "trainer", t_udCtrl.t_ud.share.friendcompetition_detail_selectTabno = 1, t_udCtrl.t_ud.share.friendcompetition_detail_selectScroll = 0, t_udCtrl.t_ud.share.friendcompetition_detail_selectRank = e.myrank, e.saveCache(), util.locationMove("./t_friendcompetition_detail.html")
          },
          btn2Callback: function () {
            if (e.yesnoDialog.close(), t_udCtrl.t_ud.share.selectCompeType = "friend", console.log("selectFriendCompeId=" + e.selectFriendCompeId), console.log("selectnplnId=" + e.selectnplnId), void 0 === t_udCtrl.t_ud.myInfo.playInfo[e.selectnplnId].friendCompe[e.selectFriendCompeId].pokemon) return console.error("繝舌ヨ繝ｫ繝√�繝�諠��ｱ縺ｪ縺�"), void nDialog.open({
              title: "",
              msg: "Not found team data!",
              okCallback: function () {
                nDialog.close()
              }
            });
            e.saveCache(), util.locationMove("./t_battle_team.html")
          },
          btn2enable: !(!a.pokemon || 0 === a.pokemon.length)
        })
      })), $("#totalView").addClass("t_changeButton"), e.pSelect.initPageTab(5, (function (t) {
        e.selectTabno !== t && (e.selectTabno = t, e.selectScroll = 0, e.historyView(a.log))
      })), 0 === a.log.length ? $("#battle-history").hide() : $("#battle-history").show(), e.historyView(a.log)
    }
    historyView(e) {
      let t = 10 * (this.selectTabno - 1);
      this.pSelect.resetTab((e.length - 1) / 10, t / 10 + 1);
      let a = 0,
        n = "",
        i = 0;
      for (let o = t; o < e.length && (i > 0 && (n += '<div class="dotDividor"></div>'), i++, n += '<div class="historyRow">', n += '<div class="winloseIconContainer">', 0 == e[o].result ? n += '<div class="t_winloseIcon"><span class="iconText">' + langCtrl.lang.t_common.win + "</span></div>" : 1 == e[o].result ? n += '<div class="t_winloseIcon t_loseIcon"><span class="iconText">' + langCtrl.lang.t_common.lose + "</span></div>" : 2 == e[o].result && (n += '<div class="t_winloseIcon t_drawIcon"><span class="iconText">' + langCtrl.lang.t_common.draw + "</span></div>"), n += "</div>", n += '<div class="userIconContainer">', n += '<div class="icon"><img src="./img/icons/trainer/' + e[o].icon + '" onError="this.onerror=null;this.src=\'./img/icons/icon_prof_icon02.png\';"></div>', n += "</div>", n += '<div class="userNameContainer">', n += '<div class="userName">' + e[o].name + "</div>", n += "</div>", n += '<div class="placeContainer">', n += '<div class="code">', n += '<div class="codeText">' + e[o].locale + "</div>", n += "</div>", n += "</div>", n += '<div class="dateText">' + util.joinDateTz(e[o].date) + "</div>", n += "</div>", n += "</div>", !(a >= 9)); o++) a++;
      $("#historyList").html(n), $("#historyList").scrollTop(this.selectScroll), langCtrl.commonInit()
    }
    saveCache() {
      t_udCtrl.t_ud.share.my_friendcompetition_detail_selectTabno = this.selectTabno, t_udCtrl.t_ud.share.my_friendcompetition_detail_selectScroll = $("#historyList").scrollTop(), t_udCtrl.save()
    }
  }
  class S {
    constructor() {
      const e = this;
      util.getZknFormjson(parseInt(util.langCode()), (function (t) {
        e.zknformjson = t.zkn_form, e.selectnplnId = t_udCtrl.t_ud.share.selectnplnId, e.selectCompeType = t_udCtrl.t_ud.share.selectCompeType, "internet" == e.selectCompeType ? (e.selectCompe = t_udCtrl.t_ud.share.selectInternetCompe, console.log("繧､繝ｳ繧ｿ繝ｼ繝阪ャ繝亥､ｧ莨壹ヰ繝医Ν繝√�繝� " + e.selectCompe), $("#competitionTitle").html(t_udCtrl.t_ud.internetCompeInfo[e.selectCompe].name), $("#headerIcon").html('<div class="iconView icon-h2_icon04"></div>'), $("#title-text").html(langCtrl.lang.t_battle_teamPageTexts.internetcompe), e.uiInitialize(t_udCtrl.t_ud.myInfo.playInfo[e.selectnplnId].internetCompe[e.selectCompe].result.pokemon)) : "friend" == e.selectCompeType && (e.selectCompeId = t_udCtrl.t_ud.share.selectFriendCompeId, console.log("莉ｲ髢灘､ｧ莨壹ヰ繝医Ν繝√�繝� " + e.selectCompeId), $("#competitionTitle").html(t_udCtrl.t_ud.myInfo.playInfo[e.selectnplnId].friendCompe[e.selectCompeId].detail.name), $("#headerIcon").html('<div class="iconView icon-h2_icon05"></div>'), $("#title-text").html(langCtrl.lang.t_battle_teamPageTexts.friendcompe), e.uiInitialize(t_udCtrl.t_ud.myInfo.playInfo[e.selectnplnId].friendCompe[e.selectCompeId].pokemon))
      }))
    }
    uiInitialize(e) {
      const t = this;
      $("#teamContainer").css("height", $(window).height() - 70 + "px"), console.log("list.length=" + e.length);
      let a = "";
      for (let n = 0; n < e.length; n++) {
        let i = e[n].no,
          o = e[n].form;
        if (void 0 !== i && (null !== i && "0" !== i)) {
          let l = langCtrl.GetPokeName(e[n].no),
            r = t.zknformjson[util.zeroPadding(e[n].no, 3) + "_" + util.zeroPadding(e[n].form, 3)];
          a += '<div class="t_pokeContainer">', a += '<div class="pokeImage"><img src="' + util.GetPokeiIcon128Name(i, o) + '" onError="this.onerror=null;this.src=\'./img/icons/ball_g.png\';"></div>', void 0 !== mdCtrl.md.sex[e[n].sex] && (a += '<div class="sex"><div class="sexIcon icon-poke_' + mdCtrl.md.sex[e[n].sex] + '"></div></div>'), void 0 !== r && r.length > 0 ? a += '<div class="name">' + l + " (" + r + ")</div>" : a += '<div class="name">' + l + "</div>", a += '<div class="t_pokemonTypeContainer2">', a += '<div class="bufLeft"></div>', a += '<div class="typeContiner t_typeColor' + mdCtrl.GetType(i, o, 0) + '">', a += '<div class="icon icon-' + util.getTypeIconName(mdCtrl.GetType(i, o, 0)) + '"></div>', a += "</div>", a += '<div class="typeName">' + langCtrl.dex.pokeType[mdCtrl.GetType(i, o, 0)] + "</div>", a += '<div class="bufCenter"></div>', mdCtrl.GetType(i, o, 1) >= 0 && (a += '<div class="typeContiner t_typeColor' + mdCtrl.GetType(i, o, 1) + '">', a += '<div class="icon icon-' + util.getTypeIconName(mdCtrl.GetType(i, o, 1)) + '"></div>', a += "</div>", a += '<div class="typeName">' + langCtrl.dex.pokeType[mdCtrl.GetType(i, o, 1)] + "</div>"), a += '<div class="bufRight"></div>', a += "</div>", a += '<div class="body">';
          for (let t of e[n].waza) {
            if (0 == t) continue;
            a += '<div class="wazaContainer">';
            let e = t,
              n = "";
            void 0 !== langCtrl.dex.waza[t] && (e = langCtrl.dex.waza[t], n = mdCtrl.GetWazaType(t, 0)), a += '<div class="typeContiner t_typeColor' + n + '">', a += '<div class="icon icon-' + util.getTypeIconName(n) + '"></div>', a += "</div>", a += '<div class="waza">' + e + "</div>", a += "</div>"
          }
          a += "</div>", a += "</div>"
        }
      }
      $("#teamContainer").html(a), langCtrl.init()
    }
  }
  class w {
    constructor() {
      const e = this;
      if (void 0 === t_udCtrl.t_ud.share.isLogin) {
        let e = localStorage.getItem("top");
        return e = null == e ? 0 : e, void(1 == e ? util.locationMove("./t_internetcompetition.html") : 2 == e ? util.locationMove("./t_friendcompetition.html") : util.locationMove("./t_rankmatch.html"))
      }
      t_udCtrl.login((function () {
        "rankmatch" == t_udCtrl.t_ud.share.selectMydataType ? (console.log("繝��繧ｿ驕ｸ謚槭罫ankmatch縲�"), $(".headerTitleText").html(langCtrl.lang.t_mydataselectPageTexts.title_text_rankmatch), $(".headerIcon").html('<div class="iconView icon-h2_icon03"></div>')) : "internetcompe_detail" == t_udCtrl.t_ud.share.selectMydataType ? (console.log("繝��繧ｿ驕ｸ謚槭景nternetcompe_detail縲�"), $(".headerTitleText").html(langCtrl.lang.t_mydataselectPageTexts.title_text_internetcompe), $(".headerIcon").html('<div class="iconView icon-h2_icon04"></div>')) : "friendcompe" == t_udCtrl.t_ud.share.selectMydataType ? (console.log("繝��繧ｿ驕ｸ謚槭掲riendcompe縲�"), $(".headerTitleText").html(langCtrl.lang.t_mydataselectPageTexts.title_text_friendcompe), $(".headerIcon").html('<div class="iconView icon-h2_icon05"></div>')) : console.error("selectMydataType=" + t_udCtrl.t_ud.share.selectMydataType + "�壽悴螳夂ｾｩ"), e.uiInitialize()
      }))
    }
    uiInitialize() {
      const e = this;
      $("#body1").css("height", $(window).height() - 220 + "px");
      const t = Object.keys(t_udCtrl.t_ud.myInfo.playInfo);
      let a = "";
      for (let e = 0; e < t.length; e++) {
        if ("rankmatch" == t_udCtrl.t_ud.share.selectMydataType) {
          if (0 == t_udCtrl.isJoinRankmatch1(t[e])) continue
        } else if ("internetcompe_detail" == t_udCtrl.t_ud.share.selectMydataType) {
          if (0 == t_udCtrl.isJoinInternetcompe2(t[e], t_udCtrl.t_ud.share.selectInternetCompe)) continue
        } else {
          if ("friendcompe" != t_udCtrl.t_ud.share.selectMydataType) continue;
          if (0 == t_udCtrl.isJoinFriendcompe1(t[e])) continue
        }
        let n = t_udCtrl.t_ud.myInfo.playInfo[t[e]].romId;
        a += '<div id="' + t[e] + '" class="t_romButtonContainer">', a += '<div class="romIconContainer">', "Sc" == n ? a += '<div class="icon"><img src="./img/logo/icon_soft_M_01_01.png"></div>' : "Vi" == n && (a += '<div class="icon"><img src="./img/logo/icon_soft_M_01_02.png"></div>'), a += "</div>", a += '<div class="userNameContainer">', a += '<div class="userName">' + t_udCtrl.t_ud.myInfo.playInfo[t[e]].name + "</div>", a += '<div class="trainerId">' + t_udCtrl.t_ud.myInfo.playInfo[t[e]].trainerId + "</div>", a += "</div>", a += '<div class="placeContainer">', a += '<div class="placeCodeText">' + mdCtrl.md.langStrL[util.langCode()][t_udCtrl.t_ud.myInfo.playInfo[t[e]].lang] + "</div>", a += "</div>", a += "</div>"
      }
      $("#body1").html(a);
      for (let a = 0; a < t.length; a++) $("#" + t[a]).click((function (t) {
        t.preventDefault(), e.gotoNext($(this).attr("id"))
      }))
    }
    gotoNext(e) {
      t_udCtrl.t_ud.share.selectnplnId = e, "rankmatch" == t_udCtrl.t_ud.share.selectMydataType ? (t_udCtrl.t_ud.share.my_rankmatch_selectSeason = void 0, t_udCtrl.t_ud.share.my_rankmatch_selectRule = void 0, t_udCtrl.t_ud.share.my_rankmatch_selectTabno = void 0, t_udCtrl.t_ud.share.my_rankmatch_selectScroll = void 0, t_udCtrl.save(), util.locationMove("./t_my_rankmatch.html")) : "internetcompe_detail" == t_udCtrl.t_ud.share.selectMydataType ? (t_udCtrl.t_ud.share.my_internetcompetition_detail_selectTabno = void 0, t_udCtrl.t_ud.share.my_internetcompetition_detail_selectScroll = void 0, t_udCtrl.save(), util.locationMove("./t_my_internetcompetition_detail.html")) : "friendcompe" == t_udCtrl.t_ud.share.selectMydataType ? (t_udCtrl.save(), util.locationMove("./t_my_friendcompetition.html")) : console.error("selectMydataType=" + t_udCtrl.t_ud.share.selectMydataType + "�壽悴螳夂ｾｩ")
    }
  }
  class I {
    constructor() {
      const e = this;
      util.getZknFormjson(parseInt(util.langCode()), (function (t) {
        e.zknformjson = t.zkn_form, e.uiInitialize()
      }))
    }
    uiInitialize() {
      const e = this;
      let t = "";
      for (let a in mdCtrl.md.pokeType)
        for (let n in mdCtrl.md.pokeType[a]) {
          t += '<div class="t_mdcheckRow">', t += '<div class="pno">No.' + a + "</div>", t += '<div class="fo">form:' + n + "</div>", t += '<div class="pokemonIconContainer1">', t += '<div class="icon"><img src="./img/poke/cap' + ("000" + a).slice(-4) + "_f" + ("0" + n).slice(-2) + '_s0.png" onError="this.onerror=null;this.src=\'./img/icons/ball_g.png\';"></div>', t += "</div>", t += '<div class="pokemonIconContainer2">';
          let i = util.GetPokeiIconName(a, n);
          t += '<div class="icon"><img src="' + i + '" onError="this.onerror=null;this.src=\'./img/icons/ball_g.png\';"></div>', t += "</div>", t += '<div class="pokemonIconContainer3">', i = util.GetPokeiIcon128Name(a, n), t += '<div class="icon"><img src="' + i + '" onError="this.onerror=null;this.src=\'./img/icons/ball_g.png\';"></div>', t += "</div>";
          let o = langCtrl.GetPokeName(a),
            l = e.zknformjson[util.zeroPadding(a, 3) + "_" + util.zeroPadding(n, 3)];
          void 0 !== l && l.length > 0 && (o += " (" + l + ")"), t += '<div class="pokemonName">' + o + "</div>", t += '<div class="pngName">' + i.split("/").reverse()[0].split(".")[0] + "</div>", t += '<div class="t_pokemonTypeContainer">', t += '<div class="type1Continer t_typeColor' + mdCtrl.md.pokeType[a][n][0] + '">', t += '<div class="icon icon-' + util.getTypeIconName(mdCtrl.md.pokeType[a][n][0]) + '"></div>', t += "</div>", 2 == mdCtrl.md.pokeType[a][n].length && (t += '<div class="type2Continer t_typeColor' + mdCtrl.md.pokeType[a][n][1] + '">', t += '<div class="icon icon-' + util.getTypeIconName(mdCtrl.md.pokeType[a][n][1]) + '"></div>', t += "</div>"), t += "</div>", t += "</div>"
        }
      $(".t_mdcheckList").html(t)
    }
  }
  class P {
    constructor() {
      const e = this;
      util.getItemnamejson(parseInt(util.langCode()), (function (t) {
        e.itemnamejson = t.itemname, util.getIteminfojson(parseInt(util.langCode()), (function (t) {
          e.iteminfojson = t.iteminfo, e.uiInitialize()
        }))
      }))
    }
    uiInitialize() {
      const e = this;
      let t = "",
        a = Object.keys(e.itemnamejson);
      for (let n in a) {
        console.log("item[" + a[n] + "]=" + e.itemnamejson[a[n]]), t += '<div class="t_mdcheckRow">', t += '<div class="pno">No.' + a[n] + "</div>", t += '<div class="pokemonIconContainer2">', t += '<div class="icon"><img src="' + util.GetItemIconName(a[n]) + '" width="64" height="64" onError="this.onerror=null;this.src=\'./img/icons/ball_g.png\';"></div>', t += "</div>", t += '<div class="pokemonName">' + e.itemnamejson[a[n]] + "</div>", t += '<div class="detail">' + e.iteminfojson[a[n]] + "</div>", t += "</div>"
      }
      $(".t_mdcheckList").html(t)
    }
  }
  class x {
    constructor() {
      const e = this;
      util.getWazainfojson(parseInt(util.langCode()), (function (t) {
        e.wazainfojson = t, e.uiInitialize()
      }))
    }
    uiInitialize() {
      const e = this;
      let t = "";
      for (let a in langCtrl.dex.waza) t += '<div class="t_mdcheckRow">', t += '<div class="pno">No.' + a + "</div>", t += '<div class="pokemonName">' + langCtrl.dex.waza[a] + "</div>", t += '<div class="detail">' + e.getWazainfoText(a) + "</div>", t += '<div class="t_pokemonTypeContainer">', void 0 !== mdCtrl.md.wazaType[a] && (t += '<div class="type1Continer t_typeColor' + mdCtrl.md.wazaType[a][0] + '">', t += '<div class="icon icon-' + util.getTypeIconName(mdCtrl.md.wazaType[a][0]) + '"></div>', t += "</div>", t += '<div class="type2Continer">', t += '<div class="icon icon-' + util.getCategoryIconName(mdCtrl.md.wazaType[a][1]) + '"></div>', t += "</div>"), t += "</div>", t += "</div>";
      $(".t_mdcheckList").html(t)
    }
    getWazainfoText(e) {
      return this.wazainfojson.wazainfo[e]
    }
  }
  class D {
    constructor() {
      const e = this;
      util.getTokuseiinfojson(parseInt(util.langCode()), (function (t) {
        e.tokuseiinfojson = t, e.uiInitialize()
      }))
    }
    uiInitialize() {
      const e = this;
      let t = "";
      for (let a in langCtrl.dex.tokusei) t += '<div class="t_mdcheckRow">', t += '<div class="pno">No.' + a + "</div>", t += '<div class="pokemonName">' + langCtrl.dex.tokusei[a] + "</div>", t += '<div class="detail">' + e.getTokuseiinfoText(a) + "</div>", t += "</div>";
      $(".t_mdcheckList").html(t)
    }
    getTokuseiinfoText(e) {
      return this.tokuseiinfojson.tokuseiinfo[e]
    }
  }
  class R {
    constructor(e) {
      this.red_BlockColor = "rgba(222,110,71,1)", this.yellow_BlockColor = "rgba(255,192,0,1)", this.blue_BlockColor = "rgba(76,90,224,1)", this.green_BlockColor = "rgba(94,182,76,1)", this.noneColor = "rgba(0,0,0,0)", this.whiteColor = "rgba(255,255,255,1)", this.mainTextColor = "rgba(78,78,78,1)", this.loseStateColor = "rgba(133,133,133,1)", this.winScoreColor = "rgba(255,247,230,1)", this.loseColor = "rgba(224,224,224,1)", this.winLabelColor = "rgba(255,173,4,1)", this.iconRoot = void 0 === e ? "./img/icons/" : e, this.bracketsHideWinners = [], this.bracketsHideFinal = [], this.bracketsHideLosers = []
    }
    create(e, t, a, n) {
      this.info = e, this.bracketSize = t, this.winnersTabnum = a, this.losersTabnum = n;
      let i = "",
        o = e.limit,
        l = 0,
        r = 0,
        s = 0,
        c = 0;
      for (let n = 1; n <= a; n++) {
        let d = this.red_BlockColor;
        c % 2 == 1 && (d = this.yellow_BlockColor), c++, i += '<div class="roundContainer" id="winnersRound' + n + '">', o /= 2;
        for (let c = 1; c <= o; c++) {
          l = 0, 2 == n ? l = 90 : 3 == n ? l = 270 : 4 == n ? l = 630 : 5 == n ? l = 1350 : 6 == n ? l = 2790 : 7 == n && (l = 5670), l > 0 && (i += '<div class="buf" style="height: ' + l + 'px"></div>');
          if (i += `<div class="match ${this.isBracketsHide(!0,!1,n)}" id="${`winnersRound${n}match${c}`}">`, (1 === n && 1 === c || n >= 2) && (1 == e.type ? this.isFinal(n, t) ? i += '<div class="roundTitle">' + langCtrl.lang.t_tournament_detailPageTexts.final + "</div>" : this.isSemiFinal(n, t) ? i += '<div class="roundTitle">' + langCtrl.lang.t_tournament_detailPageTexts.semi_final + "</div>" : i += '<div class="roundTitle">' + util.msNumFormat(langCtrl.lang.t_tournament_detailPageTexts.Xround, [n]) + "</div>" : this.isFinal(n, t) ? i += '<div class="roundTitle">' + util.msNumFormat(langCtrl.lang.t_tournament_detailPageTexts.final_winners, [n]) + "</div>" : i += '<div class="roundTitle">' + util.msNumFormat(langCtrl.lang.t_tournament_detailPageTexts.round_winners, [n]) + "</div>"), i += `<div class="block" style="background-color: ${d};"><div class="label">${c}</div></div>`, i += '<div class="trainerContainer upper">', i += '<div class="userIconContainer"><div class="icon"></div></div>', i += '<div class="name"></div>', i += '<div class="state"></div>', i += '<div class="score"></div>', i += "</div>", i += '<div class="dividor"></div>', i += '<div class="trainerContainer lower">', i += '<div class="userIconContainer"><div class="icon"></div></div>', i += '<div class="name"></div>', i += '<div class="state"></div>', i += '<div class="score"></div>', i += "</div>", i += "</div>", c % 2 == 0) {
            1 == n ? (r = 90 + 180 * (c - 2), s = 175) : 2 == n ? (r = 180 + 360 * (c - 2), s = 355) : 3 == n ? (r = 360 + 720 * (c - 2), s = 715) : 4 == n ? (r = 720 + 1440 * (c - 2), s = 1435) : 5 == n ? (r = 1440 + 2880 * (c - 2), s = 2875) : 6 == n && (r = 2880 + 5760 * (c - 2), s = 5755), i += `<div class="line ${this.isBracketsHide(!0,!1,n+1)}" style="top: ${r}px; height: ${s}px"></div>`
          }
          if (2 == e.type && n == a && c == o) {
            i += `<div class="line line_losers ${this.isBracketsHide(!1,!0,1)}" style="top: ${l+60}px; height: 25px"></div>`
          }
          l > 0 && (i += '<div class="buf" style="height: ' + l + 'px"></div>')
        }
        i += "</div>"
      }
      if (2 == e.type)
        for (let e = 1; e <= 2; e++) {
          let t = this.red_BlockColor;
          c % 2 == 1 && (t = this.yellow_BlockColor), c++, i += '<div class="roundContainer" id="winnersFinalRound' + e + '">', i += '<div class="buf" style="height: ' + l + 'px"></div>';
          i += `<div class="match ${this.isBracketsHide(!1,!0,e)}" id="${`winnersFinalRound${e}match1`}">`, (1 === e || 2 === e) && (i += '<div class="roundTitle">' + langCtrl.lang.t_tournament_detailPageTexts.grandfinal + "</div>"), i += `<div class="block" style="background-color: ${t};"><div class="label">1</div></div>`, i += '<div class="trainerContainer upper">', i += '<div class="userIconContainer"><div class="icon"></div></div>', i += '<div class="name"></div>', i += '<div class="state"></div>', i += '<div class="score"></div>', i += "</div>", i += '<div class="dividor"></div>', i += '<div class="trainerContainer lower">', i += '<div class="userIconContainer"><div class="icon"></div></div>', i += '<div class="name"></div>', i += '<div class="state"></div>', i += '<div class="score"></div>', i += "</div>", i += "</div>";
          const a = this.isBracketsHide(!1, !0, e + 1);
          1 === e && (i += `<div class="line line_losers ${a}" style="top: ${l+60}px; height: 25px"></div>`), i += '<div class="buf" style="height: ' + l + 'px"></div>', i += "</div>"
        }
      if ($("#winnersContainer").html(i), 2 == e.type) {
        i = "", o = e.limit / 2;
        for (let a = 1; a <= n; a++) {
          i += '<div class="roundContainer" id="losersRound' + a + '">', a % 2 == 1 && (o /= 2);
          for (let n = 1; n <= o; n++) {
            l = 0, 3 == a || 4 == a ? l = 90 : 5 == a || 6 == a ? l = 270 : 7 == a || 8 == a ? l = 630 : 9 == a || 10 == a ? l = 1350 : 11 != a && 12 != a || (l = 2790), l > 0 && (i += '<div class="buf" style="height: ' + l + 'px"></div>');
            i += `<div class="match ${this.isBracketsHide(!1,!1,a)}" id="${`losersRound${a}match${n}`}">`, ((1 === a || 2 === a) && 1 === n || a >= 3) && (this.isLosersFinal(e.type, 2, a, t) ? i += '<div class="roundTitle">' + util.msNumFormat(langCtrl.lang.t_tournament_detailPageTexts.final_losers, [a]) + "</div>" : i += '<div class="roundTitle">' + util.msNumFormat(langCtrl.lang.t_tournament_detailPageTexts.round_losers, [a]) + "</div>");
            let o = this.blue_BlockColor;
            a % 2 == 0 && (o = this.green_BlockColor), i += `<div class="block" style="background-color: ${o};"><div class="label">${n}</div></div>`, i += '<div class="trainerContainer upper">', i += '<div class="userIconContainer"><div class="icon"></div></div>', i += '<div class="name"></div>', i += '<div class="state"></div>', i += '<div class="score"></div>', i += "</div>", i += '<div class="dividor"></div>', i += '<div class="trainerContainer lower">', i += '<div class="userIconContainer"><div class="icon"></div></div>', i += '<div class="name"></div>', i += '<div class="state"></div>', i += '<div class="score"></div>', i += "</div>", i += "</div>";
            const c = this.isBracketsHide(!1, !1, a + 1);
            a % 2 == 1 ? (1 == a ? r = 55 + 180 * (n - 1) : 3 == a ? r = 145 + 360 * (n - 1) : 5 == a ? r = 325 + 720 * (n - 1) : 7 == a ? r = 685 + 1440 * (n - 1) : 9 == a ? r = 1405 + 2880 * (n - 1) : 11 == a && (r = 2845 + 5760 * (n - 1)), i += `<div class="line line_losers ${c}" style="top: ${r}px; height: 25px"></div>`) : n % 2 == 0 && (2 == a ? (r = 90 + 180 * (n - 2), s = 175) : 4 == a ? (r = 180 + 360 * (n - 2), s = 355) : 6 == a ? (r = 360 + 720 * (n - 2), s = 715) : 8 == a ? (r = 720 + 1440 * (n - 2), s = 1435) : 10 == a ? (r = 1440 + 2880 * (n - 2), s = 2875) : 12 == a && (r = 2880 + 5760 * (n - 2), s = 5755), i += `<div class="line ${c}" style="top: ${r}px; height: ${s}px"></div>`), l > 0 && (i += '<div class="buf" style="height: ' + l + 'px"></div>')
          }
          i += "</div>"
        }
        $("#losersContainer").html(i)
      }
      2 == e.type && $("#winnerslosersDividor").css("width", $("#winnersRound1").width() * n + "px")
    }
    updateDetail(e) {
      if (void 0 !== e) {
        console.log("matchDetail.winners=" + Object.keys(e.winners).length), void 0 !== e.losers && console.log("matchDetail.losers=" + Object.keys(e.losers).length), void 0 !== e.finals && console.log("matchDetail.finals=" + Object.keys(e.finals).length);
        for (let t in e.winners)
          for (let a in e.winners[t]) {
            let n = this.createParams(e.winners[t][a]);
            this.updateMatch(!0, !1, this.getWinnersRoundNo(t), e.winners[t][a].bracket, n)
          }
        for (let t in e.losers)
          for (let a in e.losers[t]) {
            let n = this.createParams(e.losers[t][a]);
            this.updateMatch(!1, !1, this.getLosersRoundNo(t), e.losers[t][a].bracket, n)
          }
        for (let t in e.finals)
          for (let a in e.finals[t]) {
            let n = this.createParams(e.finals[t][a]);
            this.updateMatch(!1, !0, this.getfinalRoundNo(t), e.finals[t][a].bracket, n)
          }
      } else console.log("matchDetail undefined!")
    }
    createParams(e) {
      let t, a;
      switch (e.winner) {
      case 1:
        t = "win", a = "lose";
        break;
      case 2:
        t = "lose", a = "win";
        break;
      case 3:
        t = "invalid", a = "invalid";
        break;
      default:
        t = "", a = ""
      }
      let n = {
        trainer1: {},
        trainer2: {}
      };
      return void 0 !== e.trainer1 && (n.trainer1 = {
        name: e.trainer1.name,
        state: t,
        score: e.trainer1.win,
        icon: e.trainer1.icon
      }), void 0 !== e.trainer2 && (n.trainer2 = {
        name: e.trainer2.name,
        state: a,
        score: e.trainer2.win,
        icon: e.trainer2.icon
      }), n
    }
    updateMatch(e, t, a, n, i) {
      let o = "";
      o = !1 === t ? "#" + (e ? "winners" : "losers") + "Round" + a + "match" + n : "#winnersFinalRound" + a + "match1", this.updateMatchTrainer(o + " > .upper", i.trainer1), this.updateMatchTrainer(o + " > .lower", i.trainer2)
    }
    updateMatchTrainer(e, t) {
      if (void 0 === t || null == t.name || "" == t.name) $(e).css("background-color", this.loseColor), $(e + " > .name").html(""), $(e + " > .userIconContainer > .icon").html(""), $(e + " > .state").html(""), $(e + " > .state").css("background-color", this.noneColor), $(e + " > .score").html(""), $(e + " > .score").css("background-color", this.noneColor);
      else {
        $(e + " > .name").html(t.name);
        const a = this.iconRoot + "trainer/" + t.icon,
          n = this.iconRoot + "icon_prof_icon02.png";
        $(e + " > .userIconContainer > .icon").html(`<img src="${a}" onError="this.onerror=null;this.src='${n}';">`), "win" == t.state ? ($(e).css("background-color", this.whiteColor), $(e + " > .state").html(langCtrl.lang.t_common.win), $(e + " > .state").css("background-color", this.winLabelColor), $(e + " > .score").html(t.score), $(e + " > .score").css("color", this.winLabelColor), $(e + " > .score").css("background-color", this.winScoreColor)) : "lose" == t.state ? ($(e).css("background-color", this.loseColor), $(e + " > .state").html(langCtrl.lang.t_common.lose), $(e + " > .state").css("background-color", this.loseStateColor), $(e + " > .score").html(t.score), $(e + " > .score").css("color", this.mainTextColor)) : "invalid" == t.state ? ($(e).css("background-color", this.loseColor), $(e + " > .state").html(""), $(e + " > .state").css("background-color", this.noneColor), $(e + " > .score").html(""), $(e + " > .score").css("background-color", this.noneColor), $(e + " > .score").css("color", this.mainTextColor)) : ($(e).css("background-color", this.whiteColor), $(e + " > .state").html(""), $(e + " > .state").css("background-color", this.noneColor), $(e + " > .score").html(""), $(e + " > .score").css("background-color", this.noneColor), $(e + " > .score").css("color", this.mainTextColor))
      }
    }
    getWinnersRoundNo(e) {
      let t;
      switch (e) {
      case "128":
        t = 6;
        break;
      case "64":
        t = 5;
        break;
      case "32":
        t = 4;
        break;
      case "16":
        t = 3;
        break;
      case "8":
        t = 2;
        break;
      case "4":
        t = 1;
        break;
      case "2":
        t = 0;
        break;
      default:
        t = -99
      }
      return this.winnersTabnum - t
    }
    getLosersRoundNo(e) {
      let t;
      switch (e) {
      case "64_1":
        t = 11;
        break;
      case "64_2":
        t = 10;
        break;
      case "32_1":
        t = 9;
        break;
      case "32_2":
        t = 8;
        break;
      case "16_1":
        t = 7;
        break;
      case "16_2":
        t = 6;
        break;
      case "8_1":
        t = 5;
        break;
      case "8_2":
        t = 4;
        break;
      case "4_1":
        t = 3;
        break;
      case "4_2":
        t = 2;
        break;
      case "2_1":
        t = 1;
        break;
      case "2_2":
        t = 0;
        break;
      default:
        t = -99
      }
      return this.losersTabnum - t
    }
    getfinalRoundNo(e) {
      switch (e) {
      case "1":
        return 1;
      case "2":
        return 2
      }
      return -99
    }
    isSemiFinal(e, t) {
      return Number(e) === Math.log2(t)
    }
    isFinal(e, t) {
      return Number(e) === Math.log2(t) + 1
    }
    isLosersFinal(e, t, a, n) {
      return 2 === Number(e) && 2 === Number(t) && Number(a) === 2 * Math.log2(n)
    }
    isBracketsHide(e, t, a) {
      if (2 != this.info.rst) return "";
      const n = this.info.matchDetail;
      if (1 == t) {
        if (!1 === this.bracketsHideFinal[a]) return "";
        if (!0 === this.bracketsHideFinal[a]) return "bracketsHide";
        for (let e in n.finals)
          if (this.getfinalRoundNo(e) == a)
            for (let t in n.finals[e])
              if (this.isExistUser(n.finals[e][t])) return this.bracketsHideFinal[a] = !1, "";
        this.bracketsHideFinal[a] = !0
      } else if (1 == e && 0 == t) {
        if (!1 === this.bracketsHideWinners[a]) return "";
        if (!0 === this.bracketsHideWinners[a]) return "bracketsHide";
        for (let e in n.winners)
          if (this.getWinnersRoundNo(e) == a)
            for (let t in n.winners[e])
              if (this.isExistUser(n.winners[e][t])) return this.bracketsHideWinners[a] = !1, "";
        this.bracketsHideWinners[a] = !0
      } else if (0 == e && 0 == t) {
        if (!1 === this.bracketsHideLosers[a]) return "";
        if (!0 === this.bracketsHideLosers[a]) return "bracketsHide";
        for (let e in n.losers)
          if (this.getLosersRoundNo(e) == a)
            for (let t in n.losers[e])
              if (this.isExistUser(n.losers[e][t])) return this.bracketsHideLosers[a] = !1, "";
        this.bracketsHideLosers[a] = !0
      }
      return "bracketsHide"
    }
    isExistUser(e) {
      return void 0 !== e.trainer1 && null != e.trainer1.name && "" != e.trainer1.name || void 0 !== e.trainer2 && null != e.trainer2.name && "" != e.trainer2.name
    }
    getBracketSize(e) {
      return 2 ** (Math.ceil(Math.log2(e)) - 1)
    }
  }
  class M {
    constructor() {
      const e = this;
      void 0 !== t_udCtrl.t_ud.share.isLogin ? (void 0 === t_udCtrl.t_ud.share.selectTournament && util.locationMove("./t_internetcompetition.html"), e.selectTournament = t_udCtrl.t_ud.share.selectTournament, console.log("selectTournament=" + e.selectTournament), e.selectRoundId = "", e.isEntire = !1, e.createBracket = new R, t_udCtrl.login((function () {
        e.auth = Object.keys(t_udCtrl.t_ud.myInfo.playInfo).length > 0, console.log("self.auth=" + e.auth), t_udCtrl.load_tournament_detail({
          compeId: e.selectTournament
        }, (function () {
          if (void 0 !== t_udCtrl.t_ud.internetCompeInfo[e.selectTournament] && (e.hst = t_udCtrl.t_ud.internetCompeInfo[e.selectTournament].hst, e.rule = t_udCtrl.t_ud.internetCompeInfo[e.selectTournament].rule), console.log("[" + e.selectTournament + "].hst=" + e.hst + " .rule=" + e.rule), e.info = t_udCtrl.t_ud.tournamentDetail[e.selectTournament], e.bracketSize = e.createBracket.getBracketSize(e.info.limit), e.uiInitialize(), e.createBracket.updateDetail(e.info.matchDetail), e.info.rst < 0 || 0 == e.info.ts1 || 9999999999 == e.info.ts1) console.log(`繝ｩ繝ｳ繧ｭ繝ｳ繧ｰ繝��繧ｿ縺ｪ縺� rst=${e.info.rst} ts1=${e.info.ts1}`), e.updateRankingList(null);
          else {
            const t = "/" + e.selectTournament + "/" + e.info.rst + "/" + e.info.ts1 + "/traner-1";
            t_udCtrl.tournamentRankingRequest(t, (function (t) {
              e.updateRankingList(t)
            }))
          }
        }))
      }))) : util.locationMove("./t_internetcompetition.html")
    }
    uiInitialize() {
      const e = this;
      $(".t_tournamentTableContainer>.body>.rankingList").css("height", $(window).height() - 545 + "px"), e.bracketListWidth = $(".t_tournamentTableContainer>.body>.bracketList").width(), 1 == e.hst ? $(".t_open_hr").removeClass("disableDisplay") : 2 == e.hst && $(".t_end_hr").removeClass("disableDisplay"), $("#compeName").html(e.info.title), $("#compeSubName").html(e.info.subtitle), $("#period").html(util.joinDate(util.timestamp2Text(e.info.compePeriod.start), util.timestamp2Text(e.info.compePeriod.end))), $("#joinedNum").html(util.numberFormat(e.info.entryCount)), 1 == e.info.type ? $("#tournamentType").html(langCtrl.lang.t_tournament_detailPageTexts.single_elimination) : $("#tournamentType").html(langCtrl.lang.t_tournament_detailPageTexts.double_elimination), 0 == e.rule ? $("#ruleIcon").html('<div class="icon icon-result-single1"></div>') : $("#ruleIcon").html('<div class="icon icon-season-result-icon02"></div>'), e.uiInitializeSelectorOption(), e.uiInitializeBracket(), e.uiInitializeTab(), e.onWinnersTab(e.winnersTabnum), $("#regulationPage").click((function (t) {
        util.t_locationMoveRegulation(e.selectTournament, util.langCode())
      })), $("#regulationPokemonPage").click((function (t) {
        util.t_locationMoveUsePokemonList(e.selectTournament, util.langCode())
      })), 1 == e.hst && setInterval((function () {
        1 != e.reloading && (e.reloading = !0, t_udCtrl.load_tournament_detail({
          compeId: e.selectTournament
        }, (function () {
          e.reloading = !1;
          const t = e.info.limit;
          e.info = t_udCtrl.t_ud.tournamentDetail[e.selectTournament], t !== e.info.limit ? (console.log(`繝悶Λ繧ｱ繝�ヨ繧ｵ繧､繧ｺ縺悟､画峩縺輔ｌ縺� ${t} -> ${e.info.limit}`), e.uiInitializeSelectorOption(), e.uiInitializeBracket(), e.onWinnersTab(e.winnersTabnum)) : 2 == e.info.rst && 2 != e.lastrst && (console.log("繝悶Λ繧ｱ繝�ヨ蜀肴峩譁ｰ"), e.uiInitializeBracket(), e.updateDisplayRound(), e.lastrst = e.info.rst), e.createBracket.updateDetail(e.info.matchDetail)
        })))
      }), 3e4), $("#ranking-aggr").html(langCtrl.lang.t_common.gathering)
    }
    uiInitializeTab() {
      const e = this;
      $(".t_tournamentTableContainer > .header1").addClass("disableDisplay"), $(".t_tournamentTableContainer > .header2").removeClass("disableDisplay"), $("#tabRoundCard").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), $("#tabRoundCard").removeClass("disable"), $("#tabRoundCard .icon").removeClass("icon-tt_bmatch2"), $("#tabRoundCard .icon").addClass("icon-tt_bmatch1"), $("#tabTournamentTable").addClass("disable"), $("#tabTournamentTable .icon").removeClass("icon-tt_leaderboard1"), $("#tabTournamentTable .icon").addClass("icon-tt_leaderboard2"), $("#rankTab").addClass("disable"), $("#rankTab .icon").removeClass("icon-tt_ranklist1"), $("#rankTab .icon").addClass("icon-tt_ranklist2"), $(".pulldown").show(), $(".bracketList").removeClass("disableDisplay"), $("#rankingList").addClass("disableDisplay"), $(".winnerslosersContainer").addClass("winnerslosersContainerCenter"), $(".winnerslosersHeadSpace").hide(), $("#winnerslosersDividor").hide(), e.bracketListHeight = $(window).height() - 585, e.isEntire = !1, e.updateDisplayRound()
      })), $("#tabTournamentTable").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), $("#tabRoundCard").addClass("disable"), $("#tabRoundCard .icon").removeClass("icon-tt_bmatch1"), $("#tabRoundCard .icon").addClass("icon-tt_bmatch2"), $("#tabTournamentTable").removeClass("disable"), $("#tabTournamentTable .icon").removeClass("icon-tt_leaderboard2"), $("#tabTournamentTable .icon").addClass("icon-tt_leaderboard1"), $("#rankTab").addClass("disable"), $("#rankTab .icon").removeClass("icon-tt_ranklist1"), $("#rankTab .icon").addClass("icon-tt_ranklist2"), $(".pulldown").hide(), $(".bracketList").removeClass("disableDisplay"), $("#rankingList").addClass("disableDisplay"), $(".winnerslosersContainer").removeClass("winnerslosersContainerCenter"), $(".winnerslosersHeadSpace").show(), $("#winnerslosersDividor").show(), e.bracketListHeight = $(window).height() - 525, e.isEntire = !0, e.updateDisplayRound()
      })), $("#rankTab").click((function (e) {
        e.preventDefault(), e.stopImmediatePropagation(), $("#tabRoundCard").addClass("disable"), $("#tabRoundCard .icon").removeClass("icon-tt_bmatch1"), $("#tabRoundCard .icon").addClass("icon-tt_bmatch2"), $("#tabTournamentTable").addClass("disable"), $("#tabTournamentTable .icon").removeClass("icon-tt_leaderboard1"), $("#tabTournamentTable .icon").addClass("icon-tt_leaderboard2"), $("#rankTab").removeClass("disable"), $("#rankTab .icon").removeClass("icon-tt_ranklist2"), $("#rankTab .icon").addClass("icon-tt_ranklist1"), $(".pulldown").hide(), $(".bracketList").addClass("disableDisplay"), $("#rankingList").removeClass("disableDisplay")
      })), $("#tabRoundCard").click()
    }
    uiInitializeSelectorOption() {
      const e = this;
      switch (e.winnersTabnum = 0, e.losersTabnum = 0, e.info.limit) {
      case 128:
        e.winnersTabnum = 7, e.losersTabnum = 12;
        break;
      case 64:
        e.winnersTabnum = 6, e.losersTabnum = 10;
        break;
      case 32:
        e.winnersTabnum = 5, e.losersTabnum = 8;
        break;
      case 16:
        e.winnersTabnum = 4, e.losersTabnum = 6;
        break;
      case 8:
        e.winnersTabnum = 3, e.losersTabnum = 4;
        break;
      case 4:
        e.winnersTabnum = 2, e.losersTabnum = 2;
        break;
      case 2:
        e.winnersTabnum = 1, e.losersTabnum = 0
      }
      console.log("winnersTabnum=" + e.winnersTabnum + " , losersTabnum=" + e.losersTabnum);
      let t = "";
      for (let a = 1; a <= e.winnersTabnum; a++) 1 == e.info.type ? e.createBracket.isFinal(a, e.bracketSize) ? t += '<option value="winners,' + a + '">' + langCtrl.lang.t_tournament_detailPageTexts.final + "</option>" : e.createBracket.isSemiFinal(a, e.bracketSize) ? t += '<option value="winners,' + a + '">' + langCtrl.lang.t_tournament_detailPageTexts.semi_final + "</option>" : t += '<option value="winners,' + a + '">' + util.msNumFormat(langCtrl.lang.t_tournament_detailPageTexts.Xround, [a]) + "</option>" : e.createBracket.isFinal(a, e.bracketSize) ? t += '<option value="winners,' + a + '">' + util.msNumFormat(langCtrl.lang.t_tournament_detailPageTexts.final_winners, [a]) + "</option>" : t += '<option value="winners,' + a + '">' + util.msNumFormat(langCtrl.lang.t_tournament_detailPageTexts.round_winners, [a]) + "</option>";
      if (2 == e.info.type) {
        t += '<option value="winnersFinal,1">' + langCtrl.lang.t_tournament_detailPageTexts.grandfinal + "</option>", t += '<option value="winnersFinal,2">' + langCtrl.lang.t_tournament_detailPageTexts.grandfinal + "</option>";
        for (let a = 1; a <= e.losersTabnum; a++) e.createBracket.isLosersFinal(e.info.type, 2, a, e.bracketSize) ? t += '<option value="losers,' + a + '">' + util.msNumFormat(langCtrl.lang.t_tournament_detailPageTexts.final_losers, [a]) + "</option>" : t += '<option value="losers,' + a + '">' + util.msNumFormat(langCtrl.lang.t_tournament_detailPageTexts.round_losers, [a]) + "</option>"
      }
      $("#roundSelector").html(t), $("#roundSelector").change((function () {
        let t = $(this).val().split(",");
        console.log("#roundSelector:" + $(this).val() + " vals[0]=" + t[0] + " vals[1]=" + t[1]), "winnersFinal" == t[0] ? (console.log("winners final round:" + t[1]), e.onWinnersTab(t[1], !0)) : "losers" == t[0] ? (console.log("losers round:" + t[1]), e.onlosersTab(e.losersTabnum + 1 - t[1])) : (console.log("winners round:" + t[1]), e.onWinnersTab(e.winnersTabnum + 1 - t[1]))
      })), $("#roundSelector").val("winners,1")
    }
    onWinnersTab(e, t) {
      const a = this;
      t = void 0 !== t && t, console.log("onWinnersTab( tabno=" + e + " , isFinal=" + t + " )");
      let n = a.winnersTabnum - e + 1;
      a.selectRoundId = 0 == t ? "winnersRound" + n : "winnersFinalRound" + e, a.isEntire = !1, a.updateDisplayRound()
    }
    onlosersTab(e) {
      console.log("onlosersTab( tabno=" + e + " )");
      let t = this.losersTabnum - e + 1;
      this.selectRoundId = "losersRound" + t, this.isEntire = !1, this.updateDisplayRound()
    }
    uiInitializeBracket() {
      this.createBracket.create(this.info, this.bracketSize, this.winnersTabnum, this.losersTabnum)
    }
    updateRankingList(e) {
      if (null == e || 0 === e.length) return console.error("繝ｩ繝ｳ繧ｭ繝ｳ繧ｰ諠��ｱ縺後≠繧翫∪縺帙ｓ"), void $("#ranking-aggr").removeClass("disableDisplay");
      $("#ranking-aggr").addClass("disableDisplay");
      let t = "";
      for (let a = 0; a < e.length; a++) {
        switch (t += '<div class="row">', e[a].rank) {
        case 1:
          t += '<div class="rankIconContainer"><div class="icon icon-oukan1"></div><div class="text">1</div></div>';
          break;
        case 2:
          t += '<div class="rankIconContainer"><div class="icon icon-oukan2"></div><div class="text">2</div></div>';
          break;
        case 3:
          t += '<div class="rankIconContainer"><div class="icon icon-oukan3"></div><div class="text">3</div></div>';
          break;
        default:
          t += '<div class="rankText">' + util.msNumFormat(langCtrl.lang.t_tournament_detailPageTexts.bestX, [e[a].rank]) + "</div>"
        }
        t += '<div class="userNameContainer">', t += '<div class="userIconContainer">', t += '<div class="icon"><img src="./img/icons/trainer/' + e[a].icon + '" onError="this.onerror=null;this.src=\'./img/icons/icon_prof_icon02.png\';"></div>', t += "</div>", t += `<div class="userName">${e[a].name}</div>`, t += "</div>";
        let n = e[a].lng,
          i = "";
        void 0 !== n && 0 !== parseInt(n) && (i = mdCtrl.md.langStrL[util.langCode()][n]), t += `<div class="placeContainer"><div class="code">${i}</div></div>`, t += "</div>", t += '<div class="dotDividor"></div>'
      }
      $("#rankingList").html(t)
    }
    updateDisplayRound() {
      const e = this;
      console.log("驕ｸ謚樔ｸｭ縺ｮ繝ｩ繧ｦ繝ｳ繝会ｼ�" + e.selectRoundId), $(".roundContainer").each((function (t, a) {
        console.log(" - 繧､繝ｳ繝�ャ繧ｯ繧ｹ逡ｪ蜿ｷ:" + t + "縲（d:" + $(a).attr("id")), 1 == e.isEntire || e.selectRoundId == $(a).attr("id") ? $(a).removeClass("disableDisplay") : $(a).addClass("disableDisplay")
      })), 1 == e.isEntire && e.info.limit > 8 ? ($(".bracketList").css("transform", "scale(0.75) translate(-" + e.bracketListWidth / 5 + "px,-" + e.bracketListHeight / 4.5 + "px)"), $(".bracketList").css("width", "128%"), $(".bracketList").css("height", 4 * e.bracketListHeight / 3 + "px")) : ($(".bracketList").css("transform", "scale(1.0) translate(0, 0)"), $(".bracketList").css("width", e.bracketListWidth + "px"), $(".bracketList").css("height", e.bracketListHeight + "px")), $(".buf").each((function (t, a) {
        1 == e.isEntire ? $(a).removeClass("disableDisplay") : $(a).addClass("disableDisplay")
      })), $(".line").each((function (t, a) {
        1 == e.isEntire ? $(a).removeClass("disableDisplay") : $(a).addClass("disableDisplay")
      })), $(".roundTitle").each((function (t, a) {
        1 == e.isEntire ? $(a).removeClass("disableDisplay") : $(a).addClass("disableDisplay")
      })), $(".bracketList").scrollTop(0), $(".bracketList").scrollLeft(0)
    }
  }
  class B {
    constructor() {
      this.uiInitialize()
    }
    uiInitialize() {
      window.screen.width, $(window).width(), $(window).innerWidth(), udCtrl.playRomCount() > 0 && $("#top-mypage-button").removeClass("disableDisplay"), $("#top-mypage-button").click((function (e) {
        if (e.preventDefault(), udCtrl.playRomCount() > 0) {
          let e = Object.keys(udCtrl.ud.myInfo.playInfo);
          e.length > 1 ? util.locationMove("./myresult_romselect.html") : (udCtrl.ud.share.selectRom = e[0], udCtrl.save(), util.locationMove("./myresult_top.html")), $("#top-mypage-button").removeClass("disableDisplay")
        }
      })), $("#top-rankmatch-button").click((function (e) {
        e.preventDefault(), util.locationMove("./rankmatch_detail.html")
      })), $("#top-internetcompe-button").click((function (e) {
        e.preventDefault(), util.locationMove("./internetcompetition_list.html")
      })), $("#top-regulation-button").click((function (e) {
        e.preventDefault(), util.locationMoveRegulationList(util.langCode())
      })), history.pushState(null, null, null), window.addEventListener("popstate", (function () {
        history.pushState(null, null, null)
      }))
    }
  }
  class z {
    constructor() {
      const e = this;
      udCtrl.login((function () {
        e.selectRom = udCtrl.ud.share.selectRom, 0 === udCtrl.playRomCount() && util.locationMove("./top.html"), e.uiInitialize()
      }))
    }
    uiInitialize() {
      $("#myicon").addClass("icon-" + udCtrl.ud.myInfo.playInfo[this.selectRom].icon), $("#romIcon > .romIconSize").addClass(mdCtrl.md.rom[this.selectRom].icon), $("#romIcon > .romIconSize > .romIconKind").addClass(mdCtrl.md.langStr[udCtrl.ud.myInfo.playInfo[this.selectRom].lang]), $("#userName").html(udCtrl.ud.myInfo.playInfo[this.selectRom].name), $("#userPlace").html(mdCtrl.md.langStrL[util.langCode()][udCtrl.ud.myInfo.playInfo[this.selectRom].lang]), udCtrl.playRomCount() >= 2 && $("#topButton").click((function (e) {
        e.preventDefault(), util.locationMove("./myresult_romselect.html")
      })), $("#rankmatch").click((function (e) {
        e.preventDefault(), util.locationMove("./myresult_rankmatch.html")
      })), $("#internetcompe").click((function (e) {
        e.preventDefault(), util.locationMove("./my_internetcompetition_list.html")
      })), $("#friendcompe").click((function (e) {
        e.preventDefault(), util.locationMove("./friendcompetition_list.html")
      }))
    }
  }
  class F {
    constructor() {
      const e = this;
      udCtrl.login((function () {
        0 === udCtrl.playRomCount() ? util.locationMove("./top.html") : 1 === udCtrl.ud.share.romCnt ? util.locationMove("./myresult_top.html") : e.uiInitialize()
      }))
    }
    uiInitialize() {
      $(".pageBase").removeClass("disableDisplay");
      const e = Object.keys(udCtrl.ud.myInfo.playInfo);
      let t = "";
      for (let a = 0; a < e.length; a++) t += '<div id="' + e[a] + '" class="romButtonContainer">', t += '<div class="romIconContainer">', t += '<div class="romIcon"><div class="' + mdCtrl.md.rom[e[a]].icon + ' size"><div class="' + mdCtrl.md.langStr[udCtrl.ud.myInfo.playInfo[e[a]].lang] + '"></div></div></div>', t += "</div>", t += '<div class="romButtonDivider"></div>', t += '<div class="userNameContainer">', t += '<div class="userNameContainer2">', t += '<div class="userName2">' + udCtrl.ud.myInfo.playInfo[e[a]].name + "</div>", t += "</div>", t += "</div>", t += '<div class="placeContainer">', t += '<div class="placeIcon">', t += "</div>", t += '<div class="placeCode">', t += '<div class="placeCodeText">' + mdCtrl.md.langStrL[util.langCode()][udCtrl.ud.myInfo.playInfo[e[a]].lang] + "</div>", t += "</div>", t += "</div>", t += "</div>";
      $("#body1").html(t);
      for (let t = 0; t < e.length; t++) $("#" + e[t]).click((function (e) {
        e.preventDefault(), udCtrl.ud.share.selectRom = $(this).attr("id"), udCtrl.save(), util.locationMove("./myresult_top.html")
      }))
    }
  }
  class L {
    constructor() {
      const e = this;
      udCtrl.login((function () {
        0 === udCtrl.playRomCount() && util.locationMove("./top.html"), e.selectRom = udCtrl.ud.share.selectRom, e.clickflg = !1, $("#romIcon > .romIconSize").addClass(mdCtrl.md.rom[e.selectRom].icon), $("#romIcon > .romIconSize > .romIconKind").addClass(mdCtrl.md.langStr[udCtrl.ud.myInfo.playInfo[e.selectRom].lang]), $("#userName").html(udCtrl.ud.myInfo.playInfo[e.selectRom].name), $("#myicon").addClass("icon-" + udCtrl.ud.myInfo.playInfo[e.selectRom].icon), $("#userPlace").html(mdCtrl.md.langStrL[util.langCode()][udCtrl.ud.myInfo.playInfo[e.selectRom].lang]), e.isEndHistory = {}, udCtrl.load_rankmatch_list(e.selectRom, (function () {
          e.seasonList = Object.keys(udCtrl.ud.rankmatchInfo), e.seasonList.sort((e, t) => parseInt(e, 10) < parseInt(t, 10) ? 1 : -1), e.historyStart = 0, e.uiInitialize()
        }))
      }))
    }
    uiInitialize() {
      const e = this;
      $("#topButton").on("click touchstart", (function (e) {
        e.preventDefault(), util.locationMove("./myresult_romselect.html")
      }));
      const t = this.seasonList[0];
      udCtrl.ud.share.selectedDetailSeason = t, udCtrl.save();
      let a = "";
      for (let e = 0; e < this.seasonList.length; e++) {
        let t = this.seasonList[e];
        a += '<option value="' + t + '">' + udCtrl.ud.rankmatchInfo[t].single.name + " " + util.joinDate(udCtrl.ud.rankmatchInfo[t].single.start, udCtrl.ud.rankmatchInfo[t].single.end) + "</option>"
      }
      $("#seasonSelector").html(a), $("#seasonSelector").val(t), udCtrl.load_myresult_rankmatch(e.selectRom, t, (function () {
        e.seasonSelection(t)
      })), $("#seasonSelector").change((function () {
        const t = $(this).val();
        udCtrl.ud.share.selectedDetailSeason = t, udCtrl.load_myresult_rankmatch(e.selectRom, t, (function () {
          e.seasonSelection(t)
        })), udCtrl.save()
      })), $("#backMyResult > .footerText >.label").html(langCtrl.common.footerBackLinkLabel.backMyResult), $("#backMyResult").click((function (e) {
        util.locationMove("./myresult_top.html")
      })), this.refreshClassList = {}
    }
    seasonSelection(e) {
      const t = this;
      for (let e in this.refreshClassList) $(e).removeClass(this.refreshClassList[e]);
      $("#singleRank").hide(), $("#doubleRank").hide();
      var a = !1;
      this.refreshClassList = {};
      const n = udCtrl.ud.myInfo.playInfo[this.selectRom].rankmatch[e],
        i = udCtrl.ud.rankmatchInfo[e];
      if (t.selectSeason = e, $("#season_label1.titleText").text(udCtrl.ud.rankmatchInfo[this.selectSeason].single.name), $("#seasonPeriod").html(util.joinDate(i.single.start, i.single.end)), void 0 === n.single) $("#singleTotal>.body").removeClass("body-" + util.langCodeStr()), $("#singleTotal>.body>.rank-result").html(langCtrl.common.nojoin), $("#singleTotal>.body>.rankLabel").hide();
      else {
        a = !0;
        const e = util.getRankClass(n.single.rankmatch.layer);
        if ($("#singleTotal>.header>.rankContainer").addClass(e + "Color"), this.refreshClassList["#singleTotal>.header>.rankContainer"] = e + "Color", $("#singleTotal>.header>.rankContainer>.rankText").addClass("rank-" + e + "-text"), this.refreshClassList["#singleTotal>.header>.rankContainer>.rankText"] = "rank-" + e + "-text", 0 === n.single.total_win && 0 === n.single.total_loss && 0 === n.single.total_draw) $("#singleTotal>.body").removeClass("body-" + util.langCodeStr()), $("#singleTotal>.body>.rank-result").html(langCtrl.common.nojoin);
        else {
          if ($("#singleTotal>.body").addClass("body-" + util.langCodeStr()), n.single.rankmatch.layer <= 3 || 0 === n.single.ranking.rank) {
            var o = [n.single.total_win, n.single.total_loss, n.single.total_draw];
            $("#singleTotal>.body>.rank-result").html(util.replaced(langCtrl.common.unit["season-result2"], o))
          } else {
            o = [util.numberFormat(n.single.ranking.rank), n.single.total_win, n.single.total_loss, n.single.total_draw];
            $("#singleTotal>.body>.rank-result").html(util.replaced(langCtrl.common.unit["season-result"], o))
          }
          $("#singleRank").show()
        }
        $("#doubleTotal>.body>.rank").html(n.double.rankmatch.rank), $("#doubleTotal>.body>.win").html(n.double.total_win), $("#doubleTotal>.body>.lose").html(n.double.total_loss), $("#doubleTotal>.body>.draw").html(n.double.total_draw), $("#doubleTotal>.body>.rankLabel").show()
      }
      if (void 0 === n.double) $("#doubleTotal>.body").removeClass("body-" + util.langCodeStr()), $("#doubleTotal>.body>.rank-result").html(langCtrl.common.nojoin), $("#doubleTotal>.body>.rankLabel").hide();
      else {
        a = !0;
        const e = util.getRankClass(n.double.rankmatch.layer);
        if ($("#doubleTotal>.header>.rankContainer").addClass(e + "Color"), this.refreshClassList["#doubleTotal>.header>.rankContainer"] = e + "Color", $("#doubleTotal>.header>.rankContainer>.rankText").addClass("rank-" + e + "-text"), this.refreshClassList["#doubleTotal>.header>.rankContainer>.rankText"] = "rank-" + e + "-text", 0 === n.double.total_win && 0 === n.double.total_loss && 0 === n.double.total_draw) $("#doubleTotal>.body").removeClass("body-" + util.langCodeStr()), $("#doubleTotal>.body>.rank-result").html(langCtrl.common.nojoin);
        else {
          if ($("#doubleTotal>.body").addClass("body-" + util.langCodeStr()), n.double.rankmatch.layer <= 3 || 0 === n.double.ranking.rank) {
            var l = [n.double.total_win, n.double.total_loss, n.double.total_draw];
            $("#doubleTotal>.body>.rank-result").html(util.replaced(langCtrl.common.unit["season-result2"], l))
          } else {
            l = [util.numberFormat(n.double.ranking.rank), n.double.total_win, n.double.total_loss, n.double.total_draw];
            $("#doubleTotal>.body>.rank-result").html(util.replaced(langCtrl.common.unit["season-result"], l))
          }
          $("#doubleRank").show()
        }
      }
      a && $("#battle-history").show(), $("#singleHistoryButton").off("click"), $("#singleHistoryButton").click((function (e) {
        e.preventDefault(), t.clickflg || (t.clickflg = !0, $("#singleHistoryButton").removeClass("tabDisable"), $("#singleHistoryButton>.iconContainer>.icon").removeClass(mdCtrl.md.numClass.single.icon_w), $("#singleHistoryButton>.iconContainer>.icon").addClass(mdCtrl.md.numClass.single.icon), $("#doubleHistoryButton").addClass("tabDisable"), $("#doubleHistoryButton>.iconContainer>.icon").removeClass(mdCtrl.md.numClass.double.icon), $("#doubleHistoryButton>.iconContainer>.icon").addClass(mdCtrl.md.numClass.double.icon_w), t.selectRule = "single", !1 !== n.hasOwnProperty("single") ? udCtrl.load_history(n.single, t.selectRom, n.single.cId, !1, (function () {
          0 === n.single.history.length || (n.single.history.length < 100 ? t.isEndHistory[n.single.cId] = !0 : t.isEndHistory[n.single.cId] = !1), t.historyView(n.single.history), t.clickflg = !1
        })) : t.clickflg = !1)
      })), $("#doubleHistoryButton").off("click"), $("#doubleHistoryButton").click((function (e) {
        e.preventDefault(), t.clickflg || (t.clickflg = !0, $("#singleHistoryButton").addClass("tabDisable"), $("#singleHistoryButton>.iconContainer>.icon").removeClass(mdCtrl.md.numClass.single.icon), $("#singleHistoryButton>.iconContainer>.icon").addClass(mdCtrl.md.numClass.single.icon_w), $("#doubleHistoryButton").removeClass("tabDisable"), $("#doubleHistoryButton>.iconContainer>.icon").removeClass(mdCtrl.md.numClass.double.icon_w), $("#doubleHistoryButton>.iconContainer>.icon").addClass(mdCtrl.md.numClass.double.icon), t.selectRule = "double", !1 !== n.hasOwnProperty("double") ? udCtrl.load_history(n.double, t.selectRom, n.double.cId, !1, (function () {
          0 === n.double.history.length || (n.double.history.length < 100 ? t.isEndHistory[n.double.cId] = !0 : t.isEndHistory[n.double.cId] = !1), t.historyView(n.double.history), t.clickflg = !1
        })) : t.clickflg = !1)
      })), $("#prevButton").off("click"), $("#prevButton").click((function (e) {
        e.preventDefault(), t.clickflg || (t.clickflg = !0, t.historyView(n[t.selectRule].history, t.historyStart - 10), t.clickflg = !1)
      })), $("#nextButton").off("click"), $("#nextButton").click((function (e) {
        e.preventDefault(), t.clickflg || (t.clickflg = !0, t.historyStart + 10 > n[t.selectRule].history.length && !t.isEndHistory[n[t.selectRule].cId] ? udCtrl.load_history(n[t.selectRule], t.selectRom, n[t.selectRule].cId, !0, (function () {
          n[t.selectRule].history.length < 100 ? t.isEndHistory[n[t.selectRule].cId] = !0 : t.isEndHistory[n[t.selectRule].cId] = !1, t.historyView(n[t.selectRule].history, t.historyStart + 10), t.clickflg = !1
        })) : (t.historyView(n[t.selectRule].history, t.historyStart + 10), t.clickflg = !1))
      })), $("#rankmatchdetail").off("click"), $("#rankmatchdetail").click((function (e) {
        e.preventDefault(), util.locationMove("./rankmatch_detail.html")
      })), $("#singleHistoryButton").click()
    }
    historyView(e, t) {
      t = (t = void 0 === t ? 0 : t) < 0 ? 0 : t, this.historyStart = t, $("#prevButton").removeClass("disableDisplay"), $("#nextButton").removeClass("disableDisplay"), 0 == t && $("#prevButton").addClass("disableDisplay"), e.length - t <= 10 && $("#nextButton").addClass("disableDisplay"), e.length > 0 && $("#latestDate").html(e[t].date);
      let a = 0,
        n = "";
      for (let i = t; i < e.length && (n += '<div class="historyRow">', n += '<div class="historyRowMargin">', n += '<div class="header">', n += '<div class="iconContainer">', n += '<div class="' + mdCtrl.md.resultCase[e[i].result] + 'Icon"><span class="' + mdCtrl.md.resultCase[e[i].result] + 'IconText"></span></div>', n += "</div>", n += '<div class="dateText">' + util.joinDateTz(e[i].date) + "</div>", n += "</div>", n += '<div class="lineDividor"></div>', n += '<div class="body">', n += '<div class="userIconContainer">', n += '<div class="icon"><img src="./img/icons/trainer/' + e[i].icon + '" onError="this.onerror=null;this.src=\'./img/icons/icon_prof_icon02.png\';"></div>', n += "</div>", n += '<div class="userNameContainer">', n += '<div class="userName">' + e[i].name + "</div>", n += "</div>", n += '<div class="placeContainer">', n += '<div class="code">', n += '<div class="codeText">' + e[i].locale + "</div>", n += "</div>", n += "</div>", n += "</div>", 0 != e[i].rentalTeamId && (n += '<div class="lineDividor"></div>', n += '<div class="footer">', n += '<div class="rental-label-text label"></div>', n += '<div class="teamIdContainer">', n += '<div class="teamId">' + e[i].rentalTeamId + "</div>", n += "</div>", n += "</div>"), n += "</div>", n += "</div>", !(a >= 9)); i++) a++;
      $("#historyList").html(n), langCtrl.commonInit()
    }
  }
  class A {
    constructor() {
      const e = this;
      udCtrl.login((function () {
        0 === udCtrl.playRomCount() && util.locationMove("./top.html"), e.selectRom = udCtrl.ud.share.selectRom, $("#romIcon > .romIconSize").addClass(mdCtrl.md.rom[e.selectRom].icon), $("#romIcon > .romIconSize > .romIconKind").addClass(mdCtrl.md.langStr[udCtrl.ud.myInfo.playInfo[e.selectRom].lang]), $("#userName").html(udCtrl.ud.myInfo.playInfo[e.selectRom].name), $("#myicon").addClass("icon-" + udCtrl.ud.myInfo.playInfo[e.selectRom].icon), $("#userPlace").html(mdCtrl.md.langStrL[util.langCode()][udCtrl.ud.myInfo.playInfo[e.selectRom].lang]), e.isScroll = !1, udCtrl.load_my_internetcompe_list(e.selectRom, !1, (function () {
          e.uiInitialize()
        }))
      }))
    }
    uiInitialize() {
      const e = this;
      $("#topButton").on("click touchstart", (function (e) {
        e.preventDefault(), util.locationMove("./myresult_romselect.html")
      })), $(".backMyResult").html(langCtrl.common.footerBackLinkLabel.backMyResult), $(".backMyResult").click((function (e) {
        util.locationMove("./myresult_top.html")
      }));
      const t = Object.keys(udCtrl.ud.myInfo.playInfo[this.selectRom].internetCompe);
      t.sort((e, t) => parseInt(e, 10) < parseInt(t, 10) ? 1 : -1), document.getElementById("competitionList").addEventListener("touchmove", (function () {
        e.isScroll = !0
      }), {
        passive: !0
      }), document.getElementById("competitionList").addEventListener("touchend", (function () {
        e.isScroll = !1
      }), {
        passive: !0
      });
      let a = "";
      for (let e = 0; e < t.length; e++) !1 !== udCtrl.ud.internetCompeInfo.hasOwnProperty(t[e]) && (a += '<div id="compe' + t[e] + '" class="competitionRow" data-id="' + t[e] + '">', a += '<div class="competitionRowMargin">', "banner_01.jpg" !== udCtrl.ud.internetCompeInfo[t[e]].banner && void 0 !== udCtrl.ud.internetCompeInfo[t[e]].banner ? (a += '<div class="header">', a += '<div class="title">' + udCtrl.ud.internetCompeInfo[t[e]].name + "</div>", a += '<div class="title2">' + udCtrl.ud.internetCompeInfo[t[e]].subname + "</div>", a += '<div class="bannerContainer"><img class="banner" src="./img/banner/' + udCtrl.ud.internetCompeInfo[t[e]].banner + '"></div>') : (a += '<div class="header noBannerHeader">', a += '<div class="title">' + udCtrl.ud.internetCompeInfo[t[e]].name + "</div>", a += '<div class="title2">' + udCtrl.ud.internetCompeInfo[t[e]].subname + "</div>"), a += "</div>", a += '<div class="dotDividor"></div>', a += '<div class="periodContainer">', a += '<div class="label"></div>', a += '<div class="periodTextContainer">', a += '<div class="timezoneContainer">', a += "</div>", a += '<div class="periodText">' + util.joinDate(udCtrl.ud.internetCompeInfo[t[e]].start, udCtrl.ud.internetCompeInfo[t[e]].end) + "</div>", a += "</div>", a += "</div>", a += '<div class="dotDividor"></div>', a += '<div id="team' + t[e] + '" class="centerButtonContainer" data-id="' + t[e] + '">', a += '<div class="lightButton">', a += '<div class="buttle-team-button-text text"></div>', a += "</div>", a += "</div>", a += "</div>", a += "</div>");
      $("#competitionList").html(a);
      for (let a = 0; a < t.length; a++) $("#team" + t[a]).click((function (t) {
        t.preventDefault(), e.isScroll || (t.stopImmediatePropagation(), udCtrl.ud.share.selectInternetCompe = $(this).data("id"), udCtrl.ud.share.selectCompeType = "internet", udCtrl.save(), util.locationMove("./battle_team.html"))
      })), $("#compe" + t[a]).click((function (t) {
        t.preventDefault(), e.isScroll || (t.stopImmediatePropagation(), udCtrl.ud.share.selectInternetCompe = $(this).data("id"), udCtrl.save(), util.locationMove("./my_internetcompetition_detail.html"))
      }));
      langCtrl.init()
    }
  }
  class G {
    constructor() {
      const e = this;
      udCtrl.login((function () {
        0 === udCtrl.playRomCount() && util.locationMove("./top.html"), e.selectRom = udCtrl.ud.share.selectRom, e.selectInternetCompe = udCtrl.ud.share.selectInternetCompe, e.clickflg = !1, e.isEndHistory = {}, udCtrl.load_my_internetcompe_list(e.selectRom, !1, (function () {
          udCtrl.load_my_internetcompe_detail(e.selectRom, e.selectInternetCompe, (function () {
            e.uiInitialize()
          }))
        }))
      }))
    }
    uiInitialize() {
      const e = this;
      $("#romIcon > .romIconSize").addClass(mdCtrl.md.rom[this.selectRom].icon), $("#romIcon > .romIconSize > .romIconKind").addClass(mdCtrl.md.langStr[udCtrl.ud.myInfo.playInfo[this.selectRom].lang]), $("#userName").html(udCtrl.ud.myInfo.playInfo[this.selectRom].name), $("#myicon").addClass("icon-" + udCtrl.ud.myInfo.playInfo[e.selectRom].icon), $("#userPlace").html(mdCtrl.md.langStrL[util.langCode()][udCtrl.ud.myInfo.playInfo[this.selectRom].lang]), $("#topButton").on("click touchstart", (function (e) {
        e.preventDefault(), util.locationMove("./myresult_romselect.html")
      })), $("#moveInternetCompe").on("click touchstart", (function (e) {
        e.preventDefault(), util.locationMove("./internetcompetition_detail.html")
      }));
      const t = udCtrl.ud.myInfo.playInfo[this.selectRom].internetCompe[this.selectInternetCompe],
        a = udCtrl.ud.internetCompeInfo[this.selectInternetCompe];
      if ($("#title").html(a.name), $("#subtitle").html(a.subname), $("#description").html(a.description), "banner_01.jpg" !== a.banner && void 0 !== a.banner ? $("#banner").attr("src", "./img/banner/" + a.banner) : $("#bannerContainer").hide(), $("#roms").html(a.soft.map(e => langCtrl.common.roms[e]).join("<br>")), $("#rule").html(langCtrl.common.rule[a.rule]), $("#joinedNum").html(util.numberFormat(a.cnt)), $("#period").html(util.joinDate(a.start, a.end)), t.result.hasOwnProperty("ranking") && t.result.ranking.rank > 0 && 1 === t.result.ranking.status) {
        4 == parseInt(util.langCode()) && $("#compeResult .rank").addClass("rank-it"), $("#compeResult .rank").html(util.replaced(langCtrl.common.unit.rank, [util.numberFormat(t.result.ranking.rank)]));
        let e = t.result.rating_value.toString();
        e.length > 4 && (e = e.slice(0, 4)), $("#compeResult .rate").html(e);
        let a = [t.result.total_win, t.result.total_loss, t.result.total_draw];
        $("#compeResult .online-result").html(util.replaced(langCtrl.common.unit["online-result"], a))
      } else $("#compeResult").hide();
      $("#prevButton").off("click"), $("#prevButton").click((function (a) {
        a.preventDefault(), e.clickflg || (e.clickflg = !0, e.historyView(t.history, e.historyStart - 10), e.clickflg = !1)
      })), $("#nextButton").off("click"), $("#nextButton").click((function (a) {
        a.preventDefault(), e.clickflg || (e.clickflg = !0, e.historyStart + 10 > t.history.length && !e.isEndHistory[t.cId] ? udCtrl.load_history(t, e.selectRom, t.cId, !0, (function () {
          0 === t.history.length ? $("#battle-history").hide() : ($("#battle-history").show(), t.history.length < 100 ? e.isEndHistory[t.cId] = !0 : e.isEndHistory[t.cId] = !1), e.historyView(t.history, e.historyStart + 10), e.clickflg = !1
        })) : (e.historyView(t.history, e.historyStart + 10), e.clickflg = !1))
      })), udCtrl.load_history(t, e.selectRom, a.cId, !1, (function () {
        0 === t.history.length ? $("#battle-history").hide() : ($("#battle-history").show(), t.history.length < 100 ? e.isEndHistory[t.cId] = !0 : e.isEndHistory[t.cId] = !1), e.historyView(t.history)
      })), $(".backMyInternetComp").html(langCtrl.common.footerBackLinkLabel.backMyInternetComp), $(".backMyInternetComp").click((function (e) {
        util.locationMove("./my_internetcompetition_list.html")
      })), udCtrl.ud.share.fromMyInternetComp = e.selectInternetCompe, udCtrl.save()
    }
    historyView(e, t) {
      t = (t = void 0 === t ? 0 : t) < 0 ? 0 : t, this.historyStart = t, $("#prevButton").removeClass("disableDisplay"), $("#nextButton").removeClass("disableDisplay"), 0 == t && $("#prevButton").addClass("disableDisplay"), e.length - t <= 10 && $("#nextButton").addClass("disableDisplay"), e.length > 0 && $("#latestDate").html(e[t].date);
      let a = 0,
        n = "";
      for (let i = t; i < e.length && (n += '<div class="historyRow">', n += '<div class="historyRowMargin">', n += '<div class="header">', n += '<div class="iconContainer">', n += '<div class="' + mdCtrl.md.resultCase[e[i].result] + 'Icon"><span class="' + mdCtrl.md.resultCase[e[i].result] + 'IconText"></span></div>', n += "</div>", n += '<div class="dateText">' + util.joinDateTz(e[i].date) + "</div>", n += "</div>", n += '<div class="lineDividor"></div>', n += '<div class="body">', n += '<div class="userIconContainer">', n += '<div class="icon"><img src="./img/icons/trainer/' + e[i].icon + '" onError="this.onerror=null;this.src=\'./img/icons/icon_prof_icon02.png\';"></div>', n += "</div>", n += '<div class="userNameContainer">', n += '<div class="userName">' + e[i].name + "</div>", n += "</div>", n += '<div class="placeContainer">', n += '<div class="code">', n += '<div class="codeText">' + e[i].locale + "</div>", n += "</div>", n += "</div>", n += "</div>", n += "</div>", n += "</div>", !(a >= 9)); i++) a++;
      $("#historyList").html(n), langCtrl.commonInit()
    }
  }
  class N {
    constructor() {
      const e = this;
      udCtrl.login((function () {
        0 === udCtrl.playRomCount() && util.locationMove("./top.html"), e.selectRom = udCtrl.ud.share.selectRom, e.listNum = 5, e.isScroll = !1, $("#romIcon").addClass(mdCtrl.md.rom[e.selectRom].icon), $("#userName").html(udCtrl.ud.myInfo.playInfo[e.selectRom].name), $("#myicon").addClass("icon-" + udCtrl.ud.myInfo.playInfo[e.selectRom].icon), $("#romIcon > .romIconSize").addClass(mdCtrl.md.rom[e.selectRom].icon), $("#romIcon > .romIconSize > .romIconKind").addClass(mdCtrl.md.langStr[udCtrl.ud.myInfo.playInfo[e.selectRom].lang]), $("#userName").html(udCtrl.ud.myInfo.playInfo[e.selectRom].name), $("#userPlace").html(mdCtrl.md.langStrL[util.langCode()][udCtrl.ud.myInfo.playInfo[e.selectRom].lang]), udCtrl.load_friendcompe_list(e.selectRom, !1, (function () {
          e.uiInitialize()
        }))
      }))
    }
    uiInitialize() {
      const e = this;
      $("#topButton").on("click touchstart", (function (e) {
        e.preventDefault(), util.locationMove("./myresult_romselect.html")
      })), $(".backMyResult").html(langCtrl.common.footerBackLinkLabel.backMyResult), $(".backMyResult").click((function (e) {
        util.locationMove("./myresult_top.html")
      }));
      const t = udCtrl.ud.myInfo.playInfo[this.selectRom].friendCompe;
      document.getElementById("friendList").addEventListener("touchmove", (function () {
        e.isScroll = !0
      }), {
        passive: !0
      }), document.getElementById("friendList").addEventListener("touchend", (function () {
        e.isScroll = !1
      }), {
        passive: !0
      }), this.listView(t, this.listNum), $("#moreButtonContainer>.button").click((function (a) {
        a.preventDefault(), e.listNum += 5, e.listView(t, e.listNum)
      }))
    }
    listView(e, t) {
      const a = this;
      t = void 0 === t ? 0 : t;
      const n = Object.keys(e);
      n.sort((e, t) => parseInt(e, 10) < parseInt(t, 10) ? 1 : -1), $("#moreButtonContainer").removeClass("disableDisplay"), n.length < t && ($("#moreButtonContainer").addClass("disableDisplay"), t = n.length);
      let i = "";
      for (let a = 0; a < t; a++) i += '<div id="compe' + n[a] + '" class="joinedcompetition" data-id="' + n[a] + '">', i += '<div class="header">', i += '<div class="title1">' + e[n[a]].detail.name + "</div>", i += '<div class="title2">' + e[n[a]].detail.subname + "</div>", i += "</div>", i += '<div class="body">', i += '<div class="margin">', i += '<div class="rowContainer">', i += '<div class="periodContainer">', i += '<div class="label"></div>', i += '<div class="periodTextContainer">', i += '<div class="timezoneContainer">', i += "</div>", i += '<div class="periodText">' + util.joinDate(e[n[a]].detail.start, e[n[a]].detail.end) + "</div>", i += "</div>", i += "</div>", i += "</div>", i += '<div class="dotDividor"></div>', i += '<div class="rowContainer">', i += '<div class="detail1">', i += '<div class="organizer-label-text label1"></div>', i += '<div class="userName">' + e[n[a]].detail.playerName + "</div>", i += "</div>", i += '<div class="detail2">', i += '<div class="joinednum-label-text label2"></div>', i += '<div class="joinedNum">' + e[n[a]].detail.cnt + '<span class="joinedNumLabel"></span></div>', i += "</div>", i += "</div>", i += "</div>", i += "</div>", i += '<div class="footer">', i += '<div class="rowContainer">', i += '<div id="team' + n[a] + '" class="centerButtonContainer" data-id="' + n[a] + '">', i += '<div class="lightButton">', i += '<div class="buttle-team-button-text text"></div>', i += "</div>", i += "</div>", i += "</div>", i += "</div>", i += "</div>";
      $("#friendList").html(i);
      for (let e = 0; e < n.length; e++) $("#team" + n[e]).click((function (e) {
        e.preventDefault(), e.stopImmediatePropagation(), a.isScroll || (udCtrl.ud.share.selectFriendCompe = $(this).data("id"), udCtrl.ud.share.selectCompeType = "friend", udCtrl.save(), util.locationMove("./battle_team.html"))
      })), $("#compe" + n[e]).click((function (e) {
        e.preventDefault(), a.isScroll || (e.stopImmediatePropagation(), udCtrl.ud.share.selectFriendCompe = $(this).data("id"), udCtrl.save(), util.locationMove("./my_friendcompetition_detail.html"))
      }));
      langCtrl.init()
    }
  }
  class E {
    constructor() {
      const e = this;
      udCtrl.login((function () {
        0 === udCtrl.playRomCount() && util.locationMove("./top.html"), e.selectRom = udCtrl.ud.share.selectRom, e.selectFriendCompe = udCtrl.ud.share.selectFriendCompe, e.myRankingRank = 0, e.rankingurl = "", e.rankingurl2 = "", $("#romIcon > .romIconSize").addClass(mdCtrl.md.rom[e.selectRom].icon), $("#romIcon > .romIconSize > .romIconKind").addClass(mdCtrl.md.langStr[udCtrl.ud.myInfo.playInfo[e.selectRom].lang]), $("#userName").html(udCtrl.ud.myInfo.playInfo[e.selectRom].name), $("#userPlace").html(mdCtrl.md.langStrL[util.langCode()][udCtrl.ud.myInfo.playInfo[e.selectRom].lang]), udCtrl.load_friendcompe_list(e.selectRom, !1, (function () {
          udCtrl.load_friendcompe_detail(e.selectRom, e.selectFriendCompe, (function () {
            e.uiInitialize()
          }))
        }))
      }))
    }
    uiInitialize() {
      const e = this;
      $("#romIcon").addClass(mdCtrl.md.rom[this.selectRom].icon), $("#userName").html(udCtrl.ud.myInfo.playInfo[this.selectRom].name), $("#myicon").addClass("icon-" + udCtrl.ud.myInfo.playInfo[e.selectRom].icon), $("#topButton").click((function (e) {
        e.preventDefault(), util.locationMove("./myresult_romselect.html")
      }));
      const t = udCtrl.ud.myInfo.playInfo[this.selectRom].friendCompe[this.selectFriendCompe];
      e.compeInfo = t.detail, console.log(e.compeInfo), e.rankingurl = "/" + e.selectFriendCompe + "/" + e.compeInfo.rst + "/" + e.compeInfo.ts1 + "/traner-1", e.rankingurl2 = "/" + e.selectFriendCompe + "/" + e.compeInfo.rst + "/" + e.compeInfo.ts2 + "/pokemon", $("#title").html(e.compeInfo.name), $("#subtitle").html(e.compeInfo.subname), $("#trainerName").html(e.compeInfo.playerName), $("#roms").html(e.compeInfo.soft.map(e => langCtrl.common.roms[e]).join("<br>")), $("#rule").html(langCtrl.common.rule[e.compeInfo.rule]), $("#joinedNum").html(util.numberFormat(e.compeInfo.cnt)), $("#period").html(util.joinDate(e.compeInfo.start, e.compeInfo.end)), e.rankingContainerView(), $("#backLinkFriendCompList .footerText .label").html(langCtrl.common.footerBackLinkLabel.backLinkFriendCompList), $("#fCompetionRegulationPage").click((function (t) {
        util.locationMoveRegulation(e.compeInfo.reg, util.langCode())
      })), $("#fCompetionRegulationPokemonPage").click((function (t) {
        util.locationMoveUsePokemonList(e.compeInfo.reg, util.langCode())
      })), $("#backLinkFriendCompList").click((function (e) {
        util.locationMove("./friendcompetition_list.html")
      })), $("#backLinkMyFriendCompDetail .footerText .label").html(langCtrl.common.footerBackLinkLabel.backLinkMyFriendCompDetail), $("#backLinkMyFriendCompDetail").click((function (e) {
        util.locationMove("./my_friendcompetition_detail.html")
      })), e.myrankbutton(), $("#myranking").click((function (t) {
        if (0 == e.myRankingRank) return;
        let a = e.myRankingRank;
        e.rankingStart = 10 * parseInt(a / 10, 10), util.rankingRequest(e.rankingurl, (function (t) {
          e.trainerRankingView(t, e.rankingStart)
        }))
      }))
    }
    rankingContainerView() {
      const e = this;
      $("#trainerTab").on("click touchstart", (function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), $("#myranking").removeClass("disableDisplay"), $("#trainerTab").removeClass("disable"), $("#pokemonTab").addClass("disable"), $(".trainerRankingHeader").removeClass("disableDisplay"), $("#trainerRankingBody").removeClass("disableDisplay"), $("#pokemonRankingBody").addClass("disableDisplay"), e.selectRanking = "trainer", 0 == e.compeInfo.ts1 || 9999999999 == e.compeInfo.ts1 ? $("#rankingContainerFooter").hide() : util.rankingRequest(e.rankingurl, (function (t) {
          e.trainerRankingView(t)
        }))
      })), $("#pokemonTab").on("click touchstart", (function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), $("#myranking").addClass("disableDisplay"), $("#pokemonTab").removeClass("disable"), $("#trainerTab").addClass("disable"), $("#pokemonRankingBody").removeClass("disableDisplay"), $(".trainerRankingHeader").addClass("disableDisplay"), $("#trainerRankingBody").addClass("disableDisplay"), e.selectRanking = "pokemon", 0 == e.compeInfo.ts2 || 9999999999 == e.compeInfo.ts2 ? $("#rankingContainerFooter").hide() : util.rankingRequest(e.rankingurl2, (function (t) {
          e.pokemonRankingView(t)
        }))
      })), $("#trainerTab").click(), $("#nextButton").click((function (t) {
        return t.preventDefault(), t.stopImmediatePropagation(), "trainer" == e.selectRanking ? 0 == e.compeInfo.ts1 || 9999999999 == e.compeInfo.ts1 ? (e.pokemonRankingView([]), e.trainerRankingView([])) : util.rankingRequest(e.rankingurl, (function (t) {
          e.trainerRankingView(t, e.rankingStart + 10)
        })) : 0 == e.compeInfo.ts2 || 9999999999 == e.compeInfo.ts2 ? (e.pokemonRankingView([]), e.trainerRankingView([])) : util.rankingRequest(e.rankingurl2, (function (t) {
          e.pokemonRankingView(t, e.rankingStart + 10)
        })), !1
      })), $("#prevButton").click((function (t) {
        return t.preventDefault(), t.stopImmediatePropagation(), "trainer" == e.selectRanking ? 0 == e.compeInfo.ts1 || 9999999999 == e.compeInfo.ts1 ? (e.pokemonRankingView([]), e.trainerRankingView([])) : util.rankingRequest(e.rankingurl, (function (t) {
          e.trainerRankingView(t, e.rankingStart - 10)
        })) : 0 == e.compeInfo.ts2 || 9999999999 == e.compeInfo.ts2 ? (e.pokemonRankingView([]), e.trainerRankingView([])) : util.rankingRequest(e.rankingurl2, (function (t) {
          e.pokemonRankingView(t, e.rankingStart - 10)
        })), !1
      }))
    }
    trainerRankingView(e, t) {
      0 === e.length ? $("#rankingContainerFooter").hide() : $("#rankingContainerFooter").show(), t = (t = void 0 === t ? 0 : t) < 0 ? 0 : t, this.rankingStart = t;
      let a = util.rankingFileIdx(this.rankingStart);
      $("#prevButton").removeClass("disableDisplay"), $("#nextButton").removeClass("disableDisplay"), 0 == t && $("#prevButton").addClass("disableDisplay"), e.length * a - t < 10 && $("#nextButton").addClass("disableDisplay");
      let n = 0,
        i = "";
      for (let a = parseInt(t % 1e3); a < e.length; a++) {
        switch (i += '<div class="rankingRow1">', i += '<div class="leftContainer">', e[a].rank) {
        case 1:
          i += '<div class="icon icon-oukan1"></div>';
          break;
        case 2:
          i += '<div class="icon icon-oukan2"></div>';
          break;
        case 3:
          i += '<div class="icon icon-oukan3"></div>';
          break;
        default:
          i += '<div class="icon"></div>'
        }
        i += '<div class="rank">', i += '<div class="rankText">' + e[a].rank + "</div>", i += "</div>";
        let t = e[a].rating_value.toString();
        t.length > 4 && (t = t.slice(0, 4)), i += '<div class="point">' + t + '<span class="pointLabel"></span></div>', i += "", i += "</div>", i += '<div class="rightContainer">', i += '<div class="userContainer">', i += '<div class="userIconContainer">', i += '<div class="icon"><img src="./img/icons/trainer/' + e[a].icon + '" onError="this.onerror=null;this.src=\'./img/icons/icon_prof_icon02.png\';"></div>', i += "</div>", i += '<div class="userNameContainer2">', i += '<div class="userName">' + ("" == e[a].name ? langCtrl.common.noname : e[a].name) + "</div>", i += "</div>";
        let o = e[a].lng,
          l = "";
        if (void 0 !== o && 0 !== parseInt(o) && (l = mdCtrl.md.langStrL[util.langCode()][o]), i += '<div class="ranking-user-lang">' + l + "</div>", i += "</div>", i += "</div>", i += "</div>", n >= 9) break;
        n++
      }
      $("#trainerRankingBody").html(i), langCtrl.commonInit()
    }
    pokemonRankingView(e, t) {
      const a = this;
      0 === e.length ? $("#rankingContainerFooter").hide() : $("#rankingContainerFooter").show(), t = (t = void 0 === t ? 0 : t) < 0 ? 0 : t, this.rankingStart = t, $("#prevButton").removeClass("disableDisplay"), $("#nextButton").removeClass("disableDisplay"), 0 == t && $("#prevButton").addClass("disableDisplay"), e.length - t <= 10 && $("#nextButton").addClass("disableDisplay");
      let n = 0,
        i = "";
      for (let a = t; a < e.length; a++) {
        switch (i += '<div id="prank-' + a + '" class="rankingRow2">', i += '<div class="leftContainer">', a + 1) {
        case 1:
          i += '<div class="icon icon-oukan1"></div>';
          break;
        case 2:
          i += '<div class="icon icon-oukan2"></div>';
          break;
        case 3:
          i += '<div class="icon icon-oukan3"></div>';
          break;
        default:
          i += '<div class="icon"></div>'
        }
        let t = e[a].id,
          o = e[a].form;
        if (i += '<div class="rank">', i += '<div class="rankText">' + (a + 1) + "</div>", i += "</div>", i += "</div>", i += '<div class="rightContainer">', i += '<div class="pokemonContainer">', i += '<div class="infoContainer">', i += '<div class="pokemonName">' + langCtrl.dex.poke[e[a].id - 1] + "</div>", i += '<div class="blineDividor"></div>', i += '<div class="type1Continer typeColor' + mdCtrl.md.pokeType[t][o][0] + '">', i += '<div class="typeName">' + langCtrl.dex.pokeType[mdCtrl.md.pokeType[t][o][0]] + "</div>", i += "</div>", 2 == mdCtrl.md.pokeType[t][o].length && (i += '<div class="type2Continer typeColor' + mdCtrl.md.pokeType[t][o][1] + '">', i += '<div class="typeName">' + langCtrl.dex.pokeType[mdCtrl.md.pokeType[t][o][1]] + "</div>", i += "</div>"), i += "</div>", i += '<div class="pokemonIconContainer">', i += '<div class="icon"><img src="./img/poke/cap' + ("000" + e[a].id).slice(-4) + "_f" + ("0" + e[a].form).slice(-2) + '_s0.png" width="120" height="120" onError="this.onerror=null;this.src=\'./img/icons/ball_g.png\';"></div>', i += "</div>", i += "</div>", i += "</div>", i += "</div>", n >= 9) break;
        n++
      }
      $("#pokemonRankingBody").html(i);
      for (let e = t; e < t + 10; e++) $("#prank-" + e).click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), udCtrl.ud.share.pDetailPmFriendCompetition = {
          cId: a.selectFriendCompe,
          rst: a.compeInfo.rst,
          ts2: a.compeInfo.ts2,
          startTs: a.compeInfo.startTs,
          idx: e
        }, udCtrl.save(), util.locationMove("./friendcompetition_pokemonranking_detail.html")
      }));
      langCtrl.commonInit()
    }
    myrankbutton() {
      const e = this;
      util.rankingRequest(e.rankingurl, (function (t) {
        let a = udCtrl.ud.share.selectRom,
          n = udCtrl.ud.myInfo.playInfo[a].iconImg;
        for (var i in t)
          if (-1 !== t[i].icon.indexOf(n)) {
            e.myRankingRank = t[i].rank, $("#myranking").removeClass("disable-myrank-button");
            break
          }
      }))
    }
  }
  var V = n(1);
  class O {
    constructor() {
      const e = this;
      e.listNum = 5, udCtrl.load_internetcompe_list(null, !1, (function () {
        e.compeInfo = udCtrl.ud.internetCompeInfo;
        let t = [];
        for (var a in udCtrl.ud.internetCompeInfo) window.now > udCtrl.ud.internetCompeInfo[a].startTs && t.push(a);
        e.compeList = t, e.compeList.sort((e, t) => parseInt(e, 10) < parseInt(t, 10) ? 1 : -1), e.isScroll = !1, e.uiInitialize()
      }))
    }
    uiInitialize() {
      const e = this;
      $("#moreButtonContainer>.button").on("click touchstart", (function (t) {
        t.preventDefault(), e.listNum += 5, e.listView(e.listNum)
      })), e.listView(e.listNum), document.getElementById("internetCompeList").addEventListener("touchmove", (function () {
        e.isScroll = !0
      }), {
        passive: !0
      }), document.getElementById("internetCompeList").addEventListener("touchend", (function () {
        e.isScroll = !1
      }), {
        passive: !0
      }), $(".backLinkTop").html(langCtrl.common.footerBackLinkLabel.backLinkTop), $(".backLinkTop").click((function (e) {
        util.locationMove("./top.html")
      }))
    }
    listView(e) {
      const t = this;
      e = void 0 === e ? 0 : e;
      const a = this.compeList;
      $("#moreButtonContainer").removeClass("disableDisplay"), a.length <= e && ($("#moreButtonContainer").addClass("disableDisplay"), e = a.length);
      let n = "";
      for (let t = 0; t < e; t++) "banner_01.jpg" !== this.compeInfo[a[t]].banner && void 0 !== this.compeInfo[a[t]].banner ? (n += '<div id="' + a[t] + '" class="internetCompeBanner">', n += '<div class="img"><img src="./img/banner/competition/' + this.compeInfo[a[t]].banner + '"></div>') : (n += '<div id="' + a[t] + '" class="internetCompeBanner internetCompeNoBanner">', n += '<div class="header">', n += '<div class="title">' + this.compeInfo[a[t]].name + "</div>", n += '<div class="title2">' + this.compeInfo[a[t]].subname + "</div>", n += "</div>", n += '<div class="periodContainer">', n += '<div class="label"></div>', n += "</div>", n += '<div class="periodContainer">', n += '<div class="periodText">' + util.joinDate(this.compeInfo[a[t]].start, this.compeInfo[a[t]].end) + "</div>", n += "</div>", n += '<div class="dotDividor"></div>', n += '<div class="periodContainer">', n += '<div class="rule">' + langCtrl.common.ui_texts.competionRule + ' <span class="ruleText">' + langCtrl.common.rule[this.compeInfo[a[t]].rule] + "</span></div>", n += "</div>", n += "</div>"), n += "</div>";
      $("#internetCompeList").html(n);
      for (let n = 0; n < e; n++) $("#" + a[n]).click((function (e) {
        e.preventDefault(), t.isScroll || (udCtrl.ud.share.selectInternetCompe = $(this).attr("id"), udCtrl.save(), util.locationMove("./internetcompetition_detail.html"))
      }));
      langCtrl.commonInit()
    }
  }
  class K {
    constructor() {
      const e = this;
      udCtrl.load_internetcompe_list(null, !1, (function () {
        e.selectInternetCompe = udCtrl.ud.share.selectInternetCompe, e.compeInfo = udCtrl.ud.internetCompeInfo[e.selectInternetCompe], e.myRankingRank = 0, 0 === udCtrl.playRomCount() ? e.uiInitialize() : udCtrl.login((function () {
          e.uiInitialize()
        }))
      }))
    }
    uiInitialize() {
      const e = this;
      if ($("#title").html(this.compeInfo.name), $("#subtitle").html(this.compeInfo.subname), $("#description").html(this.compeInfo.text), "banner_01.jpg" !== this.compeInfo.banner && void 0 !== this.compeInfo.banner ? $("#banner").attr("src", "./img/banner/competition/" + this.compeInfo.banner) : $("#bannerContainer").hide(), $("#roms").html(this.compeInfo.soft.map(e => langCtrl.common.roms[e]).join("<br>")), $("#rule").html(langCtrl.common.rule[this.compeInfo.rule]), 2 === parseInt(this.compeInfo.rst) ? ($("#rankingContainer").show(), $(".aggregated-data").show(), $("#joinedNum").html(util.numberFormat(this.compeInfo.cnt))) : 1 === parseInt(this.compeInfo.rst) ? ($("#rankingContainer").hide(), $(".aggregated-data").show(), $("#joinedNum").html(langCtrl.common.nowAggr)) : ($("#rankingContainer").hide(), this.compeInfo.cnt > 0 && ($(".aggregated-data").show(), $("#joinedNum").html(util.numberFormat(this.compeInfo.cnt)))), $("#period").html(util.joinDate(this.compeInfo.start, this.compeInfo.end)), $("#backLinkInternetComp > .footerText > .label").html(langCtrl.common.footerBackLinkLabel.backLinkInternetComp), $("#iCompetionRegulationPage").click((function (t) {
          util.locationMoveRegulation(e.compeInfo.reg, util.langCode())
        })), $("#iCompetionRegulationPokemonPage").click((function (t) {
          util.locationMoveUsePokemonList(e.compeInfo.reg, util.langCode())
        })), $("#backLinkInternetComp").click((function (e) {
          util.locationMove("./internetcompetition_list.html")
        })), $("#myranking").addClass("disable-myrank-button"), udCtrl.playRomCount() > 0) {
        let t = udCtrl.ud.share.selectRom;
        null != t && udCtrl.load_my_internetcompe_list(t, !1, (function () {
          udCtrl.load_my_internetcompe_detail(t, e.selectInternetCompe, (function () {
            udCtrl.ud.myInfo.playInfo[t].internetCompe.hasOwnProperty(e.selectInternetCompe) && udCtrl.ud.myInfo.playInfo[t].internetCompe[e.selectInternetCompe].hasOwnProperty("result") && udCtrl.ud.myInfo.playInfo[t].internetCompe[e.selectInternetCompe].result.hasOwnProperty("ranking") && (udCtrl.ud.myInfo.playInfo[t].internetCompe[e.selectInternetCompe].result.ranking.rank > 0 && (e.myRankingRank = udCtrl.ud.myInfo.playInfo[t].internetCompe[e.selectInternetCompe].result.ranking.rank, $("#myranking").removeClass("disable-myrank-button")), $("#backLinkMyInternetCompDetail .footerPrevButton .footerText .label").html(langCtrl.common.footerBackLinkLabel.backLinkMyInternetCompDetail), $("#backLinkMyInternetCompDetail").click((function (e) {
              util.locationMove("./my_internetcompetition_detail.html")
            })), $("#backLinkMyInternetCompDetail").removeClass("disableDisplay"))
          }))
        }))
      }
      e.rankingContainerView()
    }
    rankingContainerView() {
      const e = this;
      $("#trainerTab").click((function (t) {
        if (t.preventDefault(), t.stopImmediatePropagation(), $("#myranking").removeClass("disableDisplay"), $("#trainerTab").removeClass("disable"), $("#pokemonTab").addClass("disable"), $(".trainerRankingHeader").show(), $("#trainerRankingBody").removeClass("disableDisplay"), $("#pokemonRankingBody").addClass("disableDisplay"), e.selectRanking = "trainer", 0 == e.compeInfo.ts1 || 9999999999 == e.compeInfo.ts1) $("#rankingContainerFooter").hide();
        else {
          const t = "/" + e.compeInfo.cId + "/" + e.compeInfo.rst + "/" + e.compeInfo.ts1 + "/traner-" + util.rankingFileIdx(1);
          util.rankingRequest(t, (function (t) {
            e.trainerRankingView(t)
          }))
        }
      })), $("#pokemonTab").click((function (t) {
        if (t.preventDefault(), t.stopImmediatePropagation(), $("#myranking").addClass("disableDisplay"), $("#pokemonTab").removeClass("disable"), $("#trainerTab").addClass("disable"), $("#pokemonRankingBody").removeClass("disableDisplay"), $(".trainerRankingHeader").hide(), $("#trainerRankingBody").addClass("disableDisplay"), e.selectRanking = "pokemon", 0 == e.compeInfo.ts2 || 9999999999 == e.compeInfo.ts2) $("#rankingContainerFooter").hide();
        else {
          const t = "/" + e.compeInfo.cId + "/" + e.compeInfo.rst + "/" + e.compeInfo.ts2 + "/pokemon";
          util.rankingRequest(t, (function (t) {
            e.pokemonRankingView(t)
          }))
        }
      })), $("#trainerTab").click(), $("#prevButton").click((function (t) {
        if (t.preventDefault(), t.stopImmediatePropagation(), "trainer" == e.selectRanking)
          if (0 == e.compeInfo.ts1 || 9999999999 == e.compeInfo.ts1) e.pokemonRankingView([]), e.trainerRankingView([]);
          else {
            const t = "/" + e.compeInfo.cId + "/" + e.compeInfo.rst + "/" + e.compeInfo.ts1 + "/traner-" + util.rankingFileIdx(e.rankingStart - 10 + 1);
            util.rankingRequest(t, (function (t) {
              e.trainerRankingView(t, e.rankingStart - 10)
            }))
          }
        else if (0 == e.compeInfo.ts2 || 9999999999 == e.compeInfo.ts2) e.pokemonRankingView([]), e.trainerRankingView([]);
        else {
          const t = "/" + e.compeInfo.cId + "/" + e.compeInfo.rst + "/" + e.compeInfo.ts2 + "/pokemon";
          util.rankingRequest(t, (function (t) {
            e.pokemonRankingView(t, e.rankingStart - 10)
          }))
        }
        return !1
      })), $("#nextButton").click((function (t) {
        if (t.preventDefault(), t.stopImmediatePropagation(), "trainer" == e.selectRanking)
          if (0 == e.compeInfo.ts1 || 9999999999 == e.compeInfo.ts1) e.pokemonRankingView([]), e.trainerRankingView([]);
          else {
            const t = "/" + e.compeInfo.cId + "/" + e.compeInfo.rst + "/" + e.compeInfo.ts1 + "/traner-" + util.rankingFileIdx(e.rankingStart + 10 + 1);
            util.rankingRequest(t, (function (t) {
              e.trainerRankingView(t, e.rankingStart + 10)
            }))
          }
        else if (0 == e.compeInfo.ts2 || 9999999999 == e.compeInfo.ts2) e.pokemonRankingView([]), e.trainerRankingView([]);
        else {
          const t = "/" + e.compeInfo.cId + "/" + e.compeInfo.rst + "/" + e.compeInfo.ts2 + "/pokemon";
          util.rankingRequest(t, (function (t) {
            e.pokemonRankingView(t, e.rankingStart + 10)
          }))
        }
        return !1
      })), $("#myranking").click((function (t) {
        if (t.preventDefault(), t.stopImmediatePropagation(), e.myRankingRank <= 0) return;
        let a = e.myRankingRank;
        e.rankingStart = 10 * parseInt(a / 10, 10), a <= 0 && (a = 1);
        const n = "/" + e.compeInfo.cId + "/" + e.compeInfo.rst + "/" + e.compeInfo.ts1 + "/traner-" + util.rankingFileIdx(e.rankingStart);
        util.rankingRequest(n, (function (t) {
          e.trainerRankingView(t, e.rankingStart)
        }))
      }))
    }
    trainerRankingView(e, t) {
      0 === e.length ? $("#rankingContainerFooter").hide() : $("#rankingContainerFooter").show(), t = (t = void 0 === t ? 0 : t) < 0 ? 0 : t, this.rankingStart = t;
      let a = util.rankingFileIdx(this.rankingStart);
      $("#prevButton").removeClass("disableDisplay"), $("#nextButton").removeClass("disableDisplay"), 0 == t && $("#prevButton").addClass("disableDisplay"), e.length * a - t < 10 && $("#nextButton").addClass("disableDisplay");
      let n = 0,
        i = "";
      for (let a = parseInt(t % 1e3); a < e.length; a++) {
        switch (i += '<div class="rankingRow1">', i += '<div class="leftContainer">', e[a].rank) {
        case 1:
          i += '<div class="icon icon-oukan1"></div>';
          break;
        case 2:
          i += '<div class="icon icon-oukan2"></div>';
          break;
        case 3:
          i += '<div class="icon icon-oukan3"></div>';
          break;
        default:
          i += '<div class="icon"></div>'
        }
        i += '<div class="rank">', i += '<div class="rankText">' + e[a].rank + "</div>", i += "</div>";
        let t = e[a].rating_value.toString();
        t.length > 4 && (t = t.slice(0, 4)), i += '<div class="point">' + t + "</div>", i += '<div class="pointLabel"></div>', i += "</div>", i += '<div class="rightContainer">', i += '<div class="userContainer">', i += '<div class="userIconContainer">', i += '<div class="icon"><img src="./img/icons/trainer/' + e[a].icon + '" onError="this.onerror=null;this.src=\'./img/icons/icon_prof_icon02.png\';"></div>', i += "</div>", i += '<div class="userNameContainer1">', i += '<div class="userName"></div>', i += "</div>", i += '<div class="userNameContainer2">', i += '<div class="userName">' + ("" == e[a].name ? langCtrl.common.noname : e[a].name) + "</div>", i += "</div>";
        let o = e[a].lng,
          l = "";
        if (void 0 !== o && 0 !== parseInt(o) && (l = mdCtrl.md.langStrL[util.langCode()][o]), i += '<div class="ranking-user-lang">' + l + "</div>", i += "</div>", i += "</div>", i += "</div>", n >= 9) break;
        n++
      }
      $("#trainerRankingBody").html(i), langCtrl.commonInit()
    }
    pokemonRankingView(e, t) {
      const a = this;
      0 === e.length ? $("#rankingContainerFooter").hide() : $("#rankingContainerFooter").show(), t = (t = void 0 === t ? 0 : t) < 0 ? 0 : t, this.rankingStart = t, $("#prevButton").removeClass("disableDisplay"), $("#nextButton").removeClass("disableDisplay"), 0 == t && $("#prevButton").addClass("disableDisplay"), e.length - t <= 10 && $("#nextButton").addClass("disableDisplay");
      let n = 0,
        i = "";
      for (let a = t; a < e.length; a++) {
        switch (i += '<div id="prank-' + a + '" class="rankingRow2">', i += '<div class="leftContainer">', a + 1) {
        case 1:
          i += '<div class="icon icon-oukan1"></div>';
          break;
        case 2:
          i += '<div class="icon icon-oukan2"></div>';
          break;
        case 3:
          i += '<div class="icon icon-oukan3"></div>';
          break;
        default:
          i += '<div class="icon"></div>'
        }
        let t = e[a].id,
          o = e[a].form;
        if (i += '<div class="rank">', i += '<div class="rankText">' + (a + 1) + "</div>", i += "</div>", i += "</div>", i += '<div class="rightContainer">', i += '<div class="pokemonContainer">', i += '<div class="infoContainer">', i += '<div class="pokemonName">' + langCtrl.dex.poke[t - 1] + "</div>", i += '<div class="blineDividor"></div>', i += '<div class="type1Continer typeColor' + mdCtrl.md.pokeType[t][o][0] + '">', i += '<div class="typeName">' + langCtrl.dex.pokeType[mdCtrl.md.pokeType[t][o][0]] + "</div>", i += "</div>", 2 == mdCtrl.md.pokeType[t][o].length && (i += '<div class="type2Continer typeColor' + mdCtrl.md.pokeType[t][o][1] + '">', i += '<div class="typeName">' + langCtrl.dex.pokeType[mdCtrl.md.pokeType[t][o][1]] + "</div>", i += "</div>"), i += "</div>", i += '<div class="pokemonIconContainer">', i += '<div class="icon"><img src="./img/poke/cap' + ("000" + t).slice(-4) + "_f" + ("0" + o).slice(-2) + '_s0.png" width="120" height="120" onError="this.onerror=null;this.src=\'./img/icons/ball_g.png\';"></div>', i += "</div>", i += "</div>", i += "</div>", i += "</div>", n >= 9) break;
        n++
      }
      $("#pokemonRankingBody").html(i);
      for (let e = t; e < t + 10; e++) $("#prank-" + e).click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), udCtrl.ud.share.pDetailPmInternetCompetition = {
          cId: a.compeInfo.cId,
          rst: a.compeInfo.rst,
          ts2: a.compeInfo.ts2,
          idx: e
        }, udCtrl.save(), util.locationMove("./internetcompetition_pokemonranking_detail.html")
      }));
      langCtrl.commonInit()
    }
  }
  class H {
    constructor() {
      this.uiInitialize()
    }
    uiInitialize() {
      const e = udCtrl.ud.regulationInfo,
        t = Object.keys(e);
      t.sort((e, t) => parseInt(e, 10) < parseInt(t, 10) ? 1 : -1);
      let a = "";
      for (let n = 0; n < t.length; n++) a += '<div id="' + t[n] + '" class="row">', a += '<div class="upper">', a += '<div class="date">' + e[t[n]].date.slice(0, 10) + "</div>", a += '<div class="romIconContiner">', a += '<div class="romIcon romColorUSun">', a += '<div class="text">' + mdCtrl.md.rom[e[t[n]].roms[0]].iconText + "</div>", a += "</div>", a += '<div class="romIcon romColorUMoon">', a += '<div class="text">' + mdCtrl.md.rom[e[t[n]].roms[1]].iconText + "</div>", a += "</div>", a += "</div>", a += "</div>", a += '<div class="lower">', a += '<div class="text">' + e[t[n]].title + "</div>", a += "</div>", a += "</div>";
      $("#regulationList").html(a);
      for (let e = 0; e < t.length; e++) $("#" + t[e]).on("click touchstart", (function (e) {
        e.preventDefault(), udCtrl.ud.share.selectRegulation = $(this).attr("id"), udCtrl.save()
      }))
    }
  }
  class q {
    constructor() {
      const e = this;
      this.selectRom = udCtrl.ud.share.selectRom, this.selectCompeType = udCtrl.ud.share.selectCompeType, "internet" == this.selectCompeType ? (this.selectCompe = udCtrl.ud.share.selectInternetCompe, $("#competitionTitle").html(udCtrl.ud.internetCompeInfo[this.selectCompe].name), $("#return").on("click touchstart", (function (e) {
        e.preventDefault(), e.stopImmediatePropagation(), util.locationMove("./my_internetcompetition_list.html")
      })), e.uiInitialize(udCtrl.ud.myInfo.playInfo[this.selectRom].internetCompe[this.selectCompe].pokemon)) : "friend" == this.selectCompeType && (this.selectCompe = udCtrl.ud.share.selectFriendCompe, $("#competitionTitle").html(udCtrl.ud.myInfo.playInfo[this.selectRom].friendCompe[this.selectCompe].detail.name), $("#return").on("click touchstart", (function (e) {
        e.preventDefault(), e.stopImmediatePropagation(), util.locationMove("./friendcompetition_list.html")
      })), e.uiInitialize(udCtrl.ud.myInfo.playInfo[this.selectRom].friendCompe[this.selectCompe].pokemon))
    }
    uiInitialize(e) {
      let t = "";
      for (let a = 0; a < e.length; a++) {
        let n = e[a].no,
          i = e[a].form;
        if ("0" === n) continue;
        t += '<div class="pokeContainer">', t += '<div class="header">', t += '<div class="icon icon-team_poke"></div>', t += '<div class="name">' + langCtrl.dex.poke[e[a].no - 1] + "</div>", t += "</div>", t += '<div class="sexIcon icon-poke_' + mdCtrl.md.sex[e[a].sex] + '"></div>', t += '<div class="body">', t += '<div class="pokeImage"><img src="./img/poke/cap' + ("000" + e[a].no).slice(-4) + "_f" + ("0" + e[a].form).slice(-2) + '_s0.png" onError="this.onerror=null;this.src=\'./img/icons/ball_g.png\';"></div>', t += '<div class="infoContainer">', t += '<div class="typeContainer">', t += '<div class="type1Continer typeColor' + mdCtrl.md.pokeType[n][i][0] + '">', t += '<div class="typeName">' + langCtrl.dex.pokeType[mdCtrl.md.pokeType[n][i][0]] + "</div>", t += "</div>", 2 == mdCtrl.md.pokeType[n][i].length && (t += '<div class="type2Continer typeColor' + mdCtrl.md.pokeType[n][i][1] + '">', t += '<div class="typeName">' + langCtrl.dex.pokeType[mdCtrl.md.pokeType[n][i][1]] + "</div>", t += "</div>"), t += "</div>", t += '<div class="lineDividor"></div>', t += '<div class="wazaContainer">';
        let o = "",
          l = "",
          r = "";
        void 0 !== langCtrl.dex.waza[e[a].waza[0]] && (o = langCtrl.dex.waza[e[a].waza[0]], l = langCtrl.dex.pokeType[mdCtrl.md.wazaType[e[a].waza[0]][0]], r = mdCtrl.md.wazaType[e[a].waza[0]][0]), t += '<div class="waza">' + o + "</div>", t += '<div class="wazaColor typeColor' + r + '">' + l + "</div>", t += "</div>", t += '<div class="lineDividor"></div>', t += '<div class="wazaContainer">';
        let s = "",
          c = "",
          d = "";
        void 0 !== langCtrl.dex.waza[e[a].waza[1]] && (s = langCtrl.dex.waza[e[a].waza[1]], c = langCtrl.dex.pokeType[mdCtrl.md.wazaType[e[a].waza[1]][0]], d = mdCtrl.md.wazaType[e[a].waza[1]][0]), t += '<div class="waza">' + s + "</div>", t += '<div class="wazaColor typeColor' + d + '">' + c + "</div>", t += "</div>", t += '<div class="lineDividor"></div>', t += '<div class="wazaContainer">';
        let u = "",
          m = "",
          g = "";
        void 0 !== langCtrl.dex.waza[e[a].waza[2]] && (u = langCtrl.dex.waza[e[a].waza[2]], m = langCtrl.dex.pokeType[mdCtrl.md.wazaType[e[a].waza[2]][0]], g = mdCtrl.md.wazaType[e[a].waza[2]][0]), t += '<div class="waza">' + u + "</div>", t += '<div class="wazaColor typeColor' + g + '">' + m + "</div>", t += "</div>", t += '<div class="lineDividor"></div>', t += '<div class="wazaContainer">';
        let p = "",
          b = "",
          k = "";
        void 0 !== langCtrl.dex.waza[e[a].waza[3]] && (p = langCtrl.dex.waza[e[a].waza[3]], b = langCtrl.dex.pokeType[mdCtrl.md.wazaType[e[a].waza[3]][0]], k = mdCtrl.md.wazaType[e[a].waza[3]][0]), t += '<div class="waza">' + p + "</div>", t += '<div class="wazaColor typeColor' + k + '">' + b + "</div>", t += "</div>", t += '<div class="lineDividor"></div>', t += "</div>", t += "</div>", t += "</div>"
      }
      $("#teamContainer").html(t), langCtrl.init()
    }
  }
  class j {
    constructor() {
      const e = this;
      e.maxWeek = 5, e.labelTopPadding = 10, e.labelHeightL = 50, e.labelHeightS = 35, e.labelPaddingL = 10, e.labelPaddingS = 25, e.topBorderLength = 2, e.appendHeightCntL = 2, e.appendHeightCntS = 2, e.labelLineControl = {}, e.maxLine = {}, udCtrl.load_eventcalendar((function () {
        var t = util.langCode(),
          a = util.countryCode();
        e.eventCalendar = udCtrl.ud.eventCalendar[t][a], e.eventCalendar.sw = e.startWeek();
        let n = e.calendarDays(e.eventCalendar.sw);
        e.eventCalendar.days = n[0], e.eventCalendar.ts = n[1], e.eventCalendar.startTs = n[2], e.uiInitialize()
      }))
    }
    uiInitialize() {
      const e = this;
      4 == parseInt(util.langCode()) && ($("#optionName").addClass("optionName-fr"), $("#option-country").addClass("option-country-fr")), e.createCalendar();
      var t = $(".eventCalendarTable").position(),
        a = $("#days1 > .sunday > .day ").outerHeight(),
        n = t.left + 2,
        i = $("#week1").outerWidth() / 7,
        o = $("#week1").outerHeight(),
        l = parseInt((window.now - e.eventCalendar.ts) / 86400) + 1,
        r = {
          1: {},
          2: {},
          3: {},
          4: {},
          5: {}
        };
      for (var s in $(".ownCountryName").text(langCtrl.common.country[util.countryCode()]), $(".day" + l.toString()).addClass("calendarCurrentDay"), e.eventCalendar.list) {
        let t = 0,
          a = e.eventCalendar.list[s];
        e.eventCalendar.startTs < a.s && (t = parseInt((a.s - e.eventCalendar.startTs) / 86400) + 1);
        let n = parseInt((a.e - e.eventCalendar.startTs) / 86400) + 1;
        e.eventCalendar.list[s].start = t, e.eventCalendar.list[s].end = n
      }
      for (var s in e.eventCalendar.list) {
        var c = e.eventCalendar.list[s],
          d = c.start < 1 ? 1 : parseInt(c.start / 7);
        !(c.start < 1) && parseInt(c.start % 7) > 0 && d++;
        var u = c.end > 35 ? 5 : parseInt(c.end / 7);
        !(c.end > 35) && parseInt(c.end % 7) > 0 && u++;
        var m = this.labelLineCtrl(c);
        if (!1 === e.maxLine.hasOwnProperty(d) || e.maxLine[d] < m)
          for (var g = d; g <= e.maxWeek; g++) e.maxLine[g] = m;
        for (g = d; g <= u; g++) {
          var p = 7 * (g - 1) + 1,
            b = 7 * g,
            k = $("<div>"),
            _ = "eventCalendarLabel" + mdCtrl.md.infoCategory[c.category],
            h = "S";
          1 === g && (h = "L"), _ += h;
          var f = 7,
            C = 0,
            v = !1,
            y = !1;
          p <= c.start && c.start <= b && (v = !0, f -= C = c.start - p), p <= c.end && c.end <= b && (y = !0, f -= b - c.end), v && y ? k.addClass("eventCalendarLabelRadius") : v ? k.addClass("eventCalendarLabelRadiusLeft") : y && k.addClass("eventCalendarLabelRadiusRight");
          var T = n + i * C;
          k.offset({
            left: T
          });
          var S = i * f,
            w = $("<div>");
          w.addClass("labelText"), w.text(c.title), k.append(w), k.addClass(_), k.width(S), !1 === r[g].hasOwnProperty(m) && (r[g][m] = []), k.click(c, (function (e) {
            util.locationMove(e.data.link)
          })), r[g][m].push(k)
        }
      }
      for (var g in r) {
        var I = $(".sunday.week" + g.toString()).position().top,
          P = o,
          x = 1 == g ? e.labelHeightL : e.labelHeightS,
          D = 1 == g ? e.labelPaddingL : e.labelPaddingS,
          R = 1 == g ? e.appendHeightCntL : e.appendHeightCntS,
          M = 0;
        e.maxLine.hasOwnProperty(g) && (M = e.maxLine[g]);
        for (var B = 1; B <= M; B++) {
          if (B > R && (P += x + D, $("#week" + g.toString() + " .week" + g.toString()).height(P)), r[g].hasOwnProperty(B))
            for (var s in r[g][B]) {
              var z = r[g][B][s];
              z.offset({
                top: I
              }), $(".eventCalendarContent").append(z)
            }
          I += x + D
        }
        I += a
      }
    }
    labelLineCtrl(e) {
      const t = this;
      for (var a = e.start < 1 ? 1 : e.start, n = 1; t.labelLineControl[a].hasOwnProperty(n);) n++;
      for (var i = a; i <= e.end; i++) i > 35 || i < 1 || (t.labelLineControl[i][n] = !0);
      return n
    }
    createCalendar() {
      const e = this;
      let t = e.eventCalendar.sw,
        a = $("#week-column");
      var n = 1,
        i = 1,
        o = {},
        l = {},
        r = {},
        s = "";
      for (var c in 0 === t ? (o = {
          sunday: ["sunday", "week", "rightBorder", "corner1"],
          monday: ["monday", "week", "rightBorder"],
          tuesday: ["tuesday", "week", "rightBorder"],
          wednesday: ["wednesday", "week", "rightBorder"],
          thursday: ["thursday", "week", "rightBorder"],
          friday: ["friday", "week", "rightBorder"],
          saturday: ["saturday", "week", "corner2"]
        }, r = {
          0: ["sunday", "rightBorder", "topBorder"],
          1: ["monday", "rightBorder", "topBorder"],
          2: ["tuesday", "rightBorder", "topBorder"],
          3: ["wednesday", "rightBorder", "topBorder"],
          4: ["thursday", "rightBorder", "topBorder"],
          5: ["friday", "rightBorder", "topBorder"],
          6: ["saturday", "topBorder"]
        }, l = {
          0: ["sunday", "rightBorder"],
          1: ["monday", "rightBorder"],
          2: ["tuesday", "rightBorder"],
          3: ["wednesday", "rightBorder"],
          4: ["thursday", "rightBorder"],
          5: ["friday", "rightBorder"],
          6: ["saturday"]
        }) : (o = {
          monday: ["monday", "week", "rightBorder", "corner1"],
          tuesday: ["tuesday", "week", "rightBorder"],
          wednesday: ["wednesday", "week", "rightBorder"],
          thursday: ["thursday", "week", "rightBorder"],
          friday: ["friday", "week", "rightBorder"],
          saturday: ["saturday", "week", "rightBorder"],
          sunday: ["sunday", "week", "corner2"]
        }, r = {
          0: ["monday", "rightBorder", "topBorder"],
          1: ["tuesday", "rightBorder", "topBorder"],
          2: ["wednesday", "rightBorder", "topBorder"],
          3: ["thursday", "rightBorder", "topBorder"],
          4: ["friday", "rightBorder", "topBorder"],
          5: ["saturday", "rightBorder", "topBorder"],
          6: ["sunday", "topBorder"]
        }, l = {
          0: ["monday", "rightBorder"],
          1: ["tuesday", "rightBorder"],
          2: ["wednesday", "rightBorder"],
          3: ["thursday", "rightBorder"],
          4: ["friday", "rightBorder"],
          5: ["saturday", "rightBorder"],
          6: ["sunday"]
        }), o) 2 == parseInt(util.langCode()) && o[c].push("week-us"), a.append(e.createWeekTh(c, o[c]));
      for (var c in e.eventCalendar.days) {
        let t = $("#days" + n.toString());
        t.addClass("day");
        let a = $("#week" + n.toString());
        for (var d in e.eventCalendar.days[c]) {
          let o = e.eventCalendar.days[c][d].split("-"),
            u = "",
            m = parseInt((i - 1) % 7);
          s !== o[0].toString() && (u = o[0].toString(), s = o[0].toString());
          let g = r[m],
            p = e.createDayTd(g, i, u, o[1]);
          t.append(p);
          let b = l[m];
          29 === i && 5 === n ? b.push("corner3") : 35 === i && 5 === n && b.push("corner4"), a.append(e.createWeekTd(b, n, i)), e.labelLineControl[i] = {}, i++
        }
        n++
      }
    }
    createWeekTh(e, t) {
      let a = $("<th>");
      a.attr("id", e);
      for (let e of t) a.addClass(e);
      return a.text(langCtrl.lang.event_calendar["#" + e]), a
    }
    createDayTd(e, t, a, n) {
      let i = $("<td>");
      for (let t of e) i.addClass(t);
      let o = $("<div>");
      return o.attr("id", "day" + t.toString()), o.addClass("day" + t.toString()), o.addClass("day"), a.toString() && (n = a.toString() + "/" + n), o.text(n), i.append(o), i
    }
    createWeekTd(e, t, a) {
      let n = $("<td>");
      for (let t of e) n.addClass(t);
      return n.addClass("week" + t.toString()), n.addClass("day" + a.toString()), n
    }
    calendarDays(e) {
      let t = {},
        a = new Date,
        n = new Date(a.getFullYear(), a.getMonth(), a.getDate() - a.getDay() + e, 0, 0),
        i = 0,
        o = 0,
        l = Math.floor(n.getTime() / 1e3);
      for (let e = 0; e < 35; e++) {
        !1 === t.hasOwnProperty(i) && (t[i] = []);
        let e = (n.getMonth() + 1).toString() + "-" + n.getDate().toString();
        t[i].push(e), o++, 7 === o && (i++, o = 0), n = new Date(n.getFullYear(), n.getMonth(), (n.getDate() + 1).toString(), 0, 0)
      }
      return [t, l, l]
    }
    startWeek() {
      let e = 0;
      switch (parseInt(util.countryCode())) {
      case 400:
      case 401:
      case 402:
      case 403:
      case 404:
      case 405:
      case 406:
      case 407:
      case 408:
      case 409:
      case 410:
      case 411:
      case 412:
      case 413:
      case 414:
      case 415:
      case 499:
        e = 1
      }
      return e
    }
  }
  class W {
    constructor() {
      const e = this;
      util.getItemnamejson(parseInt(util.langCode()), (function (t) {
        e.itemnamejson = t, udCtrl.load_rankmatch_list(null, (function () {
          e.detailGetParam = udCtrl.ud.share.pDetailPmRankMatch, e.rankingTab = 1, e.rankingTabKind = 1, e.detailData = {}, e.rankingData = {}, e.uiInitialize()
        }))
      }))
    }
    uiInitialize() {
      const e = this;
      if ($("#backLinkRankBattle .footerPrevButton .footerText .label").html(langCtrl.common.footerBackLinkLabel.backLinkRankBattle), $("#backLinkRankBattle").click((function (e) {
          util.locationMove("./rankmatch_detail.html")
        })), e.createRankingTab(), 0 == e.detailGetParam.ts2 || 9999999999 == e.detailGetParam.ts2) return;
      const t = "/" + e.detailGetParam.cId + "/" + e.detailGetParam.rst + "/" + e.detailGetParam.ts2 + "/pokemon";
      util.rankingRequest(t, (function (t) {
        e.rankingData = t, e.selectDetailView(), e.setUIAction(), e.changeRankingTab()
      }))
    }
    selectDetailView() {
      const e = this;
      let t = e.rankingData[e.detailGetParam.idx].id;
      e.rankingData[e.detailGetParam.idx].form;
      if (e.detailData.hasOwnProperty(t)) e.showDetailData(), e.showPokemonRanking();
      else {
        let t = parseInt(e.rankingData[e.detailGetParam.idx].id / 200) + 1;
        const a = "/" + e.detailGetParam.cId + "/" + e.detailGetParam.rst + "/" + e.detailGetParam.ts2 + "/pdetail-" + t.toString();
        util.rankingRequest(a, (function (t) {
          for (var a in t) e.detailData[a] = t[a];
          e.showDetailData(), e.showPokemonRanking()
        }))
      }
    }
    showDetailData() {
      let e = this.rankingData[this.detailGetParam.idx],
        t = "000" + e.id,
        a = e.id - 1,
        n = e.id,
        i = e.form,
        o = ($("<div />"), "");
      o += '<div class="infoLeft">', o += '<div class="pokemonIconContainer">', o += '<div class="icon"><img src="./img/poke/cap' + ("000" + t).slice(-4) + "_f" + ("0" + this.rankingData[this.detailGetParam.idx].form).slice(-2) + '_s0.png" width="120" height="120" onError="this.onerror=null;this.src=\'./img/icons/ball_g.png\';"></div>', o += "</div>", o += "</div>", o += '<div class="infoRight">', o += '<div class="pokemonName">', o += '<div class="no">' + t.substr(t.length - 3) + "</div>", o += '<div class="name">' + langCtrl.dex.poke[a] + "</div>", o += "</div>", o += '<div class="pokemonType">', o += '<div class="type1Continer typeColor' + mdCtrl.md.pokeType[n][i][0] + '">', o += '<div class="typeName">' + langCtrl.dex.pokeType[mdCtrl.md.pokeType[n][i][0]] + "</div>", o += "</div>", 2 == mdCtrl.md.pokeType[n][i].length && (o += '<div class="type2Continer typeColor' + mdCtrl.md.pokeType[n][i][1] + '">', o += '<div class="typeName">' + langCtrl.dex.pokeType[mdCtrl.md.pokeType[n][i][1]] + "</div>", o += "</div>"), o += "</div>", $(".infoContainer").html(o)
    }
    changeRankingTypeTab() {
      1 == this.rankingTabKind ? ($("#ranking-kind-tab1").addClass("tab-selected-top"), $("#ranking-kind-tab2").removeClass("tab-selected-under")) : ($("#ranking-kind-tab2").addClass("tab-selected-under"), $("#ranking-kind-tab1").removeClass("tab-selected-top")), this.showPokemonRanking()
    }
    changeRankingTypeTab2() {
      1 == this.rankingTabKind ? ($("#ranking-kind-tab2-1").addClass("tab-selected-top"), $("#ranking-kind-tab2-2").removeClass("tab-selected-under"), $("#ranking-kind-tab2-2").removeClass("tab-selected-group-under"), $("#ranking-kind-tab2-3").removeClass("tab-selected-under"), $("#ranking-kind-tab2-3").removeClass("tab-selected-group-under"), $("#ranking-kind-tab2-5").removeClass("tab-selected-under"), $("#ranking-kind-tab2-5").removeClass("tab-selected-group-under"), $("#ranking-kind-tab2-4").removeClass("tab-selected-under"), $("#ranking-kind-tab2-4").removeClass("tab-selected-group-under")) : 2 == this.rankingTabKind ? ($("#ranking-kind-tab2-1").removeClass("tab-selected-top"), $("#ranking-kind-tab2-2").addClass("tab-selected-under"), $("#ranking-kind-tab2-2").removeClass("tab-selected-group-under"), $("#ranking-kind-tab2-3").removeClass("tab-selected-under"), $("#ranking-kind-tab2-3").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-5").removeClass("tab-selected-under"), $("#ranking-kind-tab2-5").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-4").removeClass("tab-selected-under"), $("#ranking-kind-tab2-4").addClass("tab-selected-group-under")) : 3 == this.rankingTabKind ? ($("#ranking-kind-tab2-1").removeClass("tab-selected-top"), $("#ranking-kind-tab2-2").removeClass("tab-selected-under"), $("#ranking-kind-tab2-2").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-3").addClass("tab-selected-under"), $("#ranking-kind-tab2-3").removeClass("tab-selected-group-under"), $("#ranking-kind-tab2-5").removeClass("tab-selected-under"), $("#ranking-kind-tab2-5").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-4").removeClass("tab-selected-under"), $("#ranking-kind-tab2-4").addClass("tab-selected-group-under")) : 4 == this.rankingTabKind ? ($("#ranking-kind-tab2-1").removeClass("tab-selected-top"), $("#ranking-kind-tab2-2").removeClass("tab-selected-under"), $("#ranking-kind-tab2-2").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-3").removeClass("tab-selected-under"), $("#ranking-kind-tab2-3").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-5").removeClass("tab-selected-under"), $("#ranking-kind-tab2-5").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-4").addClass("tab-selected-under"), $("#ranking-kind-tab2-4").removeClass("tab-selected-group-under")) : ($("#ranking-kind-tab2-1").removeClass("tab-selected-top"), $("#ranking-kind-tab2-2").removeClass("tab-selected-under"), $("#ranking-kind-tab2-2").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-3").removeClass("tab-selected-under"), $("#ranking-kind-tab2-3").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-5").addClass("tab-selected-under"), $("#ranking-kind-tab2-5").removeClass("tab-selected-group-under"), $("#ranking-kind-tab2-4").removeClass("tab-selected-under"), $("#ranking-kind-tab2-4").addClass("tab-selected-group-under")), this.showPokemonRanking()
    }
    changeRankingTab() {
      const e = this;
      1 == e.rankingTab ? ($("#tab1").removeClass("disable"), $("#tab2").addClass("disable"), $("#tab3").addClass("disable"), 2 == parseInt(util.langCode()) ? ($("#ranking-kind-tab2-1 > .tablabel").addClass("tablabelEN"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelEN")) : 3 == parseInt(util.langCode()) ? ($("#ranking-kind-tab2-1 > .tablabel").addClass("tablabelFR"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelFR")) : 4 == parseInt(util.langCode()) ? ($("#ranking-kind-tab2-1 > .tablabel").addClass("tablabelIT"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelIT")) : 5 == parseInt(util.langCode()) ? ($("#ranking-kind-tab2-1 > .tablabel").addClass("tablabelDE"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelDE2"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelDE")) : 7 == parseInt(util.langCode()) && ($("#ranking-kind-tab2-1 > .tablabel").addClass("tablabelES"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelES")), $("#ranking-kind-tab2-1 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-team"]), $("#ranking-kind-tab2-2 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-waza"]), $("#ranking-kind-tab2-3 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-tokusei"]), $("#ranking-kind-tab2-5 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-seikaku"]), $("#ranking-kind-tab2-4 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-item"])) : 2 == e.rankingTab ? ($("#tab1").addClass("disable"), $("#tab2").removeClass("disable"), $("#tab3").addClass("disable"), 2 == parseInt(util.langCode()) ? ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelEN"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelEN")) : 3 == parseInt(util.langCode()) ? ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelFR"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelFR")) : 4 == parseInt(util.langCode()) ? ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelIT"), $("#ranking-kind-tab2 > .tablabel").addClass("tablabelIT")) : 5 == parseInt(util.langCode()) ? ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelDE"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelDE2"), $("#ranking-kind-tab2 > .tablabel").addClass("tablabelDE")) : 7 == parseInt(util.langCode()) && ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelES"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelES")), $("#ranking-kind-tab1 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-win"]), $("#ranking-kind-tab2 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-waza-win"])) : ($("#tab1").addClass("disable"), $("#tab2").addClass("disable"), $("#tab3").removeClass("disable"), 2 == parseInt(util.langCode()) ? ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelEN"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelEN")) : 3 == parseInt(util.langCode()) ? ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelFR"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelFR")) : 4 == parseInt(util.langCode()) ? ($("#ranking-kind-tab1 > .tablabel").addClass("tablabelIT"), $("#ranking-kind-tab2 > .tablabel").addClass("tablabelIT")) : 5 == parseInt(util.langCode()) ? ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelDE"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelDE"), $("#ranking-kind-tab2 > .tablabel").addClass("tablabelDE2")) : 7 == parseInt(util.langCode()) && ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelES"), $("#ranking-kind-tab2 > .tablabel").addClass("tablabelES")), $("#ranking-kind-tab1 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-lose"]), $("#ranking-kind-tab2 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-waza-lose"])), e.rankingTabKind = 1, 1 == e.rankingTab ? e.changeRankingTypeTab2() : e.changeRankingTypeTab()
    }
    showPokemonRanking() {
      const e = this;
      let t = "",
        a = "";
      if (t = 1 == e.rankingTab ? "temoti" : 2 == e.rankingTab ? "win" : "lose", 1 == e.rankingTabKind ? a = "pokemon" : 2 == e.rankingTabKind ? a = "waza" : 3 == e.rankingTabKind ? a = "tokusei" : 4 == e.rankingTabKind ? a = "motimono" : 5 == e.rankingTabKind && (a = "seikaku"), $("#pokemonRankingBody").empty(), $("#wazaRankingBody").empty(), !1 === e.detailData.hasOwnProperty(e.rankingData[e.detailGetParam.idx].id) || !1 === e.detailData[e.rankingData[e.detailGetParam.idx].id].hasOwnProperty(e.rankingData[e.detailGetParam.idx].form)) return;
      if (void 0 === e.detailData[e.rankingData[e.detailGetParam.idx].id][e.rankingData[e.detailGetParam.idx].form]) return;
      let n = e.detailData[e.rankingData[e.detailGetParam.idx].id][e.rankingData[e.detailGetParam.idx].form][t][a],
        i = "";
      if ("pokemon" == a) {
        for (var o in $("#pokemonRankingBody").removeClass("disableDisplay"), $("#wazaRankingBody").addClass("disableDisplay"), n) {
          var l = parseInt(o) + 1;
          let e = n[o].id - 1,
            t = n[o].id,
            a = n[o].form;
          i += '<div class="rankingRow2">', i += '<div class="leftContainer">', i += '<div class="rank">', i += '<div class="rankText">' + l.toString() + "</div>", i += "</div>", i += "</div>", i += '<div class="rightContainer">', i += '<div class="pokemonContainer">', i += '<div class="infoContainer">', i += '<div class="pokemonName">' + langCtrl.dex.poke[e] + "</div>", i += '<div class="blineDividor"></div>', i += '<div class="type1Continer typeColor' + mdCtrl.md.pokeType[t][a][0] + '">', i += '<div class="typeName">' + langCtrl.dex.pokeType[mdCtrl.md.pokeType[t][a][0]] + "</div>", i += "</div>", 2 == mdCtrl.md.pokeType[t][a].length && (i += '<div class="type2Continer typeColor' + mdCtrl.md.pokeType[t][a][1] + '">', i += '<div class="typeName">' + langCtrl.dex.pokeType[mdCtrl.md.pokeType[t][a][1]] + "</div>", i += "</div>"), i += "</div>", i += '<div class="pokemonIconContainer">', i += '<div class="icon"><img src="./img/poke/cap' + ("000" + n[o].id).slice(-4) + "_f" + ("0" + n[o].form).slice(-2) + '_s0.png" width="120" height="120" onError="this.onerror=null;this.src=\'./img/icons/ball_g.png\';"></div>', i += "</div>", i += "</div>", i += "</div>", i += "</div>"
        }
        $("#pokemonRankingBody").empty(), $("#pokemonRankingBody").html(i)
      } else {
        $("#pokemonRankingBody").addClass("disableDisplay"), $("#wazaRankingBody").removeClass("disableDisplay");
        var r = {};
        for (var o in "waza" == a ? r = langCtrl.dex.waza : "tokusei" == a ? r = langCtrl.dex.tokusei : "motimono" == a ? r = e.itemnamejson.itemname : "seikaku" == a && (r = langCtrl.dex.seikaku), n) {
          i += '<div class="waza-ranking-row">', i += '<div class="leftContainer">', i += '<div class="rank">', i += '<div class="rankText">' + (l = parseInt(o) + 1).toString() + "</div>", i += "</div>", i += "</div>", i += '<div class="rightContainer">', i += '<div class="wazaContainer">', i += '<div class="infoContainer">', i += '<div class="wazaName">' + r[n[o].id] + "</div>", i += "</div>", i += '<div class="wazaUseRateContainer">', i += '<p class="rate">' + util.formatFraction(n[o].val.toString()) + "</p>", i += "</div>", i += "</div>", i += "</div>", i += "</div>"
        }
        $("#pokemon-detail-body").empty(), $("#wazaRankingBody").html(i)
      }
    }
    setUIAction() {
      const e = this;
      $("#ranking-kind-tab1").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 1 != e.rankingTabKind && (e.rankingTabKind = 1, e.changeRankingTypeTab())
      })), $("#ranking-kind-tab2").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 2 != e.rankingTabKind && (e.rankingTabKind = 2, e.changeRankingTypeTab())
      })), $("#ranking-kind-tab2-1").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 1 != e.rankingTabKind && (e.rankingTabKind = 1, e.changeRankingTypeTab2())
      })), $("#ranking-kind-tab2-2").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 2 != e.rankingTabKind && (e.rankingTabKind = 2, e.changeRankingTypeTab2())
      })), $("#ranking-kind-tab2-3").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 3 != e.rankingTabKind && (e.rankingTabKind = 3, e.changeRankingTypeTab2())
      })), $("#ranking-kind-tab2-4").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 4 != e.rankingTabKind && (e.rankingTabKind = 4, e.changeRankingTypeTab2())
      })), $("#ranking-kind-tab2-5").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 5 != e.rankingTabKind && (e.rankingTabKind = 5, e.changeRankingTypeTab2())
      })), $("#tab1").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), $("#ranking-kind-type1").hide(), $("#ranking-kind-type2").show(), e.rankingTab = 1, e.changeRankingTab()
      })), $("#tab2").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), $("#ranking-kind-type1").show(), $("#ranking-kind-type2").hide(), e.rankingTab = 2, e.changeRankingTab()
      })), $("#tab3").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), $("#ranking-kind-type1").show(), $("#ranking-kind-type2").hide(), e.rankingTab = 3, e.changeRankingTab()
      })), $("#detail-prev").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), e.detailGetParam.idx--, e.detailGetParam.idx < 0 && (e.detailGetParam.idx = e.rankingData.length - 1), e.rankingTab = 1, e.rankingTabKind = 1, $("#ranking-kind-type1").hide(), $("#ranking-kind-type2").show(), e.selectDetailView(), e.changeRankingTab()
      })), $("#detail-next").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), e.detailGetParam.idx++, e.detailGetParam.idx > e.rankingData.length - 1 && (e.detailGetParam.idx = 0), e.rankingTab = 1, e.rankingTabKind = 1, $("#ranking-kind-type1").hide(), $("#ranking-kind-type2").show(), e.selectDetailView(), e.changeRankingTab()
      }))
    }
    createRankingTab() {
      let e = util.getPokemonDetailTabCount(this.detailGetParam.ts2, 3),
        t = "tab" + e.toString(),
        a = $("#ranking-kind-tab-group2");
      if (a.hide(), 4 === e) {
        var n = ["ranking-kind-tab2-2", "ranking-kind-tab2-3", "ranking-kind-tab2-5", "ranking-kind-tab2-4"];
        for (var i of n) a.append($("<div>").attr("id", i).addClass(t).append($("<span>").addClass("tablabel")))
      } else {
        n = ["ranking-kind-tab2-2", "ranking-kind-tab2-3", "ranking-kind-tab2-4"];
        for (var i of n) a.append($("<div>").attr("id", i).addClass(t).append($("<span>").addClass("tablabel")))
      }
      a.show()
    }
  }
  class U {
    constructor() {
      const e = this;
      util.getItemnamejson(parseInt(util.langCode()), (function (t) {
        e.itemnamejson = t, udCtrl.load_rankmatch_list(null, (function () {
          e.detailGetParam = udCtrl.ud.share.pDetailPmInternetCompetition, e.rankingTab = 1, e.rankingTabKind = 1, e.detailData = {}, e.rankingData = {}, e.uiInitialize()
        }))
      }))
    }
    uiInitialize() {
      const e = this;
      if ($("#backLinkInternetComp .footerPrevButton .footerText .label").html(langCtrl.common.footerBackLinkLabel.backLinkInternetComp), $("#backLinkInternetComp").click((function (e) {
          util.locationMove("./internetcompetition_detail.html")
        })), e.createRankingTab(), 0 == e.detailGetParam.ts2 || 9999999999 == e.detailGetParam.ts2) return;
      const t = "/" + e.detailGetParam.cId + "/" + e.detailGetParam.rst + "/" + e.detailGetParam.ts2 + "/pokemon";
      util.rankingRequest(t, (function (t) {
        e.rankingData = t, e.selectDetailView(), e.setUIAction(), e.changeRankingTab()
      }))
    }
    selectDetailView() {
      const e = this;
      let t = e.rankingData[e.detailGetParam.idx].id;
      if (e.detailData.hasOwnProperty(t)) e.showDetailData(), e.showPokemonRanking();
      else {
        let t = parseInt(e.rankingData[e.detailGetParam.idx].id / 200) + 1;
        const a = "/" + e.detailGetParam.cId + "/" + e.detailGetParam.rst + "/" + e.detailGetParam.ts2 + "/pdetail-" + t.toString();
        util.rankingRequest(a, (function (t) {
          for (var a in t) e.detailData[a] = t[a];
          e.showDetailData(), e.showPokemonRanking()
        }))
      }
    }
    showDetailData() {
      let e = this.rankingData[this.detailGetParam.idx],
        t = "000" + e.id,
        a = e.id - 1,
        n = e.id,
        i = e.form,
        o = ($("<div />"), "");
      o += '<div class="infoLeft">', o += '<div class="pokemonIconContainer">', o += '<div class="icon"><img src="./img/poke/cap' + ("000" + t).slice(-4) + "_f" + ("0" + this.rankingData[this.detailGetParam.idx].form).slice(-2) + '_s0.png" width="120" height="120" onError="this.onerror=null;this.src=\'./img/icons/ball_g.png\';"></div>', o += "</div>", o += "</div>", o += '<div class="infoRight">', o += '<div class="pokemonName">', o += '<div class="no">' + t.substr(t.length - 3) + "</div>", o += '<div class="name">' + langCtrl.dex.poke[a] + "</div>", o += "</div>", o += '<div class="pokemonType">', o += '<div class="type1Continer typeColor' + mdCtrl.md.pokeType[n][i][0] + '">', o += '<div class="typeName">' + langCtrl.dex.pokeType[mdCtrl.md.pokeType[n][i][0]] + "</div>", o += "</div>", 2 == mdCtrl.md.pokeType[n][i].length && (o += '<div class="type2Continer typeColor' + mdCtrl.md.pokeType[n][i][1] + '">', o += '<div class="typeName">' + langCtrl.dex.pokeType[mdCtrl.md.pokeType[n][i][1]] + "</div>", o += "</div>"), o += "</div>", $(".infoContainer").html(o)
    }
    changeRankingTypeTab() {
      1 == this.rankingTabKind ? ($("#ranking-kind-tab1").addClass("tab-selected-top"), $("#ranking-kind-tab2").removeClass("tab-selected-under")) : ($("#ranking-kind-tab2").addClass("tab-selected-under"), $("#ranking-kind-tab1").removeClass("tab-selected-top")), this.showPokemonRanking()
    }
    changeRankingTypeTab2() {
      1 == this.rankingTabKind ? ($("#ranking-kind-tab2-1").addClass("tab-selected-top"), $("#ranking-kind-tab2-2").removeClass("tab-selected-under"), $("#ranking-kind-tab2-2").removeClass("tab-selected-group-under"), $("#ranking-kind-tab2-3").removeClass("tab-selected-under"), $("#ranking-kind-tab2-3").removeClass("tab-selected-group-under"), $("#ranking-kind-tab2-5").removeClass("tab-selected-under"), $("#ranking-kind-tab2-5").removeClass("tab-selected-group-under"), $("#ranking-kind-tab2-4").removeClass("tab-selected-under"), $("#ranking-kind-tab2-4").removeClass("tab-selected-group-under")) : 2 == this.rankingTabKind ? ($("#ranking-kind-tab2-1").removeClass("tab-selected-top"), $("#ranking-kind-tab2-2").addClass("tab-selected-under"), $("#ranking-kind-tab2-2").removeClass("tab-selected-group-under"), $("#ranking-kind-tab2-3").removeClass("tab-selected-under"), $("#ranking-kind-tab2-3").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-5").removeClass("tab-selected-under"), $("#ranking-kind-tab2-5").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-4").removeClass("tab-selected-under"), $("#ranking-kind-tab2-4").addClass("tab-selected-group-under")) : 3 == this.rankingTabKind ? ($("#ranking-kind-tab2-1").removeClass("tab-selected-top"), $("#ranking-kind-tab2-2").removeClass("tab-selected-under"), $("#ranking-kind-tab2-2").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-3").addClass("tab-selected-under"), $("#ranking-kind-tab2-3").removeClass("tab-selected-group-under"), $("#ranking-kind-tab2-5").removeClass("tab-selected-under"), $("#ranking-kind-tab2-5").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-4").removeClass("tab-selected-under"), $("#ranking-kind-tab2-4").addClass("tab-selected-group-under")) : 4 == this.rankingTabKind ? ($("#ranking-kind-tab2-1").removeClass("tab-selected-top"), $("#ranking-kind-tab2-2").removeClass("tab-selected-under"), $("#ranking-kind-tab2-2").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-3").removeClass("tab-selected-under"), $("#ranking-kind-tab2-3").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-5").removeClass("tab-selected-under"), $("#ranking-kind-tab2-5").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-4").addClass("tab-selected-under"), $("#ranking-kind-tab2-4").removeClass("tab-selected-group-under")) : ($("#ranking-kind-tab2-1").removeClass("tab-selected-top"), $("#ranking-kind-tab2-2").removeClass("tab-selected-under"), $("#ranking-kind-tab2-2").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-3").removeClass("tab-selected-under"), $("#ranking-kind-tab2-3").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-5").addClass("tab-selected-under"), $("#ranking-kind-tab2-5").removeClass("tab-selected-group-under"), $("#ranking-kind-tab2-4").removeClass("tab-selected-under"), $("#ranking-kind-tab2-4").addClass("tab-selected-group-under")), this.showPokemonRanking()
    }
    changeRankingTab() {
      const e = this;
      1 == e.rankingTab ? ($("#tab1").removeClass("disable"), $("#tab2").addClass("disable"), $("#tab3").addClass("disable"), 2 == parseInt(util.langCode()) ? ($("#ranking-kind-tab2-1 > .tablabel").addClass("tablabelEN"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelEN")) : 3 == parseInt(util.langCode()) ? ($("#ranking-kind-tab2-1 > .tablabel").addClass("tablabelFR"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelFR")) : 4 == parseInt(util.langCode()) ? ($("#ranking-kind-tab2-1 > .tablabel").addClass("tablabelIT"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelIT")) : 5 == parseInt(util.langCode()) ? ($("#ranking-kind-tab2-1 > .tablabel").addClass("tablabelDE"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelDE2"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelDE")) : 7 == parseInt(util.langCode()) && ($("#ranking-kind-tab2-1 > .tablabel").addClass("tablabelES"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelES")), $("#ranking-kind-tab2-1 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-team"]), $("#ranking-kind-tab2-2 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-waza"]), $("#ranking-kind-tab2-3 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-tokusei"]), $("#ranking-kind-tab2-5 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-seikaku"]), $("#ranking-kind-tab2-4 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-item"])) : 2 == e.rankingTab ? ($("#tab1").addClass("disable"), $("#tab2").removeClass("disable"), $("#tab3").addClass("disable"), 2 == parseInt(util.langCode()) ? ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelEN"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelEN")) : 3 == parseInt(util.langCode()) ? ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelFR"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelFR")) : 4 == parseInt(util.langCode()) ? ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelIT"), $("#ranking-kind-tab2 > .tablabel").addClass("tablabelIT")) : 5 == parseInt(util.langCode()) ? ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelDE"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelDE2"), $("#ranking-kind-tab2 > .tablabel").addClass("tablabelDE")) : 7 == parseInt(util.langCode()) && ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelES"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelES")), $("#ranking-kind-tab1 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-win"]), $("#ranking-kind-tab2 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-waza-win"])) : ($("#tab1").addClass("disable"), $("#tab2").addClass("disable"), $("#tab3").removeClass("disable"), 2 == parseInt(util.langCode()) ? ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelEN"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelEN")) : 3 == parseInt(util.langCode()) ? ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelFR"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelFR")) : 4 == parseInt(util.langCode()) ? ($("#ranking-kind-tab1 > .tablabel").addClass("tablabelIT"), $("#ranking-kind-tab2 > .tablabel").addClass("tablabelIT")) : 5 == parseInt(util.langCode()) ? ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelDE"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelDE"), $("#ranking-kind-tab2 > .tablabel").addClass("tablabelDE2")) : 7 == parseInt(util.langCode()) && ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelES"), $("#ranking-kind-tab2 > .tablabel").addClass("tablabelES")), $("#ranking-kind-tab1 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-lose"]), $("#ranking-kind-tab2 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-waza-lose"])), e.rankingTabKind = 1, 1 == e.rankingTab ? e.changeRankingTypeTab2() : e.changeRankingTypeTab()
    }
    showPokemonRanking() {
      const e = this;
      let t = "",
        a = "";
      if (t = 1 == e.rankingTab ? "temoti" : 2 == e.rankingTab ? "win" : "lose", 1 == e.rankingTabKind ? a = "pokemon" : 2 == e.rankingTabKind ? a = "waza" : 3 == e.rankingTabKind ? a = "tokusei" : 4 == e.rankingTabKind ? a = "motimono" : 5 == e.rankingTabKind && (a = "seikaku"), $("#pokemonRankingBody").empty(), $("#wazaRankingBody").empty(), !1 === e.detailData.hasOwnProperty(e.rankingData[e.detailGetParam.idx].id) || !1 === e.detailData[e.rankingData[e.detailGetParam.idx].id].hasOwnProperty(e.rankingData[e.detailGetParam.idx].form)) return;
      if (void 0 === e.detailData[e.rankingData[e.detailGetParam.idx].id][e.rankingData[e.detailGetParam.idx].form]) return;
      let n = e.detailData[e.rankingData[e.detailGetParam.idx].id][e.rankingData[e.detailGetParam.idx].form][t][a],
        i = "";
      if ("pokemon" == a) {
        for (var o in $("#pokemonRankingBody").removeClass("disableDisplay"), $("#wazaRankingBody").addClass("disableDisplay"), n) {
          var l = parseInt(o) + 1;
          let e = n[o].id - 1,
            t = n[o].id,
            a = n[o].form;
          i += '<div class="rankingRow2">', i += '<div class="leftContainer">', i += '<div class="rank">', i += '<div class="rankText">' + l.toString() + "</div>", i += "</div>", i += "</div>", i += '<div class="rightContainer">', i += '<div class="pokemonContainer">', i += '<div class="infoContainer">', i += '<div class="pokemonName">' + langCtrl.dex.poke[e] + "</div>", i += '<div class="blineDividor"></div>', i += '<div class="type1Continer typeColor' + mdCtrl.md.pokeType[t][a][0] + '">', i += '<div class="typeName">' + langCtrl.dex.pokeType[mdCtrl.md.pokeType[t][a][0]] + "</div>", i += "</div>", 2 == mdCtrl.md.pokeType[t][a].length && (i += '<div class="type2Continer typeColor' + mdCtrl.md.pokeType[t][a][1] + '">', i += '<div class="typeName">' + langCtrl.dex.pokeType[mdCtrl.md.pokeType[t][a][1]] + "</div>", i += "</div>"), i += "</div>", i += '<div class="pokemonIconContainer">', i += '<div class="icon"><img src="./img/poke/cap' + ("000" + n[o].id).slice(-4) + "_f" + ("0" + n[o].form).slice(-2) + '_s0.png" width="120" height="120" onError="this.onerror=null;this.src=\'./img/icons/ball_g.png\';"></div>', i += "</div>", i += "</div>", i += "</div>", i += "</div>"
        }
        $("#pokemonRankingBody").empty(), $("#pokemonRankingBody").html(i)
      } else {
        $("#pokemonRankingBody").addClass("disableDisplay"), $("#wazaRankingBody").removeClass("disableDisplay");
        var r = {};
        for (var o in "waza" == a ? r = langCtrl.dex.waza : "tokusei" == a ? r = langCtrl.dex.tokusei : "motimono" == a ? r = e.itemnamejson.itemname : "seikaku" == a && (r = langCtrl.dex.seikaku), n) {
          i += '<div class="waza-ranking-row">', i += '<div class="leftContainer">', i += '<div class="rank">', i += '<div class="rankText">' + (l = parseInt(o) + 1).toString() + "</div>", i += "</div>", i += "</div>", i += '<div class="rightContainer">', i += '<div class="wazaContainer">', i += '<div class="infoContainer">', i += '<div class="wazaName">' + r[n[o].id] + "</div>", i += "</div>", i += '<div class="wazaUseRateContainer">', i += '<p class="rate">' + util.formatFraction(n[o].val.toString()) + "</p>", i += "</div>", i += "</div>", i += "</div>", i += "</div>"
        }
        $("#pokemon-detail-body").empty(), $("#wazaRankingBody").html(i)
      }
    }
    setUIAction() {
      const e = this;
      $("#ranking-kind-tab1").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 1 != e.rankingTabKind && (e.rankingTabKind = 1, e.changeRankingTypeTab())
      })), $("#ranking-kind-tab2").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 2 != e.rankingTabKind && (e.rankingTabKind = 2, e.changeRankingTypeTab())
      })), $("#ranking-kind-tab2-1").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 1 != e.rankingTabKind && (e.rankingTabKind = 1, e.changeRankingTypeTab2())
      })), $("#ranking-kind-tab2-2").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 2 != e.rankingTabKind && (e.rankingTabKind = 2, e.changeRankingTypeTab2())
      })), $("#ranking-kind-tab2-3").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 3 != e.rankingTabKind && (e.rankingTabKind = 3, e.changeRankingTypeTab2())
      })), $("#ranking-kind-tab2-4").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 4 != e.rankingTabKind && (e.rankingTabKind = 4, e.changeRankingTypeTab2())
      })), $("#ranking-kind-tab2-5").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 5 != e.rankingTabKind && (e.rankingTabKind = 5, e.changeRankingTypeTab2())
      })), $("#tab1").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), $("#ranking-kind-type1").hide(), $("#ranking-kind-type2").show(), e.rankingTab = 1, e.changeRankingTab()
      })), $("#tab2").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), $("#ranking-kind-type1").show(), $("#ranking-kind-type2").hide(), e.rankingTab = 2, e.changeRankingTab()
      })), $("#tab3").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), $("#ranking-kind-type1").show(), $("#ranking-kind-type2").hide(), e.rankingTab = 3, e.changeRankingTab()
      })), $("#detail-prev").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), e.detailGetParam.idx--, e.detailGetParam.idx < 0 && (e.detailGetParam.idx = e.rankingData.length - 1), e.rankingTab = 1, e.rankingTabKind = 1, $("#ranking-kind-type1").hide(), $("#ranking-kind-type2").show(), e.selectDetailView(), e.changeRankingTab()
      })), $("#detail-next").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), e.detailGetParam.idx++, e.detailGetParam.idx > e.rankingData.length - 1 && (e.detailGetParam.idx = 0), e.rankingTab = 1, e.rankingTabKind = 1, $("#ranking-kind-type1").hide(), $("#ranking-kind-type2").show(), e.selectDetailView(), e.changeRankingTab()
      }))
    }
    createRankingTab() {
      let e = util.getPokemonDetailTabCount(this.detailGetParam.ts2, 1),
        t = "tab" + e.toString(),
        a = $("#ranking-kind-tab-group2");
      if (a.hide(), 4 === e) {
        var n = ["ranking-kind-tab2-2", "ranking-kind-tab2-3", "ranking-kind-tab2-5", "ranking-kind-tab2-4"];
        for (var i of n) a.append($("<div>").attr("id", i).addClass(t).append($("<span>").addClass("tablabel")))
      } else {
        n = ["ranking-kind-tab2-2", "ranking-kind-tab2-3", "ranking-kind-tab2-4"];
        for (var i of n) a.append($("<div>").attr("id", i).addClass(t).append($("<span>").addClass("tablabel")))
      }
      a.show()
    }
  }
  class J {
    constructor() {
      const e = this;
      util.getItemnamejson(parseInt(util.langCode()), (function (t) {
        e.itemnamejson = t, udCtrl.login((function () {
          0 === udCtrl.playRomCount() && util.locationMove("./top.html"), udCtrl.load_rankmatch_list(null, (function () {
            e.detailGetParam = udCtrl.ud.share.pDetailPmFriendCompetition, e.rankingTab = 1, e.rankingTabKind = 1, e.detailData = {}, e.rankingData = {}, e.uiInitialize()
          }))
        }))
      }))
    }
    uiInitialize() {
      const e = this;
      if ($("#backLinkFriendComp .footerPrevButton .footerText .label").html(langCtrl.common.footerBackLinkLabel.backLinkFriendComp), $("#backLinkFriendComp").click((function (e) {
          util.locationMove("./friendcompetition_detail.html")
        })), e.createRankingTab(), $("#ranking-kind-type1").hide(), $("#ranking-kind-type2").show(), 0 == e.detailGetParam.ts2 || 9999999999 == e.detailGetParam.ts2) return;
      const t = "/" + e.detailGetParam.cId + "/" + e.detailGetParam.rst + "/" + e.detailGetParam.ts2 + "/pokemon";
      util.rankingRequest(t, (function (t) {
        e.rankingData = t, e.selectDetailView(), e.setUIAction(), e.changeRankingTab()
      }))
    }
    selectDetailView() {
      const e = this;
      let t = e.rankingData[e.detailGetParam.idx].id;
      if (e.detailData.hasOwnProperty(t)) e.showDetailData(), e.showPokemonRanking();
      else {
        let t = parseInt(e.rankingData[e.detailGetParam.idx].id / 200) + 1;
        const a = "/" + e.detailGetParam.cId + "/" + e.detailGetParam.rst + "/" + e.detailGetParam.ts2 + "/pdetail-" + t.toString();
        util.rankingRequest(a, (function (t) {
          for (var a in t) e.detailData[a] = t[a];
          e.showDetailData(), e.showPokemonRanking()
        }))
      }
    }
    showDetailData() {
      let e = this.rankingData[this.detailGetParam.idx],
        t = "000" + e.id,
        a = e.id - 1,
        n = e.id,
        i = e.form,
        o = ($("<div />"), "");
      o += '<div class="infoLeft">', o += '<div class="pokemonIconContainer">', o += '<div class="icon"><img src="./img/poke/cap' + ("000" + t).slice(-4) + "_f" + ("0" + this.rankingData[this.detailGetParam.idx].form).slice(-2) + '_s0.png" width="120" height="120" onError="this.onerror=null;this.src=\'./img/icons/ball_g.png\';"></div>', o += "</div>", o += "</div>", o += '<div class="infoRight">', o += '<div class="pokemonName">', o += '<div class="no">' + t.substr(t.length - 3) + "</div>", o += '<div class="name">' + langCtrl.dex.poke[a] + "</div>", o += "</div>", o += '<div class="pokemonType">', o += '<div class="type1Continer typeColor' + mdCtrl.md.pokeType[n][i][0] + '">', o += '<div class="typeName">' + langCtrl.dex.pokeType[mdCtrl.md.pokeType[n][i][0]] + "</div>", o += "</div>", 2 == mdCtrl.md.pokeType[n][i].length && (o += '<div class="type2Continer typeColor' + mdCtrl.md.pokeType[n][i][1] + '">', o += '<div class="typeName">' + langCtrl.dex.pokeType[mdCtrl.md.pokeType[n][i][1]] + "</div>", o += "</div>"), o += "</div>", $(".infoContainer").html(o)
    }
    changeRankingTypeTab() {
      1 == this.rankingTabKind ? ($("#ranking-kind-tab1").addClass("tab-selected-top"), $("#ranking-kind-tab2").removeClass("tab-selected-under")) : ($("#ranking-kind-tab2").addClass("tab-selected-under"), $("#ranking-kind-tab1").removeClass("tab-selected-top")), this.showPokemonRanking()
    }
    changeRankingTypeTab2() {
      1 == this.rankingTabKind ? ($("#ranking-kind-tab2-1").addClass("tab-selected-top"), $("#ranking-kind-tab2-2").removeClass("tab-selected-under"), $("#ranking-kind-tab2-2").removeClass("tab-selected-group-under"), $("#ranking-kind-tab2-3").removeClass("tab-selected-under"), $("#ranking-kind-tab2-3").removeClass("tab-selected-group-under"), $("#ranking-kind-tab2-5").removeClass("tab-selected-under"), $("#ranking-kind-tab2-5").removeClass("tab-selected-group-under"), $("#ranking-kind-tab2-4").removeClass("tab-selected-under"), $("#ranking-kind-tab2-4").removeClass("tab-selected-group-under")) : 2 == this.rankingTabKind ? ($("#ranking-kind-tab2-1").removeClass("tab-selected-top"), $("#ranking-kind-tab2-2").addClass("tab-selected-under"), $("#ranking-kind-tab2-2").removeClass("tab-selected-group-under"), $("#ranking-kind-tab2-3").removeClass("tab-selected-under"), $("#ranking-kind-tab2-3").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-5").removeClass("tab-selected-under"), $("#ranking-kind-tab2-5").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-4").removeClass("tab-selected-under"), $("#ranking-kind-tab2-4").addClass("tab-selected-group-under")) : 3 == this.rankingTabKind ? ($("#ranking-kind-tab2-1").removeClass("tab-selected-top"), $("#ranking-kind-tab2-2").removeClass("tab-selected-under"), $("#ranking-kind-tab2-2").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-3").addClass("tab-selected-under"), $("#ranking-kind-tab2-3").removeClass("tab-selected-group-under"), $("#ranking-kind-tab2-5").removeClass("tab-selected-under"), $("#ranking-kind-tab2-5").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-4").removeClass("tab-selected-under"), $("#ranking-kind-tab2-4").addClass("tab-selected-group-under")) : 4 == this.rankingTabKind ? ($("#ranking-kind-tab2-1").removeClass("tab-selected-top"), $("#ranking-kind-tab2-2").removeClass("tab-selected-under"), $("#ranking-kind-tab2-2").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-3").removeClass("tab-selected-under"), $("#ranking-kind-tab2-3").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-5").removeClass("tab-selected-under"), $("#ranking-kind-tab2-5").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-4").addClass("tab-selected-under"), $("#ranking-kind-tab2-4").removeClass("tab-selected-group-under")) : ($("#ranking-kind-tab2-1").removeClass("tab-selected-top"), $("#ranking-kind-tab2-2").removeClass("tab-selected-under"), $("#ranking-kind-tab2-2").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-3").removeClass("tab-selected-under"), $("#ranking-kind-tab2-3").addClass("tab-selected-group-under"), $("#ranking-kind-tab2-5").addClass("tab-selected-under"), $("#ranking-kind-tab2-5").removeClass("tab-selected-group-under"), $("#ranking-kind-tab2-4").removeClass("tab-selected-under"), $("#ranking-kind-tab2-4").addClass("tab-selected-group-under")), this.showPokemonRanking()
    }
    changeRankingTab() {
      const e = this;
      1 == e.rankingTab ? ($("#tab1").removeClass("disable"), $("#tab2").addClass("disable"), $("#tab3").addClass("disable"), 2 == parseInt(util.langCode()) ? ($("#ranking-kind-tab2-1 > .tablabel").addClass("tablabelEN"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelEN")) : 3 == parseInt(util.langCode()) ? ($("#ranking-kind-tab2-1 > .tablabel").addClass("tablabelFR"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelFR")) : 4 == parseInt(util.langCode()) ? ($("#ranking-kind-tab2-1 > .tablabel").addClass("tablabelIT"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelIT")) : 5 == parseInt(util.langCode()) ? ($("#ranking-kind-tab2-1 > .tablabel").addClass("tablabelDE"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelDE2"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelDE")) : 7 == parseInt(util.langCode()) && ($("#ranking-kind-tab2-1 > .tablabel").addClass("tablabelES"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelES")), $("#ranking-kind-tab2-1 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-team"]), $("#ranking-kind-tab2-2 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-waza"]), $("#ranking-kind-tab2-3 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-tokusei"]), $("#ranking-kind-tab2-5 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-seikaku"]), $("#ranking-kind-tab2-4 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-item"])) : 2 == e.rankingTab ? ($("#tab1").addClass("disable"), $("#tab2").removeClass("disable"), $("#tab3").addClass("disable"), 2 == parseInt(util.langCode()) ? ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelEN"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelEN")) : 3 == parseInt(util.langCode()) ? ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelFR"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelFR")) : 4 == parseInt(util.langCode()) ? ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelIT"), $("#ranking-kind-tab2 > .tablabel").addClass("tablabelIT")) : 5 == parseInt(util.langCode()) ? ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelDE"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelDE2"), $("#ranking-kind-tab2 > .tablabel").addClass("tablabelDE")) : 7 == parseInt(util.langCode()) && ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelES"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelES")), $("#ranking-kind-tab1 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-win"]), $("#ranking-kind-tab2 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-waza-win"])) : ($("#tab1").addClass("disable"), $("#tab2").addClass("disable"), $("#tab3").removeClass("disable"), 2 == parseInt(util.langCode()) ? ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelEN"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelEN")) : 3 == parseInt(util.langCode()) ? ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelFR"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelFR")) : 4 == parseInt(util.langCode()) ? ($("#ranking-kind-tab1 > .tablabel").addClass("tablabelIT"), $("#ranking-kind-tab2 > .tablabel").addClass("tablabelIT")) : 5 == parseInt(util.langCode()) ? ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelDE"), $("#ranking-kind-tab2 > .tablabel").removeClass("tablabelDE"), $("#ranking-kind-tab2 > .tablabel").addClass("tablabelDE2")) : 7 == parseInt(util.langCode()) && ($("#ranking-kind-tab1 > .tablabel").removeClass("tablabelES"), $("#ranking-kind-tab2 > .tablabel").addClass("tablabelES")), $("#ranking-kind-tab1 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-lose"]), $("#ranking-kind-tab2 > .tablabel").text(langCtrl.lang.rankmatch_pokemonranking_detailPageTexts["kind-tab-battle-waza-lose"])), e.rankingTabKind = 1, 1 == e.rankingTab ? e.changeRankingTypeTab2() : e.changeRankingTypeTab()
    }
    showPokemonRanking() {
      const e = this;
      let t = "",
        a = "";
      if (t = 1 == e.rankingTab ? "temoti" : 2 == e.rankingTab ? "win" : "lose", 1 == e.rankingTabKind ? a = "pokemon" : 2 == e.rankingTabKind ? a = "waza" : 3 == e.rankingTabKind ? a = "tokusei" : 4 == e.rankingTabKind ? a = "motimono" : 5 == e.rankingTabKind && (a = "seikaku"), $("#pokemonRankingBody").empty(), $("#wazaRankingBody").empty(), !1 === e.detailData.hasOwnProperty(e.rankingData[e.detailGetParam.idx].id) || !1 === e.detailData[e.rankingData[e.detailGetParam.idx].id].hasOwnProperty(e.rankingData[e.detailGetParam.idx].form)) return;
      if (void 0 === e.detailData[e.rankingData[e.detailGetParam.idx].id][e.rankingData[e.detailGetParam.idx].form]) return;
      let n = e.detailData[e.rankingData[e.detailGetParam.idx].id][e.rankingData[e.detailGetParam.idx].form][t][a],
        i = "";
      if ("pokemon" == a) {
        for (var o in $("#pokemonRankingBody").removeClass("disableDisplay"), $("#wazaRankingBody").addClass("disableDisplay"), n) {
          var l = parseInt(o) + 1;
          let e = n[o].id - 1,
            t = n[o].id,
            a = n[o].form;
          i += '<div class="rankingRow2">', i += '<div class="leftContainer">', i += '<div class="rank">', i += '<div class="rankText">' + l.toString() + "</div>", i += "</div>", i += "</div>", i += '<div class="rightContainer">', i += '<div class="pokemonContainer">', i += '<div class="infoContainer">', i += '<div class="pokemonName">' + langCtrl.dex.poke[e] + "</div>", i += '<div class="blineDividor"></div>', i += '<div class="type1Continer typeColor' + mdCtrl.md.pokeType[t][a][0] + '">', i += '<div class="typeName">' + langCtrl.dex.pokeType[mdCtrl.md.pokeType[t][a][0]] + "</div>", i += "</div>", 2 == mdCtrl.md.pokeType[t][a].length && (i += '<div class="type2Continer typeColor' + mdCtrl.md.pokeType[t][a][1] + '">', i += '<div class="typeName">' + langCtrl.dex.pokeType[mdCtrl.md.pokeType[t][a][1]] + "</div>", i += "</div>"), i += "</div>", i += '<div class="pokemonIconContainer">', i += '<div class="icon"><img src="./img/poke/cap' + ("000" + n[o].id).slice(-4) + "_f" + ("0" + n[o].form).slice(-2) + '_s0.png" width="120" height="120" onError="this.onerror=null;this.src=\'./img/icons/ball_g.png\';"></div>', i += "</div>", i += "</div>", i += "</div>", i += "</div>"
        }
        $("#pokemonRankingBody").empty(), $("#pokemonRankingBody").html(i)
      } else {
        $("#pokemonRankingBody").addClass("disableDisplay"), $("#wazaRankingBody").removeClass("disableDisplay");
        var r = {};
        for (var o in "waza" == a ? r = langCtrl.dex.waza : "tokusei" == a ? r = langCtrl.dex.tokusei : "motimono" == a ? r = e.itemnamejson.itemname : "seikaku" == a && (r = langCtrl.dex.seikaku), n) {
          i += '<div class="waza-ranking-row">', i += '<div class="leftContainer">', i += '<div class="rank">', i += '<div class="rankText">' + (l = parseInt(o) + 1).toString() + "</div>", i += "</div>", i += "</div>", i += '<div class="rightContainer">', i += '<div class="wazaContainer">', i += '<div class="infoContainer">', i += '<div class="wazaName">' + r[n[o].id] + "</div>", i += "</div>", i += '<div class="wazaUseRateContainer">', i += '<p class="rate">' + util.formatFraction(n[o].val.toString()) + "</p>", i += "</div>", i += "</div>", i += "</div>", i += "</div>"
        }
        $("#pokemon-detail-body").empty(), $("#wazaRankingBody").html(i)
      }
    }
    setUIAction() {
      const e = this;
      $("#ranking-kind-tab1").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 1 != e.rankingTabKind && (e.rankingTabKind = 1, e.changeRankingTypeTab())
      })), $("#ranking-kind-tab2").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 2 != e.rankingTabKind && (e.rankingTabKind = 2, e.changeRankingTypeTab())
      })), $("#ranking-kind-tab2-1").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 1 != e.rankingTabKind && (e.rankingTabKind = 1, e.changeRankingTypeTab2())
      })), $("#ranking-kind-tab2-2").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 2 != e.rankingTabKind && (e.rankingTabKind = 2, e.changeRankingTypeTab2())
      })), $("#ranking-kind-tab2-3").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 3 != e.rankingTabKind && (e.rankingTabKind = 3, e.changeRankingTypeTab2())
      })), $("#ranking-kind-tab2-4").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 4 != e.rankingTabKind && (e.rankingTabKind = 4, e.changeRankingTypeTab2())
      })), $("#ranking-kind-tab2-5").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), 5 != e.rankingTabKind && (e.rankingTabKind = 5, e.changeRankingTypeTab2())
      })), $("#tab1").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), $("#ranking-kind-type1").hide(), $("#ranking-kind-type2").show(), e.rankingTab = 1, e.changeRankingTab()
      })), $("#tab2").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), $("#ranking-kind-type1").show(), $("#ranking-kind-type2").hide(), e.rankingTab = 2, e.changeRankingTab()
      })), $("#tab3").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), $("#ranking-kind-type1").show(), $("#ranking-kind-type2").hide(), e.rankingTab = 3, e.changeRankingTab()
      })), $("#detail-prev").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), e.detailGetParam.idx--, e.detailGetParam.idx < 0 && (e.detailGetParam.idx = e.rankingData.length - 1), e.rankingTab = 1, e.rankingTabKind = 1, $("#ranking-kind-type1").hide(), $("#ranking-kind-type2").show(), e.selectDetailView(), e.changeRankingTab()
      })), $("#detail-next").click((function (t) {
        t.preventDefault(), t.stopImmediatePropagation(), e.detailGetParam.idx++, e.detailGetParam.idx > e.rankingData.length - 1 && (e.detailGetParam.idx = 0), e.rankingTab = 1, e.rankingTabKind = 1, $("#ranking-kind-type1").hide(), $("#ranking-kind-type2").show(), e.selectDetailView(), e.changeRankingTab()
      }))
    }
    createRankingTab() {
      let e = util.getPokemonDetailTabCount(this.detailGetParam.startTs, 2),
        t = "tab" + e.toString(),
        a = $("#ranking-kind-tab-group2");
      if (console.log(e), a.hide(), 4 === e) {
        var n = ["ranking-kind-tab2-2", "ranking-kind-tab2-3", "ranking-kind-tab2-5", "ranking-kind-tab2-4"];
        for (var i of n) a.append($("<div>").attr("id", i).addClass(t).append($("<span>").addClass("tablabel")))
      } else {
        n = ["ranking-kind-tab2-2", "ranking-kind-tab2-3", "ranking-kind-tab2-4"];
        for (var i of n) a.append($("<div>").attr("id", i).addClass(t).append($("<span>").addClass("tablabel")))
      }
      a.show()
    }
  }
  class Z {
    constructor() {
      const e = this;
      udCtrl.login((function () {
        0 === udCtrl.playRomCount() && util.locationMove("./top.html"), e.selectRom = udCtrl.ud.share.selectRom, e.selectFriendCompe = udCtrl.ud.share.selectFriendCompe, e.historyStart = 0, e.myrank = 0, e.isEndHistory = {}, udCtrl.load_friendcompe_list(e.selectRom, !1, (function () {
          udCtrl.load_friendcompe_detail(e.selectRom, e.selectFriendCompe, (function () {
            e.dataInitialize()
          }))
        }))
      }))
    }
    dataInitialize() {
      const e = this;
      let t = udCtrl.ud.myInfo.playInfo[e.selectRom].friendCompe[e.selectFriendCompe];
      const a = "/" + e.selectFriendCompe + "/" + t.detail.rst + "/" + t.detail.ts1 + "/traner-1";
      util.rankingRequest(a, (function (t) {
        let a = udCtrl.ud.share.selectRom,
          n = udCtrl.ud.myInfo.playInfo[a].iconImg;
        for (var i in t)
          if (-1 !== t[i].icon.indexOf(n)) {
            e.myrank = t[i].rank;
            break
          }
        e.uiInitialize()
      }), (function () {
        e.uiInitialize()
      }))
    }
    uiInitialize() {
      const e = this;
      $("#romIcon > .romIconSize").addClass(mdCtrl.md.rom[e.selectRom].icon), $("#romIcon > .romIconSize > .romIconKind").addClass(mdCtrl.md.langStr[udCtrl.ud.myInfo.playInfo[e.selectRom].lang]), $("#userName").html(udCtrl.ud.myInfo.playInfo[e.selectRom].name), $("#myicon").addClass("icon-" + udCtrl.ud.myInfo.playInfo[e.selectRom].icon), $("#userPlace").html(mdCtrl.md.langStrL[util.langCode()][udCtrl.ud.myInfo.playInfo[e.selectRom].lang]), $("#topButton").on("click touchstart", (function (e) {
        e.preventDefault(), util.locationMove("./myresult_romselect.html")
      }));
      const t = udCtrl.ud.myInfo.playInfo[this.selectRom].friendCompe[this.selectFriendCompe],
        a = t.detail;
      $("#title").html(a.name), $("#subtitle").html(a.subname), $("#trainerName").html(a.playerName), $("#roms").html(a.soft.map(e => langCtrl.common.roms[e]).join("<br>")), $("#rule").html(langCtrl.common.rule[a.rule]), $("#joinedNum").html(util.numberFormat(a.cnt)), $("#period").html(a.start + "-" + a.end), $("#period").html(util.joinDate(a.start, a.end)), $("#compeResult .point").html(""), $("#compeResult>.body").addClass("body-" + util.langCodeStr());
      let n = [e.myrank, t.result.win, t.result.lose, t.result.drow];
      $("#compeResult .friend-result").html(util.replaced(langCtrl.common.unit["friend-result"], n)), $("#compeResult .win").html(t.result.win), $("#compeResult .lose").html(t.result.lose), $("#compeResult .draw").html(t.result.drow), $("#friendCompetitionDetail").on("click touchstart", (function (e) {
        e.preventDefault(), util.locationMove("./friendcompetition_detail.html")
      })), $("#prevButton").on("click touchstart", (function (a) {
        a.preventDefault(), e.historyView(t.log, e.historyStart - 10)
      })), $("#nextButton").on("click touchstart", (function (a) {
        a.preventDefault(), e.historyView(t.log, e.historyStart + 10)
      })), e.historyView(t.log), $("#backLinkFriendCompList .footerText .label").html(langCtrl.common.footerBackLinkLabel.backLinkFriendCompList), $("#backLinkFriendCompList").click((function (e) {
        util.locationMove("./friendcompetition_list.html")
      }))
    }
    historyView(e, t) {
      t = (t = void 0 === t ? 0 : t) < 0 ? 0 : t, this.historyStart = t, $("#prevButton").removeClass("disableDisplay"), $("#nextButton").removeClass("disableDisplay"), 0 == t && $("#prevButton").addClass("disableDisplay"), e.length - t <= 10 && $("#nextButton").addClass("disableDisplay"), e.length > 0 && $("#latestDate").html(e[t].date);
      let a = 0,
        n = "";
      for (let i = t; i < e.length && (n += '<div class="historyRow">', n += '<div class="historyRowMargin">', n += '<div class="header">', n += '<div class="iconContainer">', n += '<div class="' + mdCtrl.md.resultCase[e[i].result] + 'Icon"><span class="' + mdCtrl.md.resultCase[e[i].result] + 'IconText"></span></div>', n += "</div>", n += '<div class="dateText">' + util.joinDateTz(e[i].date) + "</div>", n += "</div>", n += '<div class="lineDividor"></div>', n += '<div class="body">', n += '<div class="userIconContainer">', n += '<div class="icon"><img src="./img/icons/trainer/' + e[i].icon + '" onError="this.onerror=null;this.src=\'./img/icons/icon_prof_icon02.png\';"></div>', n += "</div>", n += '<div class="userNameContainer">', n += '<div class="userName">' + e[i].name + "</div>", n += "</div>", n += '<div class="placeContainer">', n += '<div class="code">', n += '<div class="codeText">' + e[i].locale + "</div>", n += "</div>", n += "</div>", n += "</div>", n += "</div>", n += "</div>", !(a >= 9)); i++) a++;
      $("#historyList").html(n), langCtrl.commonInit()
    }
  }
  class Q {
    constructor() {
      const e = this;
      document.getElementById("competitionList").addEventListener("touchmove", (function () {
        e.isScroll = !0
      }), {
        passive: !0
      }), document.getElementById("competitionList").addEventListener("touchend", (function () {
        e.isScroll = !1
      }), {
        passive: !0
      }), udCtrl.tournament_login((function (t) {
        e.isLoggedin = t, udCtrl.load_tournament_list({
          moreFlg: !1
        }, (function () {
          e.isScroll = !1, e.uiInitialize()
        }))
      }))
    }
    uiInitialize() {
      const e = this,
        t = udCtrl.ud.tournamentList;
      t.sort((e, t) => e.battleperiod.start == t.battleperiod.start ? e.cmpid > t.cmpid ? 1 : -1 : e.battleperiod.start < t.battleperiod.start ? 1 : -1);
      let a = "";
      for (let e = 0; e < t.length; e++) {
        let n = Math.floor((new Date).getTime() / 1e3),
          i = "prepar",
          o = "prepar",
          l = "prepar";
        parseInt(t[e].entryperiod.start, 10) <= n && (i = parseInt(t[e].entryperiod.end, 10) <= n ? "end" : "reception"), parseInt(t[e].checkinperiod.start, 10) <= n && (o = parseInt(t[e].checkinperiod.end, 10) <= n ? "end" : "reception"), parseInt(t[e].battleperiod.start, 10) <= n && (l = 7 == t[e].competitionStatus ? "end" : "open"), a += '<div class="competitionRow" id="compe' + e + '" data-id="' + t[e].cmpid + '">', a += '<div class="competitionRowMargin">', a += '<div class="compeHeader">', a += '<div class="bannerContainer"><img class="banner" src="' + window.tournamentBannerEndPoint + t[e].banner + '"></div>', a += '<div class="title">' + t[e].title + "</div>", a += "</div>", a += '<div class="dotDividor"></div>', a += '<div class="periodContainer2">', a += '<div class="entry-period-text label"></div>', a += '<div class="statContainer">', a += '<div class="stat-' + i + "-text stat " + i + '"></div>', void 0 !== t[e].myStatus && t[e].myStatus >= 1 && (a += '<div class="stat check">笨� </div>'), a += "</div>", a += '<div class="periodTextContainer">', a += '<div class="periodText">' + util.joinDate(util.timestamp2Text(t[e].entryperiod.start), util.timestamp2Text(t[e].entryperiod.end)) + "</div>", a += "</div>", a += "</div>", a += '<div class="dotDividor"></div>', a += '<div class="periodContainer2">', a += '<div class="checkin-period-text label"></div>', a += '<div class="statContainer">', a += '<div class="stat-' + o + "-text stat " + o + '"></div>', void 0 !== t[e].myStatus && t[e].myStatus >= 2 && (a += '<div class="stat check">笨� </div>'), a += "</div>", a += '<div class="periodTextContainer">', a += '<div class="periodText">' + util.joinDate(util.timestamp2Text(t[e].checkinperiod.start), util.timestamp2Text(t[e].checkinperiod.end)) + "</div>", a += "</div>", a += "</div>", a += '<div class="dotDividor"></div>', a += '<div class="periodContainer2">', a += '<div class="open-period-text label"></div>', a += '<div class="statContainer">', a += '<div class="stat-' + l + "-text stat " + l + '"></div>', a += "</div>", a += '<div class="periodTextContainer">', a += '<div class="periodText">' + util.joinDate(util.timestamp2Text(t[e].battleperiod.start), util.timestamp2Text(t[e].battleperiod.end)) + "</div>", a += "</div>", a += "</div>", a += "</div>", a += "</div>"
      }
      $("#competitionList").html(a);
      for (let a = 0; a < t.length; a++) $("#compe" + a).click((function (t) {
        t.preventDefault(), e.isScroll || (t.stopImmediatePropagation(), udCtrl.ud.share.selectTournament = $(this).data("id"), udCtrl.save(), util.locationMove("./tournament_detail.html"))
      }));
      $("#competitionList").off("ready"), $("#competitionList").ready((function () {
        langCtrl.init()
      }))
    }
  }
  class Y {
    constructor(e) {
      this.detail = e, this.selecter = "#entryModal", this.init()
    }
    init(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      $("#entryBtn").click((function (e) {
        e.preventDefault(), udCtrl.tournament_entry({
          compeId: t.detail.selectTournament
        }, (function (e) {
          e ? (console.log("entry success."), nDialog.open({
            title: langCtrl.common.dialogMsg.entry_success_t,
            msg: langCtrl.common.dialogMsg.entry_success_m,
            okCallback: function () {
              t.detail.updateHeader((function () {
                t.detail.modalClose(), nDialog.close()
              }))
            }
          })) : console.log("entry failed.")
        }))
      })), a()
    }
    uiUpdate(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      udCtrl.load_tournament_playersList({
        compeId: t.detail.selectTournament
      }, (function (e) {
        null !== e ? ($("#modalHeaderTitle").html(langCtrl.common.tournamentStatBtn.entry), $("#entryModal_joinNum").html(util.msNumFormat(langCtrl.common.unit.tournament_entrynum, [t.detail.info.eCnt, t.detail.info.limit])), $("#entryModal_period").html(util.joinDate(util.timestamp2Text(t.detail.info.entryPeriod.start), util.timestamp2Text(t.detail.info.entryPeriod.end))), $(t.selecter).off("ready"), $(t.selecter).ready((function () {
          a()
        }))) : a()
      }))
    }
    enable(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      $("#specialButton").off("click"), $("#specialButton").click((function (e) {
        e.preventDefault(), t.detail.modalEnableForce("#entryModal", (function () {
          t.detail.modalOpen()
        }))
      })), t.uiUpdate((function () {
        a()
      }))
    }
  }
  class X {
    constructor(e) {
      this.detail = e, this.selecter = "#registerTeamModal", this.init()
    }
    init(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      void 0 !== t.detail.info.myTeamId && "" != t.detail.info.myTeamId && ($("#inputRegisterTeam").val(util.formatTeamId(t.detail.info.myTeamId)), $("#inputRegisterTeam").ready((function () {
        $("#registerModalTeamLoadBtn").click()
      }))), $("#inputRegisterTeam").change((function () {
        $(this).val(util.formatTeamId($(this).val()))
      })), $("#registerModalTeamLoadBtn").click((function (e) {
        e.preventDefault();
        const a = $("#inputRegisterTeam").val().replace(/ /g, "");
        "" != a ? udCtrl.get_tournament_teaminfo({
          compeId: t.detail.selectTournament,
          teamId: a
        }, (function (e) {
          if (e) {
            const e = udCtrl.ud.tournamentDetail[t.detail.selectTournament].myteam;
            let a, n, i = "";
            i += '<div class="trainerRow">', i += '<div class="icon"><img src="./img/icon_player/' + mdCtrl.md.playericon[e.tIcon] + '"></div>', i += '<div class="nameContainer">', i += '<div class="name">' + e.tName + "</div>", i += "</div>", i += "</div>";
            for (let t = 0; t < e.teamInfo.length; t++) a = "./img/poke/cap" + ("000" + e.teamInfo[t].pid).slice(-4) + "_f" + ("0" + e.teamInfo[t].frm).slice(-2) + "_s" + e.teamInfo[t].sex + ".png", n = "./img/poke/cap" + ("000" + e.teamInfo[t].pid).slice(-4) + "_f" + ("0" + e.teamInfo[t].frm).slice(-2) + "_s0.png", i += '<div class="pokeRow">', i += '<div class="icon"><img src="' + a + '" onError="this.onerror=null;this.src=\'' + n + "';\"></div>", i += '<div class="nameContainer">', i += '<div class="name">' + e.teamInfo[t].name + "</div>", i += "</div>", i += "</div>";
            $("#registerModalTeamInfoContainer").removeClass("disableDisplay"), $("#registerModalTeamInfoContainer").html(i), $("#registerModalTeamInfoContainer").ready((function () {}))
          }
        })) : nDialog.open({
          title: langCtrl.common.dialogMsg.loadteam_empty_t,
          msg: langCtrl.common.dialogMsg.loadteam_empty_m
        })
      })), $("#registerTeamBtn").click((function (e) {
        e.preventDefault();
        const a = $("#inputRegisterTeam").val().replace(/ /g, "");
        udCtrl.tournament_registerTeam({
          compeId: t.detail.selectTournament,
          teamId: a
        }, (function (e) {
          e ? (console.log("register team success."), nDialog.open({
            title: langCtrl.common.dialogMsg.rteam_success_t,
            msg: langCtrl.common.dialogMsg.rteam_success_m,
            okCallback: function () {
              t.detail.modalClose(), nDialog.close()
            }
          })) : console.log("entry failed.")
        }))
      })), a()
    }
    uiUpdate(e) {
      const t = void 0 === e ? function () {} : e;
      $("#modalHeaderTitle").html(langCtrl.common.tournamentStatBtn.registerTeam), $("#registerTeamModal_checkinDate").html(util.timestamp2Text(this.detail.info.checkinPeriod.start)), $("#registerTeamModal_checkinMinite").html(util.msNumFormat(langCtrl.common.unit.tournament_checkinperiod2, [this.detail.info.checkin])), t()
    }
    enable(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      $("#specialButton").off("click"), $("#specialButton").click((function (e) {
        e.preventDefault(), t.detail.modalEnableForce("#registerTeamModal", (function () {
          t.detail.modalOpen()
        }))
      })), t.uiUpdate((function () {
        a()
      }))
    }
  }
  class ee {
    constructor(e) {
      this.detail = e, this.selecter = "#checkinModal", this.init()
    }
    init(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      void 0 !== t.detail.info.myTeamId && "" != t.detail.info.myTeamId && ($("#inputCheckin").val(util.formatTeamId(t.detail.info.myTeamId)), $("#inputCheckin").ready((function () {
        t.detail.info.myTeamId && $("#checkinModalTeamLoadBtn").click()
      }))), $("#inputCheckin").change((function () {
        $(this).val(util.formatTeamId($(this).val()))
      })), $("#checkinModalTeamLoadBtn").click((function (e) {
        e.preventDefault();
        const a = $("#inputCheckin").val().replace(/ /g, "");
        "" != a ? udCtrl.get_tournament_teaminfo({
          compeId: t.detail.selectTournament,
          teamId: a
        }, (function (e) {
          if (e) {
            const e = udCtrl.ud.tournamentDetail[t.detail.selectTournament].myteam;
            let a, n, i = "";
            i += '<div class="trainerRow">', i += '<div class="icon"><img src="./img/icon_player/' + mdCtrl.md.playericon[e.tIcon] + '"></div>', i += '<div class="nameContainer">', i += '<div class="name">' + e.tName + "</div>", i += "</div>", i += "</div>";
            for (let t = 0; t < e.teamInfo.length; t++) a = "./img/poke/cap" + ("000" + e.teamInfo[t].pid).slice(-4) + "_f" + ("0" + e.teamInfo[t].frm).slice(-2) + "_s" + e.teamInfo[t].sex + ".png", n = "./img/poke/cap" + ("000" + e.teamInfo[t].pid).slice(-4) + "_f" + ("0" + e.teamInfo[t].frm).slice(-2) + "_s0.png", i += '<div class="pokeRow">', i += '<div class="icon"><img src="' + a + '" onError="this.onerror=null;this.src=\'' + n + "';\"></div>", i += '<div class="nameContainer">', i += '<div class="name">' + e.teamInfo[t].name + "</div>", i += "</div>", i += "</div>";
            $("#checkinModalTeamInfoContainer").removeClass("disableDisplay"), $("#checkinModalTeamInfoContainer").html(i), $("#checkinModalTeamInfoContainer").ready((function () {}))
          } else nDialog.open({
            title: langCtrl.common.dialogMsg.loadteam_failed_t,
            msg: langCtrl.common.dialogMsg.loadteam_failed_m
          })
        })) : nDialog.open({
          title: langCtrl.common.dialogMsg.loadteam_empty_t,
          msg: langCtrl.common.dialogMsg.loadteam_empty_m
        })
      })), $("#checkinBtn").click((function (e) {
        e.preventDefault();
        const a = $("#inputCheckin").val().replace(/ /g, "");
        udCtrl.tournament_checkin({
          compeId: t.detail.selectTournament,
          teamId: a
        }, (function (e) {
          e ? (console.log("checkin success."), nDialog.open({
            title: langCtrl.common.dialogMsg.checkin_success_t,
            msg: langCtrl.common.dialogMsg.checkin_success_m,
            okCallback: function () {
              t.detail.updateHeader((function () {
                t.detail.modalClose()
              })), nDialog.close()
            }
          })) : console.log("entry failed.")
        }))
      })), a()
    }
    uiUpdate(e) {
      const t = void 0 === e ? function () {} : e;
      $("#modalHeaderTitle").html(langCtrl.common.tournamentStatBtn.checkin), $("#checkinModal_checkinDate").html(util.timestamp2Text(this.detail.info.checkinPeriod.end)), $("#checkinModal_checkinMinite").html(util.msNumFormat(langCtrl.common.unit.tournament_checkinperiod, [this.detail.info.checkin])), t()
    }
    enable(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      $("#specialButton").off("click"), $("#specialButton").click((function (e) {
        e.preventDefault(), t.detail.modalEnableForce("#checkinModal", (function () {
          t.detail.modalOpen()
        }))
      })), t.uiUpdate((function () {
        a()
      }))
    }
  }
  class te {
    constructor(e) {
      this.detail = e, this.selecter = "#battleStartModal", this.init()
    }
    init(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      $("#battleStartBtn").click((function (e) {
        e.preventDefault(), udCtrl.tournament_matchprepare({
          compeId: t.detail.selectTournament
        }, (function (e) {
          e ? (console.log("battle preparation success."), wsocCtrl.sendmessage({
            func: "battleStart_prepar"
          })) : console.log("battle preparation failed.")
        }))
      })), a()
    }
    uiUpdate(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      udCtrl.get_tournament_matchcard({
        compeId: t.detail.selectTournament
      }, (function () {
        t.detail.isLoadMatchCard = !0;
        const e = udCtrl.ud.tournamentDetail[t.detail.selectTournament].matchcard;
        if (void 0 !== e && void 0 !== e.trainer) {
          let t, n, i = "";
          i += '<div class="trainerRow">', i += '<div class="icon"><img src="./img/icon_player/' + mdCtrl.md.playericon[e.trainer.icon] + '"></div>', i += '<div class="nameContainer">', i += '<div class="name">' + e.trainer.name + "</div>", i += "</div>", i += "</div>";
          for (let a = 0; a < e.trainer.team.length; a++) t = "./img/poke/cap" + ("000" + e.trainer.team[a].pid).slice(-4) + "_f" + ("0" + e.trainer.team[a].frm).slice(-2) + "_s" + e.trainer.team[a].sex + ".png", n = "./img/poke/cap" + ("000" + e.trainer.team[a].pid).slice(-4) + "_f" + ("0" + e.trainer.team[a].frm).slice(-2) + "_s0.png", i += '<div class="pokeRow">', i += '<div class="icon"><img src="' + t + '" onError="this.onerror=null;this.src=\'' + n + "';\"></div>", i += '<div class="nameContainer">', i += '<div class="name">' + e.trainer.team[a].name + "</div>", i += "</div>", i += "</div>";
          $("#battleStartTeamInfoContainer").removeClass("disableDisplay"), $("#battleStartTeamInfoContainer").html(i), a()
        }
      })), $("#modalHeaderTitle").html(langCtrl.common.tournamentStatBtn.battlePrepar), $("#battleStartModal_startDate").html(util.timestamp2Text(t.detail.info.compePeriod.start))
    }
    matchCardStatSwitch(e) {
      const t = void 0 === e ? function () {} : e;
      0 == udCtrl.ud.tournamentDetail[this.detail.selectTournament].matchcard.prepare.op ? ($("#battleStartStatusContainer").addClass("statusPreparation"), $("#battleStartStatusContainer").removeClass("statusReady"), $("#battleStartStatusText").html(langCtrl.common.tournamentBattlePreparText.preparation)) : ($("#battleStartStatusContainer").addClass("statusReady"), $("#battleStartStatusContainer").removeClass("statusPreparation"), $("#battleStartStatusText").html(langCtrl.common.tournamentBattlePreparText.ready)), 0 == udCtrl.ud.tournamentDetail[this.detail.selectTournament].matchcard.prepare.me ? $("#battleStartBtn").removeClass("modalDisableButton") : $("#battleStartBtn").addClass("modalDisableButton"), t()
    }
    enable(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      t.matchCardStatSwitch();
      const n = function (e) {
          e.preventDefault(), udCtrl.tournament_matchprepare({
            compeId: t.detail.selectTournament
          }, (function (e) {
            e ? (console.log("battle start success."), t.matchCardStatSwitch(), wsocCtrl.sendmessage({
              func: "battleStart_prepar"
            }), 1 == udCtrl.ud.tournamentDetail[t.detail.selectTournament].matchcard.prepare.me && 1 == udCtrl.ud.tournamentDetail[t.detail.selectTournament].matchcard.prepare.op && nDialog.open({
              title: langCtrl.common.dialogMsg.bstart_success_t,
              msg: langCtrl.common.dialogMsg.bstart_success_m,
              okCallback: function () {
                t.detail.updateHeader((function () {
                  t.detail.modalCtrl.battleInfo.enable((function () {
                    t.detail.modalMove(t.selecter, t.detail.modalCtrl.battleInfo.selecter), nDialog.close((function () {
                      nDialog.open({
                        title: langCtrl.common.dialogMsg.bstart_success3_t,
                        msg: langCtrl.common.dialogMsg.bstart_success3_m,
                        okCallback: function () {
                          nDialog.close()
                        }
                      })
                    }))
                  }))
                })), nDialog.close()
              }
            })) : console.log("battle start failed.")
          }))
        },
        i = Math.floor((new Date).getTime() / 1e3);
      t.detail.info.compePeriod.start > i ? ($("#battleStartBtn").addClass("modalDisableButton"), $("#battleStartModalBattleCardContainer").addClass("disableDisplay"), function e(a) {
        setTimeout((function () {
          const a = Math.floor((new Date).getTime() / 1e3);
          t.detail.info.compePeriod.start <= a ? ($("#battleStartBtn").removeClass("modalDisableButton"), $("#battleStartModalBattleCardContainer").removeClass("disableDisplay"), $("#battleStartBtn").off("click"), $("#battleStartBtn").click(n)) : e(1e3 * (t.detail.info.compePeriod.start - a + 1))
        }), a)
      }(1e3 * (t.detail.info.compePeriod.start - i + 1))) : ($("#battleStartBtn").off("click"), $("#battleStartBtn").click(n)), $("#specialButton").off("click"), $("#specialButton").click((function (e) {
        e.preventDefault(), t.detail.modalEnableForce("#battleStartModal", (function () {
          t.detail.modalOpen()
        }))
      })), t.uiUpdate((function () {
        a()
      }))
    }
  }
  class ae {
    constructor(e) {
      this.detail = e, this.selecter = "#battleInfoModal", this.init()
    }
    init(e) {
      (void 0 === e ? function () {} : e)()
    }
    uiUpdate(e) {
      const t = void 0 === e ? function () {} : e,
        a = udCtrl.ud.tournamentDetail[this.detail.selectTournament].matchcard;
      if (void 0 !== a && void 0 !== a.trainer) {
        let e, t, n = "";
        n += '<div class="trainerRow">', n += '<div class="icon"><img src="./img/icon_player/' + mdCtrl.md.playericon[a.trainer.icon] + '"></div>', n += '<div class="nameContainer">', n += '<div class="name">' + a.trainer.name + "</div>", n += "</div>", n += "</div>";
        for (let i = 0; i < a.trainer.team.length; i++) e = "./img/poke/cap" + ("000" + a.trainer.team[i].pid).slice(-4) + "_f" + ("0" + a.trainer.team[i].frm).slice(-2) + "_s" + a.trainer.team[i].sex + ".png", t = "./img/poke/cap" + ("000" + a.trainer.team[i].pid).slice(-4) + "_f" + ("0" + a.trainer.team[i].frm).slice(-2) + "_s0.png", n += '<div class="pokeRow">', n += '<div class="icon"><img src="' + e + '" onError="this.onerror=null;this.src=\'' + t + "';\"></div>", n += '<div class="nameContainer">', n += '<div class="name">' + a.trainer.team[i].name + "</div>", n += "</div>", n += "</div>";
        $("#battleInfoTeamInfoContainer").removeClass("disableDisplay"), $("#battleInfoTeamInfoContainer").html(n), $("#battleInfoTeamInfoContainer").ready((function () {}))
      }
      $("#modalHeaderTitle").html(langCtrl.common.tournamentStatBtn.battleInfo), $("#battleInfoModal_startDate").html(util.timestamp2Text(util.getEnableReportVictoryTime(a.readyTm))), $("#bi_pass").html(a.passwd), $("#bi_updateDate").html(langCtrl.common.battleCardText.passUpdateDate + util.timestamp2Text(a.pwlst)), t()
    }
    enable(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      $("#specialButton").off("click"), $("#specialButton").click((function (e) {
        e.preventDefault(), t.detail.modalEnableForce("#battleInfoModal", (function () {
          t.detail.modalOpen()
        }))
      })), t.uiUpdate((function () {
        a()
      }))
    }
  }
  class ne {
    constructor(e) {
      this.detail = e, this.selecter = "#reportVictoryModal", this.init()
    }
    init(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      $("#reportVictoryBtn").click((function (e) {
        e.preventDefault(), udCtrl.tournament_reportResult({
          compeId: t.detail.selectTournament,
          operation: 0
        }, (function (e) {
          0 == e.conflict ? (console.log("report victory success."), 1 == e.status && (t.detail.modalCtrl.withdrawVictory.enable((function () {
            t.detail.modalMove(t.selecter, t.detail.modalCtrl.withdrawVictory.selecter)
          })), wsocCtrl.sendmessage({
            func: "reportVictory_win"
          }))) : console.log("report victory failed.")
        }))
      })), a()
    }
    uiUpdate(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      $("#modalHeaderTitle").html(langCtrl.common.tournamentStatBtn.winReport), $("#specialButton>.text").html(langCtrl.common.tournamentStatBtn.winReport), t.detail.isLoadMatchCard ? udCtrl.get_tournament_battlestat({
        compeId: t.detail.selectTournament
      }, (function () {
        t.detail.isLoadBattleStat = !0;
        const e = udCtrl.ud.tournamentDetail[t.detail.selectTournament].matchcard,
          n = udCtrl.ud.tournamentDetail[t.detail.selectTournament].nowBattle.battle;
        void 0 !== n ? (console.log("get battle status success."), $("#reportVictoryRoundText").html(util.msTextFormat(util.msNumFormat(langCtrl.common.roundText.round_battle, [e.battle]), [t.detail.roundArr[e.round - 1]])), $("#rvUserIcon1").attr("src", "./img/icon_player/" + mdCtrl.md.playericon[e.myData.icon]), $("#rvUserName1").html(e.myData.name), $("#rvWinCnt1").html(n.current[0]), $("#rvUserIcon2").attr("src", "./img/icon_player/" + mdCtrl.md.playericon[e.trainer.icon]), $("#rvUserName2").html(e.trainer.name), $("#rvWinCnt2").html(n.current[1]), $("#reportVictoryLimit").html(util.timestamp2Text(parseInt(e.rdSt, 10) + 1800))) : console.log("get battle status failed."), a()
      })) : udCtrl.get_tournament_matchcard({
        compeId: t.detail.selectTournament
      }, (function () {
        t.detail.isLoadMatchCard = !0, t.uiUpdate((function () {
          a()
        }))
      }))
    }
    enable(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      $("#specialButton").off("click"), $("#specialButton").click((function (e) {
        e.preventDefault(), t.detail.modalEnableForce("#reportVictoryModal", (function () {
          t.detail.modalOpen()
        }))
      })), t.uiUpdate((function () {
        a()
      }))
    }
  }
  class ie {
    constructor(e) {
      this.detail = e, this.selecter = "#withdrawVictoryModal", this.init()
    }
    init(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      $("#withdrawVictoryBtn").click((function (e) {
        e.preventDefault(), udCtrl.tournament_reportResult({
          compeId: t.detail.selectTournament,
          operation: 9
        }, (function (e) {
          0 == e.conflict ? (console.log("withdraw victory success."), 0 == e.status && (t.detail.modalCtrl.reportVictory.enable((function () {
            t.detail.modalMove(t.selecter, t.detail.modalCtrl.reportVictory.selecter)
          })), wsocCtrl.sendmessage({
            func: "reportVictory_withdraw"
          }))) : console.log("withdraw victory failed.")
        }))
      })), a()
    }
    uiUpdate(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      $("#modalHeaderTitle").html(langCtrl.common.tournamentStatBtn.withdrawWin), $("#specialButton>.text").html(langCtrl.common.tournamentStatBtn.withdrawWin), t.detail.isLoadMatchCard ? udCtrl.get_tournament_battlestat({
        compeId: t.detail.selectTournament
      }, (function () {
        t.detail.isLoadBattleStat = !0;
        const e = udCtrl.ud.tournamentDetail[t.detail.selectTournament].matchcard,
          n = udCtrl.ud.tournamentDetail[t.detail.selectTournament].nowBattle.battle;
        void 0 !== n ? (console.log("get battle status success."), $("#withdrawVictoryRoundText").html(util.msTextFormat(util.msNumFormat(langCtrl.common.roundText.round_battle, [e.battle]), [t.detail.roundArr[e.round - 1]])), $("#wdUserIcon1").attr("src", "./img/icon_player/" + mdCtrl.md.playericon[e.myData.icon]), $("#wdUserName1").html(e.myData.name), $("#wdWinCnt1").html(n.current[0] - 1), $("#wdUserIcon2").attr("src", "./img/icon_player/" + mdCtrl.md.playericon[e.trainer.icon]), $("#wdUserName2").html(e.trainer.name), $("#wdWinCnt2").html(n.current[1]), $("#withdrawVictoryLimit").html(util.timestamp2Text(parseInt(e.rdSt, 10) + 1800))) : console.log("get battle status failed."), a()
      })) : udCtrl.get_tournament_matchcard({
        compeId: t.detail.selectTournament
      }, (function () {
        t.detail.isLoadMatchCard = !0, t.uiUpdate((function () {
          a()
        }))
      }))
    }
    enable(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      $("#specialButton").off("click"), $("#specialButton").click((function (e) {
        e.preventDefault(), t.detail.modalEnableForce("#withdrawVictoryModal", (function () {
          t.detail.modalOpen()
        }))
      })), t.uiUpdate((function () {
        a()
      }))
    }
  }
  class oe {
    constructor(e) {
      this.detail = e, this.selecter = "#approvalVictoryModal", this.init()
    }
    init(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      $("#approvalVictoryBtn").click((function (e) {
        e.preventDefault(), udCtrl.tournament_reportApproval({
          compeId: t.detail.selectTournament
        }, (function (e) {
          if (0 == e.conflict) {
            if (console.log("approval victory success."), 2 == e.status) {
              const e = udCtrl.ud.tournamentDetail[t.detail.selectTournament].matchcard;
              udCtrl.get_tournament_battlestat({
                compeId: t.detail.selectTournament,
                round: e.round,
                battle: e.battle
              }, (function (e) {
                9 == e.status && (t.pageCtrl.nowBattle.battle.current[0] >= 2 || t.pageCtrl.nowBattle.battle.current[1] >= 2) ? nDialog.open({
                  title: langCtrl.common.dialogMsg.opvict_approval_finishround_t,
                  msg: langCtrl.common.dialogMsg.opvict_approval_finishround_m,
                  okCallback: function () {
                    t.detail.updateHeader((function () {
                      t.detail.modalClose()
                    })), nDialog.close()
                  }
                }) : nDialog.open({
                  title: langCtrl.common.dialogMsg.vict_approval_t,
                  msg: langCtrl.common.dialogMsg.vict_approval_m,
                  okCallback: function () {
                    t.detail.isLoadMatchCard = !1, t.detail.updateHeader((function () {
                      t.detail.modalClose()
                    })), nDialog.close()
                  }
                })
              })), wsocCtrl.sendmessage({
                func: "reportVictory_approval"
              })
            }
          } else console.log("approval victory failed.")
        }))
      })), $("#protestVictoryBtn").click((function (e) {
        e.preventDefault(), udCtrl.tournament_protest({
          compeId: t.detail.selectTournament,
          operation: 0
        }, (function (e) {
          0 == e.conflict ? (console.log("protest preparation success."), t.detail.protestInfo = e, t.detail.modalCtrl.protest2.enable((function () {
            t.detail.modalMove(t.selecter, t.detail.modalCtrl.protest2.selecter)
          }))) : console.log("protest preparation failed.")
        }))
      })), a()
    }
    uiUpdate(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      $("#specialButton>.text").html(langCtrl.common.tournamentStatBtn.resultApproval), $("#modalHeaderTitle").html(langCtrl.common.tournamentStatBtn.resultApproval), t.detail.isLoadMatchCard ? udCtrl.get_tournament_battlestat({
        compeId: t.detail.selectTournament
      }, (function () {
        t.detail.isLoadBattleStat = !0;
        const e = udCtrl.ud.tournamentDetail[t.detail.selectTournament].matchcard,
          n = udCtrl.ud.tournamentDetail[t.detail.selectTournament].nowBattle.battle;
        void 0 !== n ? (console.log("get battle status success."), $("#approvalVictoryRoundText").html(util.msTextFormat(util.msNumFormat(langCtrl.common.roundText.round_battle, [e.battle]), [t.detail.roundArr[e.round - 1]])), $("#apUserIcon1").attr("src", "./img/icon_player/" + mdCtrl.md.playericon[e.myData.icon]), $("#apUserName1").html(e.myData.name), $("#apWinCnt1").html(n.current[0]), $("#apUserIcon2").attr("src", "./img/icon_player/" + mdCtrl.md.playericon[e.trainer.icon]), $("#apUserName2").html(e.trainer.name), $("#apWinCnt2").html(n.current[1] - 1), $("#approvalVictoryLimit").html(util.timestamp2Text(parseInt(e.rdSt, 10) + 1800))) : console.log("get battle status failed."), a()
      })) : udCtrl.get_tournament_matchcard({
        compeId: t.detail.selectTournament
      }, (function () {
        t.detail.isLoadMatchCard = !0, t.uiUpdate((function () {
          a()
        }))
      }))
    }
    enable(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      $("#specialButton").off("click"), $("#specialButton").click((function (e) {
        e.preventDefault(), t.detail.modalEnableForce("#approvalVictoryModal", (function () {
          t.detail.modalOpen()
        }))
      })), t.uiUpdate((function () {
        a()
      }))
    }
  }
  class le {
    constructor(e) {
      this.detail = e, this.selecter = "#protest1Modal", this.isUploading = !1, this.init()
    }
    init(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      $("#protest1Btn").click((function (e) {
        e.preventDefault();
        const a = $("#protest1Text").val();
        if ("" == a) return nDialog.open({
          title: langCtrl.common.dialogMsg.protest_textempty_t,
          msg: langCtrl.common.dialogMsg.protest_textempty_m,
          okCallback: function () {
            nDialog.close()
          }
        }), !1;
        udCtrl.tournament_protest({
          compeId: t.detail.selectTournament,
          operation: 1,
          objText: a
        }, (function (e) {
          0 == e.conflict ? (console.log("send protest success."), udCtrl.ud.tournamentDetail[t.detail.selectTournament].nowBattle.status = 4, udCtrl.save(), nDialog.open({
            title: langCtrl.common.dialogMsg.protest_t,
            msg: langCtrl.common.dialogMsg.protest_m,
            okCallback: function () {
              t.detail.updateHeader((function () {
                t.detail.modalClose()
              })), nDialog.close()
            }
          })) : console.log("protest preparation failed.")
        }))
      })), $("#protest1Text").attr("placeholder", langCtrl.common.modalControlText.protestTAPlaceholder), $("#protest1Text").focusin((function () {
        $("#protest1imgUploadBtn").attr("for", "nothing")
      })), $("#protest1Text").focusout((function () {
        setTimeout((function () {
          $("#protest1imgUploadBtn").attr("for", "protest1imgUploadInput")
        }), 1)
      })), $("#protest1imgUploadInput").change((function () {
        if (t.isUploading) return;
        t.isUploading = !0;
        const e = $(this).prop("files")[0];
        void 0 !== e.name && ($("#protest1imgUploadText").html(e.name), util.request_uploadimage(t.detail.protestInfo.imgUrl, $(this), (function (e) {
          t.isUploading = !1, e ? (console.log("image upload success."), nDialog.open({
            title: langCtrl.common.dialogMsg.protest_img_t,
            msg: langCtrl.common.dialogMsg.protest_img_m,
            okCallback: function () {
              nDialog.close()
            }
          })) : (console.log("image upload failed."), nDialog.open({
            title: langCtrl.common.dialogMsg.protest_img_failed_t,
            msg: langCtrl.common.dialogMsg.protest_img_failed_m,
            okCallback: function () {
              nDialog.close()
            }
          }))
        })))
      })), a()
    }
    uiUpdate(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      $("#specialButton>.text").html(langCtrl.common.tournamentStatBtn.inpuProtestt), $("#modalHeaderTitle").html(langCtrl.common.tournamentStatBtn.inpuProtestt), t.detail.isLoadMatchCard ? udCtrl.get_tournament_battlestat({
        compeId: t.detail.selectTournament
      }, (function () {
        t.detail.isLoadBattleStat = !0;
        const e = udCtrl.ud.tournamentDetail[t.detail.selectTournament].matchcard;
        void 0 !== udCtrl.ud.tournamentDetail[t.detail.selectTournament].nowBattle.battle ? (console.log("get battle status success."), $("#protest1RoundText").html(util.msTextFormat(util.msNumFormat(langCtrl.common.roundText.round_battle, [e.battle]), [t.detail.roundArr[e.round - 1]])), $("#protest1Limit").html(util.timestamp2Text(parseInt(e.rdSt, 10) + 1800))) : console.log("get battle status failed."), a()
      })) : udCtrl.get_tournament_matchcard({
        compeId: t.detail.selectTournament
      }, (function () {
        t.detail.isLoadMatchCard = !0, t.uiUpdate((function () {
          a()
        }))
      }))
    }
    enable(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      $("#specialButton").off("click"), $("#specialButton").click((function (e) {
        e.preventDefault(), udCtrl.tournament_protest({
          compeId: t.detail.selectTournament,
          operation: 0
        }, (function (e) {
          0 == e.conflict ? (console.log("protest preparation success."), t.detail.protestInfo = e, t.detail.modalEnableForce("#protest1Modal", (function () {
            t.detail.modalOpen()
          }))) : console.log("protest preparation failed.")
        }))
      })), t.uiUpdate((function () {
        a()
      }))
    }
  }
  class re {
    constructor(e) {
      this.detail = e, this.selecter = "#protest2Modal", this.isUploading = !1, this.init()
    }
    init(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      $("#protest2Btn").click((function (e) {
        e.preventDefault();
        const a = $("#protest2Text").val();
        if ("" == a) return nDialog.open({
          title: langCtrl.common.dialogMsg.protest_textempty_t,
          msg: langCtrl.common.dialogMsg.protest_textempty_m,
          okCallback: function () {
            nDialog.close()
          }
        }), !1;
        udCtrl.tournament_protest({
          compeId: t.detail.selectTournament,
          operation: 1,
          objText: a
        }, (function (e) {
          0 == e.conflict ? (console.log("send protest success."), udCtrl.ud.tournamentDetail[t.detail.selectTournament].nowBattle.status = 3, udCtrl.save(), nDialog.open({
            title: langCtrl.common.dialogMsg.protest_t,
            msg: langCtrl.common.dialogMsg.protest_m,
            okCallback: function () {
              t.detail.updateHeader((function () {
                t.detail.modalClose()
              })), nDialog.close()
            }
          }), wsocCtrl.sendmessage({
            func: "reportVictory_protest"
          })) : console.log("protest preparation failed.")
        }))
      })), $("#protest2WithdrawBtn").click((function (e) {
        e.preventDefault(), t.detail.modalCtrl.approvalVictory.enable((function () {
          t.detail.modalMove(t.selecter, t.detail.modalCtrl.approvalVictory.selecter)
        }))
      })), $("#protest2Text").attr("placeholder", langCtrl.common.modalControlText.protestTAPlaceholder), $("#protest2Text").focusin((function () {
        $("#protest2imgUploadBtn").attr("for", "nothing")
      })), $("#protest2Text").focusout((function () {
        setTimeout((function () {
          $("#protest2imgUploadBtn").attr("for", "protest2imgUploadInput")
        }), 1)
      })), $("#protest2imgUploadInput").change((function () {
        if (t.isUploading) return;
        t.isUploading = !0;
        const e = $(this).prop("files")[0];
        void 0 !== e.name && ($("#protest2imgUploadText").html(e.name), util.request_uploadimage(t.detail.protestInfo.imgUrl, $(this), (function (e) {
          t.isUploading = !1, e ? (console.log("image upload success."), nDialog.open({
            title: langCtrl.common.dialogMsg.protest_img_t,
            msg: langCtrl.common.dialogMsg.protest_img_m,
            okCallback: function () {
              nDialog.close()
            }
          })) : (console.log("image upload failed."), nDialog.open({
            title: langCtrl.common.dialogMsg.protest_img_failed_t,
            msg: langCtrl.common.dialogMsg.protest_img_failed_m,
            okCallback: function () {
              nDialog.close()
            }
          }))
        })))
      })), a()
    }
    uiUpdate(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      $("#specialButton>.text").html(langCtrl.common.tournamentStatBtn.inpuProtestt), $("#modalHeaderTitle").html(langCtrl.common.tournamentStatBtn.inpuProtestt), t.detail.isLoadMatchCard ? udCtrl.get_tournament_battlestat({
        compeId: t.detail.selectTournament
      }, (function () {
        t.detail.isLoadBattleStat = !0;
        const e = udCtrl.ud.tournamentDetail[t.detail.selectTournament].matchcard;
        void 0 !== udCtrl.ud.tournamentDetail[t.detail.selectTournament].nowBattle.battle ? (console.log("get battle status success."), $("#protest2RoundText").html(util.msTextFormat(util.msNumFormat(langCtrl.common.roundText.round_battle, [e.battle]), [t.detail.roundArr[e.round - 1]])), $("#protest2Limit").html(util.timestamp2Text(parseInt(e.rdSt, 10) + 1800))) : console.log("get battle status failed."), a()
      })) : udCtrl.get_tournament_matchcard({
        compeId: t.detail.selectTournament
      }, (function () {
        t.detail.isLoadMatchCard = !0, t.uiUpdate((function () {
          a()
        }))
      }))
    }
    enable(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      $("#specialButton").off("click"), $("#specialButton").click((function (e) {
        e.preventDefault(), t.detail.modalEnableForce("#protest2Modal", (function () {
          t.detail.modalOpen()
        }))
      })), t.uiUpdate((function () {
        a()
      }))
    }
  }
  window.myBattleStat = {
    notLogin: 0,
    prepar: 1,
    inBattle: 5,
    winReport: 10,
    opWinReport: 11,
    approvalWin: 20,
    oProtest1: 30,
    iProtest1: 31,
    oProtest2: 40,
    iProtest2: 41,
    finish: 90,
    unknown: 99
  };
  class se {
    constructor() {
      const e = this;
      e.isLoggedin = !1, this.btnDisable = !1, e.isFirstLoadBattleStat = !1, e.isFirstLoadMatchCard = !1, e.isLoadMatchCard = !1, this.isOpenModal = !1, e.stateTime = "", e.roundArr = [], e.resultArr = [], e.lastRound = 0, document.getElementById("pageBase").addEventListener("touchmove", (function () {
        e.isScroll = !0
      }), {
        passive: !0
      }), document.getElementById("pageBase").addEventListener("touchend", (function () {
        e.isScroll = !1
      }), {
        passive: !0
      }), void 0 === udCtrl.ud.share.selectTournament && util.locationMove("./tournament_list.html"), e.selectTournament = udCtrl.ud.share.selectTournament, udCtrl.tournament_login((function (t) {
        e.isLoggedin = t, udCtrl.load_tournament_detail({
          compeId: e.selectTournament
        }, (function () {
          t && (udCtrl.get_tournament_battlestat({
            compeId: e.selectTournament
          }, (function () {
            e.isFirstLoadBattleStat = !0
          })), udCtrl.get_tournament_matchcard({
            compeId: e.selectTournament
          }, (function (t) {
            e.isFirstLoadMatchCard = !0, null != t && (e.isLoadMatchCard = !0)
          }))), e.info = udCtrl.ud.tournamentDetail[e.selectTournament], e.uiInitialize()
        }))
      }))
    }
    uiInitialize() {
      const e = this;
      e.modalCtrl = {
        entry: new Y(e),
        registerTeam: new X(e),
        checkin: new ee(e),
        battleStart: new te(e),
        battleInfo: new ae(e),
        reportVictory: new ne(e),
        withdrawVictory: new ie(e),
        approvalVictory: new oe(e),
        protest1: new le(e),
        protest2: new re(e)
      }, e.isLoggedin ? (! function t() {
        e.isFirstLoadBattleStat && e.isFirstLoadMatchCard ? e.updateHeader() : setTimeout((function () {
          t()
        }), 100)
      }(), function t() {
        setTimeout((function () {
          if ("" != e.stateTime) {
            let t = util.diffNow(e.headerStateTimestamp);
            t.day >= 1 ? e.stateTime = util.msNumFormat(langCtrl.common.unit.tournament_statTime, [t.day]) : 0 == t.day && t.hour > 1 ? e.stateTime = util.msNumFormat(langCtrl.common.unit.tournament_statTime2, [t.hour]) : e.stateTime = util.msNumFormat(langCtrl.common.unit.tournament_statTime3, [t.min]), $("#headerStateTime").html(e.stateTime), t.over && location.reload()
          }
          t()
        }), 6e4)
      }()) : e.updateHeader(), $("#title").html(e.info.title), $("#banner").attr("src", window.tournamentBannerEndPoint + e.info.banner), $("#compeStartDate").html(util.timestamp2Text(e.info.compePeriod.start)), $("#compeEndDate").html(util.timestamp2Text(e.info.compePeriod.end));
      let t = "";
      e.info.soft.forEach((function (e) {
        t += '<div class="normalRightText">' + langCtrl.common.soft[parseInt(e, 10)] + "</div>"
      })), $("#softlist").html(t), $("#battleType").html(langCtrl.common.battleType[parseInt(e.info.type, 10)]), $("#joinLimit").html(util.msNumFormat(langCtrl.common.unit.tournament_entrylimit, [e.info.limit])), $("#lotteryType").html(langCtrl.common.lotteryType[parseInt(e.info.lotteryType, 10)]), $("#tournamentDetailText").html(e.info.detail), $(".ruleBodyText").html(e.info.regulationName), e.genelateInfomationListDom(), $("#footerPrevButton").click((function (e) {
        e.preventDefault(), util.locationMove("./tournament_list.html")
      })), $(".tournamentTabContainer>.tabTop>.tabButton").click((function (t) {
        t.preventDefault();
        const a = $(this).data("id"),
          n = $(this).parent(),
          i = n.find(".compeinfo"),
          o = n.find(".joined"),
          l = n.find(".bmatch"),
          r = n.find(".ranking");
        $(".tournamentTabContainer>.tabTop>.tabButton").each((function (t, n) {
          const s = $(n),
            c = s.data("id");
          if (a == c) switch (s.removeClass("tabDisable"), $("#tabContent" + c).removeClass("disableTab"), c) {
          case 1:
            i.removeClass("icon-tt_compeinfo2"), i.addClass("icon-tt_compeinfo1");
            break;
          case 2:
            o.removeClass("icon-tt_joined2"), o.addClass("icon-tt_joined1"), e.genelateParticipantListDom();
            break;
          case 3:
            l.removeClass("icon-tt_bmatch2"), l.addClass("icon-tt_bmatch1"), e.genelateMatchListDom();
            break;
          case 4:
            r.removeClass("icon-tt_ranking2"), r.addClass("icon-tt_ranking1"), e.genelateTournamentDom();
            break;
          default:
            console.log("tab select error.")
          } else switch (s.addClass("tabDisable"), $("#tabContent" + c).addClass("disableTab"), c) {
          case 1:
            i.removeClass("icon-tt_compeinfo1"), i.addClass("icon-tt_compeinfo2");
            break;
          case 2:
            o.removeClass("icon-tt_joined1"), o.addClass("icon-tt_joined2");
            break;
          case 3:
            l.removeClass("icon-tt_bmatch1"), l.addClass("icon-tt_bmatch2");
            break;
          case 4:
            r.removeClass("icon-tt_ranking1"), r.addClass("icon-tt_ranking2");
            break;
          default:
            console.log("tab select error.")
          }
        }))
      })), $("#closeBtn").click((function (t) {
        t.preventDefault(), e.modalClose()
      })), $(".resetButton").click((function (t) {
        t.preventDefault();
        const a = $(this).parent().find(".pass").html();
        udCtrl.tournament_resetpass({
          compeId: e.selectTournament,
          passwd: a
        }, (function (e) {
          void 0 !== e.passwd && ($(".battlePassContainer>.battlePassBody>.pass").html(e.passwd), wsocCtrl.sendmessage({
            func: "resetPasswd"
          }), nDialog.open({
            title: langCtrl.common.dialogMsg.update_pass_t,
            msg: langCtrl.common.dialogMsg.update_pass_m
          }))
        }))
      })), $("#moveRegulationPageBtn").click((function (t) {
        util.locationMoveRegulation(e.info.regulation, util.langCode())
      })), $("#moveRegulationPokemonPageBtn").click((function (t) {
        util.locationMoveUsePokemonList(e.info.regulation, util.langCode())
      })), langCtrl.init()
    }
    getMyBattleStat() {
      const e = this;
      let t = 0;
      if (e.isLoggedin)
        if (1 == e.info.matchcard.prepare.me && 1 == e.info.matchcard.prepare.op) switch (e.info.nowBattle.status) {
        case 0:
          t = void 0 !== e.info.nowBattle.battle && void 0 !== e.info.nowBattle.battle.current && (e.info.nowBattle.battle.current[0] >= 2 || e.info.nowBattle.battle.current[1] >= 2) ? window.myBattleStat.finish : window.myBattleStat.inBattle;
          break;
        case 1:
          t = 1 == e.info.nowBattle.battle.me ? window.myBattleStat.winReport : window.myBattleStat.opWinReport;
          break;
        case 2:
          t = window.myBattleStat.approvalWin;
          break;
        case 3:
          t = 1 == e.info.nowBattle.battle.me ? window.myBattleStat.oProtest1 : window.myBattleStat.iProtest1;
          break;
        case 4:
          t = 1 == e.info.nowBattle.battle.me ? window.myBattleStat.oProtest2 : window.myBattleStat.iProtest2;
          break;
        case 9:
          t = window.myBattleStat.finish;
          break;
        default:
          t = window.myBattleStat.unknown
        } else t = window.myBattleStat.prepar;
        else t = window.myBattleStat.notLogin;
      return t
    }
    updateHeader(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      let n = !1,
        i = !1,
        o = !1,
        l = !1,
        r = !1;
      util.headerWaitView(), udCtrl.load_tournament_detail({
          compeId: t.selectTournament
        }, (function () {
          i = !0
        })), t.isLoggedin && (udCtrl.get_tournament_battlestat({
          compeId: t.selectTournament
        }, (function () {
          o = !0
        })), udCtrl.get_tournament_matchcard({
          compeId: t.selectTournament
        }, (function (e) {
          l = !0
        })), t.genelateMatchListDom((function () {
          r = !0
        }))),
        function e() {
          t.isLoggedin ? i && o && l && r && (n = !0) : i && (n = !0), n ? t.updateHeaderExec((function () {
            util.headerWaitView(!1), a()
          })) : setTimeout((function () {
            e()
          }), 100)
        }()
    }
    updateHeaderExec(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      t.setCompetitionStatus((function () {}));
      let n = "",
        i = "",
        o = "",
        l = null,
        r = !1,
        s = !1;
      switch ($("#matchSummaryContainer").addClass("disableDisplay"), t.info.competitionStatus) {
      case 1:
        if (n = langCtrl.common.tournamentStatText.entry, t.isLoggedin)
          if (1 == t.info.myStatus) n = langCtrl.common.tournamentStatText.entry2, i = langCtrl.common.tournamentStatBtn.registerTeam, t.modalCtrl.registerTeam.enable();
          else switch (parseInt(t.info.entryType, 10)) {
          case 0:
          case 1:
            i = langCtrl.common.tournamentStatBtn.entry, t.modalCtrl.entry.enable();
            break;
          case 9:
          default:
            n = langCtrl.common.tournamentStatText.entry3, r = !0
          } else r = !0;
        t.headerStateTimestamp = t.info.entryPeriod.end, l = util.diffNow(t.info.entryPeriod.end), o = l.day >= 1 ? util.msNumFormat(langCtrl.common.unit.tournament_statTime, [l.day]) : 0 == l.day && l.hour > 1 ? util.msNumFormat(langCtrl.common.unit.tournament_statTime2, [l.hour]) : util.msNumFormat(langCtrl.common.unit.tournament_statTime3, [l.min]);
        break;
      case 4:
        n = langCtrl.common.tournamentStatText.checkin, t.isLoggedin && 1 == t.info.myStatus ? (i = langCtrl.common.tournamentStatBtn.checkin, t.modalCtrl.checkin.enable()) : !t.isLoggedin || 2 != t.info.myStatus && 4 != t.info.myStatus ? (i = langCtrl.common.tournamentStatBtn.checkin2, r = !0) : (n = langCtrl.common.tournamentStatText.checkin3, r = !0), t.headerStateTimestamp = t.info.compePeriod.start, l = util.diffNow(t.info.compePeriod.start), o = l.day >= 1 ? util.msNumFormat(langCtrl.common.unit.tournament_statTime, [l.day]) : 0 == l.day && l.hour > 1 ? util.msNumFormat(langCtrl.common.unit.tournament_statTime2, [l.hour]) : util.msNumFormat(langCtrl.common.unit.tournament_statTime3, [l.min]);
        break;
      case 6:
        if (n = langCtrl.common.tournamentStatText.open, t.isLoggedin && 4 == t.info.myStatus) switch (udCtrl.get_tournament_matchcard({
          compeId: t.selectTournament
        }, (function () {
          t.isLoadMatchCard = !0, wsocCtrl.connect({
            compeId: t.selectTournament,
            myFriendId: udCtrl.ud.tournamentDetail[t.selectTournament].matchcard.myFid,
            opFriendId: udCtrl.ud.tournamentDetail[t.selectTournament].matchcard.trainer.fid,
            authToken: util.token()
          }, (function () {
            wsocCtrl.joinroom()
          }))
        })), s = !0, t.updateHeaderBattleCard((function (e) {
          $("#specialButton").off("ready"), $("#specialButton").ready((function () {
            const t = $("#specialButton>.text"),
              a = t.html();
            t.html(util.msNumFormat(langCtrl.common.roundText.round_battle2, [e.battle]) + " - " + a)
          }));
          const n = udCtrl.ud.tournamentDetail[t.selectTournament].nowBattle.battle;
          void 0 !== n && ($("#matchSummaryContainer>.matchSummaryText").html(util.msTextFormat(util.msNumFormat(langCtrl.common.roundText.battle_count, [n.current[0], n.current[1]]), [t.roundArr[e.round - 1]])), $("#matchSummaryContainer").removeClass("disableDisplay")), t.isFinishRound ? $("#nextBattleRound").html(util.msTextFormat(langCtrl.common.roundText.round_battle3, [t.roundArr[e.round - 1]])) : $("#nextBattleRound").html(util.msTextFormat(util.msNumFormat(langCtrl.common.roundText.round_battle, [e.battle]), [t.roundArr[e.round - 1]])), a()
        })), $("#headerBattlePassContainer").removeClass("disableDisplay"), $("#passUpdateDate").removeClass("disableDisplay"), t.getMyBattleStat()) {
        case window.myBattleStat.prepar:
          $("#headerBattlePassContainer").addClass("disableDisplay"), $("#passUpdateDate").addClass("disableDisplay"), i = langCtrl.common.tournamentStatBtn.battlePrepar, t.modalCtrl.battleStart.enable();
          break;
        case window.myBattleStat.inBattle:
          if (void 0 !== udCtrl.ud.tournamentDetail[t.selectTournament].matchcard.readyTm && udCtrl.ud.tournamentDetail[t.selectTournament].matchcard.readyTm > 0) {
            util.setEnableReportVictoryEvent(udCtrl.ud.tournamentDetail[t.selectTournament].matchcard.readyTm, (function () {
              nDialog.open({
                title: langCtrl.common.dialogMsg.binfo_view_t,
                msg: langCtrl.common.dialogMsg.binfo_view_m,
                okCallback: function () {
                  t.updateHeader((function () {
                    t.modalClose()
                  })), nDialog.close()
                }
              })
            })) ? (i = langCtrl.common.tournamentStatBtn.winReport, t.modalCtrl.reportVictory.enable()) : (i = langCtrl.common.tournamentStatBtn.battleInfo, t.modalCtrl.battleInfo.enable())
          } else i = langCtrl.common.tournamentStatBtn.winReport, t.modalCtrl.reportVictory.enable();
          break;
        case window.myBattleStat.winReport:
          i = langCtrl.common.tournamentStatBtn.withdrawWin, t.modalCtrl.withdrawVictory.enable();
          break;
        case window.myBattleStat.opWinReport:
          i = langCtrl.common.tournamentStatBtn.resultApproval, t.modalCtrl.approvalVictory.enable();
          break;
        case window.myBattleStat.approvalWin:
          t.info.nowBattle.battle.current[0] >= 2 || t.info.nowBattle.battle.current[1] >= 2 ? (n = util.msTextFormat(langCtrl.common.tournamentStatText.roundFinish1, [t.roundArr[udCtrl.ud.tournamentDetail[t.selectTournament].matchcard.round - 1]]), r = !0, t.isFinishRound = !0) : (i = langCtrl.common.tournamentStatBtn.winReport, t.modalCtrl.reportVictory.enable());
          break;
        case window.myBattleStat.oProtest1:
          i = langCtrl.common.tournamentStatBtn.inpuProtestt, t.modalCtrl.protest1.enable();
          break;
        case window.myBattleStat.iProtest1:
        case window.myBattleStat.iProtest2:
        case window.myBattleStat.oProtest2:
          n = langCtrl.common.tournamentStatText.protestFinish, r = !0;
          break;
        case window.myBattleStat.finish:
          n = util.msTextFormat(langCtrl.common.tournamentStatText.roundFinish1, [t.roundArr[udCtrl.ud.tournamentDetail[t.selectTournament].matchcard.round - 1]]), r = !0, t.isFinishRound = !0;
          break;
        case window.myBattleStat.notLogin:
        case window.myBattleStat.unknown:
        default:
          i = langCtrl.common.tournamentStatBtn.prepar, r = !0
        } else t.isLoggedin && 2 == t.info.myStatus ? (n = langCtrl.common.tournamentStatText.prepar2, r = !0) : t.isLoggedin ? (t.lastRound > -1 && (n = t.resultArr[t.lastRound]), r = !0) : r = !0;
        break;
      case 7:
        n = t.isLoggedin && t.lastRound > -1 ? t.resultArr[t.lastRound] : langCtrl.common.tournamentStatText.end, r = !0;
        break;
      default:
        r = !0, n = langCtrl.common.tournamentStatText.prepar, i = langCtrl.common.tournamentStatBtn.prepar, t.headerStateTimestamp = t.info.entryPeriod.start, l = util.diffNow(t.info.entryPeriod.start), l.day >= 1 ? o = util.msNumFormat(langCtrl.common.unit.tournament_statTime, [l.day]) : 0 == l.day && l.hour >= 0 && (o = util.msNumFormat(langCtrl.common.unit.tournament_statTime2, [l.hour]))
      }
      let c = '<div class="stateTextContainer">';
      c += '<div class="stateText">' + n + "</div>", c += "</div>", t.stateTime = o, "" != o && (c += '<div class="stateTimeContainer">', c += '<div id="headerStateTime" class="stateTime">' + o + "</div>", c += "</div>"), r ? $("#specialButton").addClass("disableDisplay") : $("#specialButton").removeClass("disableDisplay"), $("#specialButton>.text").html(i), $("#stateContainer").html(c), $("#stateContainer").off("ready"), $("#stateContainer").ready((function () {
        s || a()
      }))
    }
    setCompetitionStatus(e) {
      const t = void 0 === e ? function () {} : e,
        a = $("#tournamentHeaderBase");
      switch (this.info.competitionStatus) {
      case 1:
      case 4:
        a.removeClass("stat_prepar stat_reception stat_open stat_end"), a.addClass("stat_reception");
        break;
      case 6:
        a.removeClass("stat_prepar stat_reception stat_open stat_end"), a.addClass("stat_open");
        break;
      case 7:
        a.removeClass("stat_prepar stat_reception stat_open stat_end"), a.addClass("stat_end");
        break;
      default:
        a.removeClass("stat_prepar stat_reception stat_open stat_end"), a.addClass("stat_prepar")
      }
      t()
    }
    updateHeaderBattleCard(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      udCtrl.get_tournament_matchcard({
        compeId: t.selectTournament
      }, (function () {
        t.isLoadMatchCard = !0;
        const e = udCtrl.ud.tournamentDetail[t.selectTournament].matchcard;
        $("#nextBattleRound").html(util.msTextFormat(util.msNumFormat(langCtrl.common.roundText.round_battle, [e.battle]), [t.roundArr[e.round - 1]])), $("#nextBattleTime").html(langCtrl.common.battleCardText.nextBattleTime + util.timestamp2Text(e.rdSt)), $("#headerBattleCardPassword").html(e.passwd), $("#passUpdateDate").html(langCtrl.common.battleCardText.passUpdateDate + util.timestamp2Text(e.pwlst));
        let n, i, o = "";
        o += '<div class="trainerRow">', o += '<div class="icon"><img src="./img/icon_player/' + mdCtrl.md.playericon[e.trainer.icon] + '" onError="this.onerror=null;this.src=\'./img/icon_player/icon_player_poke_01.png\';"></div>', o += '<div class="nameContainer">', o += '<div class="name">' + e.trainer.name + "</div>", o += "</div>", o += "</div>";
        for (let t = 0; t < e.trainer.team.length; t++) n = "./img/poke/cap" + ("000" + e.trainer.team[t].pid).slice(-4) + "_f" + ("0" + e.trainer.team[t].frm).slice(-2) + "_s" + e.trainer.team[t].sex + ".png", i = "./img/poke/cap" + ("000" + e.trainer.team[t].pid).slice(-4) + "_f" + ("0" + e.trainer.team[t].frm).slice(-2) + "_s0.png", o += '<div class="pokeRow">', o += '<div class="icon"><img src="' + n + '" onError="this.onerror=null;this.src=\'' + i + "';\"></div>", o += '<div class="nameContainer">', o += '<div class="name">' + e.trainer.team[t].name + "</div>", o += "</div>", o += "</div>";
        $("#headerBattleCardContainer").removeClass("disableDisplay"), $("#headerTeamInfoContainer").html(o), $("#headerTeamInfoContainer").off("ready"), $("#headerTeamInfoContainer").ready((function () {
          a(e)
        })), console.log("test")
      }))
    }
    genelateInfomationListDom(e) {
      const t = void 0 === e ? function () {} : e;
      udCtrl.load_tournament_infomationList({
        compeId: this.selectTournament
      }, (function (e) {
        0 == e.length ? $("#infoContainerStack").addClass("disableDisplay") : $("#infoContainerStack").removeClass("disableDisplay");
        let a = "";
        for (let t = 0; t < e.length; t++) a += '<div class="infoItem">', a += '<div class="title">', a += '<div class="text">' + e[t].title + "</div>", a += "</div>", a += '<div class="body">', a += '<div class="update">' + util.timestamp2Text(e[t].lastUpdate) + "</div>", a += '<div class="text">' + e[t].msg + "</div>", a += "</div>", a += "</div>";
        $("#infoContainer").html(a), $("#infoContainer").off("ready"), $("#infoContainer").ready((function () {
          t()
        }))
      }))
    }
    genelateParticipantListDom(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      udCtrl.load_tournament_playersList({
        compeId: t.selectTournament
      }, (function (e) {
        if (null === e) return void a();
        let n = -1;
        for (let t = 0; t < e.length; t++)
          if (void 0 !== e[t].me && 1 == e[t].me) {
            n = t;
            break
          }
        if (n > 0) {
          const t = e.splice(n, 1);
          e.unshift(t[0])
        }
        let i = '<div class="number">' + util.msNumFormat(langCtrl.common.unit.tournament_entrynum, [e.length, t.info.limit]) + "</div>";
        i += '<div class="list">';
        for (let t = 0; t < e.length; t++) i += '<div class="row">', i += '<div class="icon"><img src="./img/icon_player/' + mdCtrl.md.playericon[e[t].icon] + '" onError="this.onerror=null;this.src=\'./img/icons/icon_prof_icon02.png\';""></div>', void 0 !== e[t].me && 1 == e[t].me ? i += '<div class="nameContainer me">' : i += '<div class="nameContainer">', i += '<div class="name">' + e[t].name + "</div>", i += "</div>", i += "</div>";
        i += "</div>", $("#participantContainer").html(i), $("#participantContainer").off("ready"), $("#participantContainer").ready((function () {
          a()
        }))
      }))
    }
    setLastRound(e) {
      const t = this;
      let a = 0,
        n = 0;
      for (n = 0; n < e[0].length; n++) a += e[0][n].rslt.length;
      let i = a,
        o = 1;
      for (; i > 2;) i >>= 1, o++;
      a <= 2 && (o = 1), t.lastRound = 0;
      let l = !0;
      for (let a = 0; a < o; a++) {
        const n = 2 ** (o - a) / 2;
        for (let i = 0; i < n; i++) {
          void 0 !== e[a] && void 0 !== e[a][i] && (a >= t.roundArr.length - 1 ? (void 0 !== e[a][i].rslt[0].me && (e[a][i].rslt[0].cnt[0] > e[a][i].rslt[0].cnt[1] ? t.lastRound = a + 1 : t.lastRound = a, l = !1), void 0 !== e[a][i].rslt[1] && void 0 !== e[a][i].rslt[1].me && (e[a][i].rslt[1].cnt[0] > e[a][i].rslt[1].cnt[1] ? t.lastRound = a + 1 : t.lastRound = a, l = !1)) : (void 0 !== e[a][i].rslt[0].me && (t.lastRound = a, l = !1), void 0 !== e[a][i].rslt[1] && void 0 !== e[a][i].rslt[1].me && (t.lastRound = a, l = !1)))
        }
      }
      l && (t.lastRound = -1)
    }
    genelateMatchListDom(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      udCtrl.load_tournament_matchList({
        compeId: t.selectTournament
      }, (function (e) {
        if (null === e || 0 == e.length) return void a();
        let n = 0,
          i = 0;
        for (i = 0; i < e[0].length; i++) n += e[0][i].rslt.length;
        let o = n,
          l = 1;
        for (; o > 2;) o >>= 1, l++;
        n <= 2 && (l = 1);
        let r = "",
          s = '<div class="roundPullDown">';
        for (s += '<select class="pulldownSelector" id="roundSelector">', i = 0; i < l && !(i >= e.length); i++) switch (l - i) {
        case 1:
          s += '<option value="' + i + '">' + langCtrl.common.roundText.final + "</option>", t.roundArr.push(langCtrl.common.roundText.final), t.resultArr.push(langCtrl.common.tournamentStatText.result2), t.resultArr.push(langCtrl.common.tournamentStatText.result3);
          break;
        case 2:
          s += '<option value="' + i + '">' + langCtrl.common.roundText.semi_final + "</option>", t.roundArr.push(langCtrl.common.roundText.semi_final), r = util.msNumFormat(langCtrl.common.roundText.round, [i + 1]), t.resultArr.push(util.msTextFormat(langCtrl.common.tournamentStatText.result1, [r]));
          break;
        default:
          s += '<option value="' + i + '">' + util.msNumFormat(langCtrl.common.roundText.round, [i + 1]) + "</option>", t.roundArr.push(util.msNumFormat(langCtrl.common.roundText.round, [i + 1])), r = util.msNumFormat(langCtrl.common.roundText.round, [i + 1]), t.resultArr.push(util.msTextFormat(langCtrl.common.tournamentStatText.result1, [r]))
        }
        s += "</select>", s += "</div>", s += '<div id="matchesContainer" class="matchesContainer">', s += "</div>", t.setLastRound(e), $("#battleMatchContainer").html(s), $("#battleMatchContainer").off("ready"), $("#battleMatchContainer").ready((function () {
          $("#roundSelector").change((function () {
            t.genelateMatchRoundListDom($(this).val())
          })), t.genelateMatchRoundListDom(0, (function () {
            a()
          }))
        }))
      }))
    }
    genelateMatchRoundListDom(e, t) {
      const a = this,
        n = void 0 === t ? function () {} : t;
      let i = JSON.parse(JSON.stringify(a.info.match_list)),
        o = -1;
      for (let t = 0; t < a.info.match_list[e].length; t++) {
        if (void 0 !== i[e][t].rslt[0].me && 1 == i[e][t].rslt[0].me) {
          o = t;
          break
        }
        if (void 0 !== i[e][t].rslt[1] && void 0 !== i[e][t].rslt[1].me && 1 == i[e][t].rslt[1].me) {
          o = t;
          break
        }
      }
      if (o > 0) {
        const t = i[e].splice(o, 1);
        i[e].unshift(t[0])
      }
      let l = "";
      for (let t = 0; t < i[e].length; t++) {
        void 0 === i[e][t].rslt[1] && (i[e][t].rslt[1] = {
          nm: "-",
          ic: "./img/icons/vball_g.png",
          lng: 1,
          tid: "0",
          cnt: [0, 0, 0],
          vict: 0
        });
        let a = !1,
          n = !1;
        void 0 !== i[e][t].rslt[0].me && 1 == i[e][t].rslt[0].me && (a = !0), void 0 !== i[e][t].rslt[1] && void 0 !== i[e][t].rslt[1].me && 1 == i[e][t].rslt[1].me && (n = !0), l += a || n ? '<div class="matchRow myMatchRow">' : '<div class="matchRow">', l += '<div class="userRow">', l += '<div class="icon"><img src="./img/icon_player/' + mdCtrl.md.playericon[i[e][t].rslt[0].ic] + '" onError="this.onerror=null;this.src=\'./img/icons/icon_prof_icon02.png\';""></div>', l += a ? '<div class="nameContainer me">' : '<div class="nameContainer">', l += '<div class="name">' + i[e][t].rslt[0].nm + "</div>", l += "</div>", l += '<div class="winNumContainer ' + (0 == i[e][t].rslt[0].vict ? "lose" : "win") + '">', l += '<div class="text">' + i[e][t].rslt[0].cnt[0] + "</div>", l += "</div>", l += "</div>", l += '<div class="lineDividor2"></div>', l += '<div class="userRow">', l += '<div class="icon"><img src="./img/icon_player/' + mdCtrl.md.playericon[i[e][t].rslt[1].ic] + '" onError="this.onerror=null;this.src=\'./img/icons/icon_prof_icon02.png\';""></div>', l += n ? '<div class="nameContainer me">' : '<div class="nameContainer">', l += '<div class="name">' + i[e][t].rslt[1].nm + "</div>", l += "</div>", l += '<div class="winNumContainer ' + (0 == i[e][t].rslt[1].vict ? "lose" : "win") + '">', l += '<div class="text">' + i[e][t].rslt[1].cnt[0] + "</div>", l += "</div>", l += "</div>", l += "</div>"
      }
      $("#matchesContainer").html(l), $("#matchesContainer").off("ready"), $("#matchesContainer").ready((function () {
        n()
      }))
    }
    genelateTournamentDom(e) {
      const t = void 0 === e ? function () {} : e;
      udCtrl.load_tournament_matchList({
        compeId: this.selectTournament
      }, (function (e) {
        if (null === e || 0 == e.length) return void t();
        let a = JSON.parse(JSON.stringify(e)),
          n = 0,
          i = 0;
        for (i = 0; i < a[0].length; i++) n += a[0][i].rslt.length;
        let o = n,
          l = 1;
        for (; o > 2;) o >>= 1, l++;
        let r = '<div class="roundContainer" style="width:' + 550 * l + 'px">';
        for (let e = 0; e < l; e++) {
          void 0 === a[e] && (a[e] = []), r += '<div class="round">';
          const t = 2 ** (l - e) / 2;
          for (let n = 0; n < t; n++) {
            void 0 === a[e][n] && (a[e][n] = {
              stat: 2,
              round: e + 1,
              next: n + 1,
              nxOrd: (n + 1) % 2,
              rslt: [{
                nm: "-",
                ic: "./img/icons/ball_g.png",
                lng: 1,
                tid: "0",
                cnt: [0, 0, 0],
                vict: 0
              }, {
                nm: "-",
                ic: "./img/icons/ball_g.png",
                lng: 1,
                tid: "0",
                cnt: [0, 0, 0],
                vict: 0
              }]
            }), void 0 === a[e][n].rslt[1] && (a[e][n].rslt[1] = {
              nm: "-",
              ic: "./img/icons/ball_g.png",
              lng: 1,
              tid: "0",
              cnt: [0, 0, 0],
              vict: 0
            });
            let i = !1,
              o = !1;
            void 0 !== a[e][n].rslt[0].me && 1 == a[e][n].rslt[0].me && (i = !0), void 0 !== a[e][n].rslt[1].me && 1 == a[e][n].rslt[1].me && (o = !0), e > 0 && 0 == n && (r += '<div class="battleDividor' + (e + 1) + '_1"></div>'), r += '<div class="battleContainer" id="round' + e + "_" + n + '">', e < l - 1 && (r += '<div class="rightLine"></div>'), e > 0 && (r += '<div class="leftLine"></div>', r += '<div class="leftVerticalLine' + (e + 1) + '"></div>'), r += i || o ? '<div class="matchContainer myMatchRow">' : '<div class="matchContainer">', r += '<div class="userRow">', r += '<div class="icon"><img src="./img/icon_player/' + mdCtrl.md.playericon[a[e][n].rslt[0].ic] + '" onError="this.onerror=null;this.src=\'./img/icons/icon_prof_icon02.png\';""></div>', r += i ? '<div class="nameContainer me">' : '<div class="nameContainer">', r += '<div class="name">' + a[e][n].rslt[0].nm + "</div>", r += "</div>", r += '<div class="winNumContainer ' + (0 == a[e][n].rslt[0].vict ? "lose" : "win") + '">', r += '<div class="text">' + a[e][n].rslt[0].cnt[0] + "</div>", r += "</div>", r += "</div>", r += '<div class="lineDividor2"></div>', r += '<div class="userRow">', r += '<div class="icon"><img src="./img/icon_player/' + mdCtrl.md.playericon[a[e][n].rslt[1].ic] + '" onError="this.onerror=null;this.src=\'./img/icons/icon_prof_icon02.png\';""></div>', r += o ? '<div class="nameContainer me">' : '<div class="nameContainer">', r += '<div class="name">' + a[e][n].rslt[1].nm + "</div>", r += "</div>", r += '<div class="winNumContainer ' + (0 == a[e][n].rslt[1].vict ? "lose" : "win") + '">', r += '<div class="text">' + a[e][n].rslt[1].cnt[0] + "</div>", r += "</div>", r += "</div>", r += "</div>", r += "</div>", n < t - 1 && (r += 0 == e ? '<div class="battleDividor1"></div>' : '<div class="battleDividor' + (e + 1) + '_2"></div>')
          }
          r += "</div>"
        }
        $("#tournamentContainer").html(r), $("#tournamentContainer").off("ready"), $("#tournamentContainer").ready((function () {
          t()
        }))
      }))
    }
    modalOpen() {
      if (this.btnDisable || this.isScroll) return;
      this.isOpenModal = !0;
      const e = this,
        t = $("#pageBase"),
        a = $("#modalBase"),
        n = $("#modalback"),
        i = a.find("#modalHeader"),
        o = a.find("#modalBody");
      this.pageScrollY = window.scrollY, t.css({
        position: "fixed"
      }), n.addClass("modalAnim_BackSlideIn"), i.addClass("modalAnim_HeaderSlideIn"), o.addClass("modalAnim_BodySlideIn"), a.removeClass("disableModal"), this.btnDisable = !0, setTimeout((function () {
        n.removeClass("modalAnim_BackSlideIn"), i.removeClass("modalAnim_HeaderSlideIn"), o.removeClass("modalAnim_BodySlideIn"), e.btnDisable = !1
      }), 300)
    }
    modalClose() {
      if (this.btnDisable || this.isScroll) return;
      this.isOpenModal = !1;
      const e = this,
        t = $("#pageBase"),
        a = $("#modalBase"),
        n = $("#modalback"),
        i = a.find("#modalHeader"),
        o = a.find("#modalBody");
      t.css({
        position: "relative"
      }), window.scrollTo(0, parseInt(this.pageScrollY, 10)), n.addClass("modalAnim_BackSlideOut"), i.addClass("modalAnim_HeaderSlideOut"), o.addClass("modalAnim_BodySlideOut"), setTimeout((function () {
        a.addClass("disableModal")
      }), 260), this.btnDisable = !0, setTimeout((function () {
        n.removeClass("modalAnim_BackSlideOut"), i.removeClass("modalAnim_HeaderSlideOut"), o.removeClass("modalAnim_BodySlideOut"), e.btnDisable = !1
      }), 300)
    }
    modalMove(e, t, a) {
      if (this.btnDisable || this.isScroll) return;
      const n = this;
      a = void 0 === a ? function () {} : a;
      $("#pageBase");
      const i = $("#modalBase"),
        o = ($("#modalback"), i.find("#modalHeader")),
        l = i.find("#modalBody"),
        r = $(e),
        s = $(t);
      this.isOpenModal ? (o.addClass("modalAnim_HeaderMove"), l.addClass("modalAnim_BodyMove"), setTimeout((function () {
        n.modalEnableForce(t)
      }), 150), this.btnDisable = !0, setTimeout((function () {
        o.removeClass("modalAnim_HeaderMove"), l.removeClass("modalAnim_BodyMove"), n.btnDisable = !1, a()
      }), 300)) : (r.addClass("disableModal"), s.removeClass("disableModal"), a())
    }
    modalEnableForce(e, t) {
      const a = void 0 === t ? function () {} : t;
      $(".eachModalBase").addClass("disableModal"), $(e).removeClass("disableModal"), a()
    }
  }
  class ce {
    constructor() {
      this.selecter = "#dialogBase", this.isOpen = !1
    }
    open(e, t) {
      const a = this,
        n = e.title,
        i = e.msg,
        o = void 0 === e.okCallback ? function () {
          a.close()
        } : e.okCallback,
        l = void 0 === t ? function () {} : t;
      a.isOpen ? a.close((function () {
        a.open(e, l)
      })) : (a.isOpen = !0, $("#dialogTitle").html(n), $("#dialogText").html(i), $("#okBtn>.text").html(langCtrl.common.dialogMsg.ok), $("#dialogBase>.back").addClass("anim_dialogBackFadeIn"), $("#dialogBase>.dialog").addClass("anim_dialogSlideIn"), $("#dialogBase").removeClass("disableDisplay"), setTimeout((function () {
        $("#dialogBase>.back").removeClass("anim_dialogBackFadeIn"), $("#dialogBase>.dialog").removeClass("anim_dialogSlideIn"), l()
      }), 200), $("#okBtn").off("click"), $("#okBtn").click((function (e) {
        return e.preventDefault(), o(), !1
      })), $("#dialogBack").off("click"), $("#dialogBack").click((function (e) {
        return e.preventDefault(), o(), !1
      })))
    }
    close(e) {
      const t = this,
        a = void 0 === e ? function () {} : e;
      $("#dialogBase>.back").addClass("anim_dialogBackFadeOut"), $("#dialogBase>.dialog").addClass("anim_dialogSlideOut"), setTimeout((function () {
        $("#dialogBase").addClass("disableDisplay"), $("#dialogBase>.back").removeClass("anim_dialogBackFadeOut"), $("#dialogBase>.dialog").removeClass("anim_dialogSlideOut"), t.isOpen = !1, a()
      }), 200)
    }
  }
  const de = Math.floor((new Date).getTime() / 1e3);
  window.apiEndpoint = "https://api.battle.pokemon-home.com", window.rankingEndpoint = "https://resource.pokemon-home.com/battledata/ranking", window.regulationEndPoint = "https://battle.pokemon-home.com/regulation/", window.tournamentBannerEndPoint = "https://resource.pokemon-home.com/", window.tournamentWebsocketEndPoint = "wss://rqw18wvr40.execute-api.eu-west-3.amazonaws.com/prd", window.t_apiEndpoint = "https://api.battle.pokemon-home.com", window.t_rankingEndpoint = "https://resource.pokemon-home.com/battledata/ranking/scvi", window.t_regulationEndPoint = "https://battle-lp1.pokemon-home.com/scvi/regulation/", window.refreshTime = 3600, window.tournamentUDRefreshTime = 30, window.now = de, window.share = {}, window.util = new class {
    constructor(e) {
      this.version = Math.floor(e / window.refreshTime), self.isOnHeaderWaitView = !0;
      const t = this.getRequestParam("l");
      null != t && localStorage.setItem("l", t);
      const a = this.getRequestParam("c");
      null != a && localStorage.setItem("c", a);
      let n = this.getRequestParam("lcc");
      null == n || null == n ? n = 0 : localStorage.setItem("lcc", n);
      const i = this.getRequestParam("t");
      if (null != i) {
        let e = localStorage.getItem("uset");
        localStorage.setItem("dlcc", 1), e !== i && (localStorage.setItem("uset", i), localStorage.setItem("t", i))
      }
      const o = this.getRequestParam("d");
      null != o && (0 == o ? localStorage.removeItem("d") : localStorage.setItem("d", o));
      const l = this.getRequestParam("top");
      null != l && localStorage.setItem("top", l);
      const r = this.getRequestParam("bn");
      null != r && localStorage.setItem("bn", r)
    }
    locationMove(e) {
      location.href = e + "?r=" + this.version
    }
    locationReplace(e) {
      location.replace(e + "?r=" + this.version)
    }
    numberFormat(e) {
      let t = parseInt(this.langCode()),
        a = 0,
        n = ",";
      return 1 === t || 2 === t || 8 === t ? a = 3 : 7 === t || 5 === t ? e.toString().length > 4 && (n = " ", a = 3) : 4 === t ? e.toString().length > 4 && (n = ".", a = 3) : 3 === t && (n = " ", a = 3), 3 === a ? e.toString().replace(/\B(?=(\d{3})+(?!\d))/g, n) : e.toString()
    }
    getRankClass(e) {
      return 0 == e ? "beginner" : 1 == e ? "monster" : 2 == e ? "super" : 3 == e ? "hyper" : 4 == e ? "master" : void 0
    }
    getRequestParam(e) {
      const t = window.location.href;
      e = e.replace(/[\[\]]/g, "\\$&");
      let a = new RegExp("[?&]" + e + "(=([^&#]*)|&|#|$)").exec(t);
      return a ? a[2] ? decodeURIComponent(a[2].replace(/\+/g, " ")) : "" : null
    }
    langCode() {
      var e = localStorage.getItem("l");
      return null == e && (e = 1), e
    }
    langCodeStr() {
      var e = this.langCode();
      switch (parseInt(e)) {
      case 2:
        return "us";
      case 3:
        return "fr";
      case 4:
        return "it";
      case 5:
        return "de";
      case 7:
        return "es";
      case 8:
        return "ko";
      case 9:
        return "sc";
      case 10:
        return "tc";
      case 1:
      default:
        return "ja"
      }
    }
    countryCode() {
      var e = localStorage.getItem("c");
      return null == e && (e = 304), e
    }
    token() {
      var e = localStorage.getItem("t");
      return null == e && (e = ""), e
    }
    request(e, t, a) {
      const n = this;
      a = void 0 === a ? function () {} : a;
      let i = {},
        o = this.token();
      null != o && (i.Authorization = "Bearer " + o);
      const l = this.langCode(),
        r = this.countryCode();
      i.langcode = l, i.countrycode = r, n.requestWaitView(), console.log("==========[" + window.apiEndpoint + "][" + e + "]=========="), console.log(" - [request][header]" + JSON.stringify(i)), console.log(" - [request][postData]" + JSON.stringify(t)), $.ajax({
        type: "POST",
        url: window.apiEndpoint + e,
        dataType: "json",
        contentType: "application/json",
        data: JSON.stringify(t),
        headers: i,
        xhrFields: {
          withCredentials: !0
        },
        success: function (e) {
          console.log(" - [response]" + JSON.stringify(e)), console.log("=================================================="), a(e)
        },
        error: function (e, t, a) {
          console.error(" - [response Error]" + JSON.stringify(e)), console.log("=================================================="), localStorage.clear()
        },
        complete: function (e, t) {
          let a = e.getResponseHeader("B-Token");
          null != a && a.length > 0 && localStorage.setItem("t", a), n.requestWaitView(!1)
        }
      })
    }
    headerWaitView(e = !0) {
      if (e) {
        if (self.isOnHeaderWaitView) return;
        self.isOnHeaderWaitView = !0, $("#headerGuard>.monboIcon").addClass("anim_monboSpinLoop"), $("#headerGuard").addClass("anim_requestFadeIn"), $("#headerGuard").removeClass("disableDisplay"), setTimeout((function () {
          $("#headerGuard").removeClass("anim_requestFadeIn"), self.isOnHeaderWaitView = !1
        }), 200)
      } else {
        if (!self.isOnHeaderWaitView) return;
        $("#headerGuard").addClass("anim_requestFadeOut"), setTimeout((function () {
          $("#headerGuard").addClass("disableDisplay"), $("#headerGuard").removeClass("anim_requestFadeOut"), $("#headerGuard>.monboIcon").removeClass("anim_monboSpinLoop")
        }), 200)
      }
    }
    requestWaitView(e = !0) {
      void 0 === this.requestWaitViewCount && (this.requestWaitViewCount = 0), e ? (0 == this.requestWaitViewCount && ($("#requestWrapper>.monboIcon").addClass("anim_monboSpinLoop"), $("#requestWrapper>.waveLine").addClass("anim_denpaFlashLoop"), $("#requestWrapper").addClass("anim_requestFadeIn"), $("#requestWrapper").removeClass("disableDisplay"), setTimeout((function () {
        $("#requestWrapper").removeClass("anim_requestFadeIn")
      }), 200)), this.requestWaitViewCount++) : (this.requestWaitViewCount--, this.requestWaitViewCount <= 0 && ($("#requestWrapper").addClass("anim_requestFadeOut"), setTimeout((function () {
        $("#requestWrapper").addClass("disableDisplay"), $("#requestWrapper").removeClass("anim_requestFadeOut"), $("#requestWrapper>.monboIcon").removeClass("anim_monboSpinLoop"), $("#requestWrapper>.waveLine").removeClass("anim_denpaFlashLoop")
      }), 200), this.requestWaitViewCount = 0))
    }
    requestErrorDialog(e, t) {
      const a = void 0 === e.code ? 999 : e.code,
        n = void 0 === e.detail ? 99999 : e.detail,
        i = void 0 === t ? function () {} : t;
      void 0 !== langCtrl.common.dialogMsg["cnnection_failed_" + n + "_t"] ? nDialog.open({
        title: langCtrl.common.dialogMsg["cnnection_failed_" + n + "_t"],
        msg: langCtrl.common.dialogMsg["cnnection_failed_" + n + "_m"] + "<br>code: " + a + "<br>detail code: " + n,
        okCallback: function () {
          i(), nDialog.close()
        }
      }) : nDialog.open({
        title: langCtrl.common.dialogMsg.cnnection_failed_t,
        msg: langCtrl.common.dialogMsg.cnnection_failed_m + "<br>code: " + a + "<br>detail code: " + n,
        okCallback: function () {
          i(), nDialog.close()
        }
      })
    }
    request_tournament(e, t, a) {
      const n = this;
      a = void 0 === a ? function () {} : a;
      let i = {},
        o = this.token();
      null != o && (i.Authorization = "Bearer " + o);
      const l = this.langCode(),
        r = this.countryCode();
      i.langcode = l, i.countrycode = r, n.requestWaitView(), console.log("[" + e + "][request][header]" + JSON.stringify(i)), console.log("[" + e + "][request][postData]" + JSON.stringify(t)), $.ajax({
        type: "POST",
        url: window.apiEndpoint + e,
        dataType: "json",
        contentType: "application/json",
        data: JSON.stringify(t),
        headers: i,
        xhrFields: {
          withCredentials: !0
        },
        success: function (t) {
          console.log("[" + e + "][response]" + JSON.stringify(t)), a(t)
        },
        error: function (t, i, o) {
          console.error("[" + e + "]" + JSON.stringify(t));
          const l = void 0 === t.responseJSON ? {} : t.responseJSON;
          2e3 == t.detail ? n.requestErrorDialog(l, (function () {
            localStorage.clear(), n.locationMove("./tournament_list.html")
          })) : n.requestErrorDialog(l), a(l)
        },
        complete: function (e, t) {
          let a = e.getResponseHeader("B-Token");
          null != a && a.length > 0 && localStorage.setItem("t", a), n.requestWaitView(!1)
        }
      })
    }
    request_uploadimage(e, t, a) {
      const n = this,
        i = t.prop("files")[0];
      a = void 0 === a ? function () {} : a, n.requestWaitView(), console.log("[" + e + "][request]"), $.ajax({
        type: "PUT",
        url: e,
        data: i,
        cache: !1,
        contentType: i.type,
        processData: !1,
        success: function (t) {
          console.log("[" + e + "][response]" + JSON.stringify(t)), a(!0)
        },
        error: function (t, n, i) {
          console.error("[" + e + "]" + JSON.stringify(t)), a(!1)
        },
        complete: function (e, t) {
          let a = e.getResponseHeader("B-Token");
          null != a && a.length > 0 && localStorage.setItem("t", a), n.requestWaitView(!1)
        }
      })
    }
    rankingRequest(e, t, a) {
      t = void 0 === t ? function () {} : t, a = void 0 === a ? function () {} : a;
      let n = localStorage.getItem("_v_" + e);
      const i = Math.floor((new Date).getTime() / 1e3);
      let o = Math.floor(i / window.refreshTime);
      null == n && (n = 0), n = parseInt(n, 10);
      const l = this;
      o > n ? (l.requestWaitView(), console.log("==========[" + window.rankingEndpoint + "][" + e + "][request]=========="), $.ajax({
        type: "GET",
        url: window.rankingEndpoint + e,
        dataType: "json",
        success: function (a) {
          let n;
          console.log(" - [response]" + JSON.stringify(a)), console.log("=================================================="), n = $.isPlainObject(a) && 0 === Object.keys(a).length ? [] : a, localStorage.setItem("_v_" + e, o), localStorage.setItem("_d_" + e, LZString.compress(JSON.stringify(n))), t(n)
        },
        error: function (e, t, n) {
          console.error(" - [response Error]" + JSON.stringify(e)), console.log("=================================================="), a()
        },
        complete: function (e, t) {
          l.requestWaitView(!1)
        }
      })) : t(JSON.parse(LZString.decompress(localStorage.getItem("_d_" + e))))
    }
    locationMoveRegulation(e, t) {
      let a = mdCtrl.md.regulationLang[t];
      location.href = window.regulationEndPoint + e + "/" + a + "-s"
    }
    locationMoveRegulationList(e) {
      let t = mdCtrl.md.regulationLang[e];
      location.href = window.regulationEndPoint + "list-" + t + "-s"
    }
    locationMoveUsePokemonList(e, t) {
      let a = mdCtrl.md.regulationLang[t];
      location.href = window.regulationEndPoint + e + "/available-pokemon-list-" + a + "-s"
    }
    replaced(e, t) {
      let a = e;
      for (var n of t) a = a.replace("%d", n.toString());
      return a
    }
    rankingFileIdx(e) {
      return e <= 0 && (e = 1), parseInt(e / 1e3, 10) + 1
    }
    htmlEacape(e) {
      return 0 === e.length ? "" : e.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;")
    }
    joinDate(e, t) {
      let a = parseInt(this.langCode());
      return 2 === a ? e + " 窶� " + t + " UTC" : 3 === a ? e + " - " + t + " UTC" : 4 === a ? e + " (UTC) - " + t + " (UTC)" : 5 === a ? e + " (UTC) 窶� " + t + " (UTC)" : 7 === a ? e + " (UTC) - " + t + " (UTC)" : e + " - " + t
    }
    joinDateTz(e) {
      let t = parseInt(this.langCode());
      return 2 === t || 3 === t ? e + " UTC" : 4 === t || 5 === t || 7 === t ? e + " (UTC)" : e
    }
    formatFraction(e) {
      let t = parseInt(this.langCode()),
        a = e.toString(),
        n = "%";
      return 3 !== t && 5 !== t || (a = a.replace(".", ","), n = " %"), 7 === t && (a = a.replace(".", ",")), 4 === t && (a = a.replace(".", ",")), a + n
    }
    formatTeamId(e) {
      let t = e.replace(/\s|-/g, "");
      t = ("00000000000000" + t).slice(-14);
      let a = "";
      for (let e = 0; e < t.length; e += 4) a += t.slice(e, e + 4) + "-";
      return a = a.slice(0, -1), a
    }
    msNumFormat(e, t) {
      if (t.push(""), !e) return console.error("format=" + e), "";
      const a = e.split("%d");
      let n = "";
      for (let e = 0; e < a.length; e++) n += a[e] + t[e];
      return n
    }
    msTextFormat(e, t) {
      t.push("");
      const a = e.split("%s");
      let n = "";
      for (let e = 0; e < a.length; e++) n += a[e] + t[e];
      return n
    }
    diffNow(e) {
      const t = parseInt(e, 10) - Math.floor((new Date).getTime() / 1e3);
      return {
        day: Math.floor(t / 86400),
        hour: Math.floor(t % 86400 / 3600),
        min: Math.floor(t % 86400 / 60),
        over: t < 0
      }
    }
    getTimezoneDate(e) {
      let t, a = 0;
      switch (parseInt(this.langCode())) {
      case 1:
      case 8:
        a = 32400, t = new Date(1e3 * (parseInt(e, 10) + a));
        break;
      case 9:
      case 10:
        a = 28800, t = new Date(1e3 * (parseInt(e, 10) + a));
        break;
      case 2:
      case 3:
      case 4:
      case 5:
      case 7:
      default:
        t = new Date(1e3 * (parseInt(e, 10) + a))
      }
      return t
    }
    timestamp2Text(e) {
      let t = this.getTimezoneDate(e),
        a = t.getUTCFullYear(),
        n = ("0" + (t.getUTCMonth() + 1)).slice(-2),
        i = ("0" + t.getUTCDate()).slice(-2),
        o = ("0" + t.getUTCHours()).slice(-2),
        l = ("0" + t.getUTCMinutes()).slice(-2),
        r = ("0" + t.getUTCSeconds()).slice(-2),
        s = "";
      switch (parseInt(this.langCode())) {
      case 1:
        s = a + "/" + n + "/" + i + " " + o + ":" + l + ":" + r;
        break;
      case 2:
        s = n + "/" + i + "/" + a + " " + o + ":" + l + ":" + r;
        break;
      case 3:
      case 4:
        s = i + "/" + n + "/" + a + " " + o + ":" + l + ":" + r;
        break;
      case 5:
        s = i + "." + n + "." + a + " " + o + ":" + l + ":" + r;
        break;
      case 7:
        s = i + "/" + n + "/" + a + " " + o + ":" + l + ":" + r;
        break;
      case 8:
        s = a + ". " + n + ". " + i + ". " + o + ":" + l + ":" + r;
        break;
      case 9:
      case 10:
      default:
        s = a + "/" + n + "/" + i + " " + o + ":" + l + ":" + r
      }
      return s
    }
    getNowTimestamp() {
      return Math.floor((new Date).getTime() / 1e3)
    }
    setEnableReportVictoryEvent(e, t) {
      const a = void 0 === t ? function () {} : t,
        n = parseInt(e, 10) + 300 - this.getNowTimestamp();
      return !(n > 0) || (setTimeout((function () {
        a()
      }), 1e3 * n), !1)
    }
    getEnableReportVictoryTime(e) {
      return parseInt(e, 10) + 300
    }
    getPokemonDetailTabCount(e, t) {
      var a = 1597626e3;
      return 2 === t && (a = 1597643999), a > e ? 3 : 4
    }
    isIOS() {
      var e = navigator.userAgent;
      return e.indexOf("iPhone") >= 0 || e.indexOf("iPad") >= 0 || navigator.userAgent.indexOf("iPod") >= 0
    }
    isAndroid() {
      return navigator.userAgent.indexOf("Android") >= 0
    }
    isChrome() {
      return navigator.userAgent.indexOf("Chrome") >= 0
    }
    unityCall(e) {
      return "undefined" != typeof Unity ? (Unity.call(e), !0) : (util.isIOS() && "undefined" == typeof Unity && (window.Unity = {
        call: function (e) {
          var t = document.createElement("IFRAME");
          t.setAttribute("src", "unity:" + e), document.documentElement.appendChild(t), document.documentElement.removeChild(t)
        }
      }, Unity.call(e)), !1)
    }
    t_locationMoveRegulation(e, t) {
      let a = mdCtrl.md.regulationLang[t];
      window.util.unityCall("plo:-"), location.href = window.t_regulationEndPoint + e + "/" + a + "-s?r=" + this.version + "&home=1"
    }
    t_locationMoveUsePokemonList(e, t) {
      let a = mdCtrl.md.regulationLang[t];
      window.util.unityCall("plo:-"), location.href = window.t_regulationEndPoint + e + "/pokemon-list-" + a + "-s?r=" + this.version + "&home=1"
    }
    getTypeIconName(e) {
      let t;
      switch (parseInt(e)) {
      case 0:
        t = "cmn_type_normal";
        break;
      case 1:
        t = "cmn_type_fighting";
        break;
      case 2:
        t = "cmn_type_flying";
        break;
      case 3:
        t = "cmn_type_poison";
        break;
      case 4:
        t = "cmn_type_ground";
        break;
      case 5:
        t = "cmn_type_rock";
        break;
      case 6:
        t = "cmn_type_bug";
        break;
      case 7:
        t = "cmn_type_ghost";
        break;
      case 8:
        t = "cmn_type_steel";
        break;
      case 9:
        t = "cmn_type_fire";
        break;
      case 10:
        t = "cmn_type_water";
        break;
      case 11:
        t = "cmn_type_grass";
        break;
      case 12:
        t = "cmn_type_electric";
        break;
      case 13:
        t = "cmn_type_psychic";
        break;
      case 14:
        t = "cmn_type_ice";
        break;
      case 15:
        t = "cmn_type_dragon";
        break;
      case 16:
        t = "cmn_type_dark";
        break;
      case 17:
        t = "cmn_type_fairy";
        break;
      default:
        t = "cmn_type_normal"
      }
      return t += "_icon", t
    }
    getCategoryIconName(e) {
      let t;
      switch (parseInt(e)) {
      case 1:
        t = "mve_icon_physics";
        break;
      case 2:
        t = "mve_icon_special";
        break;
      case 3:
      default:
        t = "mve_icon_change"
      }
      return t
    }
    getItemnamejson(e, t) {
      this.getjson(e, t, "./json/itemname", {
        itemname: {}
      })
    }
    getIteminfojson(e, t) {
      this.getjson(e, t, "./json/iteminfo", {
        iteminfo: {}
      })
    }
    getWazainfojson(e, t) {
      this.getjson(e, t, "./json/wazainfo", {
        wazainfo: {}
      })
    }
    getTokuseiinfojson(e, t) {
      this.getjson(e, t, "./json/tokuseiinfo", {
        tokuseiinfo: {}
      })
    }
    getZknFormjson(e, t) {
      this.getjson(e, t, "./json/zkn_form", {
        zkn_form: {}
      })
    }
    getjson(e, t, a, n) {
      const i = this;
      switch (i.requestWaitView(), e) {
      case 1:
        a += "_ja";
        break;
      case 2:
        a += "_us";
        break;
      case 3:
        a += "_fr";
        break;
      case 4:
        a += "_it";
        break;
      case 5:
        a += "_de";
        break;
      case 7:
        a += "_es";
        break;
      case 8:
        a += "_ko";
        break;
      case 9:
        a += "_sc";
        break;
      case 10:
        a += "_tc";
        break;
      default:
        a += "_ja"
      }
      a += ".json?v=" + (version = Math.floor(Math.floor((new Date).getTime() / 1e3) / window.scriptRefreshTime)), t = void 0 === t ? function () {} : t, $.ajax({
        type: "GET",
        url: a,
        dataType: "json",
        async: !1
      }).done((function (e) {
        t(e)
      })).fail((function () {
        console.error("json隱ｭ縺ｿ霎ｼ縺ｿ縺ｫ螟ｱ謨励＠縺ｾ縺励◆"), t(n)
      })).always((function () {
        i.requestWaitView(!1)
      }))
    }
    t_rankingRequest(e, t, a) {
      t = void 0 === t ? function () {} : t, a = void 0 === a ? function () {} : a;
      let n = localStorage.getItem("_v_" + e);
      const i = Math.floor((new Date).getTime() / 1e3);
      let o = Math.floor(i / window.refreshTime);
      null == n && (n = 0), n = parseInt(n, 10);
      const l = this;
      console.log("==========[" + window.t_rankingEndpoint + "][" + e + "]=========="), console.log(" - [request]inputVersion=" + o + " , version=" + n), o > n ? (l.requestWaitView(), $.ajax({
        type: "GET",
        url: window.t_rankingEndpoint + e,
        dataType: "json",
        timeout: 3e4,
        success: function (a) {
          let n;
          console.log(" - [response]" + JSON.stringify(a)), console.log("=================================================="), n = $.isPlainObject(a) && 0 === Object.keys(a).length ? [] : a, localStorage.setItem("_v_" + e, o), localStorage.setItem("_d_" + e, LZString.compress(JSON.stringify(n))), t(n)
        },
        error: function (e, t, n) {
          console.error(" - [response Error]" + JSON.stringify(e)), console.log("status:" + t), console.log("=================================================="), a()
        },
        complete: function (e, t) {
          l.requestWaitView(!1)
        }
      })) : (console.log(" - [response] DL貂医∩繝��繧ｿ繧定ｿ斐☆"), console.log("=================================================="), t(JSON.parse(LZString.decompress(localStorage.getItem("_d_" + e)))))
    }
    t_request(e, t, a, n) {
      const i = this;
      a = void 0 === a ? function () {} : a, n = void 0 === n ? function () {} : n;
      let o = {},
        l = this.token();
      null != l && (o.Authorization = "Bearer " + l);
      const r = this.langCode(),
        s = this.countryCode();
      o.langcode = r, o.countrycode = s, i.requestWaitView(), console.log("==========[" + window.t_apiEndpoint + "][" + e + "]=========="), console.log(" - [request][header]" + JSON.stringify(o)), console.log(" - [request][postData]" + JSON.stringify(t)), $.ajax({
        type: "POST",
        url: window.t_apiEndpoint + e,
        dataType: "json",
        contentType: "application/json",
        data: JSON.stringify(t),
        headers: o,
        xhrFields: {
          withCredentials: !0
        },
        timeout: 3e4,
        success: function (e) {
          console.log(" - [response]" + JSON.stringify(e)), console.log("=================================================="), a(e)
        },
        error: function (e, t, a) {
          console.error(" - [response Error]" + JSON.stringify(e)), console.log("==================================================");
          const o = void 0 === e.responseJSON ? {} : e.responseJSON;
          2e3 == o.detail && localStorage.clear(), i.requestErrorDialog(o, (function () {
            n(o.code, o.detail)
          }))
        },
        complete: function (e, t) {
          let a = e.getResponseHeader("B-Token");
          null != a && a.length > 0 && localStorage.setItem("t", a), i.requestWaitView(!1)
        }
      })
    }
    zeroPadding(e, t) {
      return String(e).length > t ? e : (Array(t).join("0") + e).slice(-t)
    }
    GetPokeiIconName(e, t) {
      let a = "./img/pokei/icon" + ("000" + e).slice(-4) + "_f" + ("0" + t).slice(-2) + "_s0";
      return a += ".png", a
    }
    GetPokeiIcon128Name(e, t) {
      let a = "./img/pokei128/icon" + ("000" + e).slice(-4) + "_f" + ("0" + t).slice(-2) + "_s0";
      return a += ".png", a
    }
    GetItemIconName(e) {
      let t = "./img/item/item_" + ("000" + e).slice(-4);
      return t += ".png", t
    }
    getTerastalIconName(e) {
      let t = "./img/terastal/";
      switch (parseInt(e)) {
      case 0:
        t += "icon_terastal_type_normal";
        break;
      case 1:
        t += "icon_terastal_type_fighting";
        break;
      case 2:
        t += "icon_terastal_type_flying";
        break;
      case 3:
        t += "icon_terastal_type_poison";
        break;
      case 4:
        t += "icon_terastal_type_ground";
        break;
      case 5:
        t += "icon_terastal_type_rock";
        break;
      case 6:
        t += "icon_terastal_type_bug";
        break;
      case 7:
        t += "icon_terastal_type_ghost";
        break;
      case 8:
        t += "icon_terastal_type_steel";
        break;
      case 9:
        t += "icon_terastal_type_fire";
        break;
      case 10:
        t += "icon_terastal_type_water";
        break;
      case 11:
        t += "icon_terastal_type_grass";
        break;
      case 12:
        t += "icon_terastal_type_electric";
        break;
      case 13:
        t += "icon_terastal_type_psychic";
        break;
      case 14:
        t += "icon_terastal_type_ice";
        break;
      case 15:
        t += "icon_terastal_type_dragon";
        break;
      case 16:
        t += "icon_terastal_type_dark";
        break;
      case 17:
        t += "icon_terastal_type_fairy";
        break;
      default:
        t += "icon_terastal_type_normal"
      }
      return t += ".png", t
    }
    ratingToStr(e) {
      let t = parseInt(this.langCode()),
        a = e >= 1e3 ? Math.floor(e / 1e3).toString() : "0";
      return a += 3 === t || 4 === t || 5 === t || 7 === t ? "," : ".", a += e % 1e3 == 0 ? "000" : ("000" + e % 1e3).slice(-3), a
    }
    createNoToAlphabet(e) {
      let t = 64 + e,
        a = 64;
      for (; t > 90;) t -= 26, a++;
      return `${a>64?String.fromCharCode(a):""}${String.fromCharCode(t)}`
    }
  }(de), window.langCtrl = {}, window.mdCtrl = new class {
    constructor(e) {
      this.md = s
    }
    langInitalize() {}
    GetType(e, t, a) {
      return e in this.md.pokeType && t in this.md.pokeType[e] ? a < this.md.pokeType[e][t].length ? this.md.pokeType[e][t][a] : -1 : (console.error("GetType(no:" + e + ",form:" + t + ") not found!"), -1)
    }
    GetWazaType(e, t) {
      return e in this.md.wazaType && t < this.md.wazaType[e].length ? this.md.wazaType[e][t] : (console.error("GetWazaType(no:" + e + ") not found!"), -1)
    }
  }(de), window.wsocCtrl = new class {
    constructor(e) {
      this.endpoint = e, this.keepalive_waite = 12e4, this.isConnect = !1, this.soc = null, this.sInfo = {
        cmpId: "",
        myFriId: "",
        opFriId: "",
        bTkn: ""
      }, this.keepalive()
    }
    setPageController(e) {
      this.pageCtrl = e
    }
    connect(t, a, n) {
      const i = this;
      a = void 0 === a ? function () {} : a, n = void 0 === n ? function () {} : n, i.isConnect ? a() : (this.sInfo = {
        cmpId: t.compeId,
        myFriId: t.myFriendId,
        opFriId: t.opFriendId,
        bTkn: t.authToken
      }, null == this.soc && (this.soc = new WebSocket(this.endpoint)), this.soc.onopen = function (e) {
        console.log("websocket connect success."), i.isConnect = !0, a(), a = function () {}
      }, this.soc.onmessage = function (e) {
        console.log(e.data);
        const t = JSON.parse(e.data);
        if ("res_joinroom" == t.action && (n(), n = function () {}), "sendmessage" == t.action && void 0 !== t.msg.func) switch (t.msg.func) {
        case "battleStart_prepar":
          udCtrl.ud.tournamentDetail[i.pageCtrl.selectTournament].matchcard.prepare.op = 1, udCtrl.save(), i.pageCtrl.modalCtrl.battleStart.matchCardStatSwitch(), 1 == udCtrl.ud.tournamentDetail[i.pageCtrl.selectTournament].matchcard.prepare.me && 1 == udCtrl.ud.tournamentDetail[i.pageCtrl.selectTournament].matchcard.prepare.op && nDialog.open({
            title: langCtrl.common.dialogMsg.bstart_success_t,
            msg: langCtrl.common.dialogMsg.bstart_success_m,
            okCallback: function () {
              i.pageCtrl.updateHeader((function () {
                i.pageCtrl.modalCtrl.battleInfo.enable((function () {
                  i.pageCtrl.modalMove(i.selecter, i.pageCtrl.modalCtrl.battleInfo.selecter), nDialog.close((function () {
                    nDialog.open({
                      title: langCtrl.common.dialogMsg.bstart_success3_t,
                      msg: langCtrl.common.dialogMsg.bstart_success3_m,
                      okCallback: function () {
                        nDialog.close()
                      }
                    })
                  }))
                }))
              }))
            }
          });
          break;
        case "reportVictory_win":
          nDialog.open({
            title: langCtrl.common.dialogMsg.opvict_report_t,
            msg: langCtrl.common.dialogMsg.opvict_report_m,
            okCallback: function () {
              i.pageCtrl.modalCtrl.approvalVictory.enable((function () {
                i.pageCtrl.modalMove(i.pageCtrl.modalCtrl.reportVictory.selecter, i.pageCtrl.modalCtrl.approvalVictory.selecter)
              })), nDialog.close()
            }
          });
          break;
        case "reportVictory_withdraw":
          nDialog.open({
            title: langCtrl.common.dialogMsg.opvict_withdraw_t,
            msg: langCtrl.common.dialogMsg.opvict_withdraw_m,
            okCallback: function () {
              i.pageCtrl.modalCtrl.reportVictory.enable((function () {
                i.pageCtrl.modalMove(i.pageCtrl.modalCtrl.approvalVictory.selecter, i.pageCtrl.modalCtrl.reportVictory.selecter)
              })), nDialog.close()
            }
          });
          break;
        case "reportVictory_approval":
          const e = udCtrl.ud.tournamentDetail[i.pageCtrl.selectTournament].matchcard;
          udCtrl.get_tournament_battlestat({
            compeId: i.pageCtrl.selectTournament,
            round: e.round,
            battle: e.battle
          }, (function (e) {
            9 == e.status && (i.pageCtrl.nowBattle.battle.current[0] >= 2 || i.pageCtrl.nowBattle.battle.current[1] >= 2) ? nDialog.open({
              title: langCtrl.common.dialogMsg.opvict_approval_finishround_t,
              msg: langCtrl.common.dialogMsg.opvict_approval_finishround_m,
              okCallback: function () {
                i.pageCtrl.updateHeader((function () {
                  i.pageCtrl.modalClose()
                })), nDialog.close()
              }
            }) : nDialog.open({
              title: langCtrl.common.dialogMsg.opvict_approval_t,
              msg: langCtrl.common.dialogMsg.opvict_approval_m,
              okCallback: function () {
                i.pageCtrl.isLoadMatchCard = !1, i.pageCtrl.updateHeader((function () {
                  i.pageCtrl.modalClose()
                })), nDialog.close()
              }
            })
          }));
          break;
        case "reportVictory_protest":
          nDialog.open({
            title: langCtrl.common.dialogMsg.vict_protest_t,
            msg: langCtrl.common.dialogMsg.vict_protest_m,
            okCallback: function () {
              udCtrl.tournament_protest({
                compeId: i.pageCtrl.selectTournament,
                operation: 0
              }, (function (e) {
                0 == e.conflict ? (console.log("protest preparation success."), i.pageCtrl.protestInfo = e, i.pageCtrl.modalCtrl.protest1.enable((function () {
                  i.pageCtrl.modalMove(i.pageCtrl.modalCtrl.withdrawVictory.selecter, i.pageCtrl.modalCtrl.protest1.selecter)
                })), nDialog.close()) : console.log("protest preparation failed.")
              }))
            }
          });
          break;
        case "decideVictory":
          nDialog.open({
            title: langCtrl.common.dialogMsg.vict_decide_t,
            msg: langCtrl.common.dialogMsg.vict_decide_m,
            okCallback: function () {
              i.pageCtrl.updateHeader((function () {
                nDialog.close()
              }))
            }
          });
          break;
        case "confirmRound":
          nDialog.open({
            title: langCtrl.common.dialogMsg.confirm_round_t,
            msg: langCtrl.common.dialogMsg.confirm_round_m,
            okCallback: function () {
              i.pageCtrl.updateHeader((function () {
                nDialog.close()
              }))
            }
          });
          break;
        case "resetPasswd":
          nDialog.open({
            title: langCtrl.common.dialogMsg.update_pass_op_t,
            msg: langCtrl.common.dialogMsg.update_pass_op_m,
            okCallback: function () {
              udCtrl.get_tournament_matchcard({
                compeId: i.pageCtrl.selectTournament
              }, (function (e) {
                const t = udCtrl.ud.tournamentDetail[i.pageCtrl.selectTournament].matchcard;
                void 0 !== t.passwd && $(".battlePassContainer>.battlePassBody>.pass").html(t.passwd), nDialog.close()
              }))
            }
          });
          break;
        case "changeInformation":
          nDialog.open({
            title: langCtrl.common.dialogMsg.update_information_t,
            msg: langCtrl.common.dialogMsg.update_information_m,
            okCallback: function () {
              i.pageCtrl.genelateInfomationListDom((function () {
                nDialog.close()
              }))
            }
          });
          break;
        case "keepalive":
          console.log("keepalive socket")
        }
      }, this.soc.onclose = function (e) {
        i.isConnect = !1, e.wasClean ? console.log("websocket disconnect success.") : console.log("websocket disconnect. " + JSON.stringify(e))
      }, this.soc.onerror = function (t) {
        console.log("websocket error. " + JSON.stringify(e))
      })
    }
    joinroom() {
      this.soc.send(JSON.stringify({
        sInfo: this.sInfo,
        action: "joinroom"
      }))
    }
    sendmessage(e) {
      const t = this;
      t.isConnect ? t.soc.send(JSON.stringify({
        sInfo: t.sInfo,
        action: "sendmessage",
        msg: e
      })) : t.connect(t.sInfo, (function () {
        wsocCtrl.joinroom()
      }), (function () {
        wsocCtrl.sendmessage(e)
      }))
    }
    close() {
      this.soc.close()
    }
    keepalive() {
      const e = this;
      setTimeout((function () {
        e.isConnect && e.sendmessage({
          func: "keepalive"
        }), e.keepalive()
      }), e.keepalive_waite)
    }
  }(tournamentWebsocketEndPoint), $((function () {
    window.langCtrl = new o, window.nDialog = new ce, window.debuglog = !1;
    let e = document.createElement("link");
    e.rel = "stylesheet", e.href = "./sprite/icons3/icons.css";
    let t = document.createDocumentFragment();
    t.appendChild(e), document.getElementsByTagName("head")[0].appendChild(t);
    var a, n = (a = console, {
      log: function (e) {
        1 == window.debuglog && (a.log(e), window.util.unityCall("log:" + e))
      },
      info: function (e) {
        a.info(e), window.util.unityCall("inf:" + e)
      },
      warn: function (e) {
        a.warn(e), window.util.unityCall("war:" + e)
      },
      error: function (e) {
        a.error(e), window.util.unityCall("err:" + e)
      }
    });
    if (console = n, "undefined" == typeof targetKey) console.log("orion逕ｨUD螻暮幕"), window.udCtrl = new r(de);
    else switch (targetKey) {
    case "t":
      console.log("tt逕ｨUD螻暮幕"), window.t_udCtrl = new m(de), $("body").css("overflow", "hidden");
      break;
    default:
      console.log("UD螻暮幕縺ｪ縺�")
    }
    let i;
    switch (pageKey) {
    case "t_top":
      i = new d;
      break;
    case "t_rankmatch":
      i = new p;
      break;
    case "t_my_rankmatch":
      i = new b;
      break;
    case "t_pokemonranking":
      i = new k;
      break;
    case "t_internetcompetition":
      i = new _;
      break;
    case "t_internetcompetition_detail":
      i = new h;
      break;
    case "t_my_internetcompetition_detail":
      i = new f;
      break;
    case "t_friendcompetition":
      i = new C;
      break;
    case "t_my_friendcompetition":
      i = new v;
      break;
    case "t_friendcompetition_detail":
      i = new y;
      break;
    case "t_my_friendcompetition_detail":
      i = new T;
      break;
    case "t_battle_team":
      i = new S;
      break;
    case "t_mydataselect":
      i = new w;
      break;
    case "t_mdcheck":
      i = new I;
      break;
    case "t_mdcheck_item":
      i = new P;
      break;
    case "t_mdcheck_waza":
      i = new x;
      break;
    case "t_mdcheck_tokusei":
      i = new D;
      break;
    case "t_tournament_detail":
      i = new M;
      break;
    case "top":
      i = new B;
      break;
    case "myresult_top":
      i = new z;
      break;
    case "myresult_romselect":
      i = new F;
      break;
    case "myresult_rankmatch":
      i = new L;
      break;
    case "my_internetcompetition_list":
      i = new A;
      break;
    case "my_internetcompetition_detail":
      i = new G;
      break;
    case "friendcompetition_list":
      i = new N;
      break;
    case "friendcompetition_detail":
      i = new E;
      break;
    case "rankmatch_detail":
      i = new V.a;
      break;
    case "internetcompetition_list":
      i = new O;
      break;
    case "internetcompetition_detail":
      i = new K;
      break;
    case "battle_team":
      i = new q;
      break;
    case "regulation_list":
      i = new H;
      break;
    case "event_calendar":
      i = new j;
      break;
    case "rankmatch_pokemonranking_detail":
      i = new W;
      break;
    case "internetcompetition_pokemonranking_detail":
      i = new U;
      break;
    case "friendcompetition_pokemonranking_detail":
      i = new J;
      break;
    case "my_friendcompetition_detail":
      i = new Z;
      break;
    case "tournament_list":
      i = new Q;
      break;
    case "tournament_detail":
      i = new se, wsocCtrl.setPageController(i)
    }
  }))
}]);
